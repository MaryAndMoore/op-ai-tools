fragment,question,answer,fragment_text
0,How can I get support for my project on Optimism?,"To get support for your project on Optimism, you should first fill out the 'connect with Optimism' form. After that, you can access various resources such as metrics, a community on Discord, and exclusive Telegram channels for builders.","---
title: How do I get project support (marketing / integrations / etc.)?
lang: en-US
---  
Welcome! If you have not filled out the connect with [Optimism form](https://airtable.com/appQ2S9IatldkoNQw/pagyJSUyxJA2SQKO3/form) please do so prior to reading this.  
We are excited for your deployment onto OP Mainnet!
You will be welcomed by [the following metrics](https://dune.com/optimismfnd/Optimism) üìàüìà (up and to the right!), [a budding community](https://discord-gateway.optimism.io/) ü´Çü´Ç, and some great exclusive [Telegram Channels](https://t.me/+Cb7q0a1YqItkZTRk) ‚öôÔ∏è‚öôÔ∏è for builders."
0,Where can I find the Optimism community to discuss my project?,You can find the Optimism community on their Discord server and also join exclusive Telegram channels for builders. Links to these resources are provided after you fill out the 'connect with Optimism' form.,"---
title: How do I get project support (marketing / integrations / etc.)?
lang: en-US
---  
Welcome! If you have not filled out the connect with [Optimism form](https://airtable.com/appQ2S9IatldkoNQw/pagyJSUyxJA2SQKO3/form) please do so prior to reading this.  
We are excited for your deployment onto OP Mainnet!
You will be welcomed by [the following metrics](https://dune.com/optimismfnd/Optimism) üìàüìà (up and to the right!), [a budding community](https://discord-gateway.optimism.io/) ü´Çü´Ç, and some great exclusive [Telegram Channels](https://t.me/+Cb7q0a1YqItkZTRk) ‚öôÔ∏è‚öôÔ∏è for builders."
0,What should I do before deploying my project on OP Mainnet?,"Before deploying your project on OP Mainnet, you should fill out the 'connect with Optimism' form. This will give you access to important resources and support from the Optimism community.","---
title: How do I get project support (marketing / integrations / etc.)?
lang: en-US
---  
Welcome! If you have not filled out the connect with [Optimism form](https://airtable.com/appQ2S9IatldkoNQw/pagyJSUyxJA2SQKO3/form) please do so prior to reading this.  
We are excited for your deployment onto OP Mainnet!
You will be welcomed by [the following metrics](https://dune.com/optimismfnd/Optimism) üìàüìà (up and to the right!), [a budding community](https://discord-gateway.optimism.io/) ü´Çü´Ç, and some great exclusive [Telegram Channels](https://t.me/+Cb7q0a1YqItkZTRk) ‚öôÔ∏è‚öôÔ∏è for builders."
1,Where can I find tutorials for developing on Optimism?,You can find tutorials for developing on Optimism on their GitHub page at https://github.com/ethereum-optimism/optimism-tutorial.,"Steps to take if you would like developer support immediately, ranked in order of response times.  
1. See our [Developer Documentation](../developers/), [Tutorials](https://github.com/ethereum-optimism/optimism-tutorial), and [Help Center](https://help.optimism.io)
2. Head over to [**#dev-support**](https://discord.com/channels/667044843901681675/887914409207414785) on discord"
1,How can I get immediate developer support for Optimism?,"For immediate developer support, you can first check the Developer Documentation, Tutorials, and Help Center. If you need further assistance, you can head over to the #dev-support channel on their Discord.","Steps to take if you would like developer support immediately, ranked in order of response times.  
1. See our [Developer Documentation](../developers/), [Tutorials](https://github.com/ethereum-optimism/optimism-tutorial), and [Help Center](https://help.optimism.io)
2. Head over to [**#dev-support**](https://discord.com/channels/667044843901681675/887914409207414785) on discord"
1,Is there a Discord channel for developer support for Optimism?,"Yes, there is a Discord channel for developer support. You can join the #dev-support channel on their Discord for assistance.","Steps to take if you would like developer support immediately, ranked in order of response times.  
1. See our [Developer Documentation](../developers/), [Tutorials](https://github.com/ethereum-optimism/optimism-tutorial), and [Help Center](https://help.optimism.io)
2. Head over to [**#dev-support**](https://discord.com/channels/667044843901681675/887914409207414785) on discord"
2,How can I get my project listed on the Superchain apps page?,"To get your project listed on the Superchain apps page, you need to fill out a specific form. The inclusion of your project is at the discretion of the Superchain team.","When your project is deployed on the Superchain, you can be added to [our Superchain apps page](https://www.optimism.io/apps).
Simply [fill out this form](https://share.hsforms.com/1hUEaGvsySTK9ccNBcNmjkwqoshb) to be included. Inclusion is at our discretion.
To amplify your app launch through Superchain marketing channels [fill out this form](https://share.hsforms.com/1XHQ9Io_lT0-vf9nSVoUahQqoshb)"
2,Is there a way to promote my app launch through Superchain's marketing channels?,"Yes, you can amplify your app launch through Superchain's marketing channels by filling out a designated form provided by the Superchain team.","When your project is deployed on the Superchain, you can be added to [our Superchain apps page](https://www.optimism.io/apps).
Simply [fill out this form](https://share.hsforms.com/1hUEaGvsySTK9ccNBcNmjkwqoshb) to be included. Inclusion is at our discretion.
To amplify your app launch through Superchain marketing channels [fill out this form](https://share.hsforms.com/1XHQ9Io_lT0-vf9nSVoUahQqoshb)"
3,How does Optimism support projects that align with its values?,Optimism promotes values-aligned projects as part of its broader content program.,We love to promote values-aligned projects as part of our broader content program.
4,How does Optimism decide which tweets to retweet?,Optimism keeps a high bar for retweets to ensure their Twitter feed remains valuable and high signal. They occasionally retweet but are selective about it.,"We do the occasional retweet but the bar for these is kept quite high in order to keep our Twitter feed as valuable/high signal as possible.
Other than RT's, we may like or reply to a tweet or include it in our weekly wrap up thread.
You're welcome to submit your tweet for amplification but please keep in mind if and how we interact with it is at our sole discretion."
4,Can I submit my tweet to Optimism for retweeting?,"Yes, you can submit your tweet for amplification. However, whether and how Optimism interacts with it is at their sole discretion.","We do the occasional retweet but the bar for these is kept quite high in order to keep our Twitter feed as valuable/high signal as possible.
Other than RT's, we may like or reply to a tweet or include it in our weekly wrap up thread.
You're welcome to submit your tweet for amplification but please keep in mind if and how we interact with it is at our sole discretion."
4,What other interactions does Optimism have with tweets besides retweeting?,"Besides retweeting, Optimism may like or reply to a tweet, or include it in their weekly wrap-up thread.","We do the occasional retweet but the bar for these is kept quite high in order to keep our Twitter feed as valuable/high signal as possible.
Other than RT's, we may like or reply to a tweet or include it in our weekly wrap up thread.
You're welcome to submit your tweet for amplification but please keep in mind if and how we interact with it is at our sole discretion."
5,How can I participate in OP Radio?,"You can express your interest in being featured on OP Radio, but the final decision on whether it makes sense for you to be featured is up to the hosts.","We also host a weekly Twitter Space in an interview/podcast format called OP Radio. You're welcome to express interest in being featured on OP Radio, but keep in mind that we maintain the final say on whether it makes sense or not."
5,What is the format of OP Radio?,OP Radio is hosted in an interview/podcast format on a weekly Twitter Space.,"We also host a weekly Twitter Space in an interview/podcast format called OP Radio. You're welcome to express interest in being featured on OP Radio, but keep in mind that we maintain the final say on whether it makes sense or not."
6,How can I apply for a grant from Optimism?,"Grants are mainly handled by The Optimism Collective, which is an open governance system. To apply, you should first check that your application falls within the possible Governance Grant categories in the OPerating manual. Then, deploy your project to the OP Mainnet, gain organic traction through the community, and seek synergies with other teams. Finally, check out the governance grant process and get real-time reviews from governance delegates on Discord.","Grants are mainly handled by [The Optimism Collective](https://app.optimism.io/announcement), our open governance system/digital society. If you are interested in applying, we first recommend the following:  
- Check that your application falls within the possible Governance Grant categories in the [OPerating manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#valid-proposal-types).
- Deploy to OP Mainnet (we are [EVM Equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), not just EVM compatible so it is very easy to deploy).
Check out our [getting started tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started) to see how to deploy. We also have [tons of more in-depth tutorials](https://github.com/ethereum-optimism/optimism-tutorial) for bridging and other L2 specific functionality.
- Try gaining organic traction:
- Traction can be gained through our community.
- Head over to [our discord](https://discord-gateway.optimism.io/) and check out [#showandtell](https://discord.com/channels/667044843901681675/819333988719263774) or [#demoday](https://discord.com/channels/667044843901681675/960493820674465883).
Demo Day is an AMA about your product to our community. Apply in Discord.
- Seek synergies ‚Äì look at other teams already deployed on OP Mainnet that could work with your product and reach out to them.
- Once you have done the above, check out our [governance grant process](https://gov.optimism.io/t/mission-applicant-guide-how-to-submit-a-mission-application/6899).
- To get reviews in real time from governance delegates go to discord and post about your project in [#gov-general](https://discord.com/channels/667044843901681675/968498307913637919)."
6,What should I do to deploy my project on Optimism?,"To deploy your project on Optimism, you should first understand that Optimism is EVM Equivalent, making it very easy to deploy. You can follow the getting started tutorial available on their GitHub to see how to deploy. There are also many in-depth tutorials for bridging and other L2 specific functionalities.","Grants are mainly handled by [The Optimism Collective](https://app.optimism.io/announcement), our open governance system/digital society. If you are interested in applying, we first recommend the following:  
- Check that your application falls within the possible Governance Grant categories in the [OPerating manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#valid-proposal-types).
- Deploy to OP Mainnet (we are [EVM Equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), not just EVM compatible so it is very easy to deploy).
Check out our [getting started tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started) to see how to deploy. We also have [tons of more in-depth tutorials](https://github.com/ethereum-optimism/optimism-tutorial) for bridging and other L2 specific functionality.
- Try gaining organic traction:
- Traction can be gained through our community.
- Head over to [our discord](https://discord-gateway.optimism.io/) and check out [#showandtell](https://discord.com/channels/667044843901681675/819333988719263774) or [#demoday](https://discord.com/channels/667044843901681675/960493820674465883).
Demo Day is an AMA about your product to our community. Apply in Discord.
- Seek synergies ‚Äì look at other teams already deployed on OP Mainnet that could work with your product and reach out to them.
- Once you have done the above, check out our [governance grant process](https://gov.optimism.io/t/mission-applicant-guide-how-to-submit-a-mission-application/6899).
- To get reviews in real time from governance delegates go to discord and post about your project in [#gov-general](https://discord.com/channels/667044843901681675/968498307913637919)."
6,How can I gain traction for my project within the Optimism community?,"You can gain traction for your project within the Optimism community by participating in their Discord channels. Specifically, you can showcase your project in the #showandtell or #demoday channels. Demo Day is an AMA about your product to the community, and you can apply for it in Discord. Additionally, you can seek synergies with other teams already deployed on OP Mainnet and reach out to them.","Grants are mainly handled by [The Optimism Collective](https://app.optimism.io/announcement), our open governance system/digital society. If you are interested in applying, we first recommend the following:  
- Check that your application falls within the possible Governance Grant categories in the [OPerating manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#valid-proposal-types).
- Deploy to OP Mainnet (we are [EVM Equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), not just EVM compatible so it is very easy to deploy).
Check out our [getting started tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started) to see how to deploy. We also have [tons of more in-depth tutorials](https://github.com/ethereum-optimism/optimism-tutorial) for bridging and other L2 specific functionality.
- Try gaining organic traction:
- Traction can be gained through our community.
- Head over to [our discord](https://discord-gateway.optimism.io/) and check out [#showandtell](https://discord.com/channels/667044843901681675/819333988719263774) or [#demoday](https://discord.com/channels/667044843901681675/960493820674465883).
Demo Day is an AMA about your product to our community. Apply in Discord.
- Seek synergies ‚Äì look at other teams already deployed on OP Mainnet that could work with your product and reach out to them.
- Once you have done the above, check out our [governance grant process](https://gov.optimism.io/t/mission-applicant-guide-how-to-submit-a-mission-application/6899).
- To get reviews in real time from governance delegates go to discord and post about your project in [#gov-general](https://discord.com/channels/667044843901681675/968498307913637919)."
7,How can I learn about the origins of Optimism?,"You can listen to an OPRadio episode featuring one of the founders, @JingleJam, to learn about the origins of Optimism. The episode is available through a link shared on their Twitter account.","Curious about our Optimistic Origins?
Listen to [this OPRadio Episode](https://twitter.com/optimismFND/status/1585015947626426368) with one of our founders, [@JingleJam](https://twitter.com/jinglejamOP).  
What do the next 100 years have in store for crypto? [@Karl_dot_tech](https://twitter.com/karl_dot_tech) shares his vision in [this chat with Bankless](https://www.youtube.com/watch?v=60F2wtjZO5M).  
Want to see what we are doing with Retroactive Public Goods? [See here](../governance/retropgf-2.md)  
Changes to the protocol coming in the near term include multi-client architecture, and the world‚Äôs next generation fault proof.
Check out [Bedrock](https://dev.optimism.io/introducing-optimism-bedrock/) and [Cannon](https://medium.com/ethereum-optimism/cannon-cannon-cannon-introducing-cannon-4ce0d9245a03).  
Want to see the first ever step forward into a modular rollup architecture? We are making it easy for anyone to deploy their own app-specific rollup via the [OP Stack](https://optimism.mirror.xyz/fLk5UGjZDiXFuvQh6R_HscMQuuY9ABYNF7PI76-qJYs).
**Fun fact:** A team has already launched [a Voxel Game on the OP Stack](https://dev.optimism.io/opcraft-autonomous-world/)!  
**Last note:** [We‚Äôre hiring](https://jobs.optimism.io/)!
Join our community!
Have fun!
Enjoy life!
Don‚Äôt worry so much!
Brush your teeth!
Eat apples!
Research the origins of public relations!
Give back to your community!
Tweet things you don‚Äôt actually believe!
Download free music using your library card!
Don‚Äôt download a car!
Don‚Äôt listen to anyone except for your parents, and even then, with a grain of salt!"
7,What are some upcoming changes to the Optimism protocol?,Upcoming changes to the Optimism protocol include the introduction of multi-client architecture and the next generation of fault proof. You can learn more about these changes by checking out Bedrock and Cannon.,"Curious about our Optimistic Origins?
Listen to [this OPRadio Episode](https://twitter.com/optimismFND/status/1585015947626426368) with one of our founders, [@JingleJam](https://twitter.com/jinglejamOP).  
What do the next 100 years have in store for crypto? [@Karl_dot_tech](https://twitter.com/karl_dot_tech) shares his vision in [this chat with Bankless](https://www.youtube.com/watch?v=60F2wtjZO5M).  
Want to see what we are doing with Retroactive Public Goods? [See here](../governance/retropgf-2.md)  
Changes to the protocol coming in the near term include multi-client architecture, and the world‚Äôs next generation fault proof.
Check out [Bedrock](https://dev.optimism.io/introducing-optimism-bedrock/) and [Cannon](https://medium.com/ethereum-optimism/cannon-cannon-cannon-introducing-cannon-4ce0d9245a03).  
Want to see the first ever step forward into a modular rollup architecture? We are making it easy for anyone to deploy their own app-specific rollup via the [OP Stack](https://optimism.mirror.xyz/fLk5UGjZDiXFuvQh6R_HscMQuuY9ABYNF7PI76-qJYs).
**Fun fact:** A team has already launched [a Voxel Game on the OP Stack](https://dev.optimism.io/opcraft-autonomous-world/)!  
**Last note:** [We‚Äôre hiring](https://jobs.optimism.io/)!
Join our community!
Have fun!
Enjoy life!
Don‚Äôt worry so much!
Brush your teeth!
Eat apples!
Research the origins of public relations!
Give back to your community!
Tweet things you don‚Äôt actually believe!
Download free music using your library card!
Don‚Äôt download a car!
Don‚Äôt listen to anyone except for your parents, and even then, with a grain of salt!"
7,Is there a way for developers to deploy their own app-specific rollup on Optimism?,"Yes, Optimism is making it easy for developers to deploy their own app-specific rollup via the OP Stack. This modular rollup architecture is designed to be user-friendly and accessible.","Curious about our Optimistic Origins?
Listen to [this OPRadio Episode](https://twitter.com/optimismFND/status/1585015947626426368) with one of our founders, [@JingleJam](https://twitter.com/jinglejamOP).  
What do the next 100 years have in store for crypto? [@Karl_dot_tech](https://twitter.com/karl_dot_tech) shares his vision in [this chat with Bankless](https://www.youtube.com/watch?v=60F2wtjZO5M).  
Want to see what we are doing with Retroactive Public Goods? [See here](../governance/retropgf-2.md)  
Changes to the protocol coming in the near term include multi-client architecture, and the world‚Äôs next generation fault proof.
Check out [Bedrock](https://dev.optimism.io/introducing-optimism-bedrock/) and [Cannon](https://medium.com/ethereum-optimism/cannon-cannon-cannon-introducing-cannon-4ce0d9245a03).  
Want to see the first ever step forward into a modular rollup architecture? We are making it easy for anyone to deploy their own app-specific rollup via the [OP Stack](https://optimism.mirror.xyz/fLk5UGjZDiXFuvQh6R_HscMQuuY9ABYNF7PI76-qJYs).
**Fun fact:** A team has already launched [a Voxel Game on the OP Stack](https://dev.optimism.io/opcraft-autonomous-world/)!  
**Last note:** [We‚Äôre hiring](https://jobs.optimism.io/)!
Join our community!
Have fun!
Enjoy life!
Don‚Äôt worry so much!
Brush your teeth!
Eat apples!
Research the origins of public relations!
Give back to your community!
Tweet things you don‚Äôt actually believe!
Download free music using your library card!
Don‚Äôt download a car!
Don‚Äôt listen to anyone except for your parents, and even then, with a grain of salt!"
8,How can I get involved in the Optimism Collective?,"You can get involved in the Optimism Collective by following three principles: do what you love, fix problems together, and do it with optimism. Additionally, you can check the Optimism Public calendar for upcoming events or visit the 'Get a Grant' page if you have an idea on how you want to contribute.","---
title: Contribute to Optimism
lang: en-US
---  
::: tip Welcome!  
So you want to get involved in the Optimism Collective?? We are so happy to have you! Let‚Äôs make sure we are on the same page about what The Collective is all about.  
:::  
The Optimism Collective believes that **building public goods should be rewarded.**  
This key ingredient to the [Optimistic vision](https://www.optimism.io/vision) is more than just altruism ‚Äì it‚Äôs core to our success. Optimism‚Äôs codebase itself is an open-source project, and builds on the shoulders of countless OSS giants which came before it.  
This means public goods funding is a critical growth strategy. For Optimism, well-funded public goods means better developer tooling, widespread user education, safer infrastructure, and industry-leading research. It means Optimism can last and thrive.  
Once we show that this model can drive a successful economy for the Optimism Collective, we can scale the principle of **`impact = profit`** to the world!  
RetroPGF is a core part of Optimism‚Äôs vision. If done right, it will form the backbone for a new type of economy. As with any complex system, though, this new process can‚Äôt be centrally planned or designed all at once. **The only way to build it *well* is to build it *together*.** This journey will require care, open-mindedness, patience, and, of course, optimism!  
So, how can you have meaningful impact in The Collective? We recommend following these 3 very easy principles:  
1. ***Do what you love.*** ‚Üí Real impact stems from passion, a love for what you do.
2. ***Fix the problem in front of you, together.*** ‚Üí Chances are if you have a problem, someone else has that problem as well. Let‚Äôs fix it together! What caused the problem? How do you fix it, and can we work together to fix it for everyone else?
3. ***Do it with optimism.*** ‚Üí Be kind, patient and optimistic in everything you do.  
Most importantly, make sure that your contributions align with the [Collective Intents](https://gov.optimism.io/t/collective-intents/5874). This will help ensure that your contribution is working towards a larger goal of the Collective.  
# Getting Started  
You can contribute towards the collective in a million different ways, and there is no way we could make processes for all of these contributions. Nor would we want to! However, getting from 0 to 1 is the hardest step. So we have made a few ways to get you up to speed and contributing in no time!  
If you are looking for what is happening right now, add the [Optimism Public calender](https://calendar.google.com/calendar/embed?src=c_4hui70itm089e7t8q50heh1kno%40group.calendar.google.com) to see upcoming events! We also have a [‚ÄúGet a Grant‚Äù](../governance/get-a-grant.md) page if you already have an idea on how you want to contribute."
8,What is the Optimism Collective's approach to building public goods?,"The Optimism Collective believes that building public goods should be rewarded. This approach is essential for their success and involves funding public goods to improve developer tooling, user education, infrastructure, and research. The principle of 'impact = profit' is central to their vision.","---
title: Contribute to Optimism
lang: en-US
---  
::: tip Welcome!  
So you want to get involved in the Optimism Collective?? We are so happy to have you! Let‚Äôs make sure we are on the same page about what The Collective is all about.  
:::  
The Optimism Collective believes that **building public goods should be rewarded.**  
This key ingredient to the [Optimistic vision](https://www.optimism.io/vision) is more than just altruism ‚Äì it‚Äôs core to our success. Optimism‚Äôs codebase itself is an open-source project, and builds on the shoulders of countless OSS giants which came before it.  
This means public goods funding is a critical growth strategy. For Optimism, well-funded public goods means better developer tooling, widespread user education, safer infrastructure, and industry-leading research. It means Optimism can last and thrive.  
Once we show that this model can drive a successful economy for the Optimism Collective, we can scale the principle of **`impact = profit`** to the world!  
RetroPGF is a core part of Optimism‚Äôs vision. If done right, it will form the backbone for a new type of economy. As with any complex system, though, this new process can‚Äôt be centrally planned or designed all at once. **The only way to build it *well* is to build it *together*.** This journey will require care, open-mindedness, patience, and, of course, optimism!  
So, how can you have meaningful impact in The Collective? We recommend following these 3 very easy principles:  
1. ***Do what you love.*** ‚Üí Real impact stems from passion, a love for what you do.
2. ***Fix the problem in front of you, together.*** ‚Üí Chances are if you have a problem, someone else has that problem as well. Let‚Äôs fix it together! What caused the problem? How do you fix it, and can we work together to fix it for everyone else?
3. ***Do it with optimism.*** ‚Üí Be kind, patient and optimistic in everything you do.  
Most importantly, make sure that your contributions align with the [Collective Intents](https://gov.optimism.io/t/collective-intents/5874). This will help ensure that your contribution is working towards a larger goal of the Collective.  
# Getting Started  
You can contribute towards the collective in a million different ways, and there is no way we could make processes for all of these contributions. Nor would we want to! However, getting from 0 to 1 is the hardest step. So we have made a few ways to get you up to speed and contributing in no time!  
If you are looking for what is happening right now, add the [Optimism Public calender](https://calendar.google.com/calendar/embed?src=c_4hui70itm089e7t8q50heh1kno%40group.calendar.google.com) to see upcoming events! We also have a [‚ÄúGet a Grant‚Äù](../governance/get-a-grant.md) page if you already have an idea on how you want to contribute."
8,What is RetroPGF and why is it important to Optimism?,"RetroPGF is a core part of Optimism‚Äôs vision and aims to form the backbone of a new type of economy. It emphasizes that building this new process well requires collective effort, care, open-mindedness, patience, and optimism.","---
title: Contribute to Optimism
lang: en-US
---  
::: tip Welcome!  
So you want to get involved in the Optimism Collective?? We are so happy to have you! Let‚Äôs make sure we are on the same page about what The Collective is all about.  
:::  
The Optimism Collective believes that **building public goods should be rewarded.**  
This key ingredient to the [Optimistic vision](https://www.optimism.io/vision) is more than just altruism ‚Äì it‚Äôs core to our success. Optimism‚Äôs codebase itself is an open-source project, and builds on the shoulders of countless OSS giants which came before it.  
This means public goods funding is a critical growth strategy. For Optimism, well-funded public goods means better developer tooling, widespread user education, safer infrastructure, and industry-leading research. It means Optimism can last and thrive.  
Once we show that this model can drive a successful economy for the Optimism Collective, we can scale the principle of **`impact = profit`** to the world!  
RetroPGF is a core part of Optimism‚Äôs vision. If done right, it will form the backbone for a new type of economy. As with any complex system, though, this new process can‚Äôt be centrally planned or designed all at once. **The only way to build it *well* is to build it *together*.** This journey will require care, open-mindedness, patience, and, of course, optimism!  
So, how can you have meaningful impact in The Collective? We recommend following these 3 very easy principles:  
1. ***Do what you love.*** ‚Üí Real impact stems from passion, a love for what you do.
2. ***Fix the problem in front of you, together.*** ‚Üí Chances are if you have a problem, someone else has that problem as well. Let‚Äôs fix it together! What caused the problem? How do you fix it, and can we work together to fix it for everyone else?
3. ***Do it with optimism.*** ‚Üí Be kind, patient and optimistic in everything you do.  
Most importantly, make sure that your contributions align with the [Collective Intents](https://gov.optimism.io/t/collective-intents/5874). This will help ensure that your contribution is working towards a larger goal of the Collective.  
# Getting Started  
You can contribute towards the collective in a million different ways, and there is no way we could make processes for all of these contributions. Nor would we want to! However, getting from 0 to 1 is the hardest step. So we have made a few ways to get you up to speed and contributing in no time!  
If you are looking for what is happening right now, add the [Optimism Public calender](https://calendar.google.com/calendar/embed?src=c_4hui70itm089e7t8q50heh1kno%40group.calendar.google.com) to see upcoming events! We also have a [‚ÄúGet a Grant‚Äù](../governance/get-a-grant.md) page if you already have an idea on how you want to contribute."
9,How can I contribute to Optimism if I speak more than one language?,You can help translate the documentation by following the instructions in the translators' contribution path.,"At Optimism, we know that we can never truly decentralise if we do not embrace the diversity of our community. As such, we take translations seriously.  
* If you speak more than one language [come help translate](./contribution-path/translators.md)!
* If you have an eye for documentation you can always help [improve the docs](https://github.com/ethereum-optimism/community-hub) themselves!
* For those of you who enjoy connecting with like minded individuals, keep an eye on our [Local Optimists Program](./contribution-path/local-optimists.md) for events near you!
* If you enjoy helping others then you should check out the [support NERD program](./contribution-path/NERD-req.md)."
9,Is there a way to help improve the Optimism documentation?,"Yes, you can help improve the documentation by contributing to the community hub on GitHub.","At Optimism, we know that we can never truly decentralise if we do not embrace the diversity of our community. As such, we take translations seriously.  
* If you speak more than one language [come help translate](./contribution-path/translators.md)!
* If you have an eye for documentation you can always help [improve the docs](https://github.com/ethereum-optimism/community-hub) themselves!
* For those of you who enjoy connecting with like minded individuals, keep an eye on our [Local Optimists Program](./contribution-path/local-optimists.md) for events near you!
* If you enjoy helping others then you should check out the [support NERD program](./contribution-path/NERD-req.md)."
9,Are there any community events for Optimism enthusiasts?,"Yes, you can keep an eye on the Local Optimists Program for events near you.","At Optimism, we know that we can never truly decentralise if we do not embrace the diversity of our community. As such, we take translations seriously.  
* If you speak more than one language [come help translate](./contribution-path/translators.md)!
* If you have an eye for documentation you can always help [improve the docs](https://github.com/ethereum-optimism/community-hub) themselves!
* For those of you who enjoy connecting with like minded individuals, keep an eye on our [Local Optimists Program](./contribution-path/local-optimists.md) for events near you!
* If you enjoy helping others then you should check out the [support NERD program](./contribution-path/NERD-req.md)."
10,Where can I find data that Optimism uses for decision making?,You can check out the existing Dune dashboards at https://dune.com/optimismfnd to see the data that Optimism looks at for decision making.,"Data is an essential ingredient to good decision making. We take our data seriously.  
* Check out our existing [Dune dashboards](https://dune.com/optimismfnd) to give you an idea of what we are looking at.
* If you have a nack for numbers then you should get involved in the [NumbaNERDs program](./contribution-path/numbaNERDs.md)!
* We also have [this gov post](https://gov.optimism.io/t/how-to-contribute-op-rewards-analytics/5975) with resources to get you inspired and informed."
10,How can I get involved if I am good with numbers?,"If you have a knack for numbers, you should get involved in the NumbaNERDs program. You can find more information about it in the contribution path documentation.","Data is an essential ingredient to good decision making. We take our data seriously.  
* Check out our existing [Dune dashboards](https://dune.com/optimismfnd) to give you an idea of what we are looking at.
* If you have a nack for numbers then you should get involved in the [NumbaNERDs program](./contribution-path/numbaNERDs.md)!
* We also have [this gov post](https://gov.optimism.io/t/how-to-contribute-op-rewards-analytics/5975) with resources to get you inspired and informed."
10,Are there any resources to help me understand how to contribute to OP rewards analytics?,"Yes, there is a government post with resources to get you inspired and informed about contributing to OP rewards analytics. You can find it at https://gov.optimism.io/t/how-to-contribute-op-rewards-analytics/5975.","Data is an essential ingredient to good decision making. We take our data seriously.  
* Check out our existing [Dune dashboards](https://dune.com/optimismfnd) to give you an idea of what we are looking at.
* If you have a nack for numbers then you should get involved in the [NumbaNERDs program](./contribution-path/numbaNERDs.md)!
* We also have [this gov post](https://gov.optimism.io/t/how-to-contribute-op-rewards-analytics/5975) with resources to get you inspired and informed."
11,How can I start developing on Optimism if I'm a dapp developer?,"If you are a dapp developer, you can start by checking out the developer docs to get started. The documentation provides all the necessary information to help you begin building on Optimism.","As a developer you have a few options to get contributing! Build on us, with us, or help move the whole space forward. We are happy to have you <3.  
* If you are a dapp developer, check out our [developer docs to get started](../developers/README.md).
* If you want to get a little deeper into the [OP Stack](https://stack.optimism.io/), we have great docs for [Getting Started with the OP Stack](https://stack.optimism.io/docs/build/getting-started/).
* If you are looking for inspiration on what to build then check out the [Ideas List](https://github.com/orgs/ethereum-optimism/projects/31/views/3) which has a wide range of ideas from quick builds to mad science innovations. Go poke around!
* If you want to contribute directly to the Optimism codebase please [read this doc](./technical-contributions.md).
* And last but not least, if you are familiar with the struggles of developing in the blockchain world and have a passion for technical support, you can help out your fellow developers by joining the [TechNERD program](./contribution-path/techNERDs.md).
* You can also help [make the developer tutorials better](https://github.com/ethereum-optimism/optimism-tutorial)."
11,Where can I find ideas for projects to build on Optimism?,"You can find inspiration for projects by checking out the Ideas List. It has a wide range of ideas from quick builds to innovative projects, which can help you decide what to build.","As a developer you have a few options to get contributing! Build on us, with us, or help move the whole space forward. We are happy to have you <3.  
* If you are a dapp developer, check out our [developer docs to get started](../developers/README.md).
* If you want to get a little deeper into the [OP Stack](https://stack.optimism.io/), we have great docs for [Getting Started with the OP Stack](https://stack.optimism.io/docs/build/getting-started/).
* If you are looking for inspiration on what to build then check out the [Ideas List](https://github.com/orgs/ethereum-optimism/projects/31/views/3) which has a wide range of ideas from quick builds to mad science innovations. Go poke around!
* If you want to contribute directly to the Optimism codebase please [read this doc](./technical-contributions.md).
* And last but not least, if you are familiar with the struggles of developing in the blockchain world and have a passion for technical support, you can help out your fellow developers by joining the [TechNERD program](./contribution-path/techNERDs.md).
* You can also help [make the developer tutorials better](https://github.com/ethereum-optimism/optimism-tutorial)."
11,How can I contribute directly to the Optimism codebase?,"If you want to contribute directly to the Optimism codebase, you should read the specific documentation provided for technical contributions. This will guide you on how to get involved and contribute effectively.","As a developer you have a few options to get contributing! Build on us, with us, or help move the whole space forward. We are happy to have you <3.  
* If you are a dapp developer, check out our [developer docs to get started](../developers/README.md).
* If you want to get a little deeper into the [OP Stack](https://stack.optimism.io/), we have great docs for [Getting Started with the OP Stack](https://stack.optimism.io/docs/build/getting-started/).
* If you are looking for inspiration on what to build then check out the [Ideas List](https://github.com/orgs/ethereum-optimism/projects/31/views/3) which has a wide range of ideas from quick builds to mad science innovations. Go poke around!
* If you want to contribute directly to the Optimism codebase please [read this doc](./technical-contributions.md).
* And last but not least, if you are familiar with the struggles of developing in the blockchain world and have a passion for technical support, you can help out your fellow developers by joining the [TechNERD program](./contribution-path/techNERDs.md).
* You can also help [make the developer tutorials better](https://github.com/ethereum-optimism/optimism-tutorial)."
12,How can I start getting involved in Optimism's governance?,An easy place to start is to look at the 'Get a Grant' page. This will help you see what governance is looking for and how you can contribute.,"The Optimism Collectives governance is an incredibly collective and exciting space that is growing and evolving. Plenty of opportunities to have impact! All work supported or executed by the Collective should be in pursuit of our [Collective Intents](https://gov.optimism.io/t/collective-intents/5874).  
* An easy place to start is to look at the [Get a Grant](../governance/get-a-grant.md) page. This is an easy way to see what governance is looking for.
* Before getting into our governance its highly recommended to [understand our unique governance set up](../governance/README.md).
* If you are serious about getting into governance you can get involved in the Token House by [becoming a Delegate](../governance/delegate.md). This is a serious responsibility, so make sure you [understand what is required of you](../governance/existing-delegate.md).
* There is also the [Citizens House](../governance/citizens-house.md). You can read more about [Citizenship here](../governance/citizenship.md).
* If you are a delegate already involved and voting, looking for additional ways to help the Collective, reach out to lavande@optimism.io."
12,What should I do if I want to become a delegate in Optimism's governance?,"If you are serious about getting into governance, you can get involved in the Token House by becoming a Delegate. However, this is a serious responsibility, so make sure you understand what is required of you before committing.","The Optimism Collectives governance is an incredibly collective and exciting space that is growing and evolving. Plenty of opportunities to have impact! All work supported or executed by the Collective should be in pursuit of our [Collective Intents](https://gov.optimism.io/t/collective-intents/5874).  
* An easy place to start is to look at the [Get a Grant](../governance/get-a-grant.md) page. This is an easy way to see what governance is looking for.
* Before getting into our governance its highly recommended to [understand our unique governance set up](../governance/README.md).
* If you are serious about getting into governance you can get involved in the Token House by [becoming a Delegate](../governance/delegate.md). This is a serious responsibility, so make sure you [understand what is required of you](../governance/existing-delegate.md).
* There is also the [Citizens House](../governance/citizens-house.md). You can read more about [Citizenship here](../governance/citizenship.md).
* If you are a delegate already involved and voting, looking for additional ways to help the Collective, reach out to lavande@optimism.io."
12,What is the Citizens House in Optimism's governance?,The Citizens House is another part of Optimism's governance structure. You can read more about Citizenship and how to get involved in the Citizens House on the relevant page in the governance documentation.,"The Optimism Collectives governance is an incredibly collective and exciting space that is growing and evolving. Plenty of opportunities to have impact! All work supported or executed by the Collective should be in pursuit of our [Collective Intents](https://gov.optimism.io/t/collective-intents/5874).  
* An easy place to start is to look at the [Get a Grant](../governance/get-a-grant.md) page. This is an easy way to see what governance is looking for.
* Before getting into our governance its highly recommended to [understand our unique governance set up](../governance/README.md).
* If you are serious about getting into governance you can get involved in the Token House by [becoming a Delegate](../governance/delegate.md). This is a serious responsibility, so make sure you [understand what is required of you](../governance/existing-delegate.md).
* There is also the [Citizens House](../governance/citizens-house.md). You can read more about [Citizenship here](../governance/citizenship.md).
* If you are a delegate already involved and voting, looking for additional ways to help the Collective, reach out to lavande@optimism.io."
13,How can I contribute to the Optimism Vision if I have skills in writing or design?,"You can join the Ambassadors program, which enables community members to create focused content to help bring the Optimism Vision closer to reality. If you have a talent for writing, design, or visuals, you are encouraged to get involved.","The Optimism Vision is big! And Visions this big need to be amplified by a diverse & aligned group to help make it real.  
* The [Ambassadors program](./contribution-path/Ambassador-req.md) enables community members to create focused content to bring the Vision closer to reality. If you have a talent for writing, design or visuals, come get involved!
* If your project wants some marketing love, you have options! Get your app in front of the Optimism community with our [Demo Day (every Thursday)](./demo-day.md).
* If your app is deployed on the Superchain, you can be added to our [our Superchain apps page](https://www.optimism.io/apps). Simply [fill out this form](https://share.hsforms.com/1hUEaGvsySTK9ccNBcNmjkwqoshb) to be included. Inclusion is at our discretion. To amplify your app launch through Superchain marketing channels [fill out this form](https://share.hsforms.com/1XHQ9Io_lT0-vf9nSVoUahQqoshb)"
13,What options do I have to market my project within the Optimism community?,"You have several options to market your project. You can get your app in front of the Optimism community by participating in Demo Day, which happens every Thursday. Additionally, if your app is deployed on the Superchain, you can be added to the Superchain apps page by filling out a form. You can also amplify your app launch through Superchain marketing channels by filling out another specific form.","The Optimism Vision is big! And Visions this big need to be amplified by a diverse & aligned group to help make it real.  
* The [Ambassadors program](./contribution-path/Ambassador-req.md) enables community members to create focused content to bring the Vision closer to reality. If you have a talent for writing, design or visuals, come get involved!
* If your project wants some marketing love, you have options! Get your app in front of the Optimism community with our [Demo Day (every Thursday)](./demo-day.md).
* If your app is deployed on the Superchain, you can be added to our [our Superchain apps page](https://www.optimism.io/apps). Simply [fill out this form](https://share.hsforms.com/1hUEaGvsySTK9ccNBcNmjkwqoshb) to be included. Inclusion is at our discretion. To amplify your app launch through Superchain marketing channels [fill out this form](https://share.hsforms.com/1XHQ9Io_lT0-vf9nSVoUahQqoshb)"
13,How can my app be featured on the Superchain apps page?,"If your app is deployed on the Superchain, you can be added to the Superchain apps page by filling out a form. However, inclusion is at the discretion of the Optimism team.","The Optimism Vision is big! And Visions this big need to be amplified by a diverse & aligned group to help make it real.  
* The [Ambassadors program](./contribution-path/Ambassador-req.md) enables community members to create focused content to bring the Vision closer to reality. If you have a talent for writing, design or visuals, come get involved!
* If your project wants some marketing love, you have options! Get your app in front of the Optimism community with our [Demo Day (every Thursday)](./demo-day.md).
* If your app is deployed on the Superchain, you can be added to our [our Superchain apps page](https://www.optimism.io/apps). Simply [fill out this form](https://share.hsforms.com/1hUEaGvsySTK9ccNBcNmjkwqoshb) to be included. Inclusion is at our discretion. To amplify your app launch through Superchain marketing channels [fill out this form](https://share.hsforms.com/1XHQ9Io_lT0-vf9nSVoUahQqoshb)"
14,Who can become an Ambassador for Optimism?,Anyone who is interested in helping onboard millions of users into the Optimism ecosystem through education and is willing to collaborate in an Optimistic environment can become an Ambassador.,"---
title: Ambassador Requirements
lang: en-US
---  
::: tip
üí° Ready to join the Ambassador program and seize the memes of production with us? Well you‚Äôre in the right place! Below are the requirements and processes involved in becoming an Ambassador.
:::  
‚ö†Ô∏è **This document is a work in progress, and will evolve. Check back occasionally.**  
First off, let's check you are doing this for the right reasons. Check your assumptions at the door, please:  
‚ùå Being an Ambassador will NOT give you eternal fame and glory.  
‚úÖ Ambassadors will help onboard millions of users into the Optimism ecosystem through education.  
‚úÖ Being an Ambassador will up your skill level as a contributor, and in doing so, you will help others in the program up theirs through collaboration in an Optimistic environment."
14,What are the benefits of becoming an Ambassador for Optimism?,"As an Ambassador, you will help onboard millions of users into the Optimism ecosystem through education, and you will also improve your skills as a contributor while helping others in the program improve theirs through collaboration.","---
title: Ambassador Requirements
lang: en-US
---  
::: tip
üí° Ready to join the Ambassador program and seize the memes of production with us? Well you‚Äôre in the right place! Below are the requirements and processes involved in becoming an Ambassador.
:::  
‚ö†Ô∏è **This document is a work in progress, and will evolve. Check back occasionally.**  
First off, let's check you are doing this for the right reasons. Check your assumptions at the door, please:  
‚ùå Being an Ambassador will NOT give you eternal fame and glory.  
‚úÖ Ambassadors will help onboard millions of users into the Optimism ecosystem through education.  
‚úÖ Being an Ambassador will up your skill level as a contributor, and in doing so, you will help others in the program up theirs through collaboration in an Optimistic environment."
14,Is the Ambassador program documentation final?,"No, the document is a work in progress and will evolve over time. It's recommended to check back occasionally for updates.","---
title: Ambassador Requirements
lang: en-US
---  
::: tip
üí° Ready to join the Ambassador program and seize the memes of production with us? Well you‚Äôre in the right place! Below are the requirements and processes involved in becoming an Ambassador.
:::  
‚ö†Ô∏è **This document is a work in progress, and will evolve. Check back occasionally.**  
First off, let's check you are doing this for the right reasons. Check your assumptions at the door, please:  
‚ùå Being an Ambassador will NOT give you eternal fame and glory.  
‚úÖ Ambassadors will help onboard millions of users into the Optimism ecosystem through education.  
‚úÖ Being an Ambassador will up your skill level as a contributor, and in doing so, you will help others in the program up theirs through collaboration in an Optimistic environment."
15,How do you become an Optimism Ambassador?,"To become an Optimism Ambassador, you need to follow a journey that includes three steps: starting as a 'wannabe-ambassador', then progressing to 'ambassador-in-training', and finally becoming an 'ambassador'.","üöÄ Optimism Ambassadors are highly values aligned with Optimism and are of course highly Optimistic!  
The journey to become an Ambassador follow the following steps:  
ü¶æ `wannabe-ambassador` ‚Üí `ambassador-in-training` ‚Üí `ambassador`"
15,What qualities are important for an Optimism Ambassador?,"Optimism Ambassadors are highly aligned with the values of Optimism and are, naturally, very optimistic.","üöÄ Optimism Ambassadors are highly values aligned with Optimism and are of course highly Optimistic!  
The journey to become an Ambassador follow the following steps:  
ü¶æ `wannabe-ambassador` ‚Üí `ambassador-in-training` ‚Üí `ambassador`"
16,Who are Optimism Ambassadors and what do they do?,Optimism Ambassadors are individuals who love to collaborate and help others grow within the Ambassador program. They create values-focused content that shapes the narrative of the entire Optimism ecosystem and value sustainability initiatives like retroactive public goods funding.,"* Optimism Ambassadors love to collaborate and help others grow in the Ambassador program.
* Optimism Ambassadors create values-focused content which form the narrative of the entire ecosystem.
* Optimism Ambassadors value sustainability initiatives like [retroactive public goods funding](https://app.optimism.io/retropgf)."
16,What kind of content do Optimism Ambassadors create?,Optimism Ambassadors create values-focused content that forms the narrative of the entire Optimism ecosystem.,"* Optimism Ambassadors love to collaborate and help others grow in the Ambassador program.
* Optimism Ambassadors create values-focused content which form the narrative of the entire ecosystem.
* Optimism Ambassadors value sustainability initiatives like [retroactive public goods funding](https://app.optimism.io/retropgf)."
16,What sustainability initiatives do Optimism Ambassadors support?,Optimism Ambassadors support sustainability initiatives such as retroactive public goods funding.,"* Optimism Ambassadors love to collaborate and help others grow in the Ambassador program.
* Optimism Ambassadors create values-focused content which form the narrative of the entire ecosystem.
* Optimism Ambassadors value sustainability initiatives like [retroactive public goods funding](https://app.optimism.io/retropgf)."
17,How can I start the process of becoming an ambassador for Optimism?,"To start the process of becoming an ambassador for Optimism, you need to get the `wannabe-ambassador` role in the [#become-an-ambassador](https://discord.com/channels/667044843901681675/973588280715141192) Discord channel.","**`wannabe-ambassador`** ‚Üí `ambassador-in-training` ‚Üí `ambassador`  
1. To show your interest, get the `wannabe-ambassador` role in the [#become-an-ambassador](https://discord.com/channels/667044843901681675/973588280715141192) Discord channel.
1. **Get Up To Speed:**
- Read pinned messages in Discord Ambassador Channels
- Review upvoted Reddit posts in the [r/optimismCollective](https://www.reddit.com/r/optimismCollective/)
2. **Stay Active - Activity on Reddit in the [r/optimismCollective](https://www.reddit.com/r/optimismCollective/) will be a determining factor for the `ambassador-in-training` role**
- We use Reddit so you can cross post your content from other platforms here
- Answer questions, upvote, downvote, use tags, and comment
- Spamming and low quality activity will be obvious to your peers who will be voting on advancing you through the program"
17,What should I do to get up to speed as a wannabe-ambassador?,"To get up to speed as a wannabe-ambassador, you should read the pinned messages in the Discord Ambassador Channels and review upvoted Reddit posts in the [r/optimismCollective](https://www.reddit.com/r/optimismCollective/).","**`wannabe-ambassador`** ‚Üí `ambassador-in-training` ‚Üí `ambassador`  
1. To show your interest, get the `wannabe-ambassador` role in the [#become-an-ambassador](https://discord.com/channels/667044843901681675/973588280715141192) Discord channel.
1. **Get Up To Speed:**
- Read pinned messages in Discord Ambassador Channels
- Review upvoted Reddit posts in the [r/optimismCollective](https://www.reddit.com/r/optimismCollective/)
2. **Stay Active - Activity on Reddit in the [r/optimismCollective](https://www.reddit.com/r/optimismCollective/) will be a determining factor for the `ambassador-in-training` role**
- We use Reddit so you can cross post your content from other platforms here
- Answer questions, upvote, downvote, use tags, and comment
- Spamming and low quality activity will be obvious to your peers who will be voting on advancing you through the program"
17,How can I advance to the `ambassador-in-training` role?,"To advance to the `ambassador-in-training` role, you need to stay active on Reddit in the [r/optimismCollective](https://www.reddit.com/r/optimismCollective/). This includes cross-posting your content from other platforms, answering questions, upvoting, downvoting, using tags, and commenting. Avoid spamming and low-quality activity, as your peers will be voting on your advancement.","**`wannabe-ambassador`** ‚Üí `ambassador-in-training` ‚Üí `ambassador`  
1. To show your interest, get the `wannabe-ambassador` role in the [#become-an-ambassador](https://discord.com/channels/667044843901681675/973588280715141192) Discord channel.
1. **Get Up To Speed:**
- Read pinned messages in Discord Ambassador Channels
- Review upvoted Reddit posts in the [r/optimismCollective](https://www.reddit.com/r/optimismCollective/)
2. **Stay Active - Activity on Reddit in the [r/optimismCollective](https://www.reddit.com/r/optimismCollective/) will be a determining factor for the `ambassador-in-training` role**
- We use Reddit so you can cross post your content from other platforms here
- Answer questions, upvote, downvote, use tags, and comment
- Spamming and low quality activity will be obvious to your peers who will be voting on advancing you through the program"
18,How does one progress through the ambassador roles in Optimism Governance?,"In Optimism Governance, the progression through the ambassador roles follows this sequence: `wannabe-ambassador` ‚Üí `ambassador-in-training` ‚Üí `ambassador`.",`wannabe-ambassador` ‚Üí **`ambassador-in-training`** ‚Üí `ambassador`
19,How can I become an ambassador for Optimism?,"To become an ambassador for Optimism, you need to fill out the Ambassador intake form, spend a minimum of 8 weeks as an active wannabe-ambassador, and then have your contributions reviewed and voted on by current ambassadors. You will need to provide a link to your Reddit profile and create an original piece of content explaining Retroactive Public Goods Funding and how it fits into Optimism‚Äôs vision.","- **Fill out Ambassador [intake form](https://app.deform.cc/form/3d8c6150-3c4a-4944-b1a7-8c5b888ae1ec)**
- **Minimum of 8 weeks** spent as as an active wannabe-ambassador then..
- **IMPORTANT:** This is 8 weeks from the date this document goes live (3/22/2023)
- ***Ambassadors vote on your new role by reviewing your contributions:**
1. **#1 Reddit:** Provide a link to your Reddit profile for review
1. Posts, comments, overall contribution quality
2. **#2 Content Submission:** Create an original piece of content explaining what [Retroactive Public Goods Funding](https://app.optimism.io/retropgf) is and how it fits into Optimism‚Äôs [Vision](https://www.optimism.io/vision).
1. Example Content Title: What is Retroactive Public Goods Funding?
2. Example Outline:
1. Set the stage by explaining the [Optimism Collective](https://app.optimism.io/announcement) and its north star: impact=profit
2. Explain the importance of public goods within a digital society
1. Public goods act as a fuel for the growth of the Collective economy. Growth yields profit for the Collective and profit which funds more investment in public goods, altogether producing a virtuous cycle of impact-driven expansion.
3. Then get into how Optimism approaches funding these very important public goods (Retro-PGF)
- **Voting** will take place in Discord Channel drop a message in Discord with the following:
- Reddit profile link
- Content Submission
- How long you have been a `wannabe-ambassador`"
19,What kind of content do I need to create to become an ambassador?,"You need to create an original piece of content explaining what Retroactive Public Goods Funding is and how it fits into Optimism‚Äôs vision. Your content should set the stage by explaining the Optimism Collective and its guiding principle of 'impact=profit', discuss the importance of public goods within a digital society, and detail how Optimism approaches funding these public goods through Retroactive Public Goods Funding.","- **Fill out Ambassador [intake form](https://app.deform.cc/form/3d8c6150-3c4a-4944-b1a7-8c5b888ae1ec)**
- **Minimum of 8 weeks** spent as as an active wannabe-ambassador then..
- **IMPORTANT:** This is 8 weeks from the date this document goes live (3/22/2023)
- ***Ambassadors vote on your new role by reviewing your contributions:**
1. **#1 Reddit:** Provide a link to your Reddit profile for review
1. Posts, comments, overall contribution quality
2. **#2 Content Submission:** Create an original piece of content explaining what [Retroactive Public Goods Funding](https://app.optimism.io/retropgf) is and how it fits into Optimism‚Äôs [Vision](https://www.optimism.io/vision).
1. Example Content Title: What is Retroactive Public Goods Funding?
2. Example Outline:
1. Set the stage by explaining the [Optimism Collective](https://app.optimism.io/announcement) and its north star: impact=profit
2. Explain the importance of public goods within a digital society
1. Public goods act as a fuel for the growth of the Collective economy. Growth yields profit for the Collective and profit which funds more investment in public goods, altogether producing a virtuous cycle of impact-driven expansion.
3. Then get into how Optimism approaches funding these very important public goods (Retro-PGF)
- **Voting** will take place in Discord Channel drop a message in Discord with the following:
- Reddit profile link
- Content Submission
- How long you have been a `wannabe-ambassador`"
19,Where do I submit my application and content for the ambassador role?,"You need to submit your application and content in the designated Discord channel. You should drop a message in Discord with your Reddit profile link, your content submission, and how long you have been a wannabe-ambassador.","- **Fill out Ambassador [intake form](https://app.deform.cc/form/3d8c6150-3c4a-4944-b1a7-8c5b888ae1ec)**
- **Minimum of 8 weeks** spent as as an active wannabe-ambassador then..
- **IMPORTANT:** This is 8 weeks from the date this document goes live (3/22/2023)
- ***Ambassadors vote on your new role by reviewing your contributions:**
1. **#1 Reddit:** Provide a link to your Reddit profile for review
1. Posts, comments, overall contribution quality
2. **#2 Content Submission:** Create an original piece of content explaining what [Retroactive Public Goods Funding](https://app.optimism.io/retropgf) is and how it fits into Optimism‚Äôs [Vision](https://www.optimism.io/vision).
1. Example Content Title: What is Retroactive Public Goods Funding?
2. Example Outline:
1. Set the stage by explaining the [Optimism Collective](https://app.optimism.io/announcement) and its north star: impact=profit
2. Explain the importance of public goods within a digital society
1. Public goods act as a fuel for the growth of the Collective economy. Growth yields profit for the Collective and profit which funds more investment in public goods, altogether producing a virtuous cycle of impact-driven expansion.
3. Then get into how Optimism approaches funding these very important public goods (Retro-PGF)
- **Voting** will take place in Discord Channel drop a message in Discord with the following:
- Reddit profile link
- Content Submission
- How long you have been a `wannabe-ambassador`"
20,How long do you need to be an active ambassador-in-training before becoming an ambassador?,You need to spend a minimum of 12 weeks as an active ambassador-in-training before you can become an ambassador.,"‚úÖ `wannabe-ambassador` ‚Üí `ambassador-in-training` ‚Üí **`ambassador`**  
1. **Minimum of 12 weeks** spent as an active `ambassador-in-training`
1. **Ambassadors vote on your new role by reviewing your contributions:**
1. **Reddit:** Provide a link to your Reddit profile for review
1. What is being looked at? Posts, comments, overall contribution quality
2. **Collaborative** **Content Submission:** Create an original piece of content with another `wannabe-ambassador`, `ambassador-in-training` or `ambassador` This can also be a group (3+ creators)
1. Example: A YouTube video where one does the voice-over explanation while the other does the visuals. If it is a group maybe the third person creates a YouTube short to capture users attention which then links to the longer form video to find out more
2. This collaborative piece of original content can be chosen from the list below. Creators must understand the subject matter cannot use previous content they have created
1. Any recent Optimism announcement or release (2 months back)
2. Retroactive Public Goods Funding [https://app.optimism.io/retropgf](https://app.optimism.io/retropgf)
3. Explain the Optimism Vision: [https://www.optimism.io/vision](https://www.optimism.io/vision)
4. Explain the purpose of the The Optimist NFT and or the AttestationStation (hint they are deeply tied together) [https://app.optimism.io/optimist-nft](https://app.optimism.io/optimist-nft)
5. What is the Optimism Collective? [https://community.optimism.io/docs/governance/](https://community.optimism.io/docs/governance/)
1. **Voting** will take place in Discord Channel. Drop a message in Discord with the following:
- Reddit profile link
- Content Submission
- How long you have been an `ambassador-in-training`"
20,What kind of contributions are reviewed when voting on a new ambassador?,"Ambassadors review your Reddit posts, comments, and overall contribution quality. They also look at collaborative content submissions you have created with other ambassadors or trainees.","‚úÖ `wannabe-ambassador` ‚Üí `ambassador-in-training` ‚Üí **`ambassador`**  
1. **Minimum of 12 weeks** spent as an active `ambassador-in-training`
1. **Ambassadors vote on your new role by reviewing your contributions:**
1. **Reddit:** Provide a link to your Reddit profile for review
1. What is being looked at? Posts, comments, overall contribution quality
2. **Collaborative** **Content Submission:** Create an original piece of content with another `wannabe-ambassador`, `ambassador-in-training` or `ambassador` This can also be a group (3+ creators)
1. Example: A YouTube video where one does the voice-over explanation while the other does the visuals. If it is a group maybe the third person creates a YouTube short to capture users attention which then links to the longer form video to find out more
2. This collaborative piece of original content can be chosen from the list below. Creators must understand the subject matter cannot use previous content they have created
1. Any recent Optimism announcement or release (2 months back)
2. Retroactive Public Goods Funding [https://app.optimism.io/retropgf](https://app.optimism.io/retropgf)
3. Explain the Optimism Vision: [https://www.optimism.io/vision](https://www.optimism.io/vision)
4. Explain the purpose of the The Optimist NFT and or the AttestationStation (hint they are deeply tied together) [https://app.optimism.io/optimist-nft](https://app.optimism.io/optimist-nft)
5. What is the Optimism Collective? [https://community.optimism.io/docs/governance/](https://community.optimism.io/docs/governance/)
1. **Voting** will take place in Discord Channel. Drop a message in Discord with the following:
- Reddit profile link
- Content Submission
- How long you have been an `ambassador-in-training`"
20,What kind of collaborative content can you create to become an ambassador?,"You can create an original piece of content with another wannabe-ambassador, ambassador-in-training, or ambassador. Examples include a YouTube video where one person does the voice-over and another does the visuals. The content should be based on recent Optimism announcements, Retroactive Public Goods Funding, the Optimism Vision, the purpose of The Optimist NFT and the AttestationStation, or the Optimism Collective.","‚úÖ `wannabe-ambassador` ‚Üí `ambassador-in-training` ‚Üí **`ambassador`**  
1. **Minimum of 12 weeks** spent as an active `ambassador-in-training`
1. **Ambassadors vote on your new role by reviewing your contributions:**
1. **Reddit:** Provide a link to your Reddit profile for review
1. What is being looked at? Posts, comments, overall contribution quality
2. **Collaborative** **Content Submission:** Create an original piece of content with another `wannabe-ambassador`, `ambassador-in-training` or `ambassador` This can also be a group (3+ creators)
1. Example: A YouTube video where one does the voice-over explanation while the other does the visuals. If it is a group maybe the third person creates a YouTube short to capture users attention which then links to the longer form video to find out more
2. This collaborative piece of original content can be chosen from the list below. Creators must understand the subject matter cannot use previous content they have created
1. Any recent Optimism announcement or release (2 months back)
2. Retroactive Public Goods Funding [https://app.optimism.io/retropgf](https://app.optimism.io/retropgf)
3. Explain the Optimism Vision: [https://www.optimism.io/vision](https://www.optimism.io/vision)
4. Explain the purpose of the The Optimist NFT and or the AttestationStation (hint they are deeply tied together) [https://app.optimism.io/optimist-nft](https://app.optimism.io/optimist-nft)
5. What is the Optimism Collective? [https://community.optimism.io/docs/governance/](https://community.optimism.io/docs/governance/)
1. **Voting** will take place in Discord Channel. Drop a message in Discord with the following:
- Reddit profile link
- Content Submission
- How long you have been an `ambassador-in-training`"
21,Can I discuss the price of the OP token in my content?,"No, you should never discuss the price of the OP token or speculate about it. This rule applies to all projects, not just the OP token. The focus should be on the impact of the project, not profit.","- **NO PRICE DISCUSSION,** EVER!! This includes speculating about price, moon references, etc. This applies for all projects and not just the OP token. Focus on impact, not profit.
- Content can be written, audio, video, or a mix and may be on any platform. If you are an artist, then create a visual artefact to demonstrate your understanding of the subject matter.
- Content thoroughly explains the subject and makes a deeper connection to Optimism‚Äôs values and or has connected it to Optimism‚Äôs larger vision.
- Content is accurate
- Content can be as long or as short as you would like, provided you demonstrate an understanding of the subject matter and put some effort in!
- Hint: Every single prompt is connected in one or many ways to every other prompt. When you start to make those connections, you begin to realize just how grand of a vision Optimism has and why Optimism‚Äôs Ambassadors are the best of the best.  
**NOTE:**  
To submit non-English content there must be 2 translators available in that language to review submission."
21,What types of content can I create to demonstrate my understanding of Optimism?,"You can create written, audio, video, or mixed content on any platform. If you are an artist, you can create a visual artifact to demonstrate your understanding of the subject matter.","- **NO PRICE DISCUSSION,** EVER!! This includes speculating about price, moon references, etc. This applies for all projects and not just the OP token. Focus on impact, not profit.
- Content can be written, audio, video, or a mix and may be on any platform. If you are an artist, then create a visual artefact to demonstrate your understanding of the subject matter.
- Content thoroughly explains the subject and makes a deeper connection to Optimism‚Äôs values and or has connected it to Optimism‚Äôs larger vision.
- Content is accurate
- Content can be as long or as short as you would like, provided you demonstrate an understanding of the subject matter and put some effort in!
- Hint: Every single prompt is connected in one or many ways to every other prompt. When you start to make those connections, you begin to realize just how grand of a vision Optimism has and why Optimism‚Äôs Ambassadors are the best of the best.  
**NOTE:**  
To submit non-English content there must be 2 translators available in that language to review submission."
21,Is there a requirement for non-English content submissions?,"Yes, to submit non-English content, there must be two translators available in that language to review the submission.","- **NO PRICE DISCUSSION,** EVER!! This includes speculating about price, moon references, etc. This applies for all projects and not just the OP token. Focus on impact, not profit.
- Content can be written, audio, video, or a mix and may be on any platform. If you are an artist, then create a visual artefact to demonstrate your understanding of the subject matter.
- Content thoroughly explains the subject and makes a deeper connection to Optimism‚Äôs values and or has connected it to Optimism‚Äôs larger vision.
- Content is accurate
- Content can be as long or as short as you would like, provided you demonstrate an understanding of the subject matter and put some effort in!
- Hint: Every single prompt is connected in one or many ways to every other prompt. When you start to make those connections, you begin to realize just how grand of a vision Optimism has and why Optimism‚Äôs Ambassadors are the best of the best.  
**NOTE:**  
To submit non-English content there must be 2 translators available in that language to review submission."
22,How long can I be inactive before being removed from the program?,"If you are inactive for more than 4 weeks, you may be removed from the program. However, an attempt will be made to contact you before this happens to check your continued interest.","**Inactivity of > 4 weeks ‚Üí** To stay in the program you must stay engaged and active. We will attempt to make contact with you before we remove your role to gauge your continued interest in the program.
**3 warnings ‚Üí** As outlined in the warnings below.
**Any severe violations ‚Üí** Any violations outlined in the Insta-ban section below. Violations of this nature will also"
22,What happens if I receive multiple warnings?,"If you receive 3 warnings, it could lead to consequences as outlined in the warnings section of the documentation.","**Inactivity of > 4 weeks ‚Üí** To stay in the program you must stay engaged and active. We will attempt to make contact with you before we remove your role to gauge your continued interest in the program.
**3 warnings ‚Üí** As outlined in the warnings below.
**Any severe violations ‚Üí** Any violations outlined in the Insta-ban section below. Violations of this nature will also"
22,What are the consequences of severe violations?,"Severe violations can lead to immediate removal from the program, as detailed in the Insta-ban section of the documentation.","**Inactivity of > 4 weeks ‚Üí** To stay in the program you must stay engaged and active. We will attempt to make contact with you before we remove your role to gauge your continued interest in the program.
**3 warnings ‚Üí** As outlined in the warnings below.
**Any severe violations ‚Üí** Any violations outlined in the Insta-ban section below. Violations of this nature will also"
23,Are there any specific rules for ambassadors in the Optimism community?,"Yes, there are specific rules for ambassadors in the Optimism community. These include no price discussion, avoiding personal attacks, not creating low-quality or low-effort content, and not copying others' content and passing it off as your own. Violating these rules can result in warnings, and accumulating three warnings will lead to losing your ambassador role and being unable to reapply for three months.","::: warning NOTICE
üöß **3 warnings and you will lose your ambassador role, and will not be able to reapply to the program for 3 months.**
:::  
1. **NO PRICE DISCUSSION, EVER!!**
2. **Personal attacks ‚Üí** We are all trying our bestüôÇ.. Attack the idea, not the person. If you attack someone personally, you will get a warning.
3. **Creating low-quality/low-effort content ‚Üí** The optimistic side of life takes work. If you make low-quality content (think copy-paste any logo and the meme still works), you will get a warning.
4. **Copying others‚Äô content and passing it off as your own ‚Üí** People work hard to create good content. If you steal their hard work in an attempt to further yourself - you will get warned. Note that you can still share others content! Just don‚Äôt pretend you made it."
23,What happens if an ambassador in the Optimism community gets three warnings?,"If an ambassador in the Optimism community gets three warnings, they will lose their ambassador role and will not be able to reapply to the program for three months.","::: warning NOTICE
üöß **3 warnings and you will lose your ambassador role, and will not be able to reapply to the program for 3 months.**
:::  
1. **NO PRICE DISCUSSION, EVER!!**
2. **Personal attacks ‚Üí** We are all trying our bestüôÇ.. Attack the idea, not the person. If you attack someone personally, you will get a warning.
3. **Creating low-quality/low-effort content ‚Üí** The optimistic side of life takes work. If you make low-quality content (think copy-paste any logo and the meme still works), you will get a warning.
4. **Copying others‚Äô content and passing it off as your own ‚Üí** People work hard to create good content. If you steal their hard work in an attempt to further yourself - you will get warned. Note that you can still share others content! Just don‚Äôt pretend you made it."
23,Can I share someone else's content in the Optimism community?,"Yes, you can share someone else's content in the Optimism community. However, you must not pretend that you created it yourself. Passing off others' content as your own will result in a warning.","::: warning NOTICE
üöß **3 warnings and you will lose your ambassador role, and will not be able to reapply to the program for 3 months.**
:::  
1. **NO PRICE DISCUSSION, EVER!!**
2. **Personal attacks ‚Üí** We are all trying our bestüôÇ.. Attack the idea, not the person. If you attack someone personally, you will get a warning.
3. **Creating low-quality/low-effort content ‚Üí** The optimistic side of life takes work. If you make low-quality content (think copy-paste any logo and the meme still works), you will get a warning.
4. **Copying others‚Äô content and passing it off as your own ‚Üí** People work hard to create good content. If you steal their hard work in an attempt to further yourself - you will get warned. Note that you can still share others content! Just don‚Äôt pretend you made it."
24,Can Optimism Ambassadors share sensitive information they receive before it becomes public?,"No, if an Optimism Ambassador leaks private information given to them, they will lose their Ambassador role and be barred from ever becoming an Ambassador again.","::: warning NOTICE
‚ö†Ô∏è **Being an Optimism Ambassador is a privilege. If you abuse the power and reputation that comes with being in such an elite group you will lose the privilege.**
:::  
1. **Scamming your follower base ‚Üí** Example: pump and dump schemes, whether Optimism related or not. Your followers are not exit liquidity.
2. **Impersonating a creator or team member ‚Üí** If you try to pretend to be someone else (not just posting their content, but stealing their profile photo, etc) you will get removed.
3. **Ambassadors are told sensitive information. If you leak... üíÄ** **‚Üí** Occasionally, Ambassadors get to hear news and updates before it is public. If you leak private information given to Ambassadors, you will lose the Ambassador role and be barred from ever becoming an Ambassador again.
4. **DOXing another community member or other [serious violations](https://gov.optimism.io/t/guidance-on-severe-violations/5729) ‚Üí** Publishing identifying information of another community member without their permission"
24,What happens if an Optimism Ambassador impersonates a creator or team member?,"If an Optimism Ambassador pretends to be someone else, such as by stealing their profile photo, they will be removed from their position.","::: warning NOTICE
‚ö†Ô∏è **Being an Optimism Ambassador is a privilege. If you abuse the power and reputation that comes with being in such an elite group you will lose the privilege.**
:::  
1. **Scamming your follower base ‚Üí** Example: pump and dump schemes, whether Optimism related or not. Your followers are not exit liquidity.
2. **Impersonating a creator or team member ‚Üí** If you try to pretend to be someone else (not just posting their content, but stealing their profile photo, etc) you will get removed.
3. **Ambassadors are told sensitive information. If you leak... üíÄ** **‚Üí** Occasionally, Ambassadors get to hear news and updates before it is public. If you leak private information given to Ambassadors, you will lose the Ambassador role and be barred from ever becoming an Ambassador again.
4. **DOXing another community member or other [serious violations](https://gov.optimism.io/t/guidance-on-severe-violations/5729) ‚Üí** Publishing identifying information of another community member without their permission"
24,Is it acceptable for Optimism Ambassadors to engage in pump and dump schemes?,"No, engaging in pump and dump schemes, whether related to Optimism or not, is considered scamming and will result in losing the Ambassador privilege.","::: warning NOTICE
‚ö†Ô∏è **Being an Optimism Ambassador is a privilege. If you abuse the power and reputation that comes with being in such an elite group you will lose the privilege.**
:::  
1. **Scamming your follower base ‚Üí** Example: pump and dump schemes, whether Optimism related or not. Your followers are not exit liquidity.
2. **Impersonating a creator or team member ‚Üí** If you try to pretend to be someone else (not just posting their content, but stealing their profile photo, etc) you will get removed.
3. **Ambassadors are told sensitive information. If you leak... üíÄ** **‚Üí** Occasionally, Ambassadors get to hear news and updates before it is public. If you leak private information given to Ambassadors, you will lose the Ambassador role and be barred from ever becoming an Ambassador again.
4. **DOXing another community member or other [serious violations](https://gov.optimism.io/t/guidance-on-severe-violations/5729) ‚Üí** Publishing identifying information of another community member without their permission"
25,How can becoming a support NERD benefit the community?,Becoming a support NERD will help the community grow in a safe and supported way and contribute to making Optimism the coolest and kindest community.,"---
title: Support NERD Requirements
lang: en-US
---  
::: tip
üí° So you want to be an optimistic NERD ‚Äòey? Well your in the right place! Below are the requirements and process involved in becoming a support NERD.
:::  
‚ö†Ô∏è **This document is a work in progress, and will evolve. Check back occasionally.**  
First off, lets check you are doing this for the right reasons. Check your assumptions at the door please:  
‚ùå Being a support NERD will NOT give you eternal fame and glory.  
‚úÖ Being a support NERD will help the community grow in a safe and supported way.  
‚úÖ Being a support NERD will help Optimism continue to be the coolest and kindest community."
25,Is the document on becoming a support NERD final and unchanging?,"No, the document is a work in progress and will evolve. It's recommended to check back occasionally for updates.","---
title: Support NERD Requirements
lang: en-US
---  
::: tip
üí° So you want to be an optimistic NERD ‚Äòey? Well your in the right place! Below are the requirements and process involved in becoming a support NERD.
:::  
‚ö†Ô∏è **This document is a work in progress, and will evolve. Check back occasionally.**  
First off, lets check you are doing this for the right reasons. Check your assumptions at the door please:  
‚ùå Being a support NERD will NOT give you eternal fame and glory.  
‚úÖ Being a support NERD will help the community grow in a safe and supported way.  
‚úÖ Being a support NERD will help Optimism continue to be the coolest and kindest community."
25,Will becoming a support NERD make me famous?,"No, being a support NERD will not give you eternal fame and glory. The role is more about contributing positively to the community.","---
title: Support NERD Requirements
lang: en-US
---  
::: tip
üí° So you want to be an optimistic NERD ‚Äòey? Well your in the right place! Below are the requirements and process involved in becoming a support NERD.
:::  
‚ö†Ô∏è **This document is a work in progress, and will evolve. Check back occasionally.**  
First off, lets check you are doing this for the right reasons. Check your assumptions at the door please:  
‚ùå Being a support NERD will NOT give you eternal fame and glory.  
‚úÖ Being a support NERD will help the community grow in a safe and supported way.  
‚úÖ Being a support NERD will help Optimism continue to be the coolest and kindest community."
26,How can I become a support NERD for Optimism?,"To become a support NERD for Optimism, you need to follow these steps: start as a 'wannabe-NERD', then become a 'NERD-in-training', and finally, you can become a 'support-NERD'.","üöÄ Optimism support NERDs are highly values aligned with Optimism and are of course highly Optimistic! Support NERDs provide support to the Optimism Discord, helping users with questions, and pointing people in the right direction.  
The journey to become an supNERD follow the following steps:  
üöÄ `wannabe-NERD` ‚Üí `NERD-in-training` ‚Üí `support-NERD`  
üöÄ You should believe in the optimistic values: Open, transparent, in support of public goods (if you have not heard about our [RetroPGF, go check it out!](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c)).  
- Support NERDs are good at community building, and making the Discord feel inclusive.
- NERDs will NEVER DM USERS. Keep all support in public threads.
- Don‚Äôt spread negative energy. This does not mean that you should try to remove people asking hard questions. But don‚Äôt be a dick.
- Talk about Optimism! A tweet now and then never hurt, just make sure you are accurate.
- Try help and promote new projects on Optimism! It will also help you give better support if you play around with the dapps on Optimism so you know how they work, and where things might go wrong."
26,What are the key values a support NERD should believe in?,"A support NERD should believe in optimistic values such as being open, transparent, and supporting public goods. It's also important to be aligned with the community's positive and inclusive spirit.","üöÄ Optimism support NERDs are highly values aligned with Optimism and are of course highly Optimistic! Support NERDs provide support to the Optimism Discord, helping users with questions, and pointing people in the right direction.  
The journey to become an supNERD follow the following steps:  
üöÄ `wannabe-NERD` ‚Üí `NERD-in-training` ‚Üí `support-NERD`  
üöÄ You should believe in the optimistic values: Open, transparent, in support of public goods (if you have not heard about our [RetroPGF, go check it out!](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c)).  
- Support NERDs are good at community building, and making the Discord feel inclusive.
- NERDs will NEVER DM USERS. Keep all support in public threads.
- Don‚Äôt spread negative energy. This does not mean that you should try to remove people asking hard questions. But don‚Äôt be a dick.
- Talk about Optimism! A tweet now and then never hurt, just make sure you are accurate.
- Try help and promote new projects on Optimism! It will also help you give better support if you play around with the dapps on Optimism so you know how they work, and where things might go wrong."
26,How should support NERDs interact with users on Discord?,"Support NERDs should keep all support interactions in public threads and never DM users. They should also focus on building a positive community, avoid spreading negative energy, and help promote new projects on Optimism.","üöÄ Optimism support NERDs are highly values aligned with Optimism and are of course highly Optimistic! Support NERDs provide support to the Optimism Discord, helping users with questions, and pointing people in the right direction.  
The journey to become an supNERD follow the following steps:  
üöÄ `wannabe-NERD` ‚Üí `NERD-in-training` ‚Üí `support-NERD`  
üöÄ You should believe in the optimistic values: Open, transparent, in support of public goods (if you have not heard about our [RetroPGF, go check it out!](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c)).  
- Support NERDs are good at community building, and making the Discord feel inclusive.
- NERDs will NEVER DM USERS. Keep all support in public threads.
- Don‚Äôt spread negative energy. This does not mean that you should try to remove people asking hard questions. But don‚Äôt be a dick.
- Talk about Optimism! A tweet now and then never hurt, just make sure you are accurate.
- Try help and promote new projects on Optimism! It will also help you give better support if you play around with the dapps on Optimism so you know how they work, and where things might go wrong."
27,How can I become a support NERD in the Optimism community?,"To become a support NERD, you need to follow several steps: fill in the wannabe-NERD form, be active in the Optimism Discord for at least 2 months, and actively offer support in the Discord during that time. This includes answering questions, tagging support-nerds for questions you can't answer, reporting scams, and keeping the Discord channels organized.","**`wannabe-NERD`** ‚Üí `NERD-in-training` ‚Üí `support-NERD`  
**To ensure that our support NERDs are only the highest quality nerds we have the following requirements before you can start a NERD trial**  
1. Fill in the [wannabe-NERD form](https://forms.gle/YCirMCzagW64BNLu7).
This helps us know all our NERDs and their languages. L2 is global after all üåçüåéüåè
[NERDs](https://forms.gle/YCirMCzagW64BNLu7)
1. Be in the Optimism Discord for at least 2 months.
We need to know you are serious üëÄ
1.  Be actively offering support in the Discord for at least 2 months.
How can you offer support:
- Answering questions that you know the answer to.
- Tagging the `support-nerds` to answer questions you don‚Äôt know the answer to.
- ‚ö†Ô∏èGiving bad/incorrect/misleading answers to users instead of tagging the nerds *will count against you*.
- Reporting scams, bots or spam.
- Keeping the discord ‚Äúclean‚Äù (channel hygiene)
- Asking users who post questions in general to post them in `user-support`, same for developer issues in `developer-support`
- Answering user questions **in a thread on their original message.**
- Steps to answer messages in Discord threads (iykyk)
1. First click on the three dots above the message
(don‚Äôt worry if yours does not have as many options)
1. Click Create Thread
1. Name the thread after the user problem
1. Make sure to tag the user and let them know to post any updates in the thread!  
- If you speak a second language, helping out in that language channel (if we have it) is fantastic ‚ú®
1. Read the descriptions of all the channels. This will help you know what channels are for what.
1. Read the pinned messages. They are pinned for a reason üòå
1. Read the user support docs ‚Üí
- Let us know if you find any broken links, outdated information or if you think there is something we should add!
- If you are reading it in any of the non-english supported translations, please let us know if you find anything wrong on [our CorwdIn](https://crowdin.com/project/optimism-help-center)! ([CrowdIn is our translation tool of choice](https://crowdin.com/project/optimism-help-center), let us know in the #translator Discord channel if you would like to become a translator. See the channel in #get-a-role).
[Optimism](https://help.optimism.io/hc/en-us)
1. Read the developer docs (if you are technical) ‚Üí
- Report any:
- Incorrect/out of date information you find
- Broken links
[Optimism Docs | Optimism Docs](https://community.optimism.io/)"
27,What should I do if I find outdated information or broken links in the Optimism documentation?,"If you find outdated information or broken links in the Optimism documentation, you should report them. For user support docs, you can let the team know directly. If you are reading non-English translations and find issues, you can report them on CrowdIn, the translation tool used by Optimism. For developer docs, you should also report any incorrect or outdated information and broken links.","**`wannabe-NERD`** ‚Üí `NERD-in-training` ‚Üí `support-NERD`  
**To ensure that our support NERDs are only the highest quality nerds we have the following requirements before you can start a NERD trial**  
1. Fill in the [wannabe-NERD form](https://forms.gle/YCirMCzagW64BNLu7).
This helps us know all our NERDs and their languages. L2 is global after all üåçüåéüåè
[NERDs](https://forms.gle/YCirMCzagW64BNLu7)
1. Be in the Optimism Discord for at least 2 months.
We need to know you are serious üëÄ
1.  Be actively offering support in the Discord for at least 2 months.
How can you offer support:
- Answering questions that you know the answer to.
- Tagging the `support-nerds` to answer questions you don‚Äôt know the answer to.
- ‚ö†Ô∏èGiving bad/incorrect/misleading answers to users instead of tagging the nerds *will count against you*.
- Reporting scams, bots or spam.
- Keeping the discord ‚Äúclean‚Äù (channel hygiene)
- Asking users who post questions in general to post them in `user-support`, same for developer issues in `developer-support`
- Answering user questions **in a thread on their original message.**
- Steps to answer messages in Discord threads (iykyk)
1. First click on the three dots above the message
(don‚Äôt worry if yours does not have as many options)
1. Click Create Thread
1. Name the thread after the user problem
1. Make sure to tag the user and let them know to post any updates in the thread!  
- If you speak a second language, helping out in that language channel (if we have it) is fantastic ‚ú®
1. Read the descriptions of all the channels. This will help you know what channels are for what.
1. Read the pinned messages. They are pinned for a reason üòå
1. Read the user support docs ‚Üí
- Let us know if you find any broken links, outdated information or if you think there is something we should add!
- If you are reading it in any of the non-english supported translations, please let us know if you find anything wrong on [our CorwdIn](https://crowdin.com/project/optimism-help-center)! ([CrowdIn is our translation tool of choice](https://crowdin.com/project/optimism-help-center), let us know in the #translator Discord channel if you would like to become a translator. See the channel in #get-a-role).
[Optimism](https://help.optimism.io/hc/en-us)
1. Read the developer docs (if you are technical) ‚Üí
- Report any:
- Incorrect/out of date information you find
- Broken links
[Optimism Docs | Optimism Docs](https://community.optimism.io/)"
27,What are some ways I can offer support in the Optimism Discord?,"You can offer support in the Optimism Discord by answering questions you know the answers to, tagging support-nerds for questions you don't know the answers to, reporting scams, bots, or spam, keeping the channels organized, and directing users to the appropriate channels for their questions. Additionally, if you speak a second language, you can help out in that language's channel if available.","**`wannabe-NERD`** ‚Üí `NERD-in-training` ‚Üí `support-NERD`  
**To ensure that our support NERDs are only the highest quality nerds we have the following requirements before you can start a NERD trial**  
1. Fill in the [wannabe-NERD form](https://forms.gle/YCirMCzagW64BNLu7).
This helps us know all our NERDs and their languages. L2 is global after all üåçüåéüåè
[NERDs](https://forms.gle/YCirMCzagW64BNLu7)
1. Be in the Optimism Discord for at least 2 months.
We need to know you are serious üëÄ
1.  Be actively offering support in the Discord for at least 2 months.
How can you offer support:
- Answering questions that you know the answer to.
- Tagging the `support-nerds` to answer questions you don‚Äôt know the answer to.
- ‚ö†Ô∏èGiving bad/incorrect/misleading answers to users instead of tagging the nerds *will count against you*.
- Reporting scams, bots or spam.
- Keeping the discord ‚Äúclean‚Äù (channel hygiene)
- Asking users who post questions in general to post them in `user-support`, same for developer issues in `developer-support`
- Answering user questions **in a thread on their original message.**
- Steps to answer messages in Discord threads (iykyk)
1. First click on the three dots above the message
(don‚Äôt worry if yours does not have as many options)
1. Click Create Thread
1. Name the thread after the user problem
1. Make sure to tag the user and let them know to post any updates in the thread!  
- If you speak a second language, helping out in that language channel (if we have it) is fantastic ‚ú®
1. Read the descriptions of all the channels. This will help you know what channels are for what.
1. Read the pinned messages. They are pinned for a reason üòå
1. Read the user support docs ‚Üí
- Let us know if you find any broken links, outdated information or if you think there is something we should add!
- If you are reading it in any of the non-english supported translations, please let us know if you find anything wrong on [our CorwdIn](https://crowdin.com/project/optimism-help-center)! ([CrowdIn is our translation tool of choice](https://crowdin.com/project/optimism-help-center), let us know in the #translator Discord channel if you would like to become a translator. See the channel in #get-a-role).
[Optimism](https://help.optimism.io/hc/en-us)
1. Read the developer docs (if you are technical) ‚Üí
- Report any:
- Incorrect/out of date information you find
- Broken links
[Optimism Docs | Optimism Docs](https://community.optimism.io/)"
28,How can I contribute to the Optimism project if I'm not a developer?,"You can help in various ways such as translating documents, connecting resources, providing research, finding helpful resources, or making pull requests on the documentation.","- Introduce yourself! Mention your timezone, country, languages you can speak, when you will be online and what your strengths are (i.e technical, design, research, etc)
- Find other ways you can help! Translating documents, connecting resources, provide research, find helpful resources, make PRs on the docs. There is so much that can be done!"
28,What information should I include when introducing myself to the Optimism community?,"When introducing yourself, you should mention your timezone, country, languages you can speak, when you will be online, and what your strengths are, such as technical skills, design, research, etc.","- Introduce yourself! Mention your timezone, country, languages you can speak, when you will be online and what your strengths are (i.e technical, design, research, etc)
- Find other ways you can help! Translating documents, connecting resources, provide research, find helpful resources, make PRs on the docs. There is so much that can be done!"
29,How do I become a `support-NERD` in the Optimism community?,"To become a `support-NERD`, you need to follow these steps: First, post proof of meeting the background requirements in the `#wannabe-NERD` channel. Then, a `support-NERD` and an Optimism team member will review your contributions. If you have offered enough support for three months, you will be given the `nerd-in-training` role. You need to continue offering support for an additional two months. If your support is of high quality, an existing NERD will nominate you, and your nomination will be voted on by support-NERDs. You need a majority (50%) to ratify your nomination, and then you become a `support-NERD`.","`wannabe-NERD` ‚Üí **`NERD-in-training`** ‚Üí `support-NERD`  
‚úÖ So you have passed the background requirements. Congrats! Follow these steps to go from a `wannabe-NERD` to a fully fledged `support-NERD` ü§ì  
1. Post proof of meeting the requirements in the `#wannabe-NERD` channel. If you speak a second language and would like to offer support in this language, please include this in your message.
1. A `support-NERD` as well as an Optimism team member will check your contributions within the Discord to see if you have offered enough support. You will be notified either way.
1. If you have offered enough support (three (3) months)  you will be given the `nerd-in-training` role. You will need to have the `nerd-in-training` for an additional two (2) months, during which you will need to continue offering support.
1. After that, should your support be high enough quality an existing NERD will nominate you.
1. Your nomination is voted on by support-NERDs
2. You need a majority (50%) to ratify your nomination
3. Then you are a `support-NERD`!"
29,What should I include in my message when posting proof of meeting the requirements in the `#wannabe-NERD` channel?,"When posting proof of meeting the requirements in the `#wannabe-NERD` channel, you should include evidence that you have met the background requirements. If you speak a second language and would like to offer support in that language, make sure to include this information in your message.","`wannabe-NERD` ‚Üí **`NERD-in-training`** ‚Üí `support-NERD`  
‚úÖ So you have passed the background requirements. Congrats! Follow these steps to go from a `wannabe-NERD` to a fully fledged `support-NERD` ü§ì  
1. Post proof of meeting the requirements in the `#wannabe-NERD` channel. If you speak a second language and would like to offer support in this language, please include this in your message.
1. A `support-NERD` as well as an Optimism team member will check your contributions within the Discord to see if you have offered enough support. You will be notified either way.
1. If you have offered enough support (three (3) months)  you will be given the `nerd-in-training` role. You will need to have the `nerd-in-training` for an additional two (2) months, during which you will need to continue offering support.
1. After that, should your support be high enough quality an existing NERD will nominate you.
1. Your nomination is voted on by support-NERDs
2. You need a majority (50%) to ratify your nomination
3. Then you are a `support-NERD`!"
29,How long do I need to offer support before becoming a `support-NERD`?,"You need to offer support for a total of five months before becoming a `support-NERD`. Initially, you need to offer support for three months to get the `nerd-in-training` role. Then, you need to continue offering support for an additional two months while holding the `nerd-in-training` role.","`wannabe-NERD` ‚Üí **`NERD-in-training`** ‚Üí `support-NERD`  
‚úÖ So you have passed the background requirements. Congrats! Follow these steps to go from a `wannabe-NERD` to a fully fledged `support-NERD` ü§ì  
1. Post proof of meeting the requirements in the `#wannabe-NERD` channel. If you speak a second language and would like to offer support in this language, please include this in your message.
1. A `support-NERD` as well as an Optimism team member will check your contributions within the Discord to see if you have offered enough support. You will be notified either way.
1. If you have offered enough support (three (3) months)  you will be given the `nerd-in-training` role. You will need to have the `nerd-in-training` for an additional two (2) months, during which you will need to continue offering support.
1. After that, should your support be high enough quality an existing NERD will nominate you.
1. Your nomination is voted on by support-NERDs
2. You need a majority (50%) to ratify your nomination
3. Then you are a `support-NERD`!"
30,Can a NERD lose their role for scamming or spamming?,"Yes, if a NERD scams a user or sends spam in any channel, they will lose their wannabe-NERD role, get banned for life from ever becoming a NERD, and be banned from the Discord.","**‚ö†Ô∏è Being a NERD is a privilege. If you abuse the power and reputation that comes with it you will loose the privilege.**  
1. **If you scam a user, or send spam in any channel** ‚Üí This will make you loose your wannabe-NERD role and get you banned for life from ever becoming a nerd, as well as banned from the Discord.
2. **Being rude to users** ‚Üí This will get you kicked from the NERDs, and also temp banned from the Discord for 3 days. Don‚Äôt be a dick.
3. **Giving false/fake information** ‚Üí If you send a user bad information, or malicious information, you will loose your NERD rights and get banned (or temp banned) depending on how bad the info was.
4. **NERDs are told sensitive information. If you leak... üíÄ** ‚Üí Occasionally NERDs get to hear news and updates before it is public. If you leak private information given to NERDs you will loose NERD role and be bared from ever becoming a NERD again."
30,What happens if a NERD is rude to users?,"If a NERD is rude to users, they will be kicked from the NERDs and temporarily banned from the Discord for 3 days.","**‚ö†Ô∏è Being a NERD is a privilege. If you abuse the power and reputation that comes with it you will loose the privilege.**  
1. **If you scam a user, or send spam in any channel** ‚Üí This will make you loose your wannabe-NERD role and get you banned for life from ever becoming a nerd, as well as banned from the Discord.
2. **Being rude to users** ‚Üí This will get you kicked from the NERDs, and also temp banned from the Discord for 3 days. Don‚Äôt be a dick.
3. **Giving false/fake information** ‚Üí If you send a user bad information, or malicious information, you will loose your NERD rights and get banned (or temp banned) depending on how bad the info was.
4. **NERDs are told sensitive information. If you leak... üíÄ** ‚Üí Occasionally NERDs get to hear news and updates before it is public. If you leak private information given to NERDs you will loose NERD role and be bared from ever becoming a NERD again."
30,Are NERDs given sensitive information?,"Yes, NERDs are occasionally given sensitive information before it is made public. If they leak this private information, they will lose their NERD role and be barred from ever becoming a NERD again.","**‚ö†Ô∏è Being a NERD is a privilege. If you abuse the power and reputation that comes with it you will loose the privilege.**  
1. **If you scam a user, or send spam in any channel** ‚Üí This will make you loose your wannabe-NERD role and get you banned for life from ever becoming a nerd, as well as banned from the Discord.
2. **Being rude to users** ‚Üí This will get you kicked from the NERDs, and also temp banned from the Discord for 3 days. Don‚Äôt be a dick.
3. **Giving false/fake information** ‚Üí If you send a user bad information, or malicious information, you will loose your NERD rights and get banned (or temp banned) depending on how bad the info was.
4. **NERDs are told sensitive information. If you leak... üíÄ** ‚Üí Occasionally NERDs get to hear news and updates before it is public. If you leak private information given to NERDs you will loose NERD role and be bared from ever becoming a NERD again."
31,How does the Optimism Foundation view identity and reputation within its community?,The Optimism Foundation views identity and reputation as integral parts of Citizenship within the Collective. They aim to provide clarity and direction for community members interested in building impactful projects.,"---
title: Identity and Attestations
lang: en-US
---  
# Citizenship, identity, reputation and attestations  
This document intends to open-source the Optimism Foundation‚Äôs thinking around identity and reputation within the Collective, as it relates to Citizenship. The hope is to provide some clarity and direction for community members who are curious or eager to build things that create impact for the Collective."
31,What is the purpose of the document on identity and attestations?,"The purpose of the document is to share the Optimism Foundation‚Äôs thoughts on identity and reputation, and to guide community members who are curious or eager to create impactful contributions to the Collective.","---
title: Identity and Attestations
lang: en-US
---  
# Citizenship, identity, reputation and attestations  
This document intends to open-source the Optimism Foundation‚Äôs thinking around identity and reputation within the Collective, as it relates to Citizenship. The hope is to provide some clarity and direction for community members who are curious or eager to build things that create impact for the Collective."
32,Why is robust user and project identity important for the Optimism Collective?,"Robust user and project identity is important for the Optimism Collective because it serves as a foundation for Citizenship. This will improve the quality of Token House elections, better support developers building on the superchain, and create a high trust ecosystem.","We need robust user and project identity within the Optimism Collective as a foundation for Citizenship.This will improve the quality of Token House elections, better support developers on their journey of building on the superchain and create a high trust ecosystem.  
In our plan for how to get there, we need to avoid following known pitfalls:  
- Products that on their own don‚Äôt solve a problem, don‚Äôt get adopted.
- Attestations aren‚Äôt valuable unless they are being consumed in a real use case.
- There may be a cold start or chicken-and-egg problem in bootstrapping an identity/reputation network.
- Defining the criteria for citizenship ‚Äòtop down‚Äô and issuing related attestations misses an opportunity for emergent knowledge.
- Attestations issued for their own sake are at risk of being arbitrary - i.e. not representing anything meaningful for the Optimism Collective."
32,What are some pitfalls to avoid when building an identity/reputation network for the Optimism Collective?,"Some pitfalls to avoid include creating products that don't solve a problem and therefore don't get adopted, issuing attestations that aren't valuable because they aren't used in real cases, facing a cold start or chicken-and-egg problem in bootstrapping the network, defining citizenship criteria from the top down which misses emergent knowledge, and issuing attestations that are arbitrary and don't represent anything meaningful for the Optimism Collective.","We need robust user and project identity within the Optimism Collective as a foundation for Citizenship.This will improve the quality of Token House elections, better support developers on their journey of building on the superchain and create a high trust ecosystem.  
In our plan for how to get there, we need to avoid following known pitfalls:  
- Products that on their own don‚Äôt solve a problem, don‚Äôt get adopted.
- Attestations aren‚Äôt valuable unless they are being consumed in a real use case.
- There may be a cold start or chicken-and-egg problem in bootstrapping an identity/reputation network.
- Defining the criteria for citizenship ‚Äòtop down‚Äô and issuing related attestations misses an opportunity for emergent knowledge.
- Attestations issued for their own sake are at risk of being arbitrary - i.e. not representing anything meaningful for the Optimism Collective."
33,What is the approach towards defining Citizenship in Optimism Governance?,The approach is to prioritize things that will help Citizenship emerge organically rather than defining it from the top-down.,"- Prioritize the things that will help Citizenship emerge organically over defining Citizenship top-down.
- Issue attestations that will be used for something right away rather than issuing attestations for every little thing that might be useful in the future.
- When aggregating data, avoid arbitrary inputs and ensure there is a way to measure effectiveness.
- Design with the expectation that what is built will attract farmers.  
See the ‚ÄòAttestations Best Practices‚Äô section below for a practical guide to attestations."
33,What should be considered when issuing attestations in Optimism Governance?,Attestations should be issued for things that will be used right away rather than for every little thing that might be useful in the future.,"- Prioritize the things that will help Citizenship emerge organically over defining Citizenship top-down.
- Issue attestations that will be used for something right away rather than issuing attestations for every little thing that might be useful in the future.
- When aggregating data, avoid arbitrary inputs and ensure there is a way to measure effectiveness.
- Design with the expectation that what is built will attract farmers.  
See the ‚ÄòAttestations Best Practices‚Äô section below for a practical guide to attestations."
33,What is important to avoid when aggregating data in Optimism Governance?,"When aggregating data, it is important to avoid arbitrary inputs and ensure there is a way to measure effectiveness.","- Prioritize the things that will help Citizenship emerge organically over defining Citizenship top-down.
- Issue attestations that will be used for something right away rather than issuing attestations for every little thing that might be useful in the future.
- When aggregating data, avoid arbitrary inputs and ensure there is a way to measure effectiveness.
- Design with the expectation that what is built will attract farmers.  
See the ‚ÄòAttestations Best Practices‚Äô section below for a practical guide to attestations."
34,How does the identity stack framework help in understanding identity and reputation in Optimism?,"The identity stack framework helps to see how different elements of identity and reputation fit together by organizing them into layers: data, data interpretation, identity, and UI. Each layer has specific roles and functions, from raw data production to user interfaces that integrate and display this information.","![image](../../../assets/docs/contribute/att-framework.png)  
The identity stack framework helps us to see how the different elements of identity and reputation fit together.  
At the data layer, we have raw blockchain transactions, attestations and other types of data. The data producers can be dApps, organizations or individuals themselves. Anyone can produce any kind of data, but those higher up in the stack (such as data aggregators) need to differentiate signal from noise.  
The data interpretation layer includes algorithms, aggregations and other kinds of analytics run across the data in the data layer. Data aggregators can but don‚Äôt need to be the same entities that produce or consume the data. In fact, in the future we can imagine a large marketplace of data aggregators that compete to provide the most valuable algorithms to other entities. Anyone can aggregate data, but they must prove their worth and trustworthiness to other players. In the future, metric-based impact evaluation for Retro Funding, smart defaults in the Token House and Citizenship selection are all areas where we imagine that data interpretation will become essential.  
At the identity layer we have the way that individual users and projects/teams are represented in the Optimism Collective in order to tie together all the information about them. In the past, Ethereum addresses have been used to represent users and projects, but we are seeing limitations in this approach, as Ethereum addresses often do not stay stable over the lifecycle of a user or a project. The identity layer of the stack is the narrowest point - here having multiple competing offerings could become detrimental if one person‚Äôs identity is split across multiple accounts.  
Finally, the UI layer includes any interface that integrates elements of the layers below - for example an interface that represents user profiles or a website that surfaces various algorithms that compute a user‚Äôs impact in the Optimism Collective. A multitude of interfaces is valuable and provides users different ways to engage with the layers below in the context of the user journey or the problem they are trying to solve."
34,What is the role of the data interpretation layer in the identity stack framework?,"The data interpretation layer includes algorithms, aggregations, and analytics that process the raw data from the data layer. Data aggregators in this layer analyze the data to provide valuable insights and metrics, which can be used for various purposes like Retro Funding and smart defaults in the Token House.","![image](../../../assets/docs/contribute/att-framework.png)  
The identity stack framework helps us to see how the different elements of identity and reputation fit together.  
At the data layer, we have raw blockchain transactions, attestations and other types of data. The data producers can be dApps, organizations or individuals themselves. Anyone can produce any kind of data, but those higher up in the stack (such as data aggregators) need to differentiate signal from noise.  
The data interpretation layer includes algorithms, aggregations and other kinds of analytics run across the data in the data layer. Data aggregators can but don‚Äôt need to be the same entities that produce or consume the data. In fact, in the future we can imagine a large marketplace of data aggregators that compete to provide the most valuable algorithms to other entities. Anyone can aggregate data, but they must prove their worth and trustworthiness to other players. In the future, metric-based impact evaluation for Retro Funding, smart defaults in the Token House and Citizenship selection are all areas where we imagine that data interpretation will become essential.  
At the identity layer we have the way that individual users and projects/teams are represented in the Optimism Collective in order to tie together all the information about them. In the past, Ethereum addresses have been used to represent users and projects, but we are seeing limitations in this approach, as Ethereum addresses often do not stay stable over the lifecycle of a user or a project. The identity layer of the stack is the narrowest point - here having multiple competing offerings could become detrimental if one person‚Äôs identity is split across multiple accounts.  
Finally, the UI layer includes any interface that integrates elements of the layers below - for example an interface that represents user profiles or a website that surfaces various algorithms that compute a user‚Äôs impact in the Optimism Collective. A multitude of interfaces is valuable and provides users different ways to engage with the layers below in the context of the user journey or the problem they are trying to solve."
34,Why is the identity layer considered the narrowest point in the identity stack framework?,"The identity layer is considered the narrowest point because it represents how individual users and projects are identified within the Optimism Collective. Having multiple competing identity solutions could be detrimental, as it might split a person's identity across multiple accounts, leading to fragmentation and confusion.","![image](../../../assets/docs/contribute/att-framework.png)  
The identity stack framework helps us to see how the different elements of identity and reputation fit together.  
At the data layer, we have raw blockchain transactions, attestations and other types of data. The data producers can be dApps, organizations or individuals themselves. Anyone can produce any kind of data, but those higher up in the stack (such as data aggregators) need to differentiate signal from noise.  
The data interpretation layer includes algorithms, aggregations and other kinds of analytics run across the data in the data layer. Data aggregators can but don‚Äôt need to be the same entities that produce or consume the data. In fact, in the future we can imagine a large marketplace of data aggregators that compete to provide the most valuable algorithms to other entities. Anyone can aggregate data, but they must prove their worth and trustworthiness to other players. In the future, metric-based impact evaluation for Retro Funding, smart defaults in the Token House and Citizenship selection are all areas where we imagine that data interpretation will become essential.  
At the identity layer we have the way that individual users and projects/teams are represented in the Optimism Collective in order to tie together all the information about them. In the past, Ethereum addresses have been used to represent users and projects, but we are seeing limitations in this approach, as Ethereum addresses often do not stay stable over the lifecycle of a user or a project. The identity layer of the stack is the narrowest point - here having multiple competing offerings could become detrimental if one person‚Äôs identity is split across multiple accounts.  
Finally, the UI layer includes any interface that integrates elements of the layers below - for example an interface that represents user profiles or a website that surfaces various algorithms that compute a user‚Äôs impact in the Optimism Collective. A multitude of interfaces is valuable and provides users different ways to engage with the layers below in the context of the user journey or the problem they are trying to solve."
35,How should developers approach building identity solutions in the Optimism ecosystem?,"Developers should focus on building vertical slices of the identity stack, solving specific user problems end-to-end rather than building out all possible use cases horizontally. This ensures that each piece serves a purpose and gets adoption.","We ought to take an approach of building out vertical slices of the identity stack, rather than building out sections horizontally. For example, rather than investing into building out all the possible use cases for data interpretation, we should select specific user problems and solve them end-to-end. Each vertical slice will solve a specific problem and integrate the necessary elements of the stack. This is the classic method of building an MVP and ensures that each piece that is built serves a purpose and gets adoption. It also means that attestations will be generated when they serve a specific need as part of a user journey, rather than being arbitrary.  
While we are not taking an approach of building all the layers horizontally, the Optimism Foundation will support the establishment of an opinionated identity data structure that others can build around. By forming an opinion on how individuals and projects are represented in the Collective, we will make it easier for others to contribute and interoperate. Stay tuned for more updates on this.  
We recommend that others keen to build within the identity and reputation space in the Optimism Collective take an approach of solving a specific and real problem for a clearly-defined user group and consider how this relates to the various layers of the identity stack, while adopting a shared user and project identity structure.  
For those seeking specific input and ideas on what the Foundation and Token House consider valuable work, please refer to the [Builder Ideas List](https://contribute.optimism.io/), and current [Delegate Mission Requests](https://gov.optimism.io/c/mission-requests/69) and [Foundation Mission Requests](https://github.com/orgs/ethereum-optimism/projects/31/views/1) - these are the channels where specific work is called for.  
If you‚Äôre working on something that you think fits within this framework and is not represented in these channels, please email identity@optimism.io and we‚Äôll consider whether a Mission Grant could support this work."
35,What should developers do if they have an idea that fits within the Optimism identity framework but isn't listed in the current channels?,"If you have an idea that fits within the Optimism identity framework but isn't represented in the current channels, you should email identity@optimism.io to see if a Mission Grant could support your work.","We ought to take an approach of building out vertical slices of the identity stack, rather than building out sections horizontally. For example, rather than investing into building out all the possible use cases for data interpretation, we should select specific user problems and solve them end-to-end. Each vertical slice will solve a specific problem and integrate the necessary elements of the stack. This is the classic method of building an MVP and ensures that each piece that is built serves a purpose and gets adoption. It also means that attestations will be generated when they serve a specific need as part of a user journey, rather than being arbitrary.  
While we are not taking an approach of building all the layers horizontally, the Optimism Foundation will support the establishment of an opinionated identity data structure that others can build around. By forming an opinion on how individuals and projects are represented in the Collective, we will make it easier for others to contribute and interoperate. Stay tuned for more updates on this.  
We recommend that others keen to build within the identity and reputation space in the Optimism Collective take an approach of solving a specific and real problem for a clearly-defined user group and consider how this relates to the various layers of the identity stack, while adopting a shared user and project identity structure.  
For those seeking specific input and ideas on what the Foundation and Token House consider valuable work, please refer to the [Builder Ideas List](https://contribute.optimism.io/), and current [Delegate Mission Requests](https://gov.optimism.io/c/mission-requests/69) and [Foundation Mission Requests](https://github.com/orgs/ethereum-optimism/projects/31/views/1) - these are the channels where specific work is called for.  
If you‚Äôre working on something that you think fits within this framework and is not represented in these channels, please email identity@optimism.io and we‚Äôll consider whether a Mission Grant could support this work."
35,Where can developers find specific input and ideas on valuable work within the Optimism Collective?,"Developers can refer to the Builder Ideas List, Delegate Mission Requests, and Foundation Mission Requests for specific input and ideas on valuable work within the Optimism Collective.","We ought to take an approach of building out vertical slices of the identity stack, rather than building out sections horizontally. For example, rather than investing into building out all the possible use cases for data interpretation, we should select specific user problems and solve them end-to-end. Each vertical slice will solve a specific problem and integrate the necessary elements of the stack. This is the classic method of building an MVP and ensures that each piece that is built serves a purpose and gets adoption. It also means that attestations will be generated when they serve a specific need as part of a user journey, rather than being arbitrary.  
While we are not taking an approach of building all the layers horizontally, the Optimism Foundation will support the establishment of an opinionated identity data structure that others can build around. By forming an opinion on how individuals and projects are represented in the Collective, we will make it easier for others to contribute and interoperate. Stay tuned for more updates on this.  
We recommend that others keen to build within the identity and reputation space in the Optimism Collective take an approach of solving a specific and real problem for a clearly-defined user group and consider how this relates to the various layers of the identity stack, while adopting a shared user and project identity structure.  
For those seeking specific input and ideas on what the Foundation and Token House consider valuable work, please refer to the [Builder Ideas List](https://contribute.optimism.io/), and current [Delegate Mission Requests](https://gov.optimism.io/c/mission-requests/69) and [Foundation Mission Requests](https://github.com/orgs/ethereum-optimism/projects/31/views/1) - these are the channels where specific work is called for.  
If you‚Äôre working on something that you think fits within this framework and is not represented in these channels, please email identity@optimism.io and we‚Äôll consider whether a Mission Grant could support this work."
36,How does the Optimism Collective capture important data?,The Optimism Collective captures important data using attestations via the Ethereum Attestation Service. These attestations are signed statements made by an issuer.,"The Optimism Collective uses attestations via the [Ethereum Attestation Service](https://optimism.easscan.org/) as the mechanism for capturing important pieces of data as signed statements made by an issuer. For example, the Optimism Foundation is currently the issuer of attestations about who is a Badgeholder."
36,Who is currently the issuer of attestations about Badgeholders in the Optimism Collective?,The Optimism Foundation is currently the issuer of attestations about who is a Badgeholder.,"The Optimism Collective uses attestations via the [Ethereum Attestation Service](https://optimism.easscan.org/) as the mechanism for capturing important pieces of data as signed statements made by an issuer. For example, the Optimism Foundation is currently the issuer of attestations about who is a Badgeholder."
37,How can attestations be useful when dealing with off-chain data?,"Attestations can be useful for providing public, consumable, and trusted data that is not available on-chain. They are especially valuable when you need an entity to sign a claim, ensuring the data's authenticity and source.","- Any time there is need for public/consumable and trusted data that is not available on-chain, an attestation might be useful.
- Attestations are especially valuable in cases where you need an entity to sign a claim.
- If you are generating some data which is valuable to some other person / organization / entity, by making it an attestation you can make it consumable to them and verify that you are the source of the data.
- Attestations / their content [can be made private](https://docs.attest.sh/docs/core--concepts/privacy), make sure to consider whether this would be appropriate for your use case."
37,What should I consider if I want to make my attestation private?,"You should consider whether making the attestation private is appropriate for your use case. The content of attestations can be made private, and you can find more information on how to do this in the documentation.","- Any time there is need for public/consumable and trusted data that is not available on-chain, an attestation might be useful.
- Attestations are especially valuable in cases where you need an entity to sign a claim.
- If you are generating some data which is valuable to some other person / organization / entity, by making it an attestation you can make it consumable to them and verify that you are the source of the data.
- Attestations / their content [can be made private](https://docs.attest.sh/docs/core--concepts/privacy), make sure to consider whether this would be appropriate for your use case."
37,How can I ensure that the data I generate is verifiable by others?,"By making the data an attestation, you can make it consumable to others and verify that you are the source of the data. This adds a layer of trust and authenticity to the information you provide.","- Any time there is need for public/consumable and trusted data that is not available on-chain, an attestation might be useful.
- Attestations are especially valuable in cases where you need an entity to sign a claim.
- If you are generating some data which is valuable to some other person / organization / entity, by making it an attestation you can make it consumable to them and verify that you are the source of the data.
- Attestations / their content [can be made private](https://docs.attest.sh/docs/core--concepts/privacy), make sure to consider whether this would be appropriate for your use case."
38,Do all types of data need to be turned into attestations in Optimism?,"No, not all types of data need to be turned into attestations. If the data doesn't need to be shared or consumed by anyone, or if it can be derived on-chain (like an account‚Äôs balance or transaction histories), then it doesn't need to be an attestation.","- If the data in an attestation doesn‚Äôt need to be shared / consumed by anyone at all then there is probably no reason to turn it into an attestation.
- Data which can just be derived on-chain, like an account‚Äôs balance, transaction histories, etc., doesn‚Äôt need to be an attestation."
39,Why is it important to issue relevant attestations in the Collective?,"Issuing relevant attestations is important because it helps build a meaningful identity within the Collective. Irrelevant attestations create noise, making it harder to filter out valuable information.","We need to grow a rich set of attestations to build out identity in the Collective, but they must also be relevant. It is a delicate balancing act that each attestor will need to decide. Blanket issuing attestations that don‚Äôt have much value just means that we‚Äôll have to filter out more noise. Ideally, the fact that you‚Äôre issuing an attestation is already one sign that this piece of data is signal rather than noise.  
- A good moment to issue an attestation is when there is already a use-case - i.e. the attestation you issue will immediately be consumed for a specific purpose and solves a real need / problem. For example, when you want attestation-gated channels in Discord.
- If there is an attestation you think might be useful to some other or future entity, gather input from that entity (if possible). Validate that this data is indeed valuable / necessary. If we‚Äôre talking about future entities, use your best judgment. It‚Äôs true that starting to issue certain attestations early (before there is a clear use case) can be valuable later, but only if the future use case manifests.
- If you‚Äôre not sure, consider the importance of the piece of information you are attesting in the context of the value chain it is part of. For example, in the context of Retro Funding, the fact a project received funding is closer to the source of value than the fact that it applied."
39,When is a good moment to issue an attestation?,"A good moment to issue an attestation is when there is already a specific use-case for it. For example, if the attestation will be used immediately for a purpose like attestation-gated channels in Discord, it solves a real need or problem.","We need to grow a rich set of attestations to build out identity in the Collective, but they must also be relevant. It is a delicate balancing act that each attestor will need to decide. Blanket issuing attestations that don‚Äôt have much value just means that we‚Äôll have to filter out more noise. Ideally, the fact that you‚Äôre issuing an attestation is already one sign that this piece of data is signal rather than noise.  
- A good moment to issue an attestation is when there is already a use-case - i.e. the attestation you issue will immediately be consumed for a specific purpose and solves a real need / problem. For example, when you want attestation-gated channels in Discord.
- If there is an attestation you think might be useful to some other or future entity, gather input from that entity (if possible). Validate that this data is indeed valuable / necessary. If we‚Äôre talking about future entities, use your best judgment. It‚Äôs true that starting to issue certain attestations early (before there is a clear use case) can be valuable later, but only if the future use case manifests.
- If you‚Äôre not sure, consider the importance of the piece of information you are attesting in the context of the value chain it is part of. For example, in the context of Retro Funding, the fact a project received funding is closer to the source of value than the fact that it applied."
39,What should you consider if you're unsure about issuing an attestation?,"If you're unsure about issuing an attestation, consider the importance of the information in the context of the value chain it is part of. For instance, in Retro Funding, the fact that a project received funding is more valuable than the fact that it merely applied.","We need to grow a rich set of attestations to build out identity in the Collective, but they must also be relevant. It is a delicate balancing act that each attestor will need to decide. Blanket issuing attestations that don‚Äôt have much value just means that we‚Äôll have to filter out more noise. Ideally, the fact that you‚Äôre issuing an attestation is already one sign that this piece of data is signal rather than noise.  
- A good moment to issue an attestation is when there is already a use-case - i.e. the attestation you issue will immediately be consumed for a specific purpose and solves a real need / problem. For example, when you want attestation-gated channels in Discord.
- If there is an attestation you think might be useful to some other or future entity, gather input from that entity (if possible). Validate that this data is indeed valuable / necessary. If we‚Äôre talking about future entities, use your best judgment. It‚Äôs true that starting to issue certain attestations early (before there is a clear use case) can be valuable later, but only if the future use case manifests.
- If you‚Äôre not sure, consider the importance of the piece of information you are attesting in the context of the value chain it is part of. For example, in the context of Retro Funding, the fact a project received funding is closer to the source of value than the fact that it applied."
40,Why is the issuer important in an attestation?,"The issuer is crucial because trust in the issuer gives the attestation its meaning. If people don't believe the issuer is a legitimate source of truth, the attestation holds no value.","- The issuer is perhaps the most essential component of an attestation. Trust in the issuer is what gives an attestation meaning. Someone can go around signing digital statements that people have Doctorate degrees from Harvard University, but they have no meaning unless people believe that person to be the legitimate source of truth on who has Doctorate degrees from Harvard University.
- When deciding the issuer, think about who or what is the source of truth on a piece of information. Sometimes, this might be code, and a piece of software is the optimal issuer. In this case, transparency / legitimacy of the code can be important factors in people‚Äôs trust in the attestation.
- In cases where a person or group of people are the source of truth of a piece of information, a single person‚Äôs Ethereum account or a group‚Äôs multisig might be the more appropriate issuers of the attestation.
- There may be cases where software is the best issuer, but it is impractical to make this happen. In these cases, it‚Äôs reasonable to find an individual or organization that is a legitimate authority on the attestations and is trustworthy to others. For example, for the time being an Optimism Foundation multisig is the issuer of attestations on who is a Badgeholder, but in the future it may be a smart contract that issues these attestations.
- Remember that attestations are context-dependent / intersubjective - what matters most is the long-term credibility of the issuer of an attestation - i.e. how the issuer is perceived by others."
40,Who can be an issuer of an attestation?,"The issuer can be a person, a group of people, or even a piece of software. The choice depends on who or what is considered the source of truth for the information being attested.","- The issuer is perhaps the most essential component of an attestation. Trust in the issuer is what gives an attestation meaning. Someone can go around signing digital statements that people have Doctorate degrees from Harvard University, but they have no meaning unless people believe that person to be the legitimate source of truth on who has Doctorate degrees from Harvard University.
- When deciding the issuer, think about who or what is the source of truth on a piece of information. Sometimes, this might be code, and a piece of software is the optimal issuer. In this case, transparency / legitimacy of the code can be important factors in people‚Äôs trust in the attestation.
- In cases where a person or group of people are the source of truth of a piece of information, a single person‚Äôs Ethereum account or a group‚Äôs multisig might be the more appropriate issuers of the attestation.
- There may be cases where software is the best issuer, but it is impractical to make this happen. In these cases, it‚Äôs reasonable to find an individual or organization that is a legitimate authority on the attestations and is trustworthy to others. For example, for the time being an Optimism Foundation multisig is the issuer of attestations on who is a Badgeholder, but in the future it may be a smart contract that issues these attestations.
- Remember that attestations are context-dependent / intersubjective - what matters most is the long-term credibility of the issuer of an attestation - i.e. how the issuer is perceived by others."
40,What should be considered when choosing an issuer for an attestation?,"When choosing an issuer, consider who or what is the source of truth for the information. If it's a person or group, their Ethereum account or a multisig might be appropriate. If it's software, the transparency and legitimacy of the code are important factors. If software is impractical, a trustworthy individual or organization can be the issuer.","- The issuer is perhaps the most essential component of an attestation. Trust in the issuer is what gives an attestation meaning. Someone can go around signing digital statements that people have Doctorate degrees from Harvard University, but they have no meaning unless people believe that person to be the legitimate source of truth on who has Doctorate degrees from Harvard University.
- When deciding the issuer, think about who or what is the source of truth on a piece of information. Sometimes, this might be code, and a piece of software is the optimal issuer. In this case, transparency / legitimacy of the code can be important factors in people‚Äôs trust in the attestation.
- In cases where a person or group of people are the source of truth of a piece of information, a single person‚Äôs Ethereum account or a group‚Äôs multisig might be the more appropriate issuers of the attestation.
- There may be cases where software is the best issuer, but it is impractical to make this happen. In these cases, it‚Äôs reasonable to find an individual or organization that is a legitimate authority on the attestations and is trustworthy to others. For example, for the time being an Optimism Foundation multisig is the issuer of attestations on who is a Badgeholder, but in the future it may be a smart contract that issues these attestations.
- Remember that attestations are context-dependent / intersubjective - what matters most is the long-term credibility of the issuer of an attestation - i.e. how the issuer is perceived by others."
41,Why are schemas important in Optimism Governance?,"Schemas ensure that similar attestations are structured consistently, making it easier for attestation consumers to identify and use them effectively.","- Schemas exist to make sure that similar attestations are structured in the same way and can be identified as belonging to a set. This is vital for attestation consumers.
- Before creating a new schema, check to see if a [relevant schema already exists](https://optimism.easscan.org/schemas).
- The EAS has [recommendations for schema design](https://docs.attest.sh/docs/core--concepts/schemas). Here are some of their tips:
- **Keep it Simple:** A schema should be concise. Avoid unnecessary complexity.
- **Be Descriptive:** Each field should have a clear purpose and name.
- **Avoid Redundancy:** Ensure each piece of information is captured once.
- **Plan for the Future:** Design your schema to be extendable without breaking existing attestations.
- **Gas Efficiency:** Consider the Ethereum gas costs. Using the right data types and thinking modularly will help reduce costs."
41,What should I do before creating a new schema?,"Before creating a new schema, you should check to see if a relevant schema already exists to avoid duplication.","- Schemas exist to make sure that similar attestations are structured in the same way and can be identified as belonging to a set. This is vital for attestation consumers.
- Before creating a new schema, check to see if a [relevant schema already exists](https://optimism.easscan.org/schemas).
- The EAS has [recommendations for schema design](https://docs.attest.sh/docs/core--concepts/schemas). Here are some of their tips:
- **Keep it Simple:** A schema should be concise. Avoid unnecessary complexity.
- **Be Descriptive:** Each field should have a clear purpose and name.
- **Avoid Redundancy:** Ensure each piece of information is captured once.
- **Plan for the Future:** Design your schema to be extendable without breaking existing attestations.
- **Gas Efficiency:** Consider the Ethereum gas costs. Using the right data types and thinking modularly will help reduce costs."
41,What are some tips for designing a schema according to the EAS recommendations?,"Some tips for designing a schema include keeping it simple, being descriptive, avoiding redundancy, planning for future extensions, and considering Ethereum gas costs to ensure efficiency.","- Schemas exist to make sure that similar attestations are structured in the same way and can be identified as belonging to a set. This is vital for attestation consumers.
- Before creating a new schema, check to see if a [relevant schema already exists](https://optimism.easscan.org/schemas).
- The EAS has [recommendations for schema design](https://docs.attest.sh/docs/core--concepts/schemas). Here are some of their tips:
- **Keep it Simple:** A schema should be concise. Avoid unnecessary complexity.
- **Be Descriptive:** Each field should have a clear purpose and name.
- **Avoid Redundancy:** Ensure each piece of information is captured once.
- **Plan for the Future:** Design your schema to be extendable without breaking existing attestations.
- **Gas Efficiency:** Consider the Ethereum gas costs. Using the right data types and thinking modularly will help reduce costs."
42,What's the difference between onchain and offchain attestations?,"Onchain attestations are easier for smart contracts to read and are directly verifiable on the blockchain, but they are associated with gas fees and transaction times, making them less scalable. Offchain attestations offer more privacy options and can be deleted, but they require separate revocation management.","Some key points to keep in mind ([see here](https://docs.attest.sh/docs/core--concepts/onchain-vs-offchain) for a full rundown):  
- Onchain attestations are easier for smart contracts to read and directly verifiable on the blockchain.
- If you need them to be completely private, offchain attestations give you more options. Sensitive data must be encrypted in onchain attestations.
- Offchain attestations can be deleted, but onchain they are immutable.
- Both kinds can be revoked, but offchain attestations require their own separate revocation management.
- Onchain attestations are associated with gas fees and transaction times, making them less scalable than offchain.  
For questions about attestations that aren‚Äôt answered here, please consult the [Ethereum Attestation Service documentation](https://docs.attest.sh/)."
42,Can onchain attestations be deleted?,"No, onchain attestations are immutable and cannot be deleted. However, offchain attestations can be deleted.","Some key points to keep in mind ([see here](https://docs.attest.sh/docs/core--concepts/onchain-vs-offchain) for a full rundown):  
- Onchain attestations are easier for smart contracts to read and directly verifiable on the blockchain.
- If you need them to be completely private, offchain attestations give you more options. Sensitive data must be encrypted in onchain attestations.
- Offchain attestations can be deleted, but onchain they are immutable.
- Both kinds can be revoked, but offchain attestations require their own separate revocation management.
- Onchain attestations are associated with gas fees and transaction times, making them less scalable than offchain.  
For questions about attestations that aren‚Äôt answered here, please consult the [Ethereum Attestation Service documentation](https://docs.attest.sh/)."
42,Are there any costs associated with onchain attestations?,"Yes, onchain attestations are associated with gas fees and transaction times, which can make them less scalable compared to offchain attestations.","Some key points to keep in mind ([see here](https://docs.attest.sh/docs/core--concepts/onchain-vs-offchain) for a full rundown):  
- Onchain attestations are easier for smart contracts to read and directly verifiable on the blockchain.
- If you need them to be completely private, offchain attestations give you more options. Sensitive data must be encrypted in onchain attestations.
- Offchain attestations can be deleted, but onchain they are immutable.
- Both kinds can be revoked, but offchain attestations require their own separate revocation management.
- Onchain attestations are associated with gas fees and transaction times, making them less scalable than offchain.  
For questions about attestations that aren‚Äôt answered here, please consult the [Ethereum Attestation Service documentation](https://docs.attest.sh/)."
43,How can I get involved in running local events for the Optimism community?,You can sign up to be a part of the program that supports running local events for the Optimism community. Keep an eye on the Optimism Governance page and their Discord for updates on when the program goes live.,"---
title: Local Optimists (coming soon‚Ñ¢Ô∏è)
lang: en-US
---  
Sharing is caring, and we know you want to share the Optimism Vision with your community!  
We have heard it again and again - you want to run events with your local community. Some of you have gone ahead and run the events! And we are so proud.  
We are developing a program to better support you in bringing your local community into the Optimism Collective. If you want to run an event now or want to be informed when this program goes live, please keep an eye on this page and in our Discord.  
[Sign up to be a part of the program](https://optimismfnd.typeform.com/local-optimists) (we will message you when the program goes live!)"
43,Is there any support available for organizing local events related to Optimism?,"Yes, Optimism is developing a program to support individuals in organizing local events. You can sign up to be notified when the program is available.","---
title: Local Optimists (coming soon‚Ñ¢Ô∏è)
lang: en-US
---  
Sharing is caring, and we know you want to share the Optimism Vision with your community!  
We have heard it again and again - you want to run events with your local community. Some of you have gone ahead and run the events! And we are so proud.  
We are developing a program to better support you in bringing your local community into the Optimism Collective. If you want to run an event now or want to be informed when this program goes live, please keep an eye on this page and in our Discord.  
[Sign up to be a part of the program](https://optimismfnd.typeform.com/local-optimists) (we will message you when the program goes live!)"
43,When will the program to support local Optimism events be available?,"The exact date is not specified, but you can stay updated by checking the Optimism Governance page and their Discord. You can also sign up to receive a message when the program goes live.","---
title: Local Optimists (coming soon‚Ñ¢Ô∏è)
lang: en-US
---  
Sharing is caring, and we know you want to share the Optimism Vision with your community!  
We have heard it again and again - you want to run events with your local community. Some of you have gone ahead and run the events! And we are so proud.  
We are developing a program to better support you in bringing your local community into the Optimism Collective. If you want to run an event now or want to be informed when this program goes live, please keep an eye on this page and in our Discord.  
[Sign up to be a part of the program](https://optimismfnd.typeform.com/local-optimists) (we will message you when the program goes live!)"
44,How does the NumbaNERDs program contribute to the Optimism governance?,"The NumbaNERDs program ensures high-quality analytics and transparency around grant spending for delegates, which is essential for good decision-making as the governance grows.","---
title: NumbaNERDs
lang: en-US
---  
The NumbaNERDs program is designed to ensure that there is always high quality analytics and transparency around grant spending for delegates.  
As our governance grows clear and accessible data becomes ever more essential to good decision making. This program went through governance for funding. You can see more about the program in the [Governance Mission Proposal for NumbaNERDs](https://gov.optimism.io/t/ready-numbanerd-program/6086).  
To participate go to the [numbaNERD bounty board](https://app.dework.xyz/optimism-community/main-space-35638) here and follow the steps in the [""Get NumbaNERD role""](https://app.dework.xyz/optimism-community/main-space-35638?taskId=5e37c82e-9d2b-4b7c-bad9-c20e4e1f6d60) bounty.  
There is also an [analytics focused channel in the Optimism Discord](https://discord.com/channels/667044843901681675/928227180603899924) if you would like to get involved now!"
44,Where can I find more information about the NumbaNERDs program?,You can find more information about the NumbaNERDs program in the Governance Mission Proposal for NumbaNERDs available at the Optimism governance forum.,"---
title: NumbaNERDs
lang: en-US
---  
The NumbaNERDs program is designed to ensure that there is always high quality analytics and transparency around grant spending for delegates.  
As our governance grows clear and accessible data becomes ever more essential to good decision making. This program went through governance for funding. You can see more about the program in the [Governance Mission Proposal for NumbaNERDs](https://gov.optimism.io/t/ready-numbanerd-program/6086).  
To participate go to the [numbaNERD bounty board](https://app.dework.xyz/optimism-community/main-space-35638) here and follow the steps in the [""Get NumbaNERD role""](https://app.dework.xyz/optimism-community/main-space-35638?taskId=5e37c82e-9d2b-4b7c-bad9-c20e4e1f6d60) bounty.  
There is also an [analytics focused channel in the Optimism Discord](https://discord.com/channels/667044843901681675/928227180603899924) if you would like to get involved now!"
44,How can I participate in the NumbaNERDs program?,"To participate, you can go to the numbaNERD bounty board and follow the steps in the 'Get NumbaNERD role' bounty. Additionally, you can join the analytics-focused channel in the Optimism Discord to get involved.","---
title: NumbaNERDs
lang: en-US
---  
The NumbaNERDs program is designed to ensure that there is always high quality analytics and transparency around grant spending for delegates.  
As our governance grows clear and accessible data becomes ever more essential to good decision making. This program went through governance for funding. You can see more about the program in the [Governance Mission Proposal for NumbaNERDs](https://gov.optimism.io/t/ready-numbanerd-program/6086).  
To participate go to the [numbaNERD bounty board](https://app.dework.xyz/optimism-community/main-space-35638) here and follow the steps in the [""Get NumbaNERD role""](https://app.dework.xyz/optimism-community/main-space-35638?taskId=5e37c82e-9d2b-4b7c-bad9-c20e4e1f6d60) bounty.  
There is also an [analytics focused channel in the Optimism Discord](https://discord.com/channels/667044843901681675/928227180603899924) if you would like to get involved now!"
45,How can I participate in the TechNERDs program?,"To participate in the TechNERDs program, you need to complete the TechNERD training and join the wannabe-TechNERD channel in the Optimism Discord. You can start helping other developers once you join.","---
title: TechNERDs
lang: en-US
---  
The TechNERDs program is designed to improve the technical support available to developers in the Optimism Ecosystem.  
This program went through governance for funding. You can see more about the program in the [Governance Mission Proposal for TechNERDs](https://gov.optimism.io/t/ready-technerd-program/6087).  
To participate, complete the TechNERD training (as outlined below) and join the wannabe-TechNERD channel in the Optimism Discord. Start helping other developers today!  
There are also a bunch of [developer focused channels in the Optimism Discord](https://discord.com/channels/667044843901681675/1080862392281481246) if you want to see what its all about."
45,What is the purpose of the TechNERDs program?,The TechNERDs program is designed to improve the technical support available to developers in the Optimism Ecosystem.,"---
title: TechNERDs
lang: en-US
---  
The TechNERDs program is designed to improve the technical support available to developers in the Optimism Ecosystem.  
This program went through governance for funding. You can see more about the program in the [Governance Mission Proposal for TechNERDs](https://gov.optimism.io/t/ready-technerd-program/6087).  
To participate, complete the TechNERD training (as outlined below) and join the wannabe-TechNERD channel in the Optimism Discord. Start helping other developers today!  
There are also a bunch of [developer focused channels in the Optimism Discord](https://discord.com/channels/667044843901681675/1080862392281481246) if you want to see what its all about."
45,Where can I find more information about the TechNERDs program?,"You can find more information about the TechNERDs program in the Governance Mission Proposal for TechNERDs, which is available on the Optimism governance website.","---
title: TechNERDs
lang: en-US
---  
The TechNERDs program is designed to improve the technical support available to developers in the Optimism Ecosystem.  
This program went through governance for funding. You can see more about the program in the [Governance Mission Proposal for TechNERDs](https://gov.optimism.io/t/ready-technerd-program/6087).  
To participate, complete the TechNERD training (as outlined below) and join the wannabe-TechNERD channel in the Optimism Discord. Start helping other developers today!  
There are also a bunch of [developer focused channels in the Optimism Discord](https://discord.com/channels/667044843901681675/1080862392281481246) if you want to see what its all about."
46,Is there a beginner-friendly version of the Optimism curriculum available?,"Currently, the curriculum is designed for developers with a deep technical background and skips over a lot of the basics. However, a more beginner-friendly version may be released later if there is demand for one.","This curriculum was designed for developers with a deep technical background, as such skips over a lot of the ""basics"". A more beginner friendly version of this course may be released later if there is demand for one.  
You can also see the [Slides for the TechNERD](https://docs.google.com/presentation/d/1hyJAV39nxsGX3XOUTsRpcQoaSrYWE3qvsjT2cu8w560/edit?usp=sharing) training here.  
| Lesson | Topic | Exercise | Link |
|:-------|:------|:---------|:-----|
| 1 | Getting an RPC Endpoint | Get an RPC endpoint. You will need this for all following exercises. | [Provider Options](../../useful-tools/providers.md) |
| 2 | Run an OP Goerli Node | Most developer questions we get are about running a node. Pay special attention to any issues you face or confusion you have. This can take up to 2 weeks (depending on your internet speed) to sync. | [Run a Node](https://community.optimism.io/docs/developers/build/run-a-node/) |
| 3 | Setting up an OP Stack | The OP Stack is an incredible step towards the Superchain vision. As such you should be familiar with the standard OP Stack. | [Getting Started with the OP Stack](https://stack.optimism.io/docs/build/getting-started/)
| 4 | Setting up an explorer for your OP Stack | Make your OP Stack feel more real with its own block explorer! | [Blockscout explorer guide](https://stack.optimism.io/docs/build/explorer/)
|  5 | Deploy & bridge a standard ERC20 | As an L2, bridging is a pretty important concept. Make sure you are comfortable with the bridging process. | [Standard Bridge, Standard Token](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-standard-token) |
| 5.1 Bonus | Standard Bridge, Custom Token | This bonus exercise will give you insight into how the bridge works, and the limitations of it. | [Standard Bridge, Custom Token](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-custom-token)
| 6 | Tracing Transactions | Now that you have done some cross chain transactions with your token bridging, you can use the SDK to trace that transaction. Tracing transactions is a powerful tool when helping other developers. Familiarise yourself with the SDK to get the most out of this exercise! | [Transaction Tracing with the Optimism SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-trace-tx)
| 7 | Forced Withdrawal (OP Stack) | Once your OP Stack is set up and running, you can force a withdrawal. While you will most likely never have to do this, its an important concept to understand. | [Forced Withdrawal](https://stack.optimism.io/docs/security/forced-withdrawal/)
| 8 | Verify nodes are running & synced | Verify that you have set up and synced your node correctly. | [Verify your node](https://stack.optimism.io/docs/build/getting-started/#use-your-rollup)"
46,What is the first step I need to take in the Optimism curriculum?,"The first step is to get an RPC endpoint, which you will need for all following exercises. You can find more information on provider options in the documentation.","This curriculum was designed for developers with a deep technical background, as such skips over a lot of the ""basics"". A more beginner friendly version of this course may be released later if there is demand for one.  
You can also see the [Slides for the TechNERD](https://docs.google.com/presentation/d/1hyJAV39nxsGX3XOUTsRpcQoaSrYWE3qvsjT2cu8w560/edit?usp=sharing) training here.  
| Lesson | Topic | Exercise | Link |
|:-------|:------|:---------|:-----|
| 1 | Getting an RPC Endpoint | Get an RPC endpoint. You will need this for all following exercises. | [Provider Options](../../useful-tools/providers.md) |
| 2 | Run an OP Goerli Node | Most developer questions we get are about running a node. Pay special attention to any issues you face or confusion you have. This can take up to 2 weeks (depending on your internet speed) to sync. | [Run a Node](https://community.optimism.io/docs/developers/build/run-a-node/) |
| 3 | Setting up an OP Stack | The OP Stack is an incredible step towards the Superchain vision. As such you should be familiar with the standard OP Stack. | [Getting Started with the OP Stack](https://stack.optimism.io/docs/build/getting-started/)
| 4 | Setting up an explorer for your OP Stack | Make your OP Stack feel more real with its own block explorer! | [Blockscout explorer guide](https://stack.optimism.io/docs/build/explorer/)
|  5 | Deploy & bridge a standard ERC20 | As an L2, bridging is a pretty important concept. Make sure you are comfortable with the bridging process. | [Standard Bridge, Standard Token](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-standard-token) |
| 5.1 Bonus | Standard Bridge, Custom Token | This bonus exercise will give you insight into how the bridge works, and the limitations of it. | [Standard Bridge, Custom Token](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-custom-token)
| 6 | Tracing Transactions | Now that you have done some cross chain transactions with your token bridging, you can use the SDK to trace that transaction. Tracing transactions is a powerful tool when helping other developers. Familiarise yourself with the SDK to get the most out of this exercise! | [Transaction Tracing with the Optimism SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-trace-tx)
| 7 | Forced Withdrawal (OP Stack) | Once your OP Stack is set up and running, you can force a withdrawal. While you will most likely never have to do this, its an important concept to understand. | [Forced Withdrawal](https://stack.optimism.io/docs/security/forced-withdrawal/)
| 8 | Verify nodes are running & synced | Verify that you have set up and synced your node correctly. | [Verify your node](https://stack.optimism.io/docs/build/getting-started/#use-your-rollup)"
46,How long does it take to sync an OP Goerli Node?,"Syncing an OP Goerli Node can take up to 2 weeks, depending on your internet speed. This is a common area where developers have questions, so pay special attention to any issues or confusion you encounter.","This curriculum was designed for developers with a deep technical background, as such skips over a lot of the ""basics"". A more beginner friendly version of this course may be released later if there is demand for one.  
You can also see the [Slides for the TechNERD](https://docs.google.com/presentation/d/1hyJAV39nxsGX3XOUTsRpcQoaSrYWE3qvsjT2cu8w560/edit?usp=sharing) training here.  
| Lesson | Topic | Exercise | Link |
|:-------|:------|:---------|:-----|
| 1 | Getting an RPC Endpoint | Get an RPC endpoint. You will need this for all following exercises. | [Provider Options](../../useful-tools/providers.md) |
| 2 | Run an OP Goerli Node | Most developer questions we get are about running a node. Pay special attention to any issues you face or confusion you have. This can take up to 2 weeks (depending on your internet speed) to sync. | [Run a Node](https://community.optimism.io/docs/developers/build/run-a-node/) |
| 3 | Setting up an OP Stack | The OP Stack is an incredible step towards the Superchain vision. As such you should be familiar with the standard OP Stack. | [Getting Started with the OP Stack](https://stack.optimism.io/docs/build/getting-started/)
| 4 | Setting up an explorer for your OP Stack | Make your OP Stack feel more real with its own block explorer! | [Blockscout explorer guide](https://stack.optimism.io/docs/build/explorer/)
|  5 | Deploy & bridge a standard ERC20 | As an L2, bridging is a pretty important concept. Make sure you are comfortable with the bridging process. | [Standard Bridge, Standard Token](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-standard-token) |
| 5.1 Bonus | Standard Bridge, Custom Token | This bonus exercise will give you insight into how the bridge works, and the limitations of it. | [Standard Bridge, Custom Token](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-custom-token)
| 6 | Tracing Transactions | Now that you have done some cross chain transactions with your token bridging, you can use the SDK to trace that transaction. Tracing transactions is a powerful tool when helping other developers. Familiarise yourself with the SDK to get the most out of this exercise! | [Transaction Tracing with the Optimism SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-trace-tx)
| 7 | Forced Withdrawal (OP Stack) | Once your OP Stack is set up and running, you can force a withdrawal. While you will most likely never have to do this, its an important concept to understand. | [Forced Withdrawal](https://stack.optimism.io/docs/security/forced-withdrawal/)
| 8 | Verify nodes are running & synced | Verify that you have set up and synced your node correctly. | [Verify your node](https://stack.optimism.io/docs/build/getting-started/#use-your-rollup)"
47,How can I contribute to translating Optimism's User Docs?,You can help translate Optimism's User Docs by using CrowdIn. You'll need to create a free account on CrowdIn and then you can start contributing to the translation of the documents into your local language.,"---
title: Translators
lang: en-US
---  
At Optimism, we know that we can never truly decentralise if we do not embrace the diversity of our community. As such, we take translations seriously.  
If you can speak a second language and want to contribute to the collective, please do!  
You can [help translate our User Docs](https://crowdin.com/project/optimism-help-center) to your local language. We use [CrowdIn](https://crowdin.com/project/optimism-help-center) (you will need to make an account, but its free!).  
CrowdIn translators for the Optimism Collective have previously [received RetroPGF](https://optimism.mirror.xyz/Upn_LtV2-3SviXgX_PE_LyA7YI00jQyoM1yf55ltvvI)! Find out more [about RetroPGF here](../../governance/citizens-house.md)."
47,Is there any reward for translating Optimism's documents?,"Yes, CrowdIn translators for the Optimism Collective have previously received RetroPGF (Retroactive Public Goods Funding). You can find out more about RetroPGF in the Optimism Governance documentation.","---
title: Translators
lang: en-US
---  
At Optimism, we know that we can never truly decentralise if we do not embrace the diversity of our community. As such, we take translations seriously.  
If you can speak a second language and want to contribute to the collective, please do!  
You can [help translate our User Docs](https://crowdin.com/project/optimism-help-center) to your local language. We use [CrowdIn](https://crowdin.com/project/optimism-help-center) (you will need to make an account, but its free!).  
CrowdIn translators for the Optimism Collective have previously [received RetroPGF](https://optimism.mirror.xyz/Upn_LtV2-3SviXgX_PE_LyA7YI00jQyoM1yf55ltvvI)! Find out more [about RetroPGF here](../../governance/citizens-house.md)."
47,Why does Optimism emphasize translations?,"Optimism emphasizes translations because they believe that true decentralization can only be achieved by embracing the diversity of their community. By making their documentation available in multiple languages, they ensure that more people can participate and contribute.","---
title: Translators
lang: en-US
---  
At Optimism, we know that we can never truly decentralise if we do not embrace the diversity of our community. As such, we take translations seriously.  
If you can speak a second language and want to contribute to the collective, please do!  
You can [help translate our User Docs](https://crowdin.com/project/optimism-help-center) to your local language. We use [CrowdIn](https://crowdin.com/project/optimism-help-center) (you will need to make an account, but its free!).  
CrowdIn translators for the Optimism Collective have previously [received RetroPGF](https://optimism.mirror.xyz/Upn_LtV2-3SviXgX_PE_LyA7YI00jQyoM1yf55ltvvI)! Find out more [about RetroPGF here](../../governance/citizens-house.md)."
48,What's the title of the document?,The title of the document is 'Demo Day'.,"---
title: Demo Day
lang: en-US
---"
48,What language is the document written in?,The document is written in English (en-US).,"---
title: Demo Day
lang: en-US
---"
49,How can I see the latest dApps on Optimism?,"You can see the latest dApps on Optimism by attending the Demo Day, which is held every Thursday at 4pm UTC. During this event, different dApps have around 15 minutes to showcase their features, new updates, or special events.","Demo day was started by the Optimism Ambassador Program as a way for users to see all the cool dApps on Optimism! It runs every Thursday at 4pm UTC.  dApps have ~15 minutes to showcase, we recommend 10 minutes to present and another 5 for questions. This can be anything from a full run through, to showing off a new feature, or promoting a special event on the dApp!  
To apply to be featured in our next Demo Day, head over to the [Demo-day channel](https://discord.com/channels/667044843901681675/960493820674465883) in our Discord (it's under events).  
For further visibility projects are encouraged to add their project into our developers show and tell section here on [GitHub](https://github.com/ethereum-optimism/developers/discussions/categories/show-and-tell)"
49,How can I apply to showcase my dApp on Optimism's Demo Day?,"To apply to showcase your dApp on Optimism's Demo Day, you need to head over to the Demo-day channel in the Optimism Discord, which is under the events section. There, you can find more information on how to apply.","Demo day was started by the Optimism Ambassador Program as a way for users to see all the cool dApps on Optimism! It runs every Thursday at 4pm UTC.  dApps have ~15 minutes to showcase, we recommend 10 minutes to present and another 5 for questions. This can be anything from a full run through, to showing off a new feature, or promoting a special event on the dApp!  
To apply to be featured in our next Demo Day, head over to the [Demo-day channel](https://discord.com/channels/667044843901681675/960493820674465883) in our Discord (it's under events).  
For further visibility projects are encouraged to add their project into our developers show and tell section here on [GitHub](https://github.com/ethereum-optimism/developers/discussions/categories/show-and-tell)"
49,Is there a way to get more visibility for my project on Optimism besides Demo Day?,"Yes, for further visibility, projects are encouraged to add their project to the developers show and tell section on GitHub. This can help you reach a broader audience within the developer community.","Demo day was started by the Optimism Ambassador Program as a way for users to see all the cool dApps on Optimism! It runs every Thursday at 4pm UTC.  dApps have ~15 minutes to showcase, we recommend 10 minutes to present and another 5 for questions. This can be anything from a full run through, to showing off a new feature, or promoting a special event on the dApp!  
To apply to be featured in our next Demo Day, head over to the [Demo-day channel](https://discord.com/channels/667044843901681675/960493820674465883) in our Discord (it's under events).  
For further visibility projects are encouraged to add their project into our developers show and tell section here on [GitHub](https://github.com/ethereum-optimism/developers/discussions/categories/show-and-tell)"
50,What should I do before applying for a demo spot?,"You need to make sure you check all the required boxes before applying for a demo spot. If you don't, you will not get a demo spot.","Make sure you check all these boxes before applying for demoing, or you will not get a demo spot. These spots go fast!"
50,Are demo spots limited?,"Yes, demo spots go fast, so it's important to ensure you meet all the requirements before applying.","Make sure you check all these boxes before applying for demoing, or you will not get a demo spot. These spots go fast!"
51,Do I need to be in the Optimism Discord server to present my dApp on Demo Day?,"Yes, all presenters must be in the Optimism Discord server as the event is held there. You should also tag the team member(s) who are presenting in the demo day channel.","1. Your dApp deployed & **live on OP Mainnet**
1. All **presenters must be in the Optimism Discord server** as the event is held as an event in the Discord Server.  Make sure to tag the team member(s) who are presenting in the demo day channel.
1. Must be **available 24 hours prior to Demo Day** to do a quick audio/video check to ensure all your settings are correct.
1. If you have not presented in a Discord channel before, please watch this tutorial before your AV check. This makes everything faster! [Discord Basics: How To Setup Audio and Video Settings](https://www.youtube.com/watch?v=fnMKZB6zTcQ)"
51,What should I do if I have never presented in a Discord channel before?,"If you have not presented in a Discord channel before, you should watch a tutorial on how to set up audio and video settings before your AV check. This will make the process faster and smoother.","1. Your dApp deployed & **live on OP Mainnet**
1. All **presenters must be in the Optimism Discord server** as the event is held as an event in the Discord Server.  Make sure to tag the team member(s) who are presenting in the demo day channel.
1. Must be **available 24 hours prior to Demo Day** to do a quick audio/video check to ensure all your settings are correct.
1. If you have not presented in a Discord channel before, please watch this tutorial before your AV check. This makes everything faster! [Discord Basics: How To Setup Audio and Video Settings](https://www.youtube.com/watch?v=fnMKZB6zTcQ)"
51,When should I be available for an audio/video check before Demo Day?,You must be available 24 hours prior to Demo Day to do a quick audio/video check to ensure all your settings are correct.,"1. Your dApp deployed & **live on OP Mainnet**
1. All **presenters must be in the Optimism Discord server** as the event is held as an event in the Discord Server.  Make sure to tag the team member(s) who are presenting in the demo day channel.
1. Must be **available 24 hours prior to Demo Day** to do a quick audio/video check to ensure all your settings are correct.
1. If you have not presented in a Discord channel before, please watch this tutorial before your AV check. This makes everything faster! [Discord Basics: How To Setup Audio and Video Settings](https://www.youtube.com/watch?v=fnMKZB6zTcQ)"
52,How can I apply for a slot to present my demo?,"If you meet all the specified criteria, you can apply for a slot in the Demo-day channel on Discord.","‚úÖ If you meet all the above criteria, then please apply for a slot in the [Demo-day channel](https://discord.com/channels/667044843901681675/960493820674465883)  
**Note:** If you want to do a giveaway, lotto or prizes/rewards around your demo please make sure to let us know in advance so we can help with hype and distribution (if needed)."
52,Can I do a giveaway or lotto during my demo?,"Yes, you can do a giveaway, lotto, or offer prizes/rewards during your demo. Just make sure to inform the organizers in advance so they can assist with hype and distribution if needed.","‚úÖ If you meet all the above criteria, then please apply for a slot in the [Demo-day channel](https://discord.com/channels/667044843901681675/960493820674465883)  
**Note:** If you want to do a giveaway, lotto or prizes/rewards around your demo please make sure to let us know in advance so we can help with hype and distribution (if needed)."
53,Where can I ask specific questions about Optimism?,"You can join the Office Hours in Discord, which are held every 2nd week, to ask specific questions about Optimism.","---
title: Optimism Important Terms
lang: en-US
---  
There is a lot going on inside the Optimism Collective. This doc aims to help you understand important terms and phrases.  
If you have specific questions, [join our Office Hours in Discord](https://discord.gg/optimism) (every 2nd week). If you want more support in creating Optimism content, check out our [Ambassador Program](./contribution-path/Ambassador-req.md)!  
For press and media inquiries, reach out to marketing@optimism.io. For amplification or marketing of your project, please see [project support options](../biz/README.md#marketing-requests-ü¶∏ü¶∏)."
53,How can I get support for creating Optimism content?,You can check out the Ambassador Program for more support in creating Optimism content.,"---
title: Optimism Important Terms
lang: en-US
---  
There is a lot going on inside the Optimism Collective. This doc aims to help you understand important terms and phrases.  
If you have specific questions, [join our Office Hours in Discord](https://discord.gg/optimism) (every 2nd week). If you want more support in creating Optimism content, check out our [Ambassador Program](./contribution-path/Ambassador-req.md)!  
For press and media inquiries, reach out to marketing@optimism.io. For amplification or marketing of your project, please see [project support options](../biz/README.md#marketing-requests-ü¶∏ü¶∏)."
53,Who should I contact for press and media inquiries about Optimism?,"For press and media inquiries, you should reach out to marketing@optimism.io.","---
title: Optimism Important Terms
lang: en-US
---  
There is a lot going on inside the Optimism Collective. This doc aims to help you understand important terms and phrases.  
If you have specific questions, [join our Office Hours in Discord](https://discord.gg/optimism) (every 2nd week). If you want more support in creating Optimism content, check out our [Ambassador Program](./contribution-path/Ambassador-req.md)!  
For press and media inquiries, reach out to marketing@optimism.io. For amplification or marketing of your project, please see [project support options](../biz/README.md#marketing-requests-ü¶∏ü¶∏)."
54,What is the Superchain in Optimism Governance?,"The Superchain in Optimism Governance is an inclusive, open-source network that aims to sustainably fund public goods. It challenges the belief that building public goods cannot be profitable.","An inclusive, open source Superchain that sustainably funds Public Goods, dispelling the myth that building public goods cannot be profitable!"
54,How does the Superchain benefit public goods?,"The Superchain benefits public goods by providing a sustainable funding model, demonstrating that it is possible to support public goods in a profitable manner.","An inclusive, open source Superchain that sustainably funds Public Goods, dispelling the myth that building public goods cannot be profitable!"
55,How does Optimism generate revenue?,Optimism generates revenue through transaction fees paid on OP Mainnet and other OP Chains.,"![](../../assets/docs/governance/retropgf/retropgf-fly-wheel.png)  
Optimism generates revenue through transaction fees paid on OP Mainnet and other OP Chains. Part of this revenue is directed by the Optimism Collective through RetroPGF. Better public goods means more development, which creates more revenue that can be directed to public goods. Read [more about the flywheel](https://app.optimism.io/retropgf)."
55,What is RetroPGF in the context of Optimism?,RetroPGF is a mechanism through which part of the revenue generated by Optimism is directed by the Optimism Collective to fund public goods.,"![](../../assets/docs/governance/retropgf/retropgf-fly-wheel.png)  
Optimism generates revenue through transaction fees paid on OP Mainnet and other OP Chains. Part of this revenue is directed by the Optimism Collective through RetroPGF. Better public goods means more development, which creates more revenue that can be directed to public goods. Read [more about the flywheel](https://app.optimism.io/retropgf)."
55,Why is funding public goods important for Optimism?,"Funding public goods is important for Optimism because it leads to more development, which in turn creates more revenue that can be directed to further public goods, creating a positive cycle.","![](../../assets/docs/governance/retropgf/retropgf-fly-wheel.png)  
Optimism generates revenue through transaction fees paid on OP Mainnet and other OP Chains. Part of this revenue is directed by the Optimism Collective through RetroPGF. Better public goods means more development, which creates more revenue that can be directed to public goods. Read [more about the flywheel](https://app.optimism.io/retropgf)."
56,What's the Optimism Collective?,"The Optimism Collective is a new model of digital democratic governance designed to drive rapid and sustained growth of a decentralized ecosystem. It consists of communities, companies, and citizens united by a mutually beneficial pact.","**The Optimism Collective**is a new model of**digital democratic governance**optimized to drive rapid and sustained growth of a decentralized ecosystem. The Collective is a band of communities, companies, and citizens united by a mutually beneficial pact to adhere to the axiom of**impact=profit**‚Äî the principle that positive impact to the collective should be rewarded with profit to the individual."
56,What principle does the Optimism Collective follow?,"The Optimism Collective follows the principle of 'impact=profit,' which means that positive impact to the collective should be rewarded with profit to the individual.","**The Optimism Collective**is a new model of**digital democratic governance**optimized to drive rapid and sustained growth of a decentralized ecosystem. The Collective is a band of communities, companies, and citizens united by a mutually beneficial pact to adhere to the axiom of**impact=profit**‚Äî the principle that positive impact to the collective should be rewarded with profit to the individual."
57,Where can I find the old brand kit for Optimism?,You can find the old brand kit for Optimism at this link: https://github.com/ethereum-optimism/brand-kit.,"We are currently updating our brand kit, but you can find the old [Brand Kit here](https://github.com/ethereum-optimism/brand-kit)!"
58,What is the Optimism ecosystem?,The Optimism ecosystem is a growing space that includes various projects and technologies aimed at improving blockchain scalability and efficiency.,The Optimism ecosystem is a growing space. Here are the basic terms and concepts you need to know to understand the shape of the Superchain.
58,What do I need to know to understand the Superchain?,"To understand the Superchain, you need to be familiar with the basic terms and concepts related to the Optimism ecosystem.",The Optimism ecosystem is a growing space. Here are the basic terms and concepts you need to know to understand the shape of the Superchain.
59,What's the Superchain in the context of Optimism?,"The Superchain is a vision for a horizontally scalable network of chains that share security, a communication layer, and the OP Stack as an open-source development stack. It does not yet exist and requires several governance and technical milestones to be achieved before becoming a functioning interoperable network of chains.","The Superchain is a **vision** for a horizontally scalable network of chains that share security, a communication layer, and the OP Stack as an open source development stack. The Superchain does not yet exist. A number of governance and technical milestones need to be achieved before we have a functioning interoperable network of chains. Because of this, it is best to talk about the Superchain as a ‚Äúvision‚Äù for something we are working towards.  
As of Aug 1, 2023, OP Mainnet, Base, Public Goods Network, and Zora Network have opted into the Superchain and will automatically inherit Superchain features when it launches.  
[Read more about the Superchain](https://app.optimism.io/superchain)."
59,"Which networks have opted into the Superchain as of August 1, 2023?","As of August 1, 2023, OP Mainnet, Base, Public Goods Network, and Zora Network have opted into the Superchain and will automatically inherit its features when it launches.","The Superchain is a **vision** for a horizontally scalable network of chains that share security, a communication layer, and the OP Stack as an open source development stack. The Superchain does not yet exist. A number of governance and technical milestones need to be achieved before we have a functioning interoperable network of chains. Because of this, it is best to talk about the Superchain as a ‚Äúvision‚Äù for something we are working towards.  
As of Aug 1, 2023, OP Mainnet, Base, Public Goods Network, and Zora Network have opted into the Superchain and will automatically inherit Superchain features when it launches.  
[Read more about the Superchain](https://app.optimism.io/superchain)."
59,Is the Superchain currently operational?,"No, the Superchain is not currently operational. It is a vision that requires several governance and technical milestones to be achieved before it becomes a functioning interoperable network of chains.","The Superchain is a **vision** for a horizontally scalable network of chains that share security, a communication layer, and the OP Stack as an open source development stack. The Superchain does not yet exist. A number of governance and technical milestones need to be achieved before we have a functioning interoperable network of chains. Because of this, it is best to talk about the Superchain as a ‚Äúvision‚Äù for something we are working towards.  
As of Aug 1, 2023, OP Mainnet, Base, Public Goods Network, and Zora Network have opted into the Superchain and will automatically inherit Superchain features when it launches.  
[Read more about the Superchain](https://app.optimism.io/superchain)."
60,What's an OP Chain?,An OP Chain is a Layer 2 blockchain that runs the governance-approved release of the OP Stack. It is upgraded based on decisions made by Optimism‚Äôs governance and contributes sequencer revenue back to the Collective.,"OP Chains are Layer 2 blockchains that run the governance-approved release of the OP Stack, and therefore will be upgraded based on decisions by Optimism‚Äôs governance and contribute sequencer revenue back to the Collective. OP Chains will automatically inherit Superchain features in the future.  
The benefit of opting into the Superchain and becoming an OP Chain is that users of OP Chains will have a convenient, homogenous experience bridging between OP Chains, and the OP Chain itself will share security and a governance standard ([Law of Chains](https://gov.optimism.io/t/law-of-chains-v0-1-section-by-section-overview/6515))."
60,What are the benefits of becoming an OP Chain?,"The benefits of becoming an OP Chain include a convenient and homogenous experience for users when bridging between OP Chains, shared security, and adherence to a governance standard known as the Law of Chains.","OP Chains are Layer 2 blockchains that run the governance-approved release of the OP Stack, and therefore will be upgraded based on decisions by Optimism‚Äôs governance and contribute sequencer revenue back to the Collective. OP Chains will automatically inherit Superchain features in the future.  
The benefit of opting into the Superchain and becoming an OP Chain is that users of OP Chains will have a convenient, homogenous experience bridging between OP Chains, and the OP Chain itself will share security and a governance standard ([Law of Chains](https://gov.optimism.io/t/law-of-chains-v0-1-section-by-section-overview/6515))."
60,What is the Superchain in the context of OP Chains?,"The Superchain refers to a future feature that OP Chains will automatically inherit, providing a seamless and unified experience across different OP Chains.","OP Chains are Layer 2 blockchains that run the governance-approved release of the OP Stack, and therefore will be upgraded based on decisions by Optimism‚Äôs governance and contribute sequencer revenue back to the Collective. OP Chains will automatically inherit Superchain features in the future.  
The benefit of opting into the Superchain and becoming an OP Chain is that users of OP Chains will have a convenient, homogenous experience bridging between OP Chains, and the OP Chain itself will share security and a governance standard ([Law of Chains](https://gov.optimism.io/t/law-of-chains-v0-1-section-by-section-overview/6515))."
61,Who maintains the OP Stack?,The OP Stack is maintained by the Optimism Collective.,"The [OP Stack](https://stack.optimism.io/) is the modular, open source, MIT-licensed development stack that powers the OP Mainnet, OP Chains, and, in the future, the Superchain. The OP Stack is maintained by the Optimism Collective."
61,What is the OP Stack used for?,"The OP Stack is a modular, open source, MIT-licensed development stack that powers the OP Mainnet, OP Chains, and, in the future, the Superchain.","The [OP Stack](https://stack.optimism.io/) is the modular, open source, MIT-licensed development stack that powers the OP Mainnet, OP Chains, and, in the future, the Superchain. The OP Stack is maintained by the Optimism Collective."
61,Is the OP Stack open source?,"Yes, the OP Stack is open source and MIT-licensed.","The [OP Stack](https://stack.optimism.io/) is the modular, open source, MIT-licensed development stack that powers the OP Mainnet, OP Chains, and, in the future, the Superchain. The OP Stack is maintained by the Optimism Collective."
62,What's an OP Stack Fork?,"An OP Stack Fork is a Layer 2 blockchain built using the MIT-licensed OP Stack. However, it is not governed by Optimism‚Äôs governance and does not contribute sequencer revenue back to the Collective. As a result, it is not on track to become part of the Superchain and may not share security or interoperability with OP Chains in the Superchain.","An **OP Stack Fork** refers to a Layer 2 blockchain that has been built using the MIT-licensed OP Stack, but is not governed by Optimism‚Äôs governance or contributing sequencer revenue back to the Collective (and therefore is not on track to become part of the Superchain). This means OP Stack Chains won‚Äôt necessarily share security or interoperability with OP Chains in the Superchain."
62,Do OP Stack Forks share security with OP Chains in the Superchain?,"No, OP Stack Forks do not necessarily share security or interoperability with OP Chains in the Superchain because they are not governed by Optimism‚Äôs governance and do not contribute sequencer revenue back to the Collective.","An **OP Stack Fork** refers to a Layer 2 blockchain that has been built using the MIT-licensed OP Stack, but is not governed by Optimism‚Äôs governance or contributing sequencer revenue back to the Collective (and therefore is not on track to become part of the Superchain). This means OP Stack Chains won‚Äôt necessarily share security or interoperability with OP Chains in the Superchain."
62,Are OP Stack Forks part of the Superchain?,"No, OP Stack Forks are not part of the Superchain because they are not governed by Optimism‚Äôs governance and do not contribute sequencer revenue back to the Collective.","An **OP Stack Fork** refers to a Layer 2 blockchain that has been built using the MIT-licensed OP Stack, but is not governed by Optimism‚Äôs governance or contributing sequencer revenue back to the Collective (and therefore is not on track to become part of the Superchain). This means OP Stack Chains won‚Äôt necessarily share security or interoperability with OP Chains in the Superchain."
63,What's OP Mainnet?,OP Mainnet is a Layer 2 blockchain powered by the OP Stack. It was previously known as just 'Optimism' and is the first chain to commit to the Superchain vision.,"OP Mainnet is a Layer 2 blockchain powered by the OP Stack. Previously known as just ‚ÄúOptimism,‚Äù OP Mainnet is where it all started, and the first chain to commit to the Superchain vision."
63,What was OP Mainnet previously known as?,OP Mainnet was previously known as 'Optimism'.,"OP Mainnet is a Layer 2 blockchain powered by the OP Stack. Previously known as just ‚ÄúOptimism,‚Äù OP Mainnet is where it all started, and the first chain to commit to the Superchain vision."
64,Can I refer to the OP token as $OP?,"No, you should use 'OP' instead of '$OP'. The use of the $ symbol in connection with 'OP' is prohibited.","The OP token is a governance token and should be discussed as such. Use ‚ÄúOP‚Äù instead of ‚Äú$OP.‚Äù  The use of the $ is prohibited in connection with ‚ÄúOP.‚Äù Content that refers to OP incorrectly will be removed off of Optimism platforms and will not be eligible for promotion. This means that, when talking about OP:  
- Do not discuss the token price or speculate on the price - it has nothing to do with what we are here for.
- Do not reference the OP token as an investment, including attempts at ‚Äúpumping‚Äù the price, encouraging purchases, speculating on how the network may result in returns on investments, or discussing how to buy or sell OP.
- Token grants are made in OP - they are allocations of governance authority, not cash - and they should not be converted to USD, nor referred to in USD amounts."
64,Is it okay to discuss the price of the OP token?,"No, you should not discuss or speculate on the price of the OP token. The focus is on governance, not on the token's price.","The OP token is a governance token and should be discussed as such. Use ‚ÄúOP‚Äù instead of ‚Äú$OP.‚Äù  The use of the $ is prohibited in connection with ‚ÄúOP.‚Äù Content that refers to OP incorrectly will be removed off of Optimism platforms and will not be eligible for promotion. This means that, when talking about OP:  
- Do not discuss the token price or speculate on the price - it has nothing to do with what we are here for.
- Do not reference the OP token as an investment, including attempts at ‚Äúpumping‚Äù the price, encouraging purchases, speculating on how the network may result in returns on investments, or discussing how to buy or sell OP.
- Token grants are made in OP - they are allocations of governance authority, not cash - and they should not be converted to USD, nor referred to in USD amounts."
64,Can I refer to OP token grants in terms of their USD value?,"No, OP token grants should not be converted to USD or referred to in USD amounts. They are allocations of governance authority, not cash.","The OP token is a governance token and should be discussed as such. Use ‚ÄúOP‚Äù instead of ‚Äú$OP.‚Äù  The use of the $ is prohibited in connection with ‚ÄúOP.‚Äù Content that refers to OP incorrectly will be removed off of Optimism platforms and will not be eligible for promotion. This means that, when talking about OP:  
- Do not discuss the token price or speculate on the price - it has nothing to do with what we are here for.
- Do not reference the OP token as an investment, including attempts at ‚Äúpumping‚Äù the price, encouraging purchases, speculating on how the network may result in returns on investments, or discussing how to buy or sell OP.
- Token grants are made in OP - they are allocations of governance authority, not cash - and they should not be converted to USD, nor referred to in USD amounts."
65,How can I contribute technically to the Optimism Collective?,"You can contribute technically to the Optimism Collective by engaging with their projects, submitting code, and participating in discussions and development activities. The specific guidelines and areas where contributions are needed are detailed in the Optimism Governance Documentation.","---
title: Technical Contributions to the Optimism Collective
lang: en-US
---"
66,How can I start contributing to the Optimism codebase?,"You can start contributing to the Optimism codebase by reporting issues, participating in the Bug Bounty programme, fixing and responding to existing issues (especially those tagged 'good first issue'), and working on open bounties on Gitcoin.","The Optimism codebase is maintained in a monorepo at [https://github.com/ethereum-optimism/optimism](https://github.com/ethereum-optimism/optimism). It's a [collection of packages](https://github.com/ethereum-optimism/optimism#directory-structure) all requiring different skills to maintain and evolve ranging from NodeJS and TypeScript, Solidity and EVM, Go and Geth to Docker and Kubernetes. The following are good entry points into using your coding skills to help us build Optimism:  
- Reporting issues. For security issues see [Security policy](https://github.com/ethereum-optimism/.github/blob/master/SECURITY.md).
- Participate in the [Bug Bounty programme](https://immunefi.com/bounty/optimism/).
- Fixing and responding to existing issues. You can start off with those tagged [""good first issue""](https://github.com/ethereum-optimism/optimism/contribute) which are meant as introductory issues for external contributors.
Contributions are rewarded with a cool [GitPOAP](https://www.gitpoap.io/gp/1035).
- Work on open [bounties on Gitcoin](https://gitcoin.co/ethereum-optimism).  
::: tip
Following the guidelines on [Contributing](https://github.com/ethereum-optimism/optimism/blob/master/CONTRIBUTING.md) and [Code of Conduct](https://github.com/ethereum-optimism/.github/blob/master/CODE_OF_CONDUCT.md) in all your interactions with the project will ensure your contributions are processed by the team.
:::"
66,What skills are needed to maintain and evolve the Optimism codebase?,"The skills needed to maintain and evolve the Optimism codebase include knowledge of NodeJS and TypeScript, Solidity and EVM, Go and Geth, as well as Docker and Kubernetes.","The Optimism codebase is maintained in a monorepo at [https://github.com/ethereum-optimism/optimism](https://github.com/ethereum-optimism/optimism). It's a [collection of packages](https://github.com/ethereum-optimism/optimism#directory-structure) all requiring different skills to maintain and evolve ranging from NodeJS and TypeScript, Solidity and EVM, Go and Geth to Docker and Kubernetes. The following are good entry points into using your coding skills to help us build Optimism:  
- Reporting issues. For security issues see [Security policy](https://github.com/ethereum-optimism/.github/blob/master/SECURITY.md).
- Participate in the [Bug Bounty programme](https://immunefi.com/bounty/optimism/).
- Fixing and responding to existing issues. You can start off with those tagged [""good first issue""](https://github.com/ethereum-optimism/optimism/contribute) which are meant as introductory issues for external contributors.
Contributions are rewarded with a cool [GitPOAP](https://www.gitpoap.io/gp/1035).
- Work on open [bounties on Gitcoin](https://gitcoin.co/ethereum-optimism).  
::: tip
Following the guidelines on [Contributing](https://github.com/ethereum-optimism/optimism/blob/master/CONTRIBUTING.md) and [Code of Conduct](https://github.com/ethereum-optimism/.github/blob/master/CODE_OF_CONDUCT.md) in all your interactions with the project will ensure your contributions are processed by the team.
:::"
66,Are there any rewards for contributing to the Optimism project?,"Yes, contributions to the Optimism project are rewarded with a cool GitPOAP.","The Optimism codebase is maintained in a monorepo at [https://github.com/ethereum-optimism/optimism](https://github.com/ethereum-optimism/optimism). It's a [collection of packages](https://github.com/ethereum-optimism/optimism#directory-structure) all requiring different skills to maintain and evolve ranging from NodeJS and TypeScript, Solidity and EVM, Go and Geth to Docker and Kubernetes. The following are good entry points into using your coding skills to help us build Optimism:  
- Reporting issues. For security issues see [Security policy](https://github.com/ethereum-optimism/.github/blob/master/SECURITY.md).
- Participate in the [Bug Bounty programme](https://immunefi.com/bounty/optimism/).
- Fixing and responding to existing issues. You can start off with those tagged [""good first issue""](https://github.com/ethereum-optimism/optimism/contribute) which are meant as introductory issues for external contributors.
Contributions are rewarded with a cool [GitPOAP](https://www.gitpoap.io/gp/1035).
- Work on open [bounties on Gitcoin](https://gitcoin.co/ethereum-optimism).  
::: tip
Following the guidelines on [Contributing](https://github.com/ethereum-optimism/optimism/blob/master/CONTRIBUTING.md) and [Code of Conduct](https://github.com/ethereum-optimism/.github/blob/master/CODE_OF_CONDUCT.md) in all your interactions with the project will ensure your contributions are processed by the team.
:::"
67,Where can I find resources to deploy a basic contract on OP Mainnet?,You can find resources to deploy a basic contract on OP Mainnet by visiting the [deploy a basic contract](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started) section in the developer docs.,"---
title: Developer docs
lang: en-US
---  
Welcome to the OP Mainnet developer docs!  
Whether you're just looking to [deploy a basic contract](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started) or you're ready to [build a cross-chain app](./bridge/messaging.md), you'll be able to find everything you need to start building on OP Mainnet within this section.  
If you're looking for third-party tools that make building on OP Mainnet easier, check out the [Tools for Developers](../useful-tools) section."
67,Are there any tools available to make building on OP Mainnet easier?,"Yes, there are third-party tools available to make building on OP Mainnet easier. You can find them in the [Tools for Developers](../useful-tools) section of the developer docs.","---
title: Developer docs
lang: en-US
---  
Welcome to the OP Mainnet developer docs!  
Whether you're just looking to [deploy a basic contract](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started) or you're ready to [build a cross-chain app](./bridge/messaging.md), you'll be able to find everything you need to start building on OP Mainnet within this section.  
If you're looking for third-party tools that make building on OP Mainnet easier, check out the [Tools for Developers](../useful-tools) section."
67,Can I find information on building cross-chain apps in the OP Mainnet developer docs?,"Yes, you can find information on building cross-chain apps in the OP Mainnet developer docs by visiting the [build a cross-chain app](./bridge/messaging.md) section.","---
title: Developer docs
lang: en-US
---  
Welcome to the OP Mainnet developer docs!  
Whether you're just looking to [deploy a basic contract](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started) or you're ready to [build a cross-chain app](./bridge/messaging.md), you'll be able to find everything you need to start building on OP Mainnet within this section.  
If you're looking for third-party tools that make building on OP Mainnet easier, check out the [Tools for Developers](../useful-tools) section."
68,How can I get started with deploying a contract on OP Mainnet?,"If you're brand new to OP Mainnet, we recommend checking out the guide to deploying a basic contract. It'll get you familiar with the core steps required to get a contract deployed to the network.","If you're brand new to OP Mainnet, we recommend checking out the [guide to deploying a basic contract](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started).
It'll get you familiar with the core steps required to get a contract deployed to the network.
Luckily, OP Mainnet is [EVM equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), so it's 100% the same as deploying a contract to Ethereum.  
If you're a bit more familiar with OP Mainnet and Ethereum, you can try walking through one of the various [tutorials](https://github.com/ethereum-optimism/optimism-tutorial) put together by the Optimism community.
They'll help you get a headstart when building your first Optimistic project."
68,Is deploying a contract on OP Mainnet different from deploying on Ethereum?,"No, OP Mainnet is EVM equivalent, so it's 100% the same as deploying a contract to Ethereum.","If you're brand new to OP Mainnet, we recommend checking out the [guide to deploying a basic contract](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started).
It'll get you familiar with the core steps required to get a contract deployed to the network.
Luckily, OP Mainnet is [EVM equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), so it's 100% the same as deploying a contract to Ethereum.  
If you're a bit more familiar with OP Mainnet and Ethereum, you can try walking through one of the various [tutorials](https://github.com/ethereum-optimism/optimism-tutorial) put together by the Optimism community.
They'll help you get a headstart when building your first Optimistic project."
68,Are there any resources for someone who is already familiar with OP Mainnet and Ethereum?,"Yes, if you're a bit more familiar with OP Mainnet and Ethereum, you can try walking through one of the various tutorials put together by the Optimism community. They'll help you get a headstart when building your first Optimistic project.","If you're brand new to OP Mainnet, we recommend checking out the [guide to deploying a basic contract](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started).
It'll get you familiar with the core steps required to get a contract deployed to the network.
Luckily, OP Mainnet is [EVM equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), so it's 100% the same as deploying a contract to Ethereum.  
If you're a bit more familiar with OP Mainnet and Ethereum, you can try walking through one of the various [tutorials](https://github.com/ethereum-optimism/optimism-tutorial) put together by the Optimism community.
They'll help you get a headstart when building your first Optimistic project."
69,How can I deploy my contracts to OP Mainnet or OP Goerli?,"You can deploy your contracts to OP Mainnet or OP Goerli by following the getting started tutorial, which includes sample configuration files for common frameworks like Hardhat, Truffle, and Brownie.","If you're looking to deploy your contracts to OP Mainnet or OP Goerli, take a look at the [getting started tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started#development-stacks).
It contains sample configuration files for deploying your contracts from common frameworks like Hardhat, Truffle, and Brownie.  
You might also want to check out our guides for [running a local development environment](./build/dev-node.md) or [running your own OP Mainnet node](./build/run-a-node.md).
These guides are designed to help you feel totally confident in your OP Mainnet deployment."
69,Are there any resources to help me run a local development environment for Optimism?,"Yes, there are guides available for running a local development environment. These guides are designed to help you feel confident in your OP Mainnet deployment.","If you're looking to deploy your contracts to OP Mainnet or OP Goerli, take a look at the [getting started tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started#development-stacks).
It contains sample configuration files for deploying your contracts from common frameworks like Hardhat, Truffle, and Brownie.  
You might also want to check out our guides for [running a local development environment](./build/dev-node.md) or [running your own OP Mainnet node](./build/run-a-node.md).
These guides are designed to help you feel totally confident in your OP Mainnet deployment."
69,Can I run my own OP Mainnet node?,"Yes, you can run your own OP Mainnet node. There are specific guides available that provide instructions on how to do this.","If you're looking to deploy your contracts to OP Mainnet or OP Goerli, take a look at the [getting started tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started#development-stacks).
It contains sample configuration files for deploying your contracts from common frameworks like Hardhat, Truffle, and Brownie.  
You might also want to check out our guides for [running a local development environment](./build/dev-node.md) or [running your own OP Mainnet node](./build/run-a-node.md).
These guides are designed to help you feel totally confident in your OP Mainnet deployment."
70,How can I move tokens from Ethereum to OP Mainnet?,You can use the Standard Token Bridge to move tokens between Ethereum and OP Mainnet. The bridge makes the process easy and straightforward.,"We've got detailed guides for that.
If you want to bridge a token from Ethereum to OP Mainnet (or vice versa!), you should learn more about our [Standard Token Bridge](./bridge/standard-bridge.md).
The Standard Token Bridge makes the process of moving tokens between chains as easy as possible.  
If you're looking for something more advanced, we recommend reading through our page on [sending data between L1 and L2](./bridge/messaging.md).
Contracts on one chain can trigger contract functions on the other chain, it's pretty cool!
We even dogfood the same infrastructure and use it under the hood of the Standard Token Bridge."
70,Is there a way to send data between different chains?,"Yes, you can send data between L1 (Layer 1) and L2 (Layer 2) using the infrastructure described in the documentation. Contracts on one chain can trigger functions on contracts on the other chain.","We've got detailed guides for that.
If you want to bridge a token from Ethereum to OP Mainnet (or vice versa!), you should learn more about our [Standard Token Bridge](./bridge/standard-bridge.md).
The Standard Token Bridge makes the process of moving tokens between chains as easy as possible.  
If you're looking for something more advanced, we recommend reading through our page on [sending data between L1 and L2](./bridge/messaging.md).
Contracts on one chain can trigger contract functions on the other chain, it's pretty cool!
We even dogfood the same infrastructure and use it under the hood of the Standard Token Bridge."
70,Does Optimism use the same infrastructure for its own operations?,"Yes, Optimism uses the same infrastructure under the hood of the Standard Token Bridge, which they refer to as 'dogfooding' their own technology.","We've got detailed guides for that.
If you want to bridge a token from Ethereum to OP Mainnet (or vice versa!), you should learn more about our [Standard Token Bridge](./bridge/standard-bridge.md).
The Standard Token Bridge makes the process of moving tokens between chains as easy as possible.  
If you're looking for something more advanced, we recommend reading through our page on [sending data between L1 and L2](./bridge/messaging.md).
Contracts on one chain can trigger contract functions on the other chain, it's pretty cool!
We even dogfood the same infrastructure and use it under the hood of the Standard Token Bridge."
71,Where can I ask a question if I can't find the information I need in the Optimism documentation?,"If you can't find the information you need in the Optimism documentation, you can ask a question in their Discord, check the Help Center, or make an issue on their GitHub.","If you can't find the content you're looking for you've got a few options to get extra help.
We recommend first searching through this documentation (search bar at the top right).
If you've already done this and come up short, you can try [asking us a question in Discord](https://discord-gateway.optimism.io), [checking the Help Center](https://help.optimism.io/hc/en-us), or [making an issue on GitHub](https://github.com/ethereum-optimism/community-hub/issues)."
71,What should I do first if I can't find the content I'm looking for in the Optimism documentation?,"First, you should try searching through the documentation using the search bar at the top right.","If you can't find the content you're looking for you've got a few options to get extra help.
We recommend first searching through this documentation (search bar at the top right).
If you've already done this and come up short, you can try [asking us a question in Discord](https://discord-gateway.optimism.io), [checking the Help Center](https://help.optimism.io/hc/en-us), or [making an issue on GitHub](https://github.com/ethereum-optimism/community-hub/issues)."
71,Is there a way to get help from the Optimism community if the documentation doesn't have the answers I need?,"Yes, you can get help from the Optimism community by asking a question in their Discord, checking the Help Center, or making an issue on their GitHub.","If you can't find the content you're looking for you've got a few options to get extra help.
We recommend first searching through this documentation (search bar at the top right).
If you've already done this and come up short, you can try [asking us a question in Discord](https://discord-gateway.optimism.io), [checking the Help Center](https://help.optimism.io/hc/en-us), or [making an issue on GitHub](https://github.com/ethereum-optimism/community-hub/issues)."
72,What's Bedrock in the context of Optimism?,"Bedrock is the name of the first ever official release of the OP Stack, which is a set of free and open-source modular components that work together to power blockchains such as OP Mainnet.","---
title: Bedrock Explainer
lang: en-US
meta:
- name: og:image
content: https://dev.optimism.io/content/images/size/w2000/2022/12/bedrock-BLUE.jpg
---  
![Bedrock](https://dev.optimism.io/content/images/size/w2000/2022/12/bedrock-BLUE.jpg)  
Bedrock is the name of the first ever official release of the OP Stack, which is a set of free and open-source modular components that work together to power blockchains such as OP Mainnet.  
- To understand what is in the Bedrock release, keep reading.
- To develop on OP Mainnet, which upgraded its infrastructure to the Bedrock release, read the docs.
- To contribute to the OP Stack, see the contribution guidelines on the Optimism monorepo."
72,How can I start developing on OP Mainnet?,"To start developing on OP Mainnet, which upgraded its infrastructure to the Bedrock release, you should read the documentation provided by Optimism.","---
title: Bedrock Explainer
lang: en-US
meta:
- name: og:image
content: https://dev.optimism.io/content/images/size/w2000/2022/12/bedrock-BLUE.jpg
---  
![Bedrock](https://dev.optimism.io/content/images/size/w2000/2022/12/bedrock-BLUE.jpg)  
Bedrock is the name of the first ever official release of the OP Stack, which is a set of free and open-source modular components that work together to power blockchains such as OP Mainnet.  
- To understand what is in the Bedrock release, keep reading.
- To develop on OP Mainnet, which upgraded its infrastructure to the Bedrock release, read the docs.
- To contribute to the OP Stack, see the contribution guidelines on the Optimism monorepo."
72,Where can I find guidelines to contribute to the OP Stack?,"To contribute to the OP Stack, you can see the contribution guidelines on the Optimism monorepo.","---
title: Bedrock Explainer
lang: en-US
meta:
- name: og:image
content: https://dev.optimism.io/content/images/size/w2000/2022/12/bedrock-BLUE.jpg
---  
![Bedrock](https://dev.optimism.io/content/images/size/w2000/2022/12/bedrock-BLUE.jpg)  
Bedrock is the name of the first ever official release of the OP Stack, which is a set of free and open-source modular components that work together to power blockchains such as OP Mainnet.  
- To understand what is in the Bedrock release, keep reading.
- To develop on OP Mainnet, which upgraded its infrastructure to the Bedrock release, read the docs.
- To contribute to the OP Stack, see the contribution guidelines on the Optimism monorepo."
73,How does Bedrock reduce transaction fees?,Bedrock reduces transaction fees by using optimized batch compression and utilizing Ethereum as a data availability layer.,Bedrock improves on its predecessor by reducing transaction fees using optimized batch [compression](#optimized-data-compression) and Ethereum as a data availability layer; shortening delays of including L1 transactions in rollups by handling L1 re-orgs more gracefully; enabling modular proof systems through code re-use; and improving node performance by removing technical debt.
73,What improvements does Bedrock make in handling L1 transactions?,Bedrock shortens the delays of including L1 transactions in rollups by handling L1 re-orgs more gracefully.,Bedrock improves on its predecessor by reducing transaction fees using optimized batch [compression](#optimized-data-compression) and Ethereum as a data availability layer; shortening delays of including L1 transactions in rollups by handling L1 re-orgs more gracefully; enabling modular proof systems through code re-use; and improving node performance by removing technical debt.
73,What are some of the technical improvements in Bedrock?,Bedrock enables modular proof systems through code re-use and improves node performance by removing technical debt.,Bedrock improves on its predecessor by reducing transaction fees using optimized batch [compression](#optimized-data-compression) and Ethereum as a data availability layer; shortening delays of including L1 transactions in rollups by handling L1 re-orgs more gracefully; enabling modular proof systems through code re-use; and improving node performance by removing technical debt.
74,How does Bedrock help in reducing data costs?,Bedrock implements an optimized data compression strategy to minimize data costs. This change is expected to significantly reduce fees.,"In addition, Bedrock implements an optimized data [compression](#optimized-data-compression) strategy to minimize data costs. We are currently benchmarking the impact of this change, but we expect it to reduce fees significantly.  
Bedrock also removes all L1 execution gas, reducing L1 data fees to the theoretical minimum. This reduces fees by an additional 10% over the previous version of the protocol."
74,What is the impact of removing L1 execution gas in Bedrock?,"By removing all L1 execution gas, Bedrock reduces L1 data fees to the theoretical minimum, which results in an additional 10% reduction in fees over the previous version of the protocol.","In addition, Bedrock implements an optimized data [compression](#optimized-data-compression) strategy to minimize data costs. We are currently benchmarking the impact of this change, but we expect it to reduce fees significantly.  
Bedrock also removes all L1 execution gas, reducing L1 data fees to the theoretical minimum. This reduces fees by an additional 10% over the previous version of the protocol."
75,How long did it take to confirm deposits in earlier versions of the Optimism protocol?,"In earlier versions of the Optimism protocol, it could take up to 10 minutes to confirm deposits.","Bedrock introduces support for L1 re-orgs in the node software, which significantly reduces the amount of time users need to wait for deposits. Earlier versions of the protocol could take up to 10 minutes to confirm deposits. With Bedrock, we expect deposits to confirm within 3 minutes."
75,What improvement does Bedrock bring to the deposit confirmation time in Optimism?,"Bedrock reduces the deposit confirmation time significantly, allowing deposits to confirm within 3 minutes.","Bedrock introduces support for L1 re-orgs in the node software, which significantly reduces the amount of time users need to wait for deposits. Earlier versions of the protocol could take up to 10 minutes to confirm deposits. With Bedrock, we expect deposits to confirm within 3 minutes."
75,Does Bedrock support L1 re-orgs in the node software?,"Yes, Bedrock introduces support for L1 re-orgs in the node software.","Bedrock introduces support for L1 re-orgs in the node software, which significantly reduces the amount of time users need to wait for deposits. Earlier versions of the protocol could take up to 10 minutes to confirm deposits. With Bedrock, we expect deposits to confirm within 3 minutes."
76,How does Bedrock handle proof systems in the OP Stack?,"Bedrock abstracts the proof system from the OP Stack, allowing a rollup to use either a fault proof or a validity proof (such as a zk-SNARK) to prove the correct execution of inputs on the rollup.","Bedrock abstracts the proof system from the OP Stack so that a rollup may use either a fault proof or validity proof (e.g., a zk-SNARK) to prove correct execution of inputs on the rollup. This abstraction enables systems like [Cannon](https://github.com/ethereum-optimism/cannon) to be used to prove faults in the system."
76,What is the purpose of abstracting the proof system in Bedrock?,"The abstraction of the proof system in Bedrock enables the use of different systems, like Cannon, to prove faults in the system.","Bedrock abstracts the proof system from the OP Stack so that a rollup may use either a fault proof or validity proof (e.g., a zk-SNARK) to prove correct execution of inputs on the rollup. This abstraction enables systems like [Cannon](https://github.com/ethereum-optimism/cannon) to be used to prove faults in the system."
76,What is an example of a system that can be used with Bedrock to prove faults?,An example of a system that can be used with Bedrock to prove faults is Cannon.,"Bedrock abstracts the proof system from the OP Stack so that a rollup may use either a fault proof or validity proof (e.g., a zk-SNARK) to prove correct execution of inputs on the rollup. This abstraction enables systems like [Cannon](https://github.com/ethereum-optimism/cannon) to be used to prove faults in the system."
77,How has the performance of the node software been improved in the latest version?,"The performance of the node software has been significantly improved by enabling the execution of several transactions in a single rollup 'block' instead of the previous 'one transaction per block' model. This change allows the cost of merkle trie updates to be spread across multiple transactions, reducing state growth by approximately 15GB/year at current transaction volumes.","The node software performance has been significantly improved by enabling execution of several transactions in a single rollup ""block"" as opposed to the prior ""one transaction per block"" model in the previous version. This allows the cost of merkle trie updates to be amortized across multiple transactions. At current transaction volume, this reduces state growth by approximately 15GB/year.  
Node performance is further improved by removing technical debt from the previous version of the protocol. This includes removing the need for a separate ""data transport layer"" node to index L1, and updating the node software to efficiently query for transaction data from L1."
77,What changes have been made to reduce technical debt in the new version of the protocol?,"To reduce technical debt, the new version of the protocol has removed the need for a separate 'data transport layer' node to index L1. Additionally, the node software has been updated to efficiently query for transaction data from L1.","The node software performance has been significantly improved by enabling execution of several transactions in a single rollup ""block"" as opposed to the prior ""one transaction per block"" model in the previous version. This allows the cost of merkle trie updates to be amortized across multiple transactions. At current transaction volume, this reduces state growth by approximately 15GB/year.  
Node performance is further improved by removing technical debt from the previous version of the protocol. This includes removing the need for a separate ""data transport layer"" node to index L1, and updating the node software to efficiently query for transaction data from L1."
77,How does the new model of executing several transactions in a single rollup block benefit the system?,"The new model of executing several transactions in a single rollup block benefits the system by amortizing the cost of merkle trie updates across multiple transactions. This reduces state growth by approximately 15GB/year at current transaction volumes, leading to better overall performance.","The node software performance has been significantly improved by enabling execution of several transactions in a single rollup ""block"" as opposed to the prior ""one transaction per block"" model in the previous version. This allows the cost of merkle trie updates to be amortized across multiple transactions. At current transaction volume, this reduces state growth by approximately 15GB/year.  
Node performance is further improved by removing technical debt from the previous version of the protocol. This includes removing the need for a separate ""data transport layer"" node to index L1, and updating the node software to efficiently query for transaction data from L1."
78,How does Bedrock compare to Ethereum?,"Bedrock was designed to be as close to Ethereum as possible. It removes several deviations from Ethereum that existed in the previous version of the protocol, such as the one-transaction-per-block model, custom opcodes for L1 block information, separate L1/L2 fee fields in the JSON-RPC API, and a custom ERC20 representation of ETH balances.","Bedrock was designed from the ground up to be as close to Ethereum as possible. Multiple deviations from Ethereum in the previous version of the protocol have been removed, including:  
1. The one-transaction-per-block model.
2. Custom opcodes to get L1 block information.
3. Separate L1/L2 fee fields in the JSON-RPC API.
4. A custom ERC20 representation of ETH balances.  
Bedrock also adds support for EIP-1559, chain re-orgs, and other Ethereum features present on L1."
78,What new features does Bedrock support?,"Bedrock adds support for EIP-1559, chain re-organizations (re-orgs), and other Ethereum features that are present on Layer 1 (L1).","Bedrock was designed from the ground up to be as close to Ethereum as possible. Multiple deviations from Ethereum in the previous version of the protocol have been removed, including:  
1. The one-transaction-per-block model.
2. Custom opcodes to get L1 block information.
3. Separate L1/L2 fee fields in the JSON-RPC API.
4. A custom ERC20 representation of ETH balances.  
Bedrock also adds support for EIP-1559, chain re-orgs, and other Ethereum features present on L1."
79,Why was Bedrock built to be modular and upgradeable?,"Bedrock was built to be modular and upgradeable to allow for easier updates and improvements over time, ensuring the system can adapt and evolve as needed.","Bedrock was built to be modular & upgradeable, to reuse existing code from Ethereum, and to be as close to 100% Ethereum-equivalent as possible."
79,Does Bedrock use any existing code from Ethereum?,"Yes, Bedrock reuses existing code from Ethereum to maintain compatibility and leverage the robustness of Ethereum's established codebase.","Bedrock was built to be modular & upgradeable, to reuse existing code from Ethereum, and to be as close to 100% Ethereum-equivalent as possible."
79,How similar is Bedrock to Ethereum?,"Bedrock aims to be as close to 100% Ethereum-equivalent as possible, ensuring high compatibility and seamless integration with Ethereum.","Bedrock was built to be modular & upgradeable, to reuse existing code from Ethereum, and to be as close to 100% Ethereum-equivalent as possible."
80,How does Bedrock ensure flexibility in the OP Stack?,"Bedrock ensures flexibility in the OP Stack by using well-defined interfaces and versioning schemes, which make it easy to swap out different components and add new capabilities.","Bedrock makes it easy to swap out different components in the OP Stack and add new capabilities by using well-defined interfaces and versioning schemes. This allows for a flexible architecture that can adapt to future developments in the Ethereum ecosystem.  
Examples:
- Separation of [rollup node](#rollup-node) and execution client
- Modular fault proof design"
80,What are some examples of the modular design in Bedrock?,"Some examples of the modular design in Bedrock include the separation of the rollup node and execution client, and a modular fault proof design.","Bedrock makes it easy to swap out different components in the OP Stack and add new capabilities by using well-defined interfaces and versioning schemes. This allows for a flexible architecture that can adapt to future developments in the Ethereum ecosystem.  
Examples:
- Separation of [rollup node](#rollup-node) and execution client
- Modular fault proof design"
81,How does Bedrock ensure security in its design?,Bedrock ensures security by using existing Ethereum architecture and infrastructure as much as possible. This allows it to inherit security benefits from the well-tested codebases used in production on Ethereum Mainnet.,"Bedrock uses existing Ethereum architecture and infrastructure as much as possible. This approach enables the OP Stack to inherit security and ""lindy"" benefits from the battle-tested codebases used in production on Ethereum Mainnet. You'll find examples of this throughout the design including:  
Examples:
- [Minimally modified execution clients](https://op-geth.optimism.io/)
- EVM contracts instead of precompiled client code"
81,What are some examples of how Bedrock uses Ethereum's existing infrastructure?,Some examples include minimally modified execution clients and using EVM contracts instead of precompiled client code.,"Bedrock uses existing Ethereum architecture and infrastructure as much as possible. This approach enables the OP Stack to inherit security and ""lindy"" benefits from the battle-tested codebases used in production on Ethereum Mainnet. You'll find examples of this throughout the design including:  
Examples:
- [Minimally modified execution clients](https://op-geth.optimism.io/)
- EVM contracts instead of precompiled client code"
82,How does Bedrock ensure compatibility with the existing Ethereum developer experience?,"Bedrock is designed to have maximum compatibility with the existing Ethereum developer experience, with a few exceptions due to fundamental differences between a Layer 1 (L1) and a rollup. These exceptions include an altered fee model, faster block time (2 seconds vs. 12 seconds), and a special transaction type for including L1 deposit transactions.","Bedrock is designed to have maximum compatibility with the existing Ethereum developer experience. A few exceptions exist due to fundamental differences between an L1 and a rollup: an altered fee model, faster block time (2s vs 12s), and a special transaction type for including L1 [deposit](#deposits) transactions.  
Examples:
- Fault proof designed to prove faults of minimally modified Ethereum [execution client](#execution-client)
- Code re-use of Ethereum [execution client](#execution-client) for use by nodes in the L2 network and sequencers"
82,What are some of the fundamental differences between Bedrock and Ethereum?,"Some fundamental differences between Bedrock and Ethereum include an altered fee model, faster block time (2 seconds vs. 12 seconds), and a special transaction type for including L1 deposit transactions.","Bedrock is designed to have maximum compatibility with the existing Ethereum developer experience. A few exceptions exist due to fundamental differences between an L1 and a rollup: an altered fee model, faster block time (2s vs 12s), and a special transaction type for including L1 [deposit](#deposits) transactions.  
Examples:
- Fault proof designed to prove faults of minimally modified Ethereum [execution client](#execution-client)
- Code re-use of Ethereum [execution client](#execution-client) for use by nodes in the L2 network and sequencers"
82,What is the purpose of the fault proof in Bedrock?,The fault proof in Bedrock is designed to prove faults of minimally modified Ethereum execution clients.,"Bedrock is designed to have maximum compatibility with the existing Ethereum developer experience. A few exceptions exist due to fundamental differences between an L1 and a rollup: an altered fee model, faster block time (2s vs 12s), and a special transaction type for including L1 [deposit](#deposits) transactions.  
Examples:
- Fault proof designed to prove faults of minimally modified Ethereum [execution client](#execution-client)
- Code re-use of Ethereum [execution client](#execution-client) for use by nodes in the L2 network and sequencers"
83,How do rollups derive their data?,"Rollups derive their data from a data availability source, generally an L1 blockchain like Ethereum. They use transaction data posted by Sequencers to the L1 and deposit transactions posted by accounts and contracts to a bridge contract on L1.","Rollups are derived from a data availability source (generally an L1 blockchain like Ethereum). In their most common configuration, rollup protocols derive a  **""canonical L2 chain""** from two primary sources of information:  
1. Transaction data posted by Sequencers to the L1 and;
2. [Deposit](#deposits) transactions posted by accounts and contracts to a bridge contract on L1.  
The following are the fundamental components of the protocol:  
* Deposits are _writes_ to the canonical L2 chain by directly interacting with smart contracts on the L1.
* Withdrawals are _writes_ to the canonical L2 chain that implicitly trigger interactions with contracts and accounts on the L1.
* Batches are _writes_ of data corresponding to batches on the rollup.
* Block derivation is how _reads_ of data on the L1 are interpreted to understand the canonical L2 chain.
* Proof systems define _finality_ of posted output roots on the L1 such that they may be _executed_ upon (e.g., to execute withdrawals)."
83,What are deposits and withdrawals in the context of rollups?,Deposits are writes to the canonical L2 chain by directly interacting with smart contracts on the L1. Withdrawals are writes to the canonical L2 chain that implicitly trigger interactions with contracts and accounts on the L1.,"Rollups are derived from a data availability source (generally an L1 blockchain like Ethereum). In their most common configuration, rollup protocols derive a  **""canonical L2 chain""** from two primary sources of information:  
1. Transaction data posted by Sequencers to the L1 and;
2. [Deposit](#deposits) transactions posted by accounts and contracts to a bridge contract on L1.  
The following are the fundamental components of the protocol:  
* Deposits are _writes_ to the canonical L2 chain by directly interacting with smart contracts on the L1.
* Withdrawals are _writes_ to the canonical L2 chain that implicitly trigger interactions with contracts and accounts on the L1.
* Batches are _writes_ of data corresponding to batches on the rollup.
* Block derivation is how _reads_ of data on the L1 are interpreted to understand the canonical L2 chain.
* Proof systems define _finality_ of posted output roots on the L1 such that they may be _executed_ upon (e.g., to execute withdrawals)."
83,What is the role of proof systems in rollups?,"Proof systems define the finality of posted output roots on the L1 so that they may be executed upon, such as to execute withdrawals.","Rollups are derived from a data availability source (generally an L1 blockchain like Ethereum). In their most common configuration, rollup protocols derive a  **""canonical L2 chain""** from two primary sources of information:  
1. Transaction data posted by Sequencers to the L1 and;
2. [Deposit](#deposits) transactions posted by accounts and contracts to a bridge contract on L1.  
The following are the fundamental components of the protocol:  
* Deposits are _writes_ to the canonical L2 chain by directly interacting with smart contracts on the L1.
* Withdrawals are _writes_ to the canonical L2 chain that implicitly trigger interactions with contracts and accounts on the L1.
* Batches are _writes_ of data corresponding to batches on the rollup.
* Block derivation is how _reads_ of data on the L1 are interpreted to understand the canonical L2 chain.
* Proof systems define _finality_ of posted output roots on the L1 such that they may be _executed_ upon (e.g., to execute withdrawals)."
84,What's a deposit in the context of Optimism?,A deposit is a transaction on Layer 1 (L1) that is to be included in the rollup. Deposits are guaranteed to be included in the canonical Layer 2 (L2) chain to prevent censorship or control of the L2.,A **deposit** is a transaction on L1 that is to be included in the rollup. [Deposits](#deposits) are _guaranteed_ by definition to be included in the [canonical L2 chain](#protocol) as a means of preventing censorship or control of the L2.
84,Why are deposits important in Optimism?,"Deposits are important because they ensure that transactions on Layer 1 (L1) are included in the canonical Layer 2 (L2) chain, which helps prevent censorship or control of the L2.",A **deposit** is a transaction on L1 that is to be included in the rollup. [Deposits](#deposits) are _guaranteed_ by definition to be included in the [canonical L2 chain](#protocol) as a means of preventing censorship or control of the L2.
85,How does a deposited transaction work in Optimism?,"A deposited transaction in Optimism is a transaction on the rollup that is made as part of a deposit. With the Bedrock upgrade, deposits are fully generalized Ethereum transactions, meaning an account or contract on Ethereum can deposit a contract creation. These transactions on the L2 are derived from the values in the events emitted by the deposit contract on the L1.","A **deposited transaction** is the transaction on the rollup that is made as a part of a [deposit](#deposits). With Bedrock, [deposits](#deposits) are fully generalized Ethereum transactions. For example, an account or contract on Ethereum can ‚Äúdeposit‚Äù a contract creation.  
Bedrock defines a **deposit contract** that is available on the L1: it is a smart contract that L1 accounts and contracts can interact with to write to the L2. [Deposited transactions](#arbitrary-message-passing-from-l1) on the L2 are derived from the values in the event(s) emitted by this [deposit](#deposits) contract, which include expected parameters such as from, to, and data.  
For full details, see the [deposit contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#deposit-contract) section of the protocol specifications."
85,What is a deposit contract in Optimism?,"A deposit contract in Optimism is a smart contract available on the L1 (Layer 1) that L1 accounts and contracts can interact with to write to the L2 (Layer 2). It emits events that include parameters such as from, to, and data, which are used to create deposited transactions on the L2.","A **deposited transaction** is the transaction on the rollup that is made as a part of a [deposit](#deposits). With Bedrock, [deposits](#deposits) are fully generalized Ethereum transactions. For example, an account or contract on Ethereum can ‚Äúdeposit‚Äù a contract creation.  
Bedrock defines a **deposit contract** that is available on the L1: it is a smart contract that L1 accounts and contracts can interact with to write to the L2. [Deposited transactions](#arbitrary-message-passing-from-l1) on the L2 are derived from the values in the event(s) emitted by this [deposit](#deposits) contract, which include expected parameters such as from, to, and data.  
For full details, see the [deposit contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#deposit-contract) section of the protocol specifications."
85,Where can I find more details about the deposit contract in Optimism?,"For full details about the deposit contract in Optimism, you can refer to the deposit contract section of the protocol specifications available on GitHub at this link: https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#deposit-contract.","A **deposited transaction** is the transaction on the rollup that is made as a part of a [deposit](#deposits). With Bedrock, [deposits](#deposits) are fully generalized Ethereum transactions. For example, an account or contract on Ethereum can ‚Äúdeposit‚Äù a contract creation.  
Bedrock defines a **deposit contract** that is available on the L1: it is a smart contract that L1 accounts and contracts can interact with to write to the L2. [Deposited transactions](#arbitrary-message-passing-from-l1) on the L2 are derived from the values in the event(s) emitted by this [deposit](#deposits) contract, which include expected parameters such as from, to, and data.  
For full details, see the [deposit contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#deposit-contract) section of the protocol specifications."
86,How does the gas burn mechanism work in Optimism's Bedrock?,"In Optimism's Bedrock, the gas burn mechanism involves buying gas on Layer 1 (L1) via a gas burn to be used on Layer 2 (L2). This gas is purchased on a fee market, and there is a hard cap on the amount of gas provided to all deposits in a single L1 block. This mechanism helps prevent denial of service attacks by ensuring that gas-intensive transactions on L2 are not cheap to execute on L1.","Bedrock also specifies a gas burn mechanism and a fee market for [deposits](#deposits). The gas that [deposited transactions](#arbitrary-message-passing-from-l1) spend on an L2 is bought on L1 via a gas burn. This gas is purchased on a fee market and there is a hard cap on the amount of gas provided to all [deposits](#deposits) in a single L1 block. This mechanism is used to prevent denial of service attacks that could occur by writing transactions to L2 from L1 that are extremely gas-intensive on L2, but cheap on L1.  
The gas provided to [deposited transactions](#arbitrary-message-passing-from-l1) is sometimes called ""guaranteed gas."" Guaranteed gas is unique in that it is paid for by burning gas on L1 and is therefore not refundable.The total amount of L1 gas that must be burned per unit of guaranteed L2 gas requested depends on the price of L2 gas reported by a EIP-1559 style fee mechanism. Furthermore, users receive a dynamic gas stipend based on the amount of L1 gas spent to compute updates to the fee mechanism.  
For a deeper explanation, read the [deposits section](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#deposits) of the protocol specifications."
86,What is 'guaranteed gas' in the context of Optimism's Bedrock?,"Guaranteed gas refers to the gas provided to deposited transactions on L2, which is paid for by burning gas on L1. This gas is unique because it is not refundable. The amount of L1 gas that must be burned per unit of guaranteed L2 gas depends on the price of L2 gas, which is determined by an EIP-1559 style fee mechanism.","Bedrock also specifies a gas burn mechanism and a fee market for [deposits](#deposits). The gas that [deposited transactions](#arbitrary-message-passing-from-l1) spend on an L2 is bought on L1 via a gas burn. This gas is purchased on a fee market and there is a hard cap on the amount of gas provided to all [deposits](#deposits) in a single L1 block. This mechanism is used to prevent denial of service attacks that could occur by writing transactions to L2 from L1 that are extremely gas-intensive on L2, but cheap on L1.  
The gas provided to [deposited transactions](#arbitrary-message-passing-from-l1) is sometimes called ""guaranteed gas."" Guaranteed gas is unique in that it is paid for by burning gas on L1 and is therefore not refundable.The total amount of L1 gas that must be burned per unit of guaranteed L2 gas requested depends on the price of L2 gas reported by a EIP-1559 style fee mechanism. Furthermore, users receive a dynamic gas stipend based on the amount of L1 gas spent to compute updates to the fee mechanism.  
For a deeper explanation, read the [deposits section](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#deposits) of the protocol specifications."
86,Why is there a hard cap on the amount of gas provided to deposits in a single L1 block in Optimism's Bedrock?,"The hard cap on the amount of gas provided to deposits in a single L1 block is implemented to prevent denial of service attacks. This ensures that transactions written to L2 from L1, which could be extremely gas-intensive on L2 but cheap on L1, do not overwhelm the system.","Bedrock also specifies a gas burn mechanism and a fee market for [deposits](#deposits). The gas that [deposited transactions](#arbitrary-message-passing-from-l1) spend on an L2 is bought on L1 via a gas burn. This gas is purchased on a fee market and there is a hard cap on the amount of gas provided to all [deposits](#deposits) in a single L1 block. This mechanism is used to prevent denial of service attacks that could occur by writing transactions to L2 from L1 that are extremely gas-intensive on L2, but cheap on L1.  
The gas provided to [deposited transactions](#arbitrary-message-passing-from-l1) is sometimes called ""guaranteed gas."" Guaranteed gas is unique in that it is paid for by burning gas on L1 and is therefore not refundable.The total amount of L1 gas that must be burned per unit of guaranteed L2 gas requested depends on the price of L2 gas reported by a EIP-1559 style fee mechanism. Furthermore, users receive a dynamic gas stipend based on the amount of L1 gas spent to compute updates to the fee mechanism.  
For a deeper explanation, read the [deposits section](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#deposits) of the protocol specifications."
87,How are withdrawals initiated in the Optimism network?,"Withdrawals are initiated on L2 via a call to the Message Passer predeploy contract, which records the important properties of the message in its storage.","**Withdrawals** are cross-domain transactions that are initiated on L2 and finalized by a transaction executed on L1. Notably, withdrawals may be used by an L2 account to call an L1 contract, or to transfer ETH from an L2 account to an L1 account.  
Withdrawals are initiated on L2 via a call to the **Message Passer** predeploy contract, which records the important properties of the message in its storage. Withdrawals are finalized on L1 via a call to the [OptimismPortal](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md#the-optimism-portal-contract) contract, which proves the inclusion of this withdrawal message. In this way, withdrawals are different from [deposits](#deposits). Instead of relying on [block derivation](#block-derivation), withdrawal transactions must use smart contracts on L1 for finalization."
87,How are withdrawals finalized in the Optimism network?,"Withdrawals are finalized on L1 via a call to the OptimismPortal contract, which proves the inclusion of the withdrawal message.","**Withdrawals** are cross-domain transactions that are initiated on L2 and finalized by a transaction executed on L1. Notably, withdrawals may be used by an L2 account to call an L1 contract, or to transfer ETH from an L2 account to an L1 account.  
Withdrawals are initiated on L2 via a call to the **Message Passer** predeploy contract, which records the important properties of the message in its storage. Withdrawals are finalized on L1 via a call to the [OptimismPortal](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md#the-optimism-portal-contract) contract, which proves the inclusion of this withdrawal message. In this way, withdrawals are different from [deposits](#deposits). Instead of relying on [block derivation](#block-derivation), withdrawal transactions must use smart contracts on L1 for finalization."
87,What is the difference between withdrawals and deposits in the Optimism network?,"Withdrawals are different from deposits because they do not rely on block derivation. Instead, withdrawal transactions must use smart contracts on L1 for finalization.","**Withdrawals** are cross-domain transactions that are initiated on L2 and finalized by a transaction executed on L1. Notably, withdrawals may be used by an L2 account to call an L1 contract, or to transfer ETH from an L2 account to an L1 account.  
Withdrawals are initiated on L2 via a call to the **Message Passer** predeploy contract, which records the important properties of the message in its storage. Withdrawals are finalized on L1 via a call to the [OptimismPortal](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md#the-optimism-portal-contract) contract, which proves the inclusion of this withdrawal message. In this way, withdrawals are different from [deposits](#deposits). Instead of relying on [block derivation](#block-derivation), withdrawal transactions must use smart contracts on L1 for finalization."
88,How does the Bedrock release improve the security of withdrawals in Optimism?,"The Bedrock release introduces a two-step withdrawal process that includes submitting a Merkle proof 7 days before the withdrawal can be finalized. This extra step allows monitoring tools to detect invalid withdrawal proofs within those 7 days, reducing the risk of bridge hacks by allowing time to deploy a contract fix if needed.","Withdrawal proof validation bugs have been the root cause of many of the biggest bridge hacks of the last few years. The Bedrock release introduces an additional step in the withdrawals‚Äô process of prior versions meant to provide an extra layer of defense against these types of bugs. In the two-step withdrawal process, a Merkle proof corresponding to the withdrawal must be submitted 7 days before the withdrawal can be finalized. This new safety mechanism gives monitoring tools a full 7 days to find and detect invalid withdrawal proofs. If the [withdrawal](#withdrawals) proof is found to be invalid, a contract fix can be deployed before funds are lost. This dramatically reduces the risk of a bridge compromise.  
For full details, see the [withdrawals](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md) section of the protocol specification."
88,What is the purpose of the 7-day period in the new withdrawal process?,"The 7-day period in the new withdrawal process is designed to give monitoring tools enough time to find and detect any invalid withdrawal proofs. If an invalid proof is detected, a contract fix can be deployed before any funds are lost, thereby enhancing the security of the withdrawal process.","Withdrawal proof validation bugs have been the root cause of many of the biggest bridge hacks of the last few years. The Bedrock release introduces an additional step in the withdrawals‚Äô process of prior versions meant to provide an extra layer of defense against these types of bugs. In the two-step withdrawal process, a Merkle proof corresponding to the withdrawal must be submitted 7 days before the withdrawal can be finalized. This new safety mechanism gives monitoring tools a full 7 days to find and detect invalid withdrawal proofs. If the [withdrawal](#withdrawals) proof is found to be invalid, a contract fix can be deployed before funds are lost. This dramatically reduces the risk of a bridge compromise.  
For full details, see the [withdrawals](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md) section of the protocol specification."
88,Why are withdrawal proof validation bugs significant in the context of bridge hacks?,"Withdrawal proof validation bugs have been the root cause of many major bridge hacks in recent years. These bugs can allow malicious actors to exploit vulnerabilities and compromise the bridge, leading to significant financial losses. The new withdrawal process in the Bedrock release aims to mitigate this risk by adding an extra layer of defense.","Withdrawal proof validation bugs have been the root cause of many of the biggest bridge hacks of the last few years. The Bedrock release introduces an additional step in the withdrawals‚Äô process of prior versions meant to provide an extra layer of defense against these types of bugs. In the two-step withdrawal process, a Merkle proof corresponding to the withdrawal must be submitted 7 days before the withdrawal can be finalized. This new safety mechanism gives monitoring tools a full 7 days to find and detect invalid withdrawal proofs. If the [withdrawal](#withdrawals) proof is found to be invalid, a contract fix can be deployed before funds are lost. This dramatically reduces the risk of a bridge compromise.  
For full details, see the [withdrawals](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md) section of the protocol specification."
89,How does Bedrock handle messaging between L1 and L2?,"In Bedrock, a wire format is defined for messaging between L1 and L2. This format is used for L2 to derive blocks from L1 and for L2 to write transactions to L1. It is designed to minimize costs and software complexity for writing to L1.","In Bedrock, a wire format is defined for messaging between the L1 and L2 (i.e., for L2 deriving blocks from L1 and for L2 to write transactions to the L1). This wire format is designed to minimize costs and software complexity for writing to the L1."
89,Why is the wire format in Bedrock important?,The wire format in Bedrock is important because it helps minimize costs and software complexity when writing to L1. This makes the process of messaging between L1 and L2 more efficient.,"In Bedrock, a wire format is defined for messaging between the L1 and L2 (i.e., for L2 deriving blocks from L1 and for L2 to write transactions to the L1). This wire format is designed to minimize costs and software complexity for writing to the L1."
90,How does Optimism optimize data compression for transactions?,"Optimism organizes lists of L2 transactions into groups called sequencer batches, which are then grouped into objects called channels. These channels have a maximum size and are compressed before being submitted to the L1.","To optimize data compression, lists of L2 transactions called **sequencer batches** are organized into groups of objects called **channels**, each of which have a maximum size that is defined in a [configurable parameter](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#channel-format) that will initially be set to ~9.5Mb. These [channels](#optimized-data-compression) are expected to be compressed using a compression function and submitted to the L1."
90,What is the maximum size of a channel in Optimism?,"The maximum size of a channel in Optimism is initially set to approximately 9.5Mb, as defined in a configurable parameter.","To optimize data compression, lists of L2 transactions called **sequencer batches** are organized into groups of objects called **channels**, each of which have a maximum size that is defined in a [configurable parameter](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#channel-format) that will initially be set to ~9.5Mb. These [channels](#optimized-data-compression) are expected to be compressed using a compression function and submitted to the L1."
90,How are channels submitted to the L1 in Optimism?,Channels are compressed using a compression function before being submitted to the L1.,"To optimize data compression, lists of L2 transactions called **sequencer batches** are organized into groups of objects called **channels**, each of which have a maximum size that is defined in a [configurable parameter](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#channel-format) that will initially be set to ~9.5Mb. These [channels](#optimized-data-compression) are expected to be compressed using a compression function and submitted to the L1."
91,How does Optimism handle large amounts of data when sending it to Ethereum's Layer 1?,"Optimism breaks down large amounts of data into smaller chunks called channel frames. These frames are compressed and can fit inside a single Layer 1 transaction, allowing them to be sent in parallel and efficiently.","To parallelize messages from the sequencers that are submitting [compressed](#optimized-data-compression) [channel](#optimized-data-compression) data to the L1, [channels](#optimized-data-compression) are further broken down into **channel frames**, which are chunks of [compressed](#optimized-data-compression) [channel](#optimized-data-compression) data that can fit inside of a single L1 transaction. Given [channel frames](#parallelized-batch-submission) are mutually independent and the ordering is known, the Ethereum transactions sent by the sequencer to the L1 can be sent in parallel which minimizes sequencer software complexity and allows for filling up all available space for data on the L1."
91,Why is it beneficial for Optimism to send transactions in parallel to Ethereum's Layer 1?,"Sending transactions in parallel minimizes the complexity of the sequencer software and ensures that all available space for data on Layer 1 is utilized, making the process more efficient.","To parallelize messages from the sequencers that are submitting [compressed](#optimized-data-compression) [channel](#optimized-data-compression) data to the L1, [channels](#optimized-data-compression) are further broken down into **channel frames**, which are chunks of [compressed](#optimized-data-compression) [channel](#optimized-data-compression) data that can fit inside of a single L1 transaction. Given [channel frames](#parallelized-batch-submission) are mutually independent and the ordering is known, the Ethereum transactions sent by the sequencer to the L1 can be sent in parallel which minimizes sequencer software complexity and allows for filling up all available space for data on the L1."
92,How does Bedrock handle execution gas for L1 system transactions?,Bedrock removes all execution gas used by the L1 system from submitting data to the L1 in transactions called batcher transactions. This means that the gas costs associated with these transactions are minimized.,"Bedrock removes all execution gas used by the L1 system from submitting [channel](#optimized-data-compression) data to the L1 in transactions called **batcher transactions**. All validation logic that was previously happening on smart contracts on the L1 is moved into the [block derivation](#block-derivation) logic.  Instead, [batcher transactions](#minimized-usage-of-ethereum-gas) are sent to a single EOA on Ethereum referred to as the **batch inbox address**.  
Batches are still subject to validity checks (i.e. they have to be encoded correctly), and so are individual transactions within the batch (e.g. signatures have to be valid). Invalid [batches](#optimized-data-compression) and invalid individual transactions within an otherwise valid batch are considered to be discarded and irrelevant to the system.  
> Note: Ethereum will soon upgrade to include [EIP-4844](https://eip4844.com/), which introduces a separate fee market for writing data and an increased cap of the amount of data the Ethereum protocol is willing to store. This change is expected to further decrease the costs associated with posting data to an L1.  
For a deeper explanation, read [the wire format specifications](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#overview)."
92,What happens to invalid batches or individual transactions within a batch in the Bedrock system?,Invalid batches and invalid individual transactions within an otherwise valid batch are considered to be discarded and irrelevant to the system. This ensures that only valid data is processed.,"Bedrock removes all execution gas used by the L1 system from submitting [channel](#optimized-data-compression) data to the L1 in transactions called **batcher transactions**. All validation logic that was previously happening on smart contracts on the L1 is moved into the [block derivation](#block-derivation) logic.  Instead, [batcher transactions](#minimized-usage-of-ethereum-gas) are sent to a single EOA on Ethereum referred to as the **batch inbox address**.  
Batches are still subject to validity checks (i.e. they have to be encoded correctly), and so are individual transactions within the batch (e.g. signatures have to be valid). Invalid [batches](#optimized-data-compression) and invalid individual transactions within an otherwise valid batch are considered to be discarded and irrelevant to the system.  
> Note: Ethereum will soon upgrade to include [EIP-4844](https://eip4844.com/), which introduces a separate fee market for writing data and an increased cap of the amount of data the Ethereum protocol is willing to store. This change is expected to further decrease the costs associated with posting data to an L1.  
For a deeper explanation, read [the wire format specifications](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#overview)."
92,What is the impact of Ethereum's upcoming EIP-4844 upgrade on posting data to L1?,The EIP-4844 upgrade introduces a separate fee market for writing data and increases the cap on the amount of data the Ethereum protocol is willing to store. This change is expected to further decrease the costs associated with posting data to an L1.,"Bedrock removes all execution gas used by the L1 system from submitting [channel](#optimized-data-compression) data to the L1 in transactions called **batcher transactions**. All validation logic that was previously happening on smart contracts on the L1 is moved into the [block derivation](#block-derivation) logic.  Instead, [batcher transactions](#minimized-usage-of-ethereum-gas) are sent to a single EOA on Ethereum referred to as the **batch inbox address**.  
Batches are still subject to validity checks (i.e. they have to be encoded correctly), and so are individual transactions within the batch (e.g. signatures have to be valid). Invalid [batches](#optimized-data-compression) and invalid individual transactions within an otherwise valid batch are considered to be discarded and irrelevant to the system.  
> Note: Ethereum will soon upgrade to include [EIP-4844](https://eip4844.com/), which introduces a separate fee market for writing data and an increased cap of the amount of data the Ethereum protocol is willing to store. This change is expected to further decrease the costs associated with posting data to an L1.  
For a deeper explanation, read [the wire format specifications](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#overview)."
93,How does the Bedrock protocol ensure the timing of deposits on L1 is respected in the L2 chain?,"The Bedrock protocol guarantees that the timing of deposits on L1 is respected in the L2 chain by defining strategies for guaranteeing inclusion of deposits, handling L1 and L2 timestamps, and processing sequencing windows in a pipeline to ensure correct ordering.","In Bedrock, the protocol is designed to guarantee that the timing of [deposits](#deposits) on the L1 is respected with regards to the [block derivation](#block-derivation) of the [canonical L2 chain](#protocol). Doing so is a _pure function_ of data written to the L1 by sequencers, [deposits](#deposits), and L1 block attributes. To accomplish this, the protocol defines strategies for guaranteeing inclusion of deposits, handling L1 and L2 timestamps, and processing sequencing windows in a pipeline to ensure correct ordering."
93,What is a pure function in the context of the Bedrock protocol?,"In the context of the Bedrock protocol, a pure function refers to the process of ensuring that the timing and order of deposits, as well as other data written to L1 by sequencers and L1 block attributes, are respected and correctly reflected in the L2 chain without any side effects.","In Bedrock, the protocol is designed to guarantee that the timing of [deposits](#deposits) on the L1 is respected with regards to the [block derivation](#block-derivation) of the [canonical L2 chain](#protocol). Doing so is a _pure function_ of data written to the L1 by sequencers, [deposits](#deposits), and L1 block attributes. To accomplish this, the protocol defines strategies for guaranteeing inclusion of deposits, handling L1 and L2 timestamps, and processing sequencing windows in a pipeline to ensure correct ordering."
93,What strategies does the Bedrock protocol use to handle L1 and L2 timestamps?,"The Bedrock protocol uses specific strategies to handle L1 and L2 timestamps, which include processing sequencing windows in a pipeline to ensure the correct ordering and inclusion of deposits.","In Bedrock, the protocol is designed to guarantee that the timing of [deposits](#deposits) on the L1 is respected with regards to the [block derivation](#block-derivation) of the [canonical L2 chain](#protocol). Doing so is a _pure function_ of data written to the L1 by sequencers, [deposits](#deposits), and L1 block attributes. To accomplish this, the protocol defines strategies for guaranteeing inclusion of deposits, handling L1 and L2 timestamps, and processing sequencing windows in a pipeline to ensure correct ordering."
94,How often are L2 blocks created in the Bedrock release?,"In the Bedrock release, the target configuration for the block time on L2 is 2 seconds.","A goal of the [block derivation](#block-derivation) protocol is to define it such that there must be an L2 block every ""L2 block time"" number of seconds, and that the timestamp of L2 blocks stays in sync with the timestamps of L1 (i.e., to ensure [deposits](#deposits) are included in a logical temporal order).  
In Bedrock, the concept of a **sequencing epoch** is introduced: it is a range of L2 blocks derived from a range of L1 blocks. Each [epoch](#guaranteed-inclusion-of-deposits) is identified by an **epoch number**, which is equal to the block number of the first L1 block in the sequencing window. Epochs can vary in size, subject to some constraints.  
The batch derivation pipeline treats the timestamps of the L1 blocks associated with [epoch number](#guaranteed-inclusion-of-deposits) as the anchor point for determining the order of transactions on the L2. The protocol guarantees that the first L2 block of an [epoch](#guaranteed-inclusion-of-deposits) never falls behind the timestamp of the L1 block matching the [epoch](#guaranteed-inclusion-of-deposits). The first blocks of an epoch _must_ contain deposits on L1 in order to guarantee that deposits will be processed.  
Note that the target configuration for the block time on L2 in the Bedrock release is 2 seconds."
94,What is a sequencing epoch in the context of Optimism's Bedrock?,"A sequencing epoch in Bedrock is a range of L2 blocks derived from a range of L1 blocks. Each epoch is identified by an epoch number, which is equal to the block number of the first L1 block in the sequencing window.","A goal of the [block derivation](#block-derivation) protocol is to define it such that there must be an L2 block every ""L2 block time"" number of seconds, and that the timestamp of L2 blocks stays in sync with the timestamps of L1 (i.e., to ensure [deposits](#deposits) are included in a logical temporal order).  
In Bedrock, the concept of a **sequencing epoch** is introduced: it is a range of L2 blocks derived from a range of L1 blocks. Each [epoch](#guaranteed-inclusion-of-deposits) is identified by an **epoch number**, which is equal to the block number of the first L1 block in the sequencing window. Epochs can vary in size, subject to some constraints.  
The batch derivation pipeline treats the timestamps of the L1 blocks associated with [epoch number](#guaranteed-inclusion-of-deposits) as the anchor point for determining the order of transactions on the L2. The protocol guarantees that the first L2 block of an [epoch](#guaranteed-inclusion-of-deposits) never falls behind the timestamp of the L1 block matching the [epoch](#guaranteed-inclusion-of-deposits). The first blocks of an epoch _must_ contain deposits on L1 in order to guarantee that deposits will be processed.  
Note that the target configuration for the block time on L2 in the Bedrock release is 2 seconds."
94,How does the protocol ensure that deposits are processed in a logical temporal order?,The protocol ensures that deposits are processed in a logical temporal order by using the timestamps of L1 blocks as anchor points for determining the order of transactions on L2. The first L2 block of an epoch must contain deposits from L1 to guarantee their processing.,"A goal of the [block derivation](#block-derivation) protocol is to define it such that there must be an L2 block every ""L2 block time"" number of seconds, and that the timestamp of L2 blocks stays in sync with the timestamps of L1 (i.e., to ensure [deposits](#deposits) are included in a logical temporal order).  
In Bedrock, the concept of a **sequencing epoch** is introduced: it is a range of L2 blocks derived from a range of L1 blocks. Each [epoch](#guaranteed-inclusion-of-deposits) is identified by an **epoch number**, which is equal to the block number of the first L1 block in the sequencing window. Epochs can vary in size, subject to some constraints.  
The batch derivation pipeline treats the timestamps of the L1 blocks associated with [epoch number](#guaranteed-inclusion-of-deposits) as the anchor point for determining the order of transactions on the L2. The protocol guarantees that the first L2 block of an [epoch](#guaranteed-inclusion-of-deposits) never falls behind the timestamp of the L1 block matching the [epoch](#guaranteed-inclusion-of-deposits). The first blocks of an epoch _must_ contain deposits on L1 in order to guarantee that deposits will be processed.  
Note that the target configuration for the block time on L2 in the Bedrock release is 2 seconds."
95,How does Bedrock handle the synchronization of timestamps between L1 and L2?,"Bedrock addresses the synchronization of timestamps between L1 and L2 by allowing a short window of time for sequencing to apply timestamps on L2 transactions. This is done through a sequencing window, which is a sequence of L1 blocks from which an epoch can be derived.","Bedrock attempts to address the problem of reconciling the timestamps on L2 with timestamps on L1 present in [deposited transactions](#arbitrary-message-passing-from-l1). It does this by allowing a short window of time for sequencing to liberally apply timestamps on L2 transactions between [epochs](#guaranteed-inclusion-of-deposits).  
A **sequencing window** is a sequence of L1 blocks from which an [epoch](#guaranteed-inclusion-of-deposits) can be derived. A [sequencing window](#handling-l1-and-l2-timestamps) whose first L1 block has the number `N` contains [batcher transactions](#minimized-usage-of-ethereum-gas) for [epoch](#guaranteed-inclusion-of-deposits) `N`.  
The [sequencing window](#handling-l1-and-l2-timestamps) contains blocks `[N, N + SWS)` where `SWS` is the **sequencer window size**: a fixed rollup-level configuration parameter. This parameter must be at least 2. Increasing it provides more opportunity for sequencers to order L2 transactions with respect to [deposits](#deposits), and lowering it introduces stricter windows of time for sequencers to submit batcher transactions. It is a tradeoff between creating MEV opportunity and increasing software complexity.  
A protocol constant called **max sequencer drift** governs the maximum timestamp a block can have within its epoch. Having this drift allows the sequencer to maintain liveness in case of temporary problems connecting to L1. Each L2 block‚Äôs timestamp fits within the following range:  
```
l1_timestamp <= l2_block.timestamp <= max(l1_timestamp + max_sequencer_drift, l1_timestamp + l2_block_time)
```"
95,What is a sequencing window in the context of Bedrock?,"A sequencing window in Bedrock is a sequence of L1 blocks from which an epoch can be derived. It contains blocks from the first L1 block with number N to N + SWS, where SWS is the sequencer window size, a fixed rollup-level configuration parameter.","Bedrock attempts to address the problem of reconciling the timestamps on L2 with timestamps on L1 present in [deposited transactions](#arbitrary-message-passing-from-l1). It does this by allowing a short window of time for sequencing to liberally apply timestamps on L2 transactions between [epochs](#guaranteed-inclusion-of-deposits).  
A **sequencing window** is a sequence of L1 blocks from which an [epoch](#guaranteed-inclusion-of-deposits) can be derived. A [sequencing window](#handling-l1-and-l2-timestamps) whose first L1 block has the number `N` contains [batcher transactions](#minimized-usage-of-ethereum-gas) for [epoch](#guaranteed-inclusion-of-deposits) `N`.  
The [sequencing window](#handling-l1-and-l2-timestamps) contains blocks `[N, N + SWS)` where `SWS` is the **sequencer window size**: a fixed rollup-level configuration parameter. This parameter must be at least 2. Increasing it provides more opportunity for sequencers to order L2 transactions with respect to [deposits](#deposits), and lowering it introduces stricter windows of time for sequencers to submit batcher transactions. It is a tradeoff between creating MEV opportunity and increasing software complexity.  
A protocol constant called **max sequencer drift** governs the maximum timestamp a block can have within its epoch. Having this drift allows the sequencer to maintain liveness in case of temporary problems connecting to L1. Each L2 block‚Äôs timestamp fits within the following range:  
```
l1_timestamp <= l2_block.timestamp <= max(l1_timestamp + max_sequencer_drift, l1_timestamp + l2_block_time)
```"
95,What is the purpose of the max sequencer drift in Bedrock?,"The max sequencer drift is a protocol constant that governs the maximum timestamp a block can have within its epoch. It allows the sequencer to maintain liveness in case of temporary problems connecting to L1, ensuring that each L2 block‚Äôs timestamp fits within a specific range relative to the L1 timestamp.","Bedrock attempts to address the problem of reconciling the timestamps on L2 with timestamps on L1 present in [deposited transactions](#arbitrary-message-passing-from-l1). It does this by allowing a short window of time for sequencing to liberally apply timestamps on L2 transactions between [epochs](#guaranteed-inclusion-of-deposits).  
A **sequencing window** is a sequence of L1 blocks from which an [epoch](#guaranteed-inclusion-of-deposits) can be derived. A [sequencing window](#handling-l1-and-l2-timestamps) whose first L1 block has the number `N` contains [batcher transactions](#minimized-usage-of-ethereum-gas) for [epoch](#guaranteed-inclusion-of-deposits) `N`.  
The [sequencing window](#handling-l1-and-l2-timestamps) contains blocks `[N, N + SWS)` where `SWS` is the **sequencer window size**: a fixed rollup-level configuration parameter. This parameter must be at least 2. Increasing it provides more opportunity for sequencers to order L2 transactions with respect to [deposits](#deposits), and lowering it introduces stricter windows of time for sequencers to submit batcher transactions. It is a tradeoff between creating MEV opportunity and increasing software complexity.  
A protocol constant called **max sequencer drift** governs the maximum timestamp a block can have within its epoch. Having this drift allows the sequencer to maintain liveness in case of temporary problems connecting to L1. Each L2 block‚Äôs timestamp fits within the following range:  
```
l1_timestamp <= l2_block.timestamp <= max(l1_timestamp + max_sequencer_drift, l1_timestamp + l2_block_time)
```"
96,How does the canonical L2 chain process data from the L1 chain?,"The canonical L2 chain processes data from the L1 chain by starting with the L2 genesis state and setting the L2 chain inception as the first epoch. It then processes all sequencing windows in order to determine the correct ordering of sequencer batches and deposits. The process involves reading data from L1 blocks, buffering and decoding it into channels, decompressing these channels into batches, queuing the batches in sequential order, and finally interpreting them as L2 blocks.","The [canonical L2 chain](#protocol) can be processed from scratch by starting with the L2 genesis state, setting the L2 chain inception as the first epoch, and then processing all sequencing windows in order to determine the correct ordering of [sequencer batches](#optimized-data-compression) and [deposits](#deposits) according to the following simplified pipeline:  
| **Stage** | **Notes** |
| --- | --- |
| Read from L1 | Epochs are defined by L1 blocks. Contained within an L2 block is data pertaining to [batcher transactions](#minimized-usage-of-ethereum-gas) or [deposits](#deposits) which must be included in the [canonical L2 chain](#protocol) |
| Buffer and decode into [channels](#optimized-data-compression) | The data from L1 blocks contains unordered [channel frames](#parallelized-batch-submission), which must all be collected before reconstructing them into channels. |
| Decompress [channels](#optimized-data-compression) into [batches](#optimized-data-compression) | Since [channels](#optimized-data-compression) are [compressed](#optimized-data-compression) to minimize data fee costs on the L1, they must be decompressed. |
| Queue [batches](#optimized-data-compression) into sequential order | With the latest information from L1, [batches](#optimized-data-compression) can be validated and processed sequentially. There are some nuances to what the correct ordering is in relation to [epochs](#guaranteed-inclusion-of-deposits) and timestamps from L2, see the full specification [here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#batch-queue). |
| Interpret as L2 blocks | At this point, the correct ordering of [batches](#optimized-data-compression) can be determined.<br><br>Following this, the [execution client](#execution-client) can interpret them into L2 blocks. For implementation details pertaining to [execution clients](#execution-client), see the [engine queue](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#engine-queue) section of the protocol specifications. |"
96,What is the role of channels in the L2 chain processing?,"Channels play a crucial role in the L2 chain processing as they contain unordered channel frames from L1 blocks. These frames must be collected and reconstructed into channels. Since channels are compressed to minimize data fee costs on the L1, they need to be decompressed into batches before being queued in sequential order and interpreted as L2 blocks.","The [canonical L2 chain](#protocol) can be processed from scratch by starting with the L2 genesis state, setting the L2 chain inception as the first epoch, and then processing all sequencing windows in order to determine the correct ordering of [sequencer batches](#optimized-data-compression) and [deposits](#deposits) according to the following simplified pipeline:  
| **Stage** | **Notes** |
| --- | --- |
| Read from L1 | Epochs are defined by L1 blocks. Contained within an L2 block is data pertaining to [batcher transactions](#minimized-usage-of-ethereum-gas) or [deposits](#deposits) which must be included in the [canonical L2 chain](#protocol) |
| Buffer and decode into [channels](#optimized-data-compression) | The data from L1 blocks contains unordered [channel frames](#parallelized-batch-submission), which must all be collected before reconstructing them into channels. |
| Decompress [channels](#optimized-data-compression) into [batches](#optimized-data-compression) | Since [channels](#optimized-data-compression) are [compressed](#optimized-data-compression) to minimize data fee costs on the L1, they must be decompressed. |
| Queue [batches](#optimized-data-compression) into sequential order | With the latest information from L1, [batches](#optimized-data-compression) can be validated and processed sequentially. There are some nuances to what the correct ordering is in relation to [epochs](#guaranteed-inclusion-of-deposits) and timestamps from L2, see the full specification [here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#batch-queue). |
| Interpret as L2 blocks | At this point, the correct ordering of [batches](#optimized-data-compression) can be determined.<br><br>Following this, the [execution client](#execution-client) can interpret them into L2 blocks. For implementation details pertaining to [execution clients](#execution-client), see the [engine queue](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#engine-queue) section of the protocol specifications. |"
96,Why is data decompressed during the L2 chain processing?,"Data is decompressed during the L2 chain processing because channels are compressed to minimize data fee costs on the L1. Decompressing these channels into batches is necessary to validate and process them sequentially, ensuring the correct ordering of batches and their interpretation as L2 blocks.","The [canonical L2 chain](#protocol) can be processed from scratch by starting with the L2 genesis state, setting the L2 chain inception as the first epoch, and then processing all sequencing windows in order to determine the correct ordering of [sequencer batches](#optimized-data-compression) and [deposits](#deposits) according to the following simplified pipeline:  
| **Stage** | **Notes** |
| --- | --- |
| Read from L1 | Epochs are defined by L1 blocks. Contained within an L2 block is data pertaining to [batcher transactions](#minimized-usage-of-ethereum-gas) or [deposits](#deposits) which must be included in the [canonical L2 chain](#protocol) |
| Buffer and decode into [channels](#optimized-data-compression) | The data from L1 blocks contains unordered [channel frames](#parallelized-batch-submission), which must all be collected before reconstructing them into channels. |
| Decompress [channels](#optimized-data-compression) into [batches](#optimized-data-compression) | Since [channels](#optimized-data-compression) are [compressed](#optimized-data-compression) to minimize data fee costs on the L1, they must be decompressed. |
| Queue [batches](#optimized-data-compression) into sequential order | With the latest information from L1, [batches](#optimized-data-compression) can be validated and processed sequentially. There are some nuances to what the correct ordering is in relation to [epochs](#guaranteed-inclusion-of-deposits) and timestamps from L2, see the full specification [here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#batch-queue). |
| Interpret as L2 blocks | At this point, the correct ordering of [batches](#optimized-data-compression) can be determined.<br><br>Following this, the [execution client](#execution-client) can interpret them into L2 blocks. For implementation details pertaining to [execution clients](#execution-client), see the [engine queue](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#engine-queue) section of the protocol specifications. |"
97,How does Optimism ensure trustless execution of L2-to-L1 messaging?,"Optimism ensures trustless execution of L2-to-L1 messaging by writing the outputs computed from executing transactions in L2 blocks to L1. This process involves hashing the outputs in a tree-structured form to minimize the cost of proving any piece of data captured by the outputs. Proposers periodically submit output roots, which are Merkle roots of the entire canonical L2 chain, to L1.","After a sequencer processes one or more L2 blocks, the outputs computed from executing transactions in those blocks will need to be written with L1 for trustless execution of L2-to-L1 messaging, such as [withdrawals](#withdrawals).  
In Bedrock, outputs are hashed in a tree-structured form which minimizes the cost of proving any piece of data captured by the outputs. Proposers periodically submit **output roots** that are Merkle roots of the entire [canonical L2 chain](#protocol) to the L1.  
Future upgrades of the OP Stack should include a specification for a variation of a fault proof with bonding included to create incentives for proposers to propose correct output roots.  
For full details, read the [L2 Output Root Proposals section](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/proposals.md#l2-output-root-proposals-specification) of the protocol specifications."
97,What is the purpose of output roots in Optimism's Bedrock?,"In Optimism's Bedrock, output roots serve as Merkle roots of the entire canonical L2 chain. They are periodically submitted to L1 by proposers to ensure that the data from L2 blocks can be verified and trusted. This helps in minimizing the cost of proving any piece of data captured by the outputs.","After a sequencer processes one or more L2 blocks, the outputs computed from executing transactions in those blocks will need to be written with L1 for trustless execution of L2-to-L1 messaging, such as [withdrawals](#withdrawals).  
In Bedrock, outputs are hashed in a tree-structured form which minimizes the cost of proving any piece of data captured by the outputs. Proposers periodically submit **output roots** that are Merkle roots of the entire [canonical L2 chain](#protocol) to the L1.  
Future upgrades of the OP Stack should include a specification for a variation of a fault proof with bonding included to create incentives for proposers to propose correct output roots.  
For full details, read the [L2 Output Root Proposals section](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/proposals.md#l2-output-root-proposals-specification) of the protocol specifications."
97,What future upgrades are planned for the OP Stack regarding output roots?,"Future upgrades of the OP Stack are expected to include a specification for a variation of a fault proof with bonding. This will create incentives for proposers to propose correct output roots, ensuring the integrity and correctness of the data submitted to L1.","After a sequencer processes one or more L2 blocks, the outputs computed from executing transactions in those blocks will need to be written with L1 for trustless execution of L2-to-L1 messaging, such as [withdrawals](#withdrawals).  
In Bedrock, outputs are hashed in a tree-structured form which minimizes the cost of proving any piece of data captured by the outputs. Proposers periodically submit **output roots** that are Merkle roots of the entire [canonical L2 chain](#protocol) to the L1.  
Future upgrades of the OP Stack should include a specification for a variation of a fault proof with bonding included to create incentives for proposers to propose correct output roots.  
For full details, read the [L2 Output Root Proposals section](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/proposals.md#l2-output-root-proposals-specification) of the protocol specifications."
98,How does Bedrock handle the separation of concerns in the Optimism network?,"Bedrock handles the separation of concerns by mirroring the technical separation specified by Ethereum. It introduces a separation between the execution client and the rollup node, similar to how Ethereum separates its execution layer and consensus layer.","With Bedrock, the OP Stack leans heavily into the technical separation of concerns specified by Ethereum by mirroring the separation between the Ethereum execution layer and consensus layer. Bedrock introduces separation of execution client and rollup node in this same way."
99,What's an execution client in the context of Optimism?,"An execution client is a system that sequencers and other node operators use to determine the state of the canonical L2 chain. It also processes inbound transactions, communicates them peer-to-peer, and handles the system's state to process queries.","An **execution client** is the system that sequencers and other kinds of node operators run to determine the state of the [canonical L2 chain](#protocol). It also performs other functions such as processing inbound transactions and communicating them peer-to-peer, and handling the state of the system to process queries against it.  
With Bedrock, the OP Stack is designed to reuse [Ethereum‚Äôs own execution client specifications](https://github.com/ethereum/execution-specs) and its many implementations. In this release, Bedrock has demonstrated an extremely limited modification of go-ethereum, the most popular Ethereum client written in Go, to a [diff of less than 2000 lines of code](https://op-geth.optimism.io/).  
There are two fundamental reasons for having any diff at all: handling deposited transactions, and charging transaction fees."
99,How does Bedrock in the OP Stack relate to Ethereum's execution client?,"Bedrock in the OP Stack is designed to reuse Ethereum‚Äôs execution client specifications and its many implementations. It has made very limited modifications to go-ethereum, the most popular Ethereum client written in Go, with a diff of less than 2000 lines of code.","An **execution client** is the system that sequencers and other kinds of node operators run to determine the state of the [canonical L2 chain](#protocol). It also performs other functions such as processing inbound transactions and communicating them peer-to-peer, and handling the state of the system to process queries against it.  
With Bedrock, the OP Stack is designed to reuse [Ethereum‚Äôs own execution client specifications](https://github.com/ethereum/execution-specs) and its many implementations. In this release, Bedrock has demonstrated an extremely limited modification of go-ethereum, the most popular Ethereum client written in Go, to a [diff of less than 2000 lines of code](https://op-geth.optimism.io/).  
There are two fundamental reasons for having any diff at all: handling deposited transactions, and charging transaction fees."
99,Why does Bedrock have any modifications at all to the Ethereum execution client?,Bedrock has modifications to handle deposited transactions and to charge transaction fees.,"An **execution client** is the system that sequencers and other kinds of node operators run to determine the state of the [canonical L2 chain](#protocol). It also performs other functions such as processing inbound transactions and communicating them peer-to-peer, and handling the state of the system to process queries against it.  
With Bedrock, the OP Stack is designed to reuse [Ethereum‚Äôs own execution client specifications](https://github.com/ethereum/execution-specs) and its many implementations. In this release, Bedrock has demonstrated an extremely limited modification of go-ethereum, the most popular Ethereum client written in Go, to a [diff of less than 2000 lines of code](https://op-geth.optimism.io/).  
There are two fundamental reasons for having any diff at all: handling deposited transactions, and charging transaction fees."
100,How are deposited transactions represented in the Optimism rollup?,Deposited transactions in the Optimism rollup are represented by an additional transaction type introduced specifically for this purpose. The execution client implements this new transaction type according to the EIP-2718 typed transactions standard.,"To represent [deposited transactions](#arbitrary-message-passing-from-l1) in the rollup, there is an additional transaction type introduced. The [execution client](#execution-client) implements this [new transaction type](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type) according to the [EIP-2718 typed transactions](https://eips.ethereum.org/EIPS/eip-2718) standard."
100,What standard does the new transaction type for deposited transactions follow?,The new transaction type for deposited transactions follows the EIP-2718 typed transactions standard.,"To represent [deposited transactions](#arbitrary-message-passing-from-l1) in the rollup, there is an additional transaction type introduced. The [execution client](#execution-client) implements this [new transaction type](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type) according to the [EIP-2718 typed transactions](https://eips.ethereum.org/EIPS/eip-2718) standard."
100,What role does the execution client play in handling deposited transactions in Optimism?,The execution client implements the new transaction type for deposited transactions in the Optimism rollup.,"To represent [deposited transactions](#arbitrary-message-passing-from-l1) in the rollup, there is an additional transaction type introduced. The [execution client](#execution-client) implements this [new transaction type](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type) according to the [EIP-2718 typed transactions](https://eips.ethereum.org/EIPS/eip-2718) standard."
101,How are sequencer fees determined in Optimism rollups?,Sequencer fees in Optimism rollups are computed using the same gas table as Ethereum and follow the EIP-1559 algorithm. These fees go to the protocol for operating sequencers and fluctuate based on the congestion of the network.,"Rollups also fundamentally have two kinds of fees associated with transactions:  
**Sequencer fees**  
The cost of operating a sequencer is computed using the same gas table as Ethereum and with the same [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559) algorithm. These fees go to the protocol for operating sequencers and fluctuate based on the congestion of the network.  
**Data availability fees**  
Data availability costs are associated with writing [batcher transactions](#minimized-usage-of-ethereum-gas) to the L1. These fees are intended to cover the cost that sequencers need to pay to submit [batcher transactions](#minimized-usage-of-ethereum-gas) to the L1.  
In Bedrock, the data availability portion of the fee is determined based on information in a system contract on the rollup called a [GasPriceOracle](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/predeploys.md#gaspriceoracle). This contract is updated during [block derivation](#block-derivation) from the gas pricing information retrieved from the L1 block attributes that get inserted at the beginning of every [epoch](#guaranteed-inclusion-of-deposits).  
Bedrock specifies that both of these fees are added up into a single `gasPrice` field when using the JSON-RPC."
101,What are data availability fees in Optimism rollups?,Data availability fees are costs associated with writing batcher transactions to the Layer 1 (L1). These fees cover the cost that sequencers need to pay to submit batcher transactions to the L1.,"Rollups also fundamentally have two kinds of fees associated with transactions:  
**Sequencer fees**  
The cost of operating a sequencer is computed using the same gas table as Ethereum and with the same [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559) algorithm. These fees go to the protocol for operating sequencers and fluctuate based on the congestion of the network.  
**Data availability fees**  
Data availability costs are associated with writing [batcher transactions](#minimized-usage-of-ethereum-gas) to the L1. These fees are intended to cover the cost that sequencers need to pay to submit [batcher transactions](#minimized-usage-of-ethereum-gas) to the L1.  
In Bedrock, the data availability portion of the fee is determined based on information in a system contract on the rollup called a [GasPriceOracle](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/predeploys.md#gaspriceoracle). This contract is updated during [block derivation](#block-derivation) from the gas pricing information retrieved from the L1 block attributes that get inserted at the beginning of every [epoch](#guaranteed-inclusion-of-deposits).  
Bedrock specifies that both of these fees are added up into a single `gasPrice` field when using the JSON-RPC."
101,How is the data availability fee determined in Bedrock?,"In Bedrock, the data availability fee is determined based on information in a system contract on the rollup called a GasPriceOracle. This contract is updated during block derivation from the gas pricing information retrieved from the L1 block attributes that get inserted at the beginning of every epoch.","Rollups also fundamentally have two kinds of fees associated with transactions:  
**Sequencer fees**  
The cost of operating a sequencer is computed using the same gas table as Ethereum and with the same [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559) algorithm. These fees go to the protocol for operating sequencers and fluctuate based on the congestion of the network.  
**Data availability fees**  
Data availability costs are associated with writing [batcher transactions](#minimized-usage-of-ethereum-gas) to the L1. These fees are intended to cover the cost that sequencers need to pay to submit [batcher transactions](#minimized-usage-of-ethereum-gas) to the L1.  
In Bedrock, the data availability portion of the fee is determined based on information in a system contract on the rollup called a [GasPriceOracle](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/predeploys.md#gaspriceoracle). This contract is updated during [block derivation](#block-derivation) from the gas pricing information retrieved from the L1 block attributes that get inserted at the beginning of every [epoch](#guaranteed-inclusion-of-deposits).  
Bedrock specifies that both of these fees are added up into a single `gasPrice` field when using the JSON-RPC."
102,How does Bedrock achieve consensus if it doesn't use proof-of-stake like Ethereum?,"Bedrock achieves consensus through a process called block derivation. An execution client of the OP Stack communicates with a component called a rollup node, which implements block derivation.","Unlike Ethereum, Bedrock does not have proof-of-stake consensus. Instead, the consensus of the [canonical L2 chain](#protocol) is defined by [block derivation](#block-derivation). An [execution client](#execution-client) of the OP Stack communicates to a new component that implements [block derivation](#block-derivation) called a **rollup node**. This node communicates to the [execution client](#execution-client) using the exact same [Engine API](https://github.com/ethereum/execution-apis/tree/main/src/engine) that Ethereum uses.  
The [rollup node](#rollup-node) is a stateless component responsible for deriving the state of the system by reading data and [deposits](#deposits) on the L1. In Bedrock, a [rollup node](#rollup-node) can either be used to sequence incoming transactions from users or other [rollup nodes](#rollup-node) or to verify confirmed transactions posted on the L1 by singularly relying on the L1.  
The multiple uses of a rollup node are outlined below."
102,What is a rollup node in Bedrock?,A rollup node is a stateless component responsible for deriving the state of the system by reading data and deposits on the L1. It can be used to sequence incoming transactions or to verify confirmed transactions posted on the L1.,"Unlike Ethereum, Bedrock does not have proof-of-stake consensus. Instead, the consensus of the [canonical L2 chain](#protocol) is defined by [block derivation](#block-derivation). An [execution client](#execution-client) of the OP Stack communicates to a new component that implements [block derivation](#block-derivation) called a **rollup node**. This node communicates to the [execution client](#execution-client) using the exact same [Engine API](https://github.com/ethereum/execution-apis/tree/main/src/engine) that Ethereum uses.  
The [rollup node](#rollup-node) is a stateless component responsible for deriving the state of the system by reading data and [deposits](#deposits) on the L1. In Bedrock, a [rollup node](#rollup-node) can either be used to sequence incoming transactions from users or other [rollup nodes](#rollup-node) or to verify confirmed transactions posted on the L1 by singularly relying on the L1.  
The multiple uses of a rollup node are outlined below."
102,How does the rollup node communicate with the execution client in Bedrock?,The rollup node communicates with the execution client using the same Engine API that Ethereum uses.,"Unlike Ethereum, Bedrock does not have proof-of-stake consensus. Instead, the consensus of the [canonical L2 chain](#protocol) is defined by [block derivation](#block-derivation). An [execution client](#execution-client) of the OP Stack communicates to a new component that implements [block derivation](#block-derivation) called a **rollup node**. This node communicates to the [execution client](#execution-client) using the exact same [Engine API](https://github.com/ethereum/execution-apis/tree/main/src/engine) that Ethereum uses.  
The [rollup node](#rollup-node) is a stateless component responsible for deriving the state of the system by reading data and [deposits](#deposits) on the L1. In Bedrock, a [rollup node](#rollup-node) can either be used to sequence incoming transactions from users or other [rollup nodes](#rollup-node) or to verify confirmed transactions posted on the L1 by singularly relying on the L1.  
The multiple uses of a rollup node are outlined below."
103,How does a rollup node verify output roots?,A rollup node verifies output roots by reading data from the L1 and interpreting it according to block derivation protocol rules. It ensures that any output roots shared by other nodes or posted on the L1 are correct according to the protocol definition.,"The simplest mode of running a [rollup node](#rollup-node) is to only follow the [canonical L2 chain](#protocol). In this mode, the [rollup node](#rollup-node) has no peers and is strictly used to read data from the L1 and to interpret it according to [block derivation](#block-derivation) protocol rules.  
One purpose of this kind of node is to verify that any output roots shared by other nodes or posted on the L1 are correct according to protocol definition. Additionally, proposers intending to submit output roots to the L1 themselves can generate the output roots they need using the [optimism_outputAtBlock](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md#l2-output-rpc-method) of the node which returns a 32-byte hash corresponding to the L2 output root.  
For this purpose, nodes should only need to follow the finalized head. The term [""finalized""](https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/#finality) refers to the Ethereum proof-of-stake consensus (i.e. canonical and practically irreversible) ‚Äî the finalized L2 head is the head of the [canonical L2 chain](#protocol) that is derived only from finalized L1 blocks."
103,What is the purpose of the simplest mode of running a rollup node?,The simplest mode of running a rollup node is to follow the canonical L2 chain without any peers. This mode is used to verify output roots and to generate output roots for proposers intending to submit them to the L1.,"The simplest mode of running a [rollup node](#rollup-node) is to only follow the [canonical L2 chain](#protocol). In this mode, the [rollup node](#rollup-node) has no peers and is strictly used to read data from the L1 and to interpret it according to [block derivation](#block-derivation) protocol rules.  
One purpose of this kind of node is to verify that any output roots shared by other nodes or posted on the L1 are correct according to protocol definition. Additionally, proposers intending to submit output roots to the L1 themselves can generate the output roots they need using the [optimism_outputAtBlock](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md#l2-output-rpc-method) of the node which returns a 32-byte hash corresponding to the L2 output root.  
For this purpose, nodes should only need to follow the finalized head. The term [""finalized""](https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/#finality) refers to the Ethereum proof-of-stake consensus (i.e. canonical and practically irreversible) ‚Äî the finalized L2 head is the head of the [canonical L2 chain](#protocol) that is derived only from finalized L1 blocks."
103,What does 'finalized' mean in the context of a rollup node?,"In the context of a rollup node, 'finalized' refers to the Ethereum proof-of-stake consensus, meaning the canonical and practically irreversible state. The finalized L2 head is derived only from finalized L1 blocks.","The simplest mode of running a [rollup node](#rollup-node) is to only follow the [canonical L2 chain](#protocol). In this mode, the [rollup node](#rollup-node) has no peers and is strictly used to read data from the L1 and to interpret it according to [block derivation](#block-derivation) protocol rules.  
One purpose of this kind of node is to verify that any output roots shared by other nodes or posted on the L1 are correct according to protocol definition. Additionally, proposers intending to submit output roots to the L1 themselves can generate the output roots they need using the [optimism_outputAtBlock](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md#l2-output-rpc-method) of the node which returns a 32-byte hash corresponding to the L2 output root.  
For this purpose, nodes should only need to follow the finalized head. The term [""finalized""](https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/#finality) refers to the Ethereum proof-of-stake consensus (i.e. canonical and practically irreversible) ‚Äî the finalized L2 head is the head of the [canonical L2 chain](#protocol) that is derived only from finalized L1 blocks."
104,How do rollup nodes participate in a network?,"Rollup nodes participate in a network by tracking the progression and state of an L2. They read data and deposits from the L1, interpret it as blocks, and accept inbound transactions from users and peers in the network.","The most common way to use a [rollup node](#rollup-node) is to participate in a network of other [rollup nodes](#rollup-node) tracking the progression and state of an L2. In this mode, a [rollup node](#rollup-node) is both reading the data and [deposits](#deposits) it observes from the L1 and interpreting it as blocks and accepting inbound transactions from users and peers in a network of other [rollup nodes](#rollup-node).  
Nodes participating in the network may make use of the safe and unsafe heads of the L2 they're syncing.  
- The **safe L2 head** represents the rollup that can be constructed where every block up to and including the head can be fully derived from the reference L1 chain, before L1 has necessarily finalized (i.e., a re-org may occur on L1 still).
- The **unsafe L2 head** includes [unsafe blocks](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#unsafe-l2-block) that have not yet been derived from L1. These blocks either come from operating the [rollup node](#rollup-node) as a sequencer or from [unsafe sync](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#unsafe-sync) with the sequencer. This is also known as the ""latest"" head. The safe L2 head is always chosen over the unsafe L2 head in cases of disagreements. When disagreements occur, the unsafe portion of the chain will reorg.  
For most purposes, nodes in the L2 network will refer to the unsafe L2 head for end-user applications."
104,What is the difference between the safe L2 head and the unsafe L2 head?,"The safe L2 head represents the rollup that can be fully derived from the reference L1 chain, even if L1 has not finalized yet. The unsafe L2 head includes blocks that have not yet been derived from L1 and may come from operating the rollup node as a sequencer or from unsafe sync with the sequencer. The safe L2 head is always chosen over the unsafe L2 head in cases of disagreements.","The most common way to use a [rollup node](#rollup-node) is to participate in a network of other [rollup nodes](#rollup-node) tracking the progression and state of an L2. In this mode, a [rollup node](#rollup-node) is both reading the data and [deposits](#deposits) it observes from the L1 and interpreting it as blocks and accepting inbound transactions from users and peers in a network of other [rollup nodes](#rollup-node).  
Nodes participating in the network may make use of the safe and unsafe heads of the L2 they're syncing.  
- The **safe L2 head** represents the rollup that can be constructed where every block up to and including the head can be fully derived from the reference L1 chain, before L1 has necessarily finalized (i.e., a re-org may occur on L1 still).
- The **unsafe L2 head** includes [unsafe blocks](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#unsafe-l2-block) that have not yet been derived from L1. These blocks either come from operating the [rollup node](#rollup-node) as a sequencer or from [unsafe sync](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#unsafe-sync) with the sequencer. This is also known as the ""latest"" head. The safe L2 head is always chosen over the unsafe L2 head in cases of disagreements. When disagreements occur, the unsafe portion of the chain will reorg.  
For most purposes, nodes in the L2 network will refer to the unsafe L2 head for end-user applications."
104,When do nodes in the L2 network refer to the unsafe L2 head?,"For most purposes, nodes in the L2 network will refer to the unsafe L2 head for end-user applications.","The most common way to use a [rollup node](#rollup-node) is to participate in a network of other [rollup nodes](#rollup-node) tracking the progression and state of an L2. In this mode, a [rollup node](#rollup-node) is both reading the data and [deposits](#deposits) it observes from the L1 and interpreting it as blocks and accepting inbound transactions from users and peers in a network of other [rollup nodes](#rollup-node).  
Nodes participating in the network may make use of the safe and unsafe heads of the L2 they're syncing.  
- The **safe L2 head** represents the rollup that can be constructed where every block up to and including the head can be fully derived from the reference L1 chain, before L1 has necessarily finalized (i.e., a re-org may occur on L1 still).
- The **unsafe L2 head** includes [unsafe blocks](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#unsafe-l2-block) that have not yet been derived from L1. These blocks either come from operating the [rollup node](#rollup-node) as a sequencer or from [unsafe sync](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#unsafe-sync) with the sequencer. This is also known as the ""latest"" head. The safe L2 head is always chosen over the unsafe L2 head in cases of disagreements. When disagreements occur, the unsafe portion of the chain will reorg.  
For most purposes, nodes in the L2 network will refer to the unsafe L2 head for end-user applications."
105,How does a rollup node sequence transactions?,A rollup node sequences transactions by creating new blocks on top of the unsafe L2 head.,"The third way to use a [rollup node](#rollup-node) is to sequence transactions. In this mode, a [rollup node](#rollup-node) will _create_ new blocks on top of the unsafe L2 head. Currently, there is only one sequencer per OP Stack network.  
The sequencer is also responsible for posting batches to L1 for other nodes in the network to sync from."
105,How many sequencers are there per OP Stack network?,"Currently, there is only one sequencer per OP Stack network.","The third way to use a [rollup node](#rollup-node) is to sequence transactions. In this mode, a [rollup node](#rollup-node) will _create_ new blocks on top of the unsafe L2 head. Currently, there is only one sequencer per OP Stack network.  
The sequencer is also responsible for posting batches to L1 for other nodes in the network to sync from."
105,What is the sequencer's responsibility in relation to L1?,The sequencer is responsible for posting batches to L1 for other nodes in the network to sync from.,"The third way to use a [rollup node](#rollup-node) is to sequence transactions. In this mode, a [rollup node](#rollup-node) will _create_ new blocks on top of the unsafe L2 head. Currently, there is only one sequencer per OP Stack network.  
The sequencer is also responsible for posting batches to L1 for other nodes in the network to sync from."
106,What's the role of a sequencer in the Optimism network?,"The role of a sequencer is to produce batches. To do this, a sequencer can run rollup nodes and have separate processes which perform batching by reading from a trusted rollup node they run.","The role of a sequencer is to produce [batches](#batches). To do this, a sequencer can run [rollup nodes](#rollup-node) and have separate processes which perform [batching](#batches) by reading from a trusted [rollup node](#rollup-node) they run. This warrants an additional component of the OP Stack called a [batcher](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#batcher) that reads transaction data from a [rollup node](#rollup-node) and interprets it into [batcher transactions](#minimized-usage-of-ethereum-gas) to be written to the L1. The batcher component is responsible for reading the unsafe L2 head of a [rollup node](#rollup-node) run by a sequencer, creating batcher transactions, and writing them to the L1."
106,What is a batcher in the context of Optimism?,"A batcher is a component of the OP Stack that reads transaction data from a rollup node and interprets it into batcher transactions to be written to the L1. The batcher is responsible for reading the unsafe L2 head of a rollup node run by a sequencer, creating batcher transactions, and writing them to the L1.","The role of a sequencer is to produce [batches](#batches). To do this, a sequencer can run [rollup nodes](#rollup-node) and have separate processes which perform [batching](#batches) by reading from a trusted [rollup node](#rollup-node) they run. This warrants an additional component of the OP Stack called a [batcher](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#batcher) that reads transaction data from a [rollup node](#rollup-node) and interprets it into [batcher transactions](#minimized-usage-of-ethereum-gas) to be written to the L1. The batcher component is responsible for reading the unsafe L2 head of a [rollup node](#rollup-node) run by a sequencer, creating batcher transactions, and writing them to the L1."
107,How does the bridging process work in Optimism's Bedrock?,"In Optimism's Bedrock, the bridging process involves locking a native token in a contract on one side of the bridge and then minting an equivalent amount of a mintable token on the other side. This is managed by bridge contracts called standard bridges, which provide simple interfaces for depositing and withdrawing ETH and ERC-20 tokens.","Bedrock also includes a pair of bridge contracts used for the most common kinds of [deposits](#deposits) called the [standard bridges](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md#standard-bridges). These contracts wrap the [deposit](#deposits) and [withdrawal](#withdrawals) contracts to provide simple interfaces for [depositing](#deposits) and [withdrawing](#withdrawals) ETH and ERC-20 tokens.  
These bridges are designed to involve a native token on one side of the bridge, and a wrapped token on the other side that can manage minting and burning. Bridging a native token involves locking the native token in a contract and then minting an equivalent amount of mintable token on the other side of the bridge.  
For full details, see the [standard bridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md#standard-bridges) section of the protocol specifications."
107,What are standard bridges in Optimism's Bedrock?,"Standard bridges in Optimism's Bedrock are a pair of bridge contracts used for the most common kinds of deposits and withdrawals. They wrap the deposit and withdrawal contracts to provide simple interfaces for these actions, involving a native token on one side and a wrapped token on the other side that can manage minting and burning.","Bedrock also includes a pair of bridge contracts used for the most common kinds of [deposits](#deposits) called the [standard bridges](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md#standard-bridges). These contracts wrap the [deposit](#deposits) and [withdrawal](#withdrawals) contracts to provide simple interfaces for [depositing](#deposits) and [withdrawing](#withdrawals) ETH and ERC-20 tokens.  
These bridges are designed to involve a native token on one side of the bridge, and a wrapped token on the other side that can manage minting and burning. Bridging a native token involves locking the native token in a contract and then minting an equivalent amount of mintable token on the other side of the bridge.  
For full details, see the [standard bridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md#standard-bridges) section of the protocol specifications."
107,Where can I find more details about the standard bridges in Optimism?,"For full details about the standard bridges in Optimism, you can refer to the standard bridge section of the protocol specifications available on their GitHub repository.","Bedrock also includes a pair of bridge contracts used for the most common kinds of [deposits](#deposits) called the [standard bridges](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md#standard-bridges). These contracts wrap the [deposit](#deposits) and [withdrawal](#withdrawals) contracts to provide simple interfaces for [depositing](#deposits) and [withdrawing](#withdrawals) ETH and ERC-20 tokens.  
These bridges are designed to involve a native token on one side of the bridge, and a wrapped token on the other side that can manage minting and burning. Bridging a native token involves locking the native token in a contract and then minting an equivalent amount of mintable token on the other side of the bridge.  
For full details, see the [standard bridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md#standard-bridges) section of the protocol specifications."
108,Where is fault proof construction and verification implemented in Optimism?,"Fault proof construction and verification is implemented in the Cannon project, which you can find on GitHub.","Although fault proof construction and verification is implemented in the [Cannon](https://github.com/ethereum-optimism/cannon) project, the fault proof game specification and integration of an output root challenger into the rollup node are part of later specification milestones."
108,What are the future milestones for Optimism's fault proof system?,Future milestones include the specification of the fault proof game and the integration of an output root challenger into the rollup node.,"Although fault proof construction and verification is implemented in the [Cannon](https://github.com/ethereum-optimism/cannon) project, the fault proof game specification and integration of an output root challenger into the rollup node are part of later specification milestones."
109,Where can I find the technical details of the OP Stack?,"The technical details of the OP Stack are defined in the protocol specification, which is located in the Optimism monorepo on GitHub.",The protocol specification defines the technical details of the OP Stack. It is the most up-to-date source of truth for the inner workings of the protocol. The protocol specification is located in [the Optimism monorepo](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/README.md).
109,What is the most up-to-date source for understanding the inner workings of the Optimism protocol?,The most up-to-date source for understanding the inner workings of the Optimism protocol is the protocol specification found in the Optimism monorepo.,The protocol specification defines the technical details of the OP Stack. It is the most up-to-date source of truth for the inner workings of the protocol. The protocol specification is located in [the Optimism monorepo](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/README.md).
110,Where can I find detailed information about the differences between Bedrock and previous versions of the protocol?,You can find detailed information about the differences between Bedrock and previous versions of the protocol on the 'How is Bedrock Different?' page.,"For a deep dive into the differences between Bedrock and previous versions of the protocol, see the [How is Bedrock Different?](./how-is-bedrock-different.md) page."
111,What's the latest major release of OP Mainnet called?,The latest major release of OP Mainnet is called Bedrock.,"---
title: Bedrock Differences
lang: en-US
---  
Bedrock is the latest major release of OP Mainnet.
Here are the major changes:"
111,What does the Bedrock release include?,"The Bedrock release includes major changes to the OP Mainnet, although the specific changes are not detailed in the provided fragment.","---
title: Bedrock Differences
lang: en-US
---  
Bedrock is the latest major release of OP Mainnet.
Here are the major changes:"
112,Which sections of the Optimism Governance Documentation should a wallet developer focus on?,"A wallet developer should focus on the sections related to EIP-1559, JSON-RPC, and Block Production. These sections will help them understand transaction costs and timing, which are crucial for their users.","If you want to jump directly to the parts relevant to your job role, here are the parts we think will be most useful  
<details>
<summary>Wallet developer</summary>  
As a wallet developer you are most likely to interact with the JSON RPC, and your users want to know how much their transactions are going to cost.
Timing may also be relevant.  
- [EIP-1559](#eip-1559)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp frontend developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp backend (protocol) developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Infrastructure provider (or anybody else running a node)</summary>  
To run a node you need to understand the executables required to run it.
You might also be interested in the existence of the mempool and the changes in block timing, fees, and the JSON RPC.  
- [Mempool](#mempool)
- [Block Production](#block-production)
- [Historical Data](#historical-data)
- [JSON-RPC](#json-rpc)
- [Chain Reorganizations](#chain-reorganizations)  
[See here for a more detailed guide](./node-operator-guide.md) on how to run a Bedrock node.  
</details>  
<details>
<summary>Bridge developer</summary>  
As a bridge developer you are likely most interested in deposits into OP Mainnet and withdrawals back into Ethereum L1.  
- [Two-Phase Withdrawals](#two-phase-withdrawals)
- [Deposits](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc)  
</details>"
112,What information is important for a Dapp frontend developer in the Optimism Governance Documentation?,"A Dapp frontend developer should look at the sections on EIP-1559, Mempool, JSON-RPC, and Block Production. These sections cover transaction fees, changes in the RPC interface, and block timing, which are essential for developing applications.","If you want to jump directly to the parts relevant to your job role, here are the parts we think will be most useful  
<details>
<summary>Wallet developer</summary>  
As a wallet developer you are most likely to interact with the JSON RPC, and your users want to know how much their transactions are going to cost.
Timing may also be relevant.  
- [EIP-1559](#eip-1559)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp frontend developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp backend (protocol) developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Infrastructure provider (or anybody else running a node)</summary>  
To run a node you need to understand the executables required to run it.
You might also be interested in the existence of the mempool and the changes in block timing, fees, and the JSON RPC.  
- [Mempool](#mempool)
- [Block Production](#block-production)
- [Historical Data](#historical-data)
- [JSON-RPC](#json-rpc)
- [Chain Reorganizations](#chain-reorganizations)  
[See here for a more detailed guide](./node-operator-guide.md) on how to run a Bedrock node.  
</details>  
<details>
<summary>Bridge developer</summary>  
As a bridge developer you are likely most interested in deposits into OP Mainnet and withdrawals back into Ethereum L1.  
- [Two-Phase Withdrawals](#two-phase-withdrawals)
- [Deposits](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc)  
</details>"
112,What should an infrastructure provider know from the Optimism Governance Documentation?,"An infrastructure provider should be familiar with the sections on Mempool, Block Production, Historical Data, JSON-RPC, and Chain Reorganizations. Additionally, they should refer to the detailed guide on how to run a Bedrock node.","If you want to jump directly to the parts relevant to your job role, here are the parts we think will be most useful  
<details>
<summary>Wallet developer</summary>  
As a wallet developer you are most likely to interact with the JSON RPC, and your users want to know how much their transactions are going to cost.
Timing may also be relevant.  
- [EIP-1559](#eip-1559)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp frontend developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp backend (protocol) developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Infrastructure provider (or anybody else running a node)</summary>  
To run a node you need to understand the executables required to run it.
You might also be interested in the existence of the mempool and the changes in block timing, fees, and the JSON RPC.  
- [Mempool](#mempool)
- [Block Production](#block-production)
- [Historical Data](#historical-data)
- [JSON-RPC](#json-rpc)
- [Chain Reorganizations](#chain-reorganizations)  
[See here for a more detailed guide](./node-operator-guide.md) on how to run a Bedrock node.  
</details>  
<details>
<summary>Bridge developer</summary>  
As a bridge developer you are likely most interested in deposits into OP Mainnet and withdrawals back into Ethereum L1.  
- [Two-Phase Withdrawals](#two-phase-withdrawals)
- [Deposits](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc)  
</details>"
113,How often are blocks produced in the Bedrock network?,"Blocks are produced every two seconds in the Bedrock network, although this value may change in the future.",":::warning Block Time Subject to Change  
Currently blocks are produced every two seconds.
However, that value may change in the future.  
:::  
Unlike the legacy network which mines a block for every incoming transaction, the Bedrock network will produce new blocks every two seconds. This introduces the following changes to the EVM:  
- `TIMESTAMP` will return the timestamp of the block. It will update every two seconds.
- `BLOCKNUMBER` will return an actual block number. It will update every two seconds. The one-to-one mapping between blocks and transactions will no longer apply.  
The Bedrock upgrade also introduces the concept of _system transactions_. System transactions are created by the `op-node`, and are used to execute deposits and update the L2's view of L1. They have the following attributes:  
- Every block will contain at least one system transaction called the [L1 attributes deposited transaction](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#l1-attributes-deposited-transaction). It will always be the first transaction in the block.
- Some blocks will contain one or more [user-deposited transactions](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#user-deposited-transactions).
- All system transactions have an [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718)-compatible transaction type of `0x7E`.
- All system transactions are unsigned, and set their `v`, `r`, and `s` fields to `null`.  
For more information about these transactions, see the [deposited transactions specification](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md) on GitHub.  
:::warning Known Issue
Some Ethereum client libraries, such as Web3j, cannot parse the `null` signature fields described above. To work around this issue, you will need to manually filter out the system transactions before passing them to the library.
:::"
113,What is a system transaction in the Bedrock network?,"System transactions are created by the `op-node` and are used to execute deposits and update the Layer 2's view of Layer 1. Every block will contain at least one system transaction called the L1 attributes deposited transaction, which will always be the first transaction in the block. These transactions are unsigned and have an EIP-2718-compatible transaction type of `0x7E`.",":::warning Block Time Subject to Change  
Currently blocks are produced every two seconds.
However, that value may change in the future.  
:::  
Unlike the legacy network which mines a block for every incoming transaction, the Bedrock network will produce new blocks every two seconds. This introduces the following changes to the EVM:  
- `TIMESTAMP` will return the timestamp of the block. It will update every two seconds.
- `BLOCKNUMBER` will return an actual block number. It will update every two seconds. The one-to-one mapping between blocks and transactions will no longer apply.  
The Bedrock upgrade also introduces the concept of _system transactions_. System transactions are created by the `op-node`, and are used to execute deposits and update the L2's view of L1. They have the following attributes:  
- Every block will contain at least one system transaction called the [L1 attributes deposited transaction](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#l1-attributes-deposited-transaction). It will always be the first transaction in the block.
- Some blocks will contain one or more [user-deposited transactions](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#user-deposited-transactions).
- All system transactions have an [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718)-compatible transaction type of `0x7E`.
- All system transactions are unsigned, and set their `v`, `r`, and `s` fields to `null`.  
For more information about these transactions, see the [deposited transactions specification](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md) on GitHub.  
:::warning Known Issue
Some Ethereum client libraries, such as Web3j, cannot parse the `null` signature fields described above. To work around this issue, you will need to manually filter out the system transactions before passing them to the library.
:::"
113,What should I do if my Ethereum client library cannot parse the `null` signature fields in system transactions?,"If your Ethereum client library, such as Web3j, cannot parse the `null` signature fields in system transactions, you will need to manually filter out the system transactions before passing them to the library.",":::warning Block Time Subject to Change  
Currently blocks are produced every two seconds.
However, that value may change in the future.  
:::  
Unlike the legacy network which mines a block for every incoming transaction, the Bedrock network will produce new blocks every two seconds. This introduces the following changes to the EVM:  
- `TIMESTAMP` will return the timestamp of the block. It will update every two seconds.
- `BLOCKNUMBER` will return an actual block number. It will update every two seconds. The one-to-one mapping between blocks and transactions will no longer apply.  
The Bedrock upgrade also introduces the concept of _system transactions_. System transactions are created by the `op-node`, and are used to execute deposits and update the L2's view of L1. They have the following attributes:  
- Every block will contain at least one system transaction called the [L1 attributes deposited transaction](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#l1-attributes-deposited-transaction). It will always be the first transaction in the block.
- Some blocks will contain one or more [user-deposited transactions](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#user-deposited-transactions).
- All system transactions have an [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718)-compatible transaction type of `0x7E`.
- All system transactions are unsigned, and set their `v`, `r`, and `s` fields to `null`.  
For more information about these transactions, see the [deposited transactions specification](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md) on GitHub.  
:::warning Known Issue
Some Ethereum client libraries, such as Web3j, cannot parse the `null` signature fields described above. To work around this issue, you will need to manually filter out the system transactions before passing them to the library.
:::"
114,How does EIP-1559 affect transaction fees on the Optimism network?,"EIP-1559 introduces a two-component fee structure: the base fee and the priority fee. The base fee is the same for all transactions in a block and varies based on block demand, while the priority fee is specified in the transaction and varies between transactions. On Optimism, ETH is not burned, and some EIP-1559 parameters differ from Ethereum, such as the block gas target and elasticity multiplier.","As part of the Bedrock upgrade, we have upgraded the network to support [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559). In EIP-1559 the cost of a unit of gas is composed of two components:  
- **Base fee**: This fee is the same for all transactions in a block. It varies between blocks based on the difference between the actual size of the blocks (which depends on the demand for block space) and the target block size. When the block uses more gas than the target block size the base fee goes up to discourage demand. When the block uses less gas than the target block size the base fee goes down to encourage demand.
- **Priority fee**: This fee is specified in the transaction itself and varies between transactions. Block proposers are expected to select the transactions that offer them the highest priority fees first.  
There are some differences between Ethereum and OP Mainnet in this regard:  
- ETH is not burned. Burning ETH on L2 would only lock it in the bridge forever.
- Some EIP 1559 parameters are different:  
| Parameter | OP Mainnet value | Ethereum value (for reference) |
| - | -: | -: |
| Block gas limit | 30,000,000 gas | 30,000,000 gas
| Block gas target | 5,000,000 gas | 15,000,000 gas
| EIP-1559 elasticity multiplier | 6 | 2
| EIP-1559 denominator | 50 | 8
| Maximum base fee increase (per block) | 10% | 12.5%
| Maximum base fee decrease (per block) | 2% | 12.5%
| Block time in seconds | 2 | 12  
The L1 security fee, which is the majority of the transaction cost, uses the same mechanism as before the upgrade. However, the transactions to L1 are going to be submitted on a [non-contract address](#the-transaction-trail). Between that and improved compression, the L1 security fee should be reduced by about 20%.  
From an application development perspective, EIP-1559 introduces the following changes:  
- The `BASEFEE` opcode is now supported. The `BASEFEE` opcodes returns the base fee of the current block.
- The `eth_maxPriorityFeePerGas` and `eth_feeHistory` RPC methods are now supported. `eth_maxPriorityFeePerGas` returns a fee per gas that is an estimate of how much you can pay as a priority fee, or 'tip', to get a transaction included in the current block. `eth_feeHistory` returns a collection of historical gas information from which you can decide what to submit as your `maxFeePerGas` and/or `maxPriorityFeePerGas`."
114,What are the main differences between Ethereum and OP Mainnet regarding EIP-1559 parameters?,"Some key differences include the block gas target (5,000,000 gas on OP Mainnet vs. 15,000,000 gas on Ethereum), the EIP-1559 elasticity multiplier (6 on OP Mainnet vs. 2 on Ethereum), and the maximum base fee increase and decrease per block (10% and 2% on OP Mainnet vs. 12.5% on Ethereum). Additionally, ETH is not burned on OP Mainnet.","As part of the Bedrock upgrade, we have upgraded the network to support [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559). In EIP-1559 the cost of a unit of gas is composed of two components:  
- **Base fee**: This fee is the same for all transactions in a block. It varies between blocks based on the difference between the actual size of the blocks (which depends on the demand for block space) and the target block size. When the block uses more gas than the target block size the base fee goes up to discourage demand. When the block uses less gas than the target block size the base fee goes down to encourage demand.
- **Priority fee**: This fee is specified in the transaction itself and varies between transactions. Block proposers are expected to select the transactions that offer them the highest priority fees first.  
There are some differences between Ethereum and OP Mainnet in this regard:  
- ETH is not burned. Burning ETH on L2 would only lock it in the bridge forever.
- Some EIP 1559 parameters are different:  
| Parameter | OP Mainnet value | Ethereum value (for reference) |
| - | -: | -: |
| Block gas limit | 30,000,000 gas | 30,000,000 gas
| Block gas target | 5,000,000 gas | 15,000,000 gas
| EIP-1559 elasticity multiplier | 6 | 2
| EIP-1559 denominator | 50 | 8
| Maximum base fee increase (per block) | 10% | 12.5%
| Maximum base fee decrease (per block) | 2% | 12.5%
| Block time in seconds | 2 | 12  
The L1 security fee, which is the majority of the transaction cost, uses the same mechanism as before the upgrade. However, the transactions to L1 are going to be submitted on a [non-contract address](#the-transaction-trail). Between that and improved compression, the L1 security fee should be reduced by about 20%.  
From an application development perspective, EIP-1559 introduces the following changes:  
- The `BASEFEE` opcode is now supported. The `BASEFEE` opcodes returns the base fee of the current block.
- The `eth_maxPriorityFeePerGas` and `eth_feeHistory` RPC methods are now supported. `eth_maxPriorityFeePerGas` returns a fee per gas that is an estimate of how much you can pay as a priority fee, or 'tip', to get a transaction included in the current block. `eth_feeHistory` returns a collection of historical gas information from which you can decide what to submit as your `maxFeePerGas` and/or `maxPriorityFeePerGas`."
114,What new features does EIP-1559 introduce for application developers on Optimism?,"EIP-1559 introduces the `BASEFEE` opcode, which returns the base fee of the current block. It also supports the `eth_maxPriorityFeePerGas` and `eth_feeHistory` RPC methods. `eth_maxPriorityFeePerGas` provides an estimate of the priority fee needed to get a transaction included in the current block, while `eth_feeHistory` offers historical gas information to help decide on `maxFeePerGas` and `maxPriorityFeePerGas` values.","As part of the Bedrock upgrade, we have upgraded the network to support [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559). In EIP-1559 the cost of a unit of gas is composed of two components:  
- **Base fee**: This fee is the same for all transactions in a block. It varies between blocks based on the difference between the actual size of the blocks (which depends on the demand for block space) and the target block size. When the block uses more gas than the target block size the base fee goes up to discourage demand. When the block uses less gas than the target block size the base fee goes down to encourage demand.
- **Priority fee**: This fee is specified in the transaction itself and varies between transactions. Block proposers are expected to select the transactions that offer them the highest priority fees first.  
There are some differences between Ethereum and OP Mainnet in this regard:  
- ETH is not burned. Burning ETH on L2 would only lock it in the bridge forever.
- Some EIP 1559 parameters are different:  
| Parameter | OP Mainnet value | Ethereum value (for reference) |
| - | -: | -: |
| Block gas limit | 30,000,000 gas | 30,000,000 gas
| Block gas target | 5,000,000 gas | 15,000,000 gas
| EIP-1559 elasticity multiplier | 6 | 2
| EIP-1559 denominator | 50 | 8
| Maximum base fee increase (per block) | 10% | 12.5%
| Maximum base fee decrease (per block) | 2% | 12.5%
| Block time in seconds | 2 | 12  
The L1 security fee, which is the majority of the transaction cost, uses the same mechanism as before the upgrade. However, the transactions to L1 are going to be submitted on a [non-contract address](#the-transaction-trail). Between that and improved compression, the L1 security fee should be reduced by about 20%.  
From an application development perspective, EIP-1559 introduces the following changes:  
- The `BASEFEE` opcode is now supported. The `BASEFEE` opcodes returns the base fee of the current block.
- The `eth_maxPriorityFeePerGas` and `eth_feeHistory` RPC methods are now supported. `eth_maxPriorityFeePerGas` returns a fee per gas that is an estimate of how much you can pay as a priority fee, or 'tip', to get a transaction included in the current block. `eth_feeHistory` returns a collection of historical gas information from which you can decide what to submit as your `maxFeePerGas` and/or `maxPriorityFeePerGas`."
115,Why was the `L1BLOCKNUMBER` opcode removed in the Bedrock upgrade?,"The `L1BLOCKNUMBER` opcode was removed in the Bedrock upgrade to reduce differences between OP Mainnet's EVM and vanilla Ethereum's EVM, aiming to achieve maximal EVM equivalence.","One of the design goals of the Bedrock upgrade is to be maximally EVM equivalent. To reduce differences between OP Mainnet's EVM and vanilla Ethereum's EVM, we have removed the `L1BLOCKNUMBER` opcode."
116,How were ETH balances represented in the previous version of the Optimism system?,"In the previous version of the Optimism system, ETH balances were represented using an ERC20 contract called `OVM_ETH`.","The previous version of the system used an ERC20 contract called `OVM_ETH` to represent ETH balances. These balances will be migrated into the Bedrock network's state as part of the migration. To preserve backwards compatibility, the methods on the `OVM_ETH` contract will continue to work. Note, however, that the `totalSupply()` method will return zero."
116,What will happen to the `OVM_ETH` balances during the migration to the Bedrock network?,The `OVM_ETH` balances will be migrated into the Bedrock network's state as part of the migration process.,"The previous version of the system used an ERC20 contract called `OVM_ETH` to represent ETH balances. These balances will be migrated into the Bedrock network's state as part of the migration. To preserve backwards compatibility, the methods on the `OVM_ETH` contract will continue to work. Note, however, that the `totalSupply()` method will return zero."
116,Will the methods on the `OVM_ETH` contract still work after the migration?,"Yes, to preserve backwards compatibility, the methods on the `OVM_ETH` contract will continue to work. However, the `totalSupply()` method will return zero.","The previous version of the system used an ERC20 contract called `OVM_ETH` to represent ETH balances. These balances will be migrated into the Bedrock network's state as part of the migration. To preserve backwards compatibility, the methods on the `OVM_ETH` contract will continue to work. Note, however, that the `totalSupply()` method will return zero."
117,How does Bedrock handle block reorganization?,"Bedrock nodes always derive blocks from L1 (Layer 1). If L1 experiences a reorganization (reorg), L2 (Layer 2) will reorganize itself to match the state of L1. Blocks that have not been submitted to L1 yet are shared via a peer-to-peer network and can be reorganized if the data on L1 does not match the data shared over P2P.","Unlike the legacy network, Bedrock nodes _always_ derive blocks from L1. This means that if L1 experiences a reorg, L2 will reorganize itself to match the state of L1. Blocks that have not been submitted to L1 yet are gossipped via a peer-to-peer network, and can be reorganized if the data on L1 does not match the data gossiped over P2P.  
Bedrock adopts the same vocabulary as the Beacon Chain to describe block finality. Blocks can be in one of the following states:  
- `unsafe`, meaning that the block has been received via gossip but has not yet been submitted to L1. Unsafe blocks can be reorged if L1 reorgs, or the sequencer reorgs.
- `safe`, meaning that the block has been submitted to L1. Safe blocks can also be reorged if L1 reorgs.
- `finalized`, meaning that the block has reached sufficient depth to be considered final. Finalized blocks cannot be reorged.  
The current `safe`, `unsafe`, and `finalized` blocks can be queried via [JSON-RPC](#json-rpc)."
117,What are the different states of blocks in Bedrock?,"In Bedrock, blocks can be in one of three states: 'unsafe', 'safe', and 'finalized'. 'Unsafe' blocks have been received via gossip but not yet submitted to L1 and can be reorganized if L1 or the sequencer reorgs. 'Safe' blocks have been submitted to L1 and can be reorganized if L1 reorgs. 'Finalized' blocks have reached sufficient depth to be considered final and cannot be reorganized.","Unlike the legacy network, Bedrock nodes _always_ derive blocks from L1. This means that if L1 experiences a reorg, L2 will reorganize itself to match the state of L1. Blocks that have not been submitted to L1 yet are gossipped via a peer-to-peer network, and can be reorganized if the data on L1 does not match the data gossiped over P2P.  
Bedrock adopts the same vocabulary as the Beacon Chain to describe block finality. Blocks can be in one of the following states:  
- `unsafe`, meaning that the block has been received via gossip but has not yet been submitted to L1. Unsafe blocks can be reorged if L1 reorgs, or the sequencer reorgs.
- `safe`, meaning that the block has been submitted to L1. Safe blocks can also be reorged if L1 reorgs.
- `finalized`, meaning that the block has reached sufficient depth to be considered final. Finalized blocks cannot be reorged.  
The current `safe`, `unsafe`, and `finalized` blocks can be queried via [JSON-RPC](#json-rpc)."
117,How can I query the current state of blocks in Bedrock?,"You can query the current 'safe', 'unsafe', and 'finalized' blocks via JSON-RPC.","Unlike the legacy network, Bedrock nodes _always_ derive blocks from L1. This means that if L1 experiences a reorg, L2 will reorganize itself to match the state of L1. Blocks that have not been submitted to L1 yet are gossipped via a peer-to-peer network, and can be reorganized if the data on L1 does not match the data gossiped over P2P.  
Bedrock adopts the same vocabulary as the Beacon Chain to describe block finality. Blocks can be in one of the following states:  
- `unsafe`, meaning that the block has been received via gossip but has not yet been submitted to L1. Unsafe blocks can be reorged if L1 reorgs, or the sequencer reorgs.
- `safe`, meaning that the block has been submitted to L1. Safe blocks can also be reorged if L1 reorgs.
- `finalized`, meaning that the block has reached sufficient depth to be considered final. Finalized blocks cannot be reorged.  
The current `safe`, `unsafe`, and `finalized` blocks can be queried via [JSON-RPC](#json-rpc)."
118,"Can Bedrock nodes provide information about blocks, transactions, and receipts from before the Bedrock update?","Yes, Bedrock nodes can serve pre-Bedrock block bodies, transactions, and receipts out of the box.","Bedrock nodes can serve pre-Bedrock block bodies, transactions, and receipts out of the box. However, you will need to run a Legacy Geth instance to serve historical execution traces. See the [Node Operator Guide](./node-operator-guide.md) for more information about how to do this.  
Note that the following legacy fields have been removed from pre-Bedrock JSON-RPC transaction responses:  
- `queueOrigin`
- `l1TxOrigin`
- `l1BlockNumber`
- `l1Timestamp`
- `index`
- `queueIndex`
- `rawTransaction`  
If your application needs these fields, query Legacy Geth instead of `op-geth`."
118,Do I need to run any additional software to access historical execution traces?,"Yes, you will need to run a Legacy Geth instance to serve historical execution traces.","Bedrock nodes can serve pre-Bedrock block bodies, transactions, and receipts out of the box. However, you will need to run a Legacy Geth instance to serve historical execution traces. See the [Node Operator Guide](./node-operator-guide.md) for more information about how to do this.  
Note that the following legacy fields have been removed from pre-Bedrock JSON-RPC transaction responses:  
- `queueOrigin`
- `l1TxOrigin`
- `l1BlockNumber`
- `l1Timestamp`
- `index`
- `queueIndex`
- `rawTransaction`  
If your application needs these fields, query Legacy Geth instead of `op-geth`."
118,Have any fields been removed from pre-Bedrock JSON-RPC transaction responses?,"Yes, the following legacy fields have been removed: `queueOrigin`, `l1TxOrigin`, `l1BlockNumber`, `l1Timestamp`, `index`, `queueIndex`, and `rawTransaction`.","Bedrock nodes can serve pre-Bedrock block bodies, transactions, and receipts out of the box. However, you will need to run a Legacy Geth instance to serve historical execution traces. See the [Node Operator Guide](./node-operator-guide.md) for more information about how to do this.  
Note that the following legacy fields have been removed from pre-Bedrock JSON-RPC transaction responses:  
- `queueOrigin`
- `l1TxOrigin`
- `l1BlockNumber`
- `l1Timestamp`
- `index`
- `queueIndex`
- `rawTransaction`  
If your application needs these fields, query Legacy Geth instead of `op-geth`."
119,How can I get the gas price on Bedrock?,"For the L2 gas price, you can use the `eth_gasPrice` method. For the L1 gas price, you can call the `GasPriceOracle`'s `l1BaseFee` function.","Bedrock supports all of the standard JSON-RPC methods exposed by go-ethereum. In order to reduce differences between Bedrock and vanilla Ethereum, some legacy methods have been removed. These methods and their replacements are:  
- `eth_getBlockRange`: Use `eth_getBlockByNumber` in a batch request instead.
- `rollup_getInfo`: None of the information returned by this method exists on Bedrock, so there is no replacement for this method.
- `rollup_gasPrices`: Use [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice) instead for the L2 gas price.
For the L1 gas price, you can call the [`GasPriceOracle`'s `l1BaseFee` function](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#readContract#F5).
If you want to estimate the cost of a transaction, you can [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).  
To query `op-node`'s sync status, use the `optimism_syncStatus` RPC method. This method will return the current `safe`, `unsafe`, and `finalized` as seen by the `op-node`."
119,What should I use instead of the `eth_getBlockRange` method on Bedrock?,You should use the `eth_getBlockByNumber` method in a batch request instead.,"Bedrock supports all of the standard JSON-RPC methods exposed by go-ethereum. In order to reduce differences between Bedrock and vanilla Ethereum, some legacy methods have been removed. These methods and their replacements are:  
- `eth_getBlockRange`: Use `eth_getBlockByNumber` in a batch request instead.
- `rollup_getInfo`: None of the information returned by this method exists on Bedrock, so there is no replacement for this method.
- `rollup_gasPrices`: Use [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice) instead for the L2 gas price.
For the L1 gas price, you can call the [`GasPriceOracle`'s `l1BaseFee` function](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#readContract#F5).
If you want to estimate the cost of a transaction, you can [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).  
To query `op-node`'s sync status, use the `optimism_syncStatus` RPC method. This method will return the current `safe`, `unsafe`, and `finalized` as seen by the `op-node`."
119,How can I check the sync status of `op-node` on Bedrock?,"You can use the `optimism_syncStatus` RPC method to query `op-node`'s sync status. This method will return the current `safe`, `unsafe`, and `finalized` statuses as seen by the `op-node`.","Bedrock supports all of the standard JSON-RPC methods exposed by go-ethereum. In order to reduce differences between Bedrock and vanilla Ethereum, some legacy methods have been removed. These methods and their replacements are:  
- `eth_getBlockRange`: Use `eth_getBlockByNumber` in a batch request instead.
- `rollup_getInfo`: None of the information returned by this method exists on Bedrock, so there is no replacement for this method.
- `rollup_gasPrices`: Use [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice) instead for the L2 gas price.
For the L1 gas price, you can call the [`GasPriceOracle`'s `l1BaseFee` function](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#readContract#F5).
If you want to estimate the cost of a transaction, you can [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).  
To query `op-node`'s sync status, use the `optimism_syncStatus` RPC method. This method will return the current `safe`, `unsafe`, and `finalized` as seen by the `op-node`."
120,How does Bedrock handle pending transactions?,Bedrock uses a mempool to store pending transactions until they are included in a block. This is necessary because Bedrock creates blocks on a fixed interval.,"Since the legacy network creates a block for every transaction, it processes new transactions in a first-come-first-serve manner. Bedrock, however, creates blocks on a fixed interval and therefore needs a mempool to store pending transactions until they are included in a block. To minimize MEV, Bedrock's mempool is private. To submit transactions, you will need to configure `op-geth` to forward transactions to the sequencer. This may change in the future.  
The sequencer processes transactions in the mempool in order of their base and priority fees."
120,Why is Bedrock's mempool private?,"Bedrock's mempool is private to minimize Miner Extractable Value (MEV), which can occur when miners prioritize certain transactions for their own benefit.","Since the legacy network creates a block for every transaction, it processes new transactions in a first-come-first-serve manner. Bedrock, however, creates blocks on a fixed interval and therefore needs a mempool to store pending transactions until they are included in a block. To minimize MEV, Bedrock's mempool is private. To submit transactions, you will need to configure `op-geth` to forward transactions to the sequencer. This may change in the future.  
The sequencer processes transactions in the mempool in order of their base and priority fees."
120,How are transactions processed in Bedrock's mempool?,Transactions in Bedrock's mempool are processed by the sequencer in order of their base and priority fees.,"Since the legacy network creates a block for every transaction, it processes new transactions in a first-come-first-serve manner. Bedrock, however, creates blocks on a fixed interval and therefore needs a mempool to store pending transactions until they are included in a block. To minimize MEV, Bedrock's mempool is private. To submit transactions, you will need to configure `op-geth` to forward transactions to the sequencer. This may change in the future.  
The sequencer processes transactions in the mempool in order of their base and priority fees."
121,How long does it take to finalize a withdrawal on the legacy network?,"On the legacy network, it takes seven days for the withdrawal to be finalized after sending a withdrawal message.","On the legacy network, funds are withdrawn as follows:  
1. Users send a withdrawal message.
2. Users wait seven days for the withdrawal to be finalized.
3. Users post a withdrawal proof on L1, and claim their funds.  
However, this introduces a security risk. If the withdrawal proof can be successfully forged, an attacker could withdraw funds from the bridge that they are not authorized to. This kind of attack has been exploited before - a fraudulent proof led to the loss of [$100M on Binance Smart Chain](https://www.nansen.ai/research/bnb-chains-cross-chain-bridge-exploit-explained).  
To eliminate this risk, Bedrock requires users to post their withdrawal proofs upfront. Users must wait for a valid output root to be proposed so that the withdrawal proof can be validated onchain. Once the seven-day waiting period has expired, users can then finalize the withdrawal and claim their funds. The updated withdrawal flow is as follows:  
1. Users send a withdrawal message.
2. Users wait for a state output to be proposed onchain. This can take up to an hour.
3. Users call `proveWithdrawalTransaction()` on the `OptimismPortal` to post and validate their proof.
4. Users wait for the withdrawal to be finalized. This takes seven days on mainnet.
5. Users call `finalizeWithdrawal()` on the `OptimismPortal` to claim their funds.  
Visualized, this flow looks like this:  
<div style=""text-align: center"">  
![](../../../assets/docs/bedrock/two-phase-withdrawals.png)  
</div>  
By posting the proof upfront, it gives onchain monitoring tools enough time to detect a fraudulent withdrawal proof and attempt corrective action.
Regular users can do this monitoring too. For example, an exchange could halt withdrawals in the event of a fraudulent proof.  
Since this change fundamentally changes the way withdrawals are handled, it is **not** backwards-compatible with the old network. If you are performing withdrawals outside our standard bridge interface, you will need to update your software. The easiest way to to do this is to use our [TypeScript SDK](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/packages/sdk), which includes two-phase withdrawals support out of the box.  
For more information on two-phase withdrawals, see the withdrawals specification on [GitHub](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)."
121,What is the main security improvement introduced by Bedrock for withdrawals?,"Bedrock requires users to post their withdrawal proofs upfront, which allows onchain monitoring tools to detect and attempt corrective action against fraudulent withdrawal proofs.","On the legacy network, funds are withdrawn as follows:  
1. Users send a withdrawal message.
2. Users wait seven days for the withdrawal to be finalized.
3. Users post a withdrawal proof on L1, and claim their funds.  
However, this introduces a security risk. If the withdrawal proof can be successfully forged, an attacker could withdraw funds from the bridge that they are not authorized to. This kind of attack has been exploited before - a fraudulent proof led to the loss of [$100M on Binance Smart Chain](https://www.nansen.ai/research/bnb-chains-cross-chain-bridge-exploit-explained).  
To eliminate this risk, Bedrock requires users to post their withdrawal proofs upfront. Users must wait for a valid output root to be proposed so that the withdrawal proof can be validated onchain. Once the seven-day waiting period has expired, users can then finalize the withdrawal and claim their funds. The updated withdrawal flow is as follows:  
1. Users send a withdrawal message.
2. Users wait for a state output to be proposed onchain. This can take up to an hour.
3. Users call `proveWithdrawalTransaction()` on the `OptimismPortal` to post and validate their proof.
4. Users wait for the withdrawal to be finalized. This takes seven days on mainnet.
5. Users call `finalizeWithdrawal()` on the `OptimismPortal` to claim their funds.  
Visualized, this flow looks like this:  
<div style=""text-align: center"">  
![](../../../assets/docs/bedrock/two-phase-withdrawals.png)  
</div>  
By posting the proof upfront, it gives onchain monitoring tools enough time to detect a fraudulent withdrawal proof and attempt corrective action.
Regular users can do this monitoring too. For example, an exchange could halt withdrawals in the event of a fraudulent proof.  
Since this change fundamentally changes the way withdrawals are handled, it is **not** backwards-compatible with the old network. If you are performing withdrawals outside our standard bridge interface, you will need to update your software. The easiest way to to do this is to use our [TypeScript SDK](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/packages/sdk), which includes two-phase withdrawals support out of the box.  
For more information on two-phase withdrawals, see the withdrawals specification on [GitHub](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)."
121,Is the new Bedrock withdrawal process backwards-compatible with the old network?,"No, the new Bedrock withdrawal process is not backwards-compatible with the old network. Users will need to update their software if they are performing withdrawals outside the standard bridge interface.","On the legacy network, funds are withdrawn as follows:  
1. Users send a withdrawal message.
2. Users wait seven days for the withdrawal to be finalized.
3. Users post a withdrawal proof on L1, and claim their funds.  
However, this introduces a security risk. If the withdrawal proof can be successfully forged, an attacker could withdraw funds from the bridge that they are not authorized to. This kind of attack has been exploited before - a fraudulent proof led to the loss of [$100M on Binance Smart Chain](https://www.nansen.ai/research/bnb-chains-cross-chain-bridge-exploit-explained).  
To eliminate this risk, Bedrock requires users to post their withdrawal proofs upfront. Users must wait for a valid output root to be proposed so that the withdrawal proof can be validated onchain. Once the seven-day waiting period has expired, users can then finalize the withdrawal and claim their funds. The updated withdrawal flow is as follows:  
1. Users send a withdrawal message.
2. Users wait for a state output to be proposed onchain. This can take up to an hour.
3. Users call `proveWithdrawalTransaction()` on the `OptimismPortal` to post and validate their proof.
4. Users wait for the withdrawal to be finalized. This takes seven days on mainnet.
5. Users call `finalizeWithdrawal()` on the `OptimismPortal` to claim their funds.  
Visualized, this flow looks like this:  
<div style=""text-align: center"">  
![](../../../assets/docs/bedrock/two-phase-withdrawals.png)  
</div>  
By posting the proof upfront, it gives onchain monitoring tools enough time to detect a fraudulent withdrawal proof and attempt corrective action.
Regular users can do this monitoring too. For example, an exchange could halt withdrawals in the event of a fraudulent proof.  
Since this change fundamentally changes the way withdrawals are handled, it is **not** backwards-compatible with the old network. If you are performing withdrawals outside our standard bridge interface, you will need to update your software. The easiest way to to do this is to use our [TypeScript SDK](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/packages/sdk), which includes two-phase withdrawals support out of the box.  
For more information on two-phase withdrawals, see the withdrawals specification on [GitHub](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)."
122,Will the changes in the new network be compatible with the old network?,"No, the changes described are not backwards-compatible with the old network. It's important to read the section carefully to understand the implications.",":::warning Breaking Change
The changes described in this section are **not** backwards-compatible with the old network. Please read this section carefully.
:::  
On the legacy network, deposits are replayable. This is no longer the case in Bedrock. Additionally, as part of the migration, all deposits on the legacy network that have not been replayed will no longer be replayable. **This means that if you have not replayed your deposit, you must do so before the migration.** This affects fewer than 100 transactions of the nearly 40 million on mainnet."
122,What happens to deposits on the legacy network that haven't been replayed?,Deposits on the legacy network that have not been replayed will no longer be replayable after the migration. You must replay your deposit before the migration.,":::warning Breaking Change
The changes described in this section are **not** backwards-compatible with the old network. Please read this section carefully.
:::  
On the legacy network, deposits are replayable. This is no longer the case in Bedrock. Additionally, as part of the migration, all deposits on the legacy network that have not been replayed will no longer be replayable. **This means that if you have not replayed your deposit, you must do so before the migration.** This affects fewer than 100 transactions of the nearly 40 million on mainnet."
122,How many transactions on the mainnet are affected by this change?,Fewer than 100 transactions out of nearly 40 million on the mainnet are affected by this change.,":::warning Breaking Change
The changes described in this section are **not** backwards-compatible with the old network. Please read this section carefully.
:::  
On the legacy network, deposits are replayable. This is no longer the case in Bedrock. Additionally, as part of the migration, all deposits on the legacy network that have not been replayed will no longer be replayable. **This means that if you have not replayed your deposit, you must do so before the migration.** This affects fewer than 100 transactions of the nearly 40 million on mainnet."
123,What is the `L2OutputOracle` contract in Optimism?,"The `L2OutputOracle` contract contains the state root of the Optimism blockchain, such as OP Mainnet and OP Goerli. It will also receive the result of the fault proof process once fault proofs are activated.","[The `L2OutputOracle` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L2OutputOracle.sol) contains the state root of the Optimism blockchain (OP Mainnet, OP Goerli, etc.).
Once fault proofs are activated, it will be the one that receives the result of the fault proof process.  
This is the contract that replaces the old State Commitment Chain."
123,What did the `L2OutputOracle` contract replace in Optimism?,The `L2OutputOracle` contract replaced the old State Commitment Chain in Optimism.,"[The `L2OutputOracle` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L2OutputOracle.sol) contains the state root of the Optimism blockchain (OP Mainnet, OP Goerli, etc.).
Once fault proofs are activated, it will be the one that receives the result of the fault proof process.  
This is the contract that replaces the old State Commitment Chain."
124,How can I send messages between L1 and L2 in Optimism?,"To send messages between L1 and L2 in Optimism, it is strongly recommended to use the L1CrossDomainMessenger and L2CrossDomainMessenger. These tools provide a more straightforward and reliable way to communicate between layers.","[The `OptimismPortal` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol) provides [the low-level API for communications between layers](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc). Unless you are trying to send L2 transactions via L1 to bypass the sequencer, we strongly recommend sending messages between L1 and L2 via the L1CrossDomainMessenger and L2CrossDomainMessenger."
124,What is the purpose of the OptimismPortal contract?,"The OptimismPortal contract provides the low-level API for communications between layers. It is mainly used for sending L2 transactions via L1 to bypass the sequencer, but for most use cases, using the L1CrossDomainMessenger and L2CrossDomainMessenger is recommended.","[The `OptimismPortal` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol) provides [the low-level API for communications between layers](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc). Unless you are trying to send L2 transactions via L1 to bypass the sequencer, we strongly recommend sending messages between L1 and L2 via the L1CrossDomainMessenger and L2CrossDomainMessenger."
125,Do I need to modify my dapp to run on Bedrock?,"No, you don't need to modify your dapp to run on Bedrock because the contracts provide the same interface as existed pre-Bedrock.","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol):
The `L1CrossDomainMessenger` contract is used for sending messages between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.). Those messages may or may not have assets attached to them.
- [L1StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol):
The `L1StandardBridge` contract uses `L1CrossDomainMessenger` to transfer ETH and ERC-20 tokens between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.)."
125,What is the purpose of the L1CrossDomainMessenger contract?,"The L1CrossDomainMessenger contract is used for sending messages between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.). These messages may or may not have assets attached to them.","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol):
The `L1CrossDomainMessenger` contract is used for sending messages between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.). Those messages may or may not have assets attached to them.
- [L1StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol):
The `L1StandardBridge` contract uses `L1CrossDomainMessenger` to transfer ETH and ERC-20 tokens between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.)."
125,How does the L1StandardBridge contract transfer assets?,"The L1StandardBridge contract uses the L1CrossDomainMessenger to transfer ETH and ERC-20 tokens between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.).","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol):
The `L1CrossDomainMessenger` contract is used for sending messages between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.). Those messages may or may not have assets attached to them.
- [L1StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol):
The `L1StandardBridge` contract uses `L1CrossDomainMessenger` to transfer ETH and ERC-20 tokens between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.)."
126,How can I find the address of the `L1Block` contract in Optimism?,The `L1Block` contract in Optimism is located at the address `0x4200000000000000000000000000000000000015`.,"[The `L1Block` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol) sits at address `0x4200000000000000000000000000000000000015`.
You can use [the getter functions](https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions) to get these parameters:  
- `number`: The latest L1 block number known to L2 (the `L1BlockNumber` contract is still supported to avoid breaking existing applications)
- `timestamp`: The timestamp of the latest L1 block
- `basefee`: The base fee of the latest L1 block
- `hash`: The hash of the latest L1 block
- `sequenceNumber`: The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)  
Currently the L1 information is delayed by two block confirmations (~24 seconds) to minimize the impact of reorgs."
126,What kind of information can I get from the `L1Block` contract?,"You can use getter functions to retrieve the following parameters from the `L1Block` contract: the latest L1 block number (`number`), the timestamp of the latest L1 block (`timestamp`), the base fee of the latest L1 block (`basefee`), the hash of the latest L1 block (`hash`), and the number of the L2 block within the epoch (`sequenceNumber`).","[The `L1Block` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol) sits at address `0x4200000000000000000000000000000000000015`.
You can use [the getter functions](https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions) to get these parameters:  
- `number`: The latest L1 block number known to L2 (the `L1BlockNumber` contract is still supported to avoid breaking existing applications)
- `timestamp`: The timestamp of the latest L1 block
- `basefee`: The base fee of the latest L1 block
- `hash`: The hash of the latest L1 block
- `sequenceNumber`: The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)  
Currently the L1 information is delayed by two block confirmations (~24 seconds) to minimize the impact of reorgs."
126,Why is there a delay in the L1 information provided by the `L1Block` contract?,"The L1 information is delayed by two block confirmations, which is approximately 24 seconds, to minimize the impact of reorgs (reorganizations) on the network.","[The `L1Block` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol) sits at address `0x4200000000000000000000000000000000000015`.
You can use [the getter functions](https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions) to get these parameters:  
- `number`: The latest L1 block number known to L2 (the `L1BlockNumber` contract is still supported to avoid breaking existing applications)
- `timestamp`: The timestamp of the latest L1 block
- `basefee`: The base fee of the latest L1 block
- `hash`: The hash of the latest L1 block
- `sequenceNumber`: The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)  
Currently the L1 information is delayed by two block confirmations (~24 seconds) to minimize the impact of reorgs."
127,How does the SequencerFeeVault contract fund the sequencer on L1?,The SequencerFeeVault contract funds the sequencer on L1 using the ETH base fee collected on L2.,"[The `SequencerFeeVault` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/SequencerFeeVault.sol) handles funding the sequencer on L1 using the ETH base fee on L2.  
The fees are calculated using [EIP 1559](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md), the same mechanism that Ethereum uses (but with different parameter values)."
127,What mechanism is used to calculate the fees for the SequencerFeeVault contract?,"The fees for the SequencerFeeVault contract are calculated using EIP 1559, the same mechanism that Ethereum uses, but with different parameter values.","[The `SequencerFeeVault` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/SequencerFeeVault.sol) handles funding the sequencer on L1 using the ETH base fee on L2.  
The fees are calculated using [EIP 1559](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md), the same mechanism that Ethereum uses (but with different parameter values)."
128,How does the `L2ToL1MessagePasser` contract function within the Optimism network?,The `L2ToL1MessagePasser` contract is used internally by the `L2CrossDomainMessenger` to initiate withdrawals from Layer 2 (L2) to Layer 1 (L1).,"[The `L2ToL1MessagePasser` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) is used internally by `L2CrossDomainMessenger` to initiate withdrawals.  
Note that in Bedrock there are two contracts:  
- [The legacy contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyMessagePasser.sol) at address `0x4200000000000000000000000000000000000000`
- [The new contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) at address `0x4200000000000000000000000000000000000016`"
128,Are there different versions of the `L2ToL1MessagePasser` contract in Optimism?,"Yes, in the Bedrock version of Optimism, there are two contracts: the legacy contract at address `0x4200000000000000000000000000000000000000` and the new contract at address `0x4200000000000000000000000000000000000016`.","[The `L2ToL1MessagePasser` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) is used internally by `L2CrossDomainMessenger` to initiate withdrawals.  
Note that in Bedrock there are two contracts:  
- [The legacy contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyMessagePasser.sol) at address `0x4200000000000000000000000000000000000000`
- [The new contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) at address `0x4200000000000000000000000000000000000016`"
128,What is the purpose of the legacy contract in Optimism's Bedrock version?,"The legacy contract, located at address `0x4200000000000000000000000000000000000000`, is part of the Bedrock version of Optimism and serves as the older version of the `L2ToL1MessagePasser` contract.","[The `L2ToL1MessagePasser` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) is used internally by `L2CrossDomainMessenger` to initiate withdrawals.  
Note that in Bedrock there are two contracts:  
- [The legacy contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyMessagePasser.sol) at address `0x4200000000000000000000000000000000000000`
- [The new contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) at address `0x4200000000000000000000000000000000000016`"
129,Do I need to modify my dapp to run on Bedrock?,"No, you don't need to modify your dapp to run on Bedrock because the contracts provide the same interface as existed pre-Bedrock.","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1BlockNumber](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/L1BlockNumber.sol):
The `L1BlockNumber` contract provides the number of the latest L1 block.
In Bedrock it is simply a proxy to [`L1Block`](#l1block).
- [L2CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol):
The `L2CrossDomainMessenger` contract is used to send messages from L2 (OP Mainnet, OP Goerli, etc.) to the underlying L1 (Ethereum, Goerli, etc.).
- [L2StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol):
The `L2StandardBridge` contract is used to ""attach"" assets (ETH and ERC-20 tokens) to messages that are then sent by `L2CrossDomainMessenger`.
- [WETH9](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/vendor/WETH9.sol):
[The WETH9 contract](https://web.archive.org/web/20221022164309/https://weth.io/) is an ERC-20 token that wraps around ETH to provide extra functionality, such as approvals."
129,What is the purpose of the L2CrossDomainMessenger contract?,The L2CrossDomainMessenger contract is used to send messages from L2 (like OP Mainnet or OP Goerli) to the underlying L1 (like Ethereum or Goerli).,"These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1BlockNumber](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/L1BlockNumber.sol):
The `L1BlockNumber` contract provides the number of the latest L1 block.
In Bedrock it is simply a proxy to [`L1Block`](#l1block).
- [L2CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol):
The `L2CrossDomainMessenger` contract is used to send messages from L2 (OP Mainnet, OP Goerli, etc.) to the underlying L1 (Ethereum, Goerli, etc.).
- [L2StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol):
The `L2StandardBridge` contract is used to ""attach"" assets (ETH and ERC-20 tokens) to messages that are then sent by `L2CrossDomainMessenger`.
- [WETH9](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/vendor/WETH9.sol):
[The WETH9 contract](https://web.archive.org/web/20221022164309/https://weth.io/) is an ERC-20 token that wraps around ETH to provide extra functionality, such as approvals."
129,What does the L2StandardBridge contract do?,"The L2StandardBridge contract is used to 'attach' assets, such as ETH and ERC-20 tokens, to messages that are then sent by the L2CrossDomainMessenger.","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1BlockNumber](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/L1BlockNumber.sol):
The `L1BlockNumber` contract provides the number of the latest L1 block.
In Bedrock it is simply a proxy to [`L1Block`](#l1block).
- [L2CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol):
The `L2CrossDomainMessenger` contract is used to send messages from L2 (OP Mainnet, OP Goerli, etc.) to the underlying L1 (Ethereum, Goerli, etc.).
- [L2StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol):
The `L2StandardBridge` contract is used to ""attach"" assets (ETH and ERC-20 tokens) to messages that are then sent by `L2CrossDomainMessenger`.
- [WETH9](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/vendor/WETH9.sol):
[The WETH9 contract](https://web.archive.org/web/20221022164309/https://weth.io/) is an ERC-20 token that wraps around ETH to provide extra functionality, such as approvals."
130,Why are some contracts kept even if they are no longer relevant?,These contracts are kept as part of the state in case there is a call in any decentralized application (dapp) that uses them.,"These are contracts that are no longer relevant, but are kept as part of the state in case there is a call in any dapp that uses them.  
- [DeployerWhitelist](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/DeployerWhitelist.sol):
The `DeployerWhitelist` contract used to manage the whitelist before [OP Mainnet moved out of beta](https://twitter.com/optimismFND/status/1471571415774023682).  
- [OVM_ETH](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyERC20ETH.sol):
The `OVM_ETH` contract used to manage users ETH balances prior to Bedrock."
130,What was the purpose of the DeployerWhitelist contract?,The DeployerWhitelist contract was used to manage the whitelist before OP Mainnet moved out of beta.,"These are contracts that are no longer relevant, but are kept as part of the state in case there is a call in any dapp that uses them.  
- [DeployerWhitelist](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/DeployerWhitelist.sol):
The `DeployerWhitelist` contract used to manage the whitelist before [OP Mainnet moved out of beta](https://twitter.com/optimismFND/status/1471571415774023682).  
- [OVM_ETH](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyERC20ETH.sol):
The `OVM_ETH` contract used to manage users ETH balances prior to Bedrock."
130,What did the OVM_ETH contract do?,The OVM_ETH contract was used to manage users' ETH balances prior to the Bedrock update.,"These are contracts that are no longer relevant, but are kept as part of the state in case there is a call in any dapp that uses them.  
- [DeployerWhitelist](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/DeployerWhitelist.sol):
The `DeployerWhitelist` contract used to manage the whitelist before [OP Mainnet moved out of beta](https://twitter.com/optimismFND/status/1471571415774023682).  
- [OVM_ETH](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyERC20ETH.sol):
The `OVM_ETH` contract used to manage users ETH balances prior to Bedrock."
131,What's the difference between a deposit and a withdrawal in Optimism?,"In Optimism, a 'deposit' refers to any message going from the underlying L1 blockchain to L2, whether it has any assets attached or not. A 'withdrawal' refers to any message going from L2 to the underlying L1.","In Optimism terminology ""deposit"" refers to any message going from the underlying L1 blockchain to L2, whether it has any assets attached or not.
Similarly, ""withdrawal"" refers to any message going from L2 to the underlying L1.  
[See here for the messenger specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/messengers.md) and [here for the bridge specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md).  
<!--"
131,Do deposits in Optimism always involve transferring assets?,"No, in Optimism, a deposit refers to any message going from the underlying L1 blockchain to L2, whether it has any assets attached or not.","In Optimism terminology ""deposit"" refers to any message going from the underlying L1 blockchain to L2, whether it has any assets attached or not.
Similarly, ""withdrawal"" refers to any message going from L2 to the underlying L1.  
[See here for the messenger specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/messengers.md) and [here for the bridge specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md).  
<!--"
131,What does a withdrawal mean in the context of Optimism?,"In the context of Optimism, a withdrawal refers to any message going from L2 to the underlying L1 blockchain.","In Optimism terminology ""deposit"" refers to any message going from the underlying L1 blockchain to L2, whether it has any assets attached or not.
Similarly, ""withdrawal"" refers to any message going from L2 to the underlying L1.  
[See here for the messenger specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/messengers.md) and [here for the bridge specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md).  
<!--"
132,Will the gas costs for communication between layers change?,"Yes, the gas costs for communication between layers are expected to change and will probably get lower.","The gas costs for communication between layers are going to change, they will probably get lower.
More information will be posted here once we have more exact information after we profile a test network.  
-->  
<!-- TODO get the figures and put them here -->"
132,Where can I find more information about the new gas costs?,More information will be posted in the documentation once they have more exact information after profiling a test network.,"The gas costs for communication between layers are going to change, they will probably get lower.
More information will be posted here once we have more exact information after we profile a test network.  
-->  
<!-- TODO get the figures and put them here -->"
133,How can I ensure my deposit transaction on Optimism doesn't run out of gas?,"To ensure your deposit transaction doesn't run out of gas, you should add a 50% buffer to the gas estimate returned by `estimateGas`. For example, if the estimated gas is 100,000, you should set your `gasLimit` to at least 150,000. The Optimism SDK already includes this buffer automatically.","To create a deposit we recommend that you use the pre-Bedrock contracts [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol) and [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol) also has low-level deposit functionality.  
With the OptimismPortal‚Äôs `depositTransaction` function you can do from L1 anything you can do by contacting L2 directly: send transactions, send payments, create contracts, etc.
This provides an uncensorable alternative in case the sequencer is down.
Even though the sequencer is down, verifiers (nodes that synchronize the Optimism state from L1) are still going to receive such transactions and modify the state accordingly.
When the sequencer is back up it has to process the transactions in the same order to have a valid state.  
We recommend adding a 50% buffer to whatever is returned by `estimateGas` to ensure that your deposit will not run out of gas (Note: the Optimism SDK already does this under the hood). For example, if you wish to send a deposit of ETH, you might call `eth_estimateGas` and see that the deposit is expected to consume `100,000 gas`. You should then multiply that estimated about by `1.5` and then send your transaction with a `gasLimit` of at least `150,000 gas`.  
:::tip
In order to prevent Optimism networks from being DOSed via forced L1 to L2 transactions that bypass the Sequencer, a fee adjustment schedule to all L1‚ÜíL2 transactions that closely mimics EIP1559 is included with Bedrock. Like in the current network, deposit fees are paid by burning some amount of L1 gas proportional to your deposit's L2 gas limit. Unfortunately, this means that you may have cases where you estimate how much gas an L1‚ÜíL2 deposit will cost, and deposit fees increase by the time your transaction gets included in a block and executed, causing your deposit to run out of gas and revert. This is why we recommend adding a 50% buffer to your `gasLimit` to ensure your deposit will not run out of gas.
:::  
Deposits that come from contracts still use [address aliasing](../build/differences.md#address-aliasing).  
Deposits are faster, about a minute, because they only require five blocks for confirmation (and L1 blocks are usually 12 seconds apart).  
[You can read the full deposit specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type).  
[You can read the full withdrawal specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)"
133,What happens if the sequencer is down when I make a deposit on Optimism?,"If the sequencer is down, you can still make deposits using the `depositTransaction` function of the OptimismPortal. Verifiers will receive these transactions and update the state accordingly. When the sequencer is back up, it will process the transactions in the same order to maintain a valid state.","To create a deposit we recommend that you use the pre-Bedrock contracts [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol) and [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol) also has low-level deposit functionality.  
With the OptimismPortal‚Äôs `depositTransaction` function you can do from L1 anything you can do by contacting L2 directly: send transactions, send payments, create contracts, etc.
This provides an uncensorable alternative in case the sequencer is down.
Even though the sequencer is down, verifiers (nodes that synchronize the Optimism state from L1) are still going to receive such transactions and modify the state accordingly.
When the sequencer is back up it has to process the transactions in the same order to have a valid state.  
We recommend adding a 50% buffer to whatever is returned by `estimateGas` to ensure that your deposit will not run out of gas (Note: the Optimism SDK already does this under the hood). For example, if you wish to send a deposit of ETH, you might call `eth_estimateGas` and see that the deposit is expected to consume `100,000 gas`. You should then multiply that estimated about by `1.5` and then send your transaction with a `gasLimit` of at least `150,000 gas`.  
:::tip
In order to prevent Optimism networks from being DOSed via forced L1 to L2 transactions that bypass the Sequencer, a fee adjustment schedule to all L1‚ÜíL2 transactions that closely mimics EIP1559 is included with Bedrock. Like in the current network, deposit fees are paid by burning some amount of L1 gas proportional to your deposit's L2 gas limit. Unfortunately, this means that you may have cases where you estimate how much gas an L1‚ÜíL2 deposit will cost, and deposit fees increase by the time your transaction gets included in a block and executed, causing your deposit to run out of gas and revert. This is why we recommend adding a 50% buffer to your `gasLimit` to ensure your deposit will not run out of gas.
:::  
Deposits that come from contracts still use [address aliasing](../build/differences.md#address-aliasing).  
Deposits are faster, about a minute, because they only require five blocks for confirmation (and L1 blocks are usually 12 seconds apart).  
[You can read the full deposit specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type).  
[You can read the full withdrawal specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)"
133,Why do I need to add a buffer to the gas limit for L1 to L2 transactions on Optimism?,"A buffer is recommended to prevent your transaction from running out of gas due to fee adjustments that mimic EIP1559. These adjustments can cause the actual gas cost to be higher than initially estimated, so adding a 50% buffer helps ensure your transaction will be successfully included in a block and executed.","To create a deposit we recommend that you use the pre-Bedrock contracts [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol) and [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol) also has low-level deposit functionality.  
With the OptimismPortal‚Äôs `depositTransaction` function you can do from L1 anything you can do by contacting L2 directly: send transactions, send payments, create contracts, etc.
This provides an uncensorable alternative in case the sequencer is down.
Even though the sequencer is down, verifiers (nodes that synchronize the Optimism state from L1) are still going to receive such transactions and modify the state accordingly.
When the sequencer is back up it has to process the transactions in the same order to have a valid state.  
We recommend adding a 50% buffer to whatever is returned by `estimateGas` to ensure that your deposit will not run out of gas (Note: the Optimism SDK already does this under the hood). For example, if you wish to send a deposit of ETH, you might call `eth_estimateGas` and see that the deposit is expected to consume `100,000 gas`. You should then multiply that estimated about by `1.5` and then send your transaction with a `gasLimit` of at least `150,000 gas`.  
:::tip
In order to prevent Optimism networks from being DOSed via forced L1 to L2 transactions that bypass the Sequencer, a fee adjustment schedule to all L1‚ÜíL2 transactions that closely mimics EIP1559 is included with Bedrock. Like in the current network, deposit fees are paid by burning some amount of L1 gas proportional to your deposit's L2 gas limit. Unfortunately, this means that you may have cases where you estimate how much gas an L1‚ÜíL2 deposit will cost, and deposit fees increase by the time your transaction gets included in a block and executed, causing your deposit to run out of gas and revert. This is why we recommend adding a 50% buffer to your `gasLimit` to ensure your deposit will not run out of gas.
:::  
Deposits that come from contracts still use [address aliasing](../build/differences.md#address-aliasing).  
Deposits are faster, about a minute, because they only require five blocks for confirmation (and L1 blocks are usually 12 seconds apart).  
[You can read the full deposit specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type).  
[You can read the full withdrawal specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)"
134,Can you explain what this section of the Optimism documentation is about?,This section discusses some of the changes in Optimism internals.,This section discusses some of the changes in Optimism internals.
135,How are L2 blocks saved to the Ethereum blockchain now?,L2 blocks are saved to the Ethereum blockchain using a non-contract address to minimize L1 gas expenses.,"There is no longer a CTC (canonical transaction chain) contract. Instead, L2 blocks are saved to the Ethereum blockchain using a non-contract address to minimize the L1 gas expenses. Please see the [Public Testnets](./public-testnets.md) page for more information on where to find batch submission addresses.  
[The block and transaction format is also different](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md#derivation)."
135,Where can I find more information about batch submission addresses for L2 blocks?,You can find more information on the Public Testnets page in the Optimism Governance Documentation.,"There is no longer a CTC (canonical transaction chain) contract. Instead, L2 blocks are saved to the Ethereum blockchain using a non-contract address to minimize the L1 gas expenses. Please see the [Public Testnets](./public-testnets.md) page for more information on where to find batch submission addresses.  
[The block and transaction format is also different](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md#derivation)."
135,Is the block and transaction format the same as before?,"No, the block and transaction format is different. You can find more details in the Optimism GitHub repository under the rollup-node specifications.","There is no longer a CTC (canonical transaction chain) contract. Instead, L2 blocks are saved to the Ethereum blockchain using a non-contract address to minimize the L1 gas expenses. Please see the [Public Testnets](./public-testnets.md) page for more information on where to find batch submission addresses.  
[The block and transaction format is also different](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md#derivation)."
136,What's the latest major release of OP Mainnet?,The latest major release of OP Mainnet is called Bedrock.,"---
title: Bedrock Differences
lang: en-US
---  
Bedrock is the latest major release of OP Mainnet.
Here are the major changes:"
137,Which sections of the Optimism Governance Documentation should a wallet developer focus on?,"A wallet developer should focus on the sections related to EIP-1559, JSON-RPC, and Block Production. These sections will help them understand transaction costs and timing, which are crucial for their users.","If you want to jump directly to the parts relevant to your job role, here are the parts we think will be most useful  
<details>
<summary>Wallet developer</summary>  
As a wallet developer you are most likely to interact with the JSON RPC, and your users want to know how much their transactions are going to cost.
Timing may also be relevant.  
- [EIP-1559](#eip-1559)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp frontend developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp backend (protocol) developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Infrastructure provider (or anybody else running a node)</summary>  
To run a node you need to understand the executables required to run it.
You might also be interested in the existence of the mempool and the changes in block timing, fees, and the JSON RPC.  
- [Mempool](#mempool)
- [Block Production](#block-production)
- [Historical Data](#historical-data)
- [JSON-RPC](#json-rpc)
- [Chain Reorganizations](#chain-reorganizations)  
[See here for a more detailed guide](./node-operator-guide.md) on how to run a Bedrock node.  
</details>  
<details>
<summary>Bridge developer</summary>  
As a bridge developer you are likely most interested in deposits into OP Mainnet and withdrawals back into Ethereum L1.  
- [Two-Phase Withdrawals](#two-phase-withdrawals)
- [Deposits](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc)  
</details>"
137,What information is important for a Dapp frontend developer in the Optimism Governance Documentation?,"A Dapp frontend developer should look at the sections on EIP-1559, Mempool, JSON-RPC, and Block Production. These sections cover transaction fees, changes in the RPC interface, and block timing, which are relevant for application development.","If you want to jump directly to the parts relevant to your job role, here are the parts we think will be most useful  
<details>
<summary>Wallet developer</summary>  
As a wallet developer you are most likely to interact with the JSON RPC, and your users want to know how much their transactions are going to cost.
Timing may also be relevant.  
- [EIP-1559](#eip-1559)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp frontend developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp backend (protocol) developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Infrastructure provider (or anybody else running a node)</summary>  
To run a node you need to understand the executables required to run it.
You might also be interested in the existence of the mempool and the changes in block timing, fees, and the JSON RPC.  
- [Mempool](#mempool)
- [Block Production](#block-production)
- [Historical Data](#historical-data)
- [JSON-RPC](#json-rpc)
- [Chain Reorganizations](#chain-reorganizations)  
[See here for a more detailed guide](./node-operator-guide.md) on how to run a Bedrock node.  
</details>  
<details>
<summary>Bridge developer</summary>  
As a bridge developer you are likely most interested in deposits into OP Mainnet and withdrawals back into Ethereum L1.  
- [Two-Phase Withdrawals](#two-phase-withdrawals)
- [Deposits](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc)  
</details>"
137,What should an infrastructure provider know from the Optimism Governance Documentation?,"An infrastructure provider should be familiar with the sections on Mempool, Block Production, Historical Data, JSON-RPC, and Chain Reorganizations. Additionally, they should refer to the detailed guide on how to run a Bedrock node.","If you want to jump directly to the parts relevant to your job role, here are the parts we think will be most useful  
<details>
<summary>Wallet developer</summary>  
As a wallet developer you are most likely to interact with the JSON RPC, and your users want to know how much their transactions are going to cost.
Timing may also be relevant.  
- [EIP-1559](#eip-1559)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp frontend developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp backend (protocol) developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Infrastructure provider (or anybody else running a node)</summary>  
To run a node you need to understand the executables required to run it.
You might also be interested in the existence of the mempool and the changes in block timing, fees, and the JSON RPC.  
- [Mempool](#mempool)
- [Block Production](#block-production)
- [Historical Data](#historical-data)
- [JSON-RPC](#json-rpc)
- [Chain Reorganizations](#chain-reorganizations)  
[See here for a more detailed guide](./node-operator-guide.md) on how to run a Bedrock node.  
</details>  
<details>
<summary>Bridge developer</summary>  
As a bridge developer you are likely most interested in deposits into OP Mainnet and withdrawals back into Ethereum L1.  
- [Two-Phase Withdrawals](#two-phase-withdrawals)
- [Deposits](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc)  
</details>"
138,How often are blocks produced in the Bedrock network?,"Blocks in the Bedrock network are produced every two seconds. However, this value may change in the future.",":::warning Block Time Subject to Change  
Currently blocks are produced every two seconds.
However, that value may change in the future.  
:::  
Unlike the legacy network which mines a block for every incoming transaction, the Bedrock network will produce new blocks every two seconds. This introduces the following changes to the EVM:  
- `TIMESTAMP` will return the timestamp of the block. It will update every two seconds.
- `BLOCKNUMBER` will return an actual block number. It will update every two seconds. The one-to-one mapping between blocks and transactions will no longer apply.  
The Bedrock upgrade also introduces the concept of _system transactions_. System transactions are created by the `op-node`, and are used to execute deposits and update the L2's view of L1. They have the following attributes:  
- Every block will contain at least one system transaction called the [L1 attributes deposited transaction](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#l1-attributes-deposited-transaction). It will always be the first transaction in the block.
- Some blocks will contain one or more [user-deposited transactions](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#user-deposited-transactions).
- All system transactions have an [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718)-compatible transaction type of `0x7E`.
- All system transactions are unsigned, and set their `v`, `r`, and `s` fields to `null`.  
For more information about these transactions, see the [deposited transactions specification](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md) on GitHub.  
:::warning Known Issue
Some Ethereum client libraries, such as Web3j, cannot parse the `null` signature fields described above. To work around this issue, you will need to manually filter out the system transactions before passing them to the library.
:::"
138,What is a system transaction in the Bedrock network?,"System transactions are created by the `op-node` and are used to execute deposits and update the Layer 2's view of Layer 1. Every block will contain at least one system transaction called the L1 attributes deposited transaction, which will always be the first transaction in the block. Some blocks may also contain user-deposited transactions.",":::warning Block Time Subject to Change  
Currently blocks are produced every two seconds.
However, that value may change in the future.  
:::  
Unlike the legacy network which mines a block for every incoming transaction, the Bedrock network will produce new blocks every two seconds. This introduces the following changes to the EVM:  
- `TIMESTAMP` will return the timestamp of the block. It will update every two seconds.
- `BLOCKNUMBER` will return an actual block number. It will update every two seconds. The one-to-one mapping between blocks and transactions will no longer apply.  
The Bedrock upgrade also introduces the concept of _system transactions_. System transactions are created by the `op-node`, and are used to execute deposits and update the L2's view of L1. They have the following attributes:  
- Every block will contain at least one system transaction called the [L1 attributes deposited transaction](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#l1-attributes-deposited-transaction). It will always be the first transaction in the block.
- Some blocks will contain one or more [user-deposited transactions](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#user-deposited-transactions).
- All system transactions have an [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718)-compatible transaction type of `0x7E`.
- All system transactions are unsigned, and set their `v`, `r`, and `s` fields to `null`.  
For more information about these transactions, see the [deposited transactions specification](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md) on GitHub.  
:::warning Known Issue
Some Ethereum client libraries, such as Web3j, cannot parse the `null` signature fields described above. To work around this issue, you will need to manually filter out the system transactions before passing them to the library.
:::"
138,What should I do if my Ethereum client library cannot parse the `null` signature fields in system transactions?,"If your Ethereum client library, such as Web3j, cannot parse the `null` signature fields in system transactions, you will need to manually filter out the system transactions before passing them to the library.",":::warning Block Time Subject to Change  
Currently blocks are produced every two seconds.
However, that value may change in the future.  
:::  
Unlike the legacy network which mines a block for every incoming transaction, the Bedrock network will produce new blocks every two seconds. This introduces the following changes to the EVM:  
- `TIMESTAMP` will return the timestamp of the block. It will update every two seconds.
- `BLOCKNUMBER` will return an actual block number. It will update every two seconds. The one-to-one mapping between blocks and transactions will no longer apply.  
The Bedrock upgrade also introduces the concept of _system transactions_. System transactions are created by the `op-node`, and are used to execute deposits and update the L2's view of L1. They have the following attributes:  
- Every block will contain at least one system transaction called the [L1 attributes deposited transaction](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#l1-attributes-deposited-transaction). It will always be the first transaction in the block.
- Some blocks will contain one or more [user-deposited transactions](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#user-deposited-transactions).
- All system transactions have an [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718)-compatible transaction type of `0x7E`.
- All system transactions are unsigned, and set their `v`, `r`, and `s` fields to `null`.  
For more information about these transactions, see the [deposited transactions specification](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md) on GitHub.  
:::warning Known Issue
Some Ethereum client libraries, such as Web3j, cannot parse the `null` signature fields described above. To work around this issue, you will need to manually filter out the system transactions before passing them to the library.
:::"
139,How does EIP-1559 affect transaction fees on the Optimism network?,"EIP-1559 introduces a two-component fee structure: the base fee and the priority fee. The base fee is the same for all transactions in a block and varies based on block demand, while the priority fee is specified in the transaction and varies between transactions. On Optimism, ETH is not burned, and some EIP-1559 parameters differ from Ethereum, such as the block gas target and elasticity multiplier.","As part of the Bedrock upgrade, we have upgraded the network to support [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559). In EIP-1559 the cost of a unit of gas is composed of two components:  
- **Base fee**: This fee is the same for all transactions in a block. It varies between blocks based on the difference between the actual size of the blocks (which depends on the demand for block space) and the target block size. When the block uses more gas than the target block size the base fee goes up to discourage demand. When the block uses less gas than the target block size the base fee goes down to encourage demand.
- **Priority fee**: This fee is specified in the transaction itself and varies between transactions. Block proposers are expected to select the transactions that offer them the highest priority fees first.  
There are some differences between Ethereum and OP Mainnet in this regard:  
- ETH is not burned. Burning ETH on L2 would only lock it in the bridge forever.
- Some EIP 1559 parameters are different:  
| Parameter | OP Mainnet value | Ethereum value (for reference) |
| - | -: | -: |
| Block gas limit | 30,000,000 gas | 30,000,000 gas
| Block gas target | 5,000,000 gas | 15,000,000 gas
| EIP-1559 elasticity multiplier | 6 | 2
| EIP-1559 denominator | 50 | 8
| Maximum base fee increase (per block) | 10% | 12.5%
| Maximum base fee decrease (per block) | 2% | 12.5%
| Block time in seconds | 2 | 12  
The L1 security fee, which is the majority of the transaction cost, uses the same mechanism as before the upgrade. However, the transactions to L1 are going to be submitted on a [non-contract address](#the-transaction-trail). Between that and improved compression, the L1 security fee should be reduced by about 20%.  
From an application development perspective, EIP-1559 introduces the following changes:  
- The `BASEFEE` opcode is now supported. The `BASEFEE` opcodes returns the base fee of the current block.
- The `eth_maxPriorityFeePerGas` and `eth_feeHistory` RPC methods are now supported. `eth_maxPriorityFeePerGas` returns a fee per gas that is an estimate of how much you can pay as a priority fee, or 'tip', to get a transaction included in the current block. `eth_feeHistory` returns a collection of historical gas information from which you can decide what to submit as your `maxFeePerGas` and/or `maxPriorityFeePerGas`."
139,What are the differences in EIP-1559 parameters between Ethereum and OP Mainnet?,"Some key differences include the block gas target (5,000,000 gas on OP Mainnet vs. 15,000,000 gas on Ethereum), the EIP-1559 elasticity multiplier (6 on OP Mainnet vs. 2 on Ethereum), and the maximum base fee increase per block (10% on OP Mainnet vs. 12.5% on Ethereum). Additionally, the block time on OP Mainnet is 2 seconds compared to 12 seconds on Ethereum.","As part of the Bedrock upgrade, we have upgraded the network to support [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559). In EIP-1559 the cost of a unit of gas is composed of two components:  
- **Base fee**: This fee is the same for all transactions in a block. It varies between blocks based on the difference between the actual size of the blocks (which depends on the demand for block space) and the target block size. When the block uses more gas than the target block size the base fee goes up to discourage demand. When the block uses less gas than the target block size the base fee goes down to encourage demand.
- **Priority fee**: This fee is specified in the transaction itself and varies between transactions. Block proposers are expected to select the transactions that offer them the highest priority fees first.  
There are some differences between Ethereum and OP Mainnet in this regard:  
- ETH is not burned. Burning ETH on L2 would only lock it in the bridge forever.
- Some EIP 1559 parameters are different:  
| Parameter | OP Mainnet value | Ethereum value (for reference) |
| - | -: | -: |
| Block gas limit | 30,000,000 gas | 30,000,000 gas
| Block gas target | 5,000,000 gas | 15,000,000 gas
| EIP-1559 elasticity multiplier | 6 | 2
| EIP-1559 denominator | 50 | 8
| Maximum base fee increase (per block) | 10% | 12.5%
| Maximum base fee decrease (per block) | 2% | 12.5%
| Block time in seconds | 2 | 12  
The L1 security fee, which is the majority of the transaction cost, uses the same mechanism as before the upgrade. However, the transactions to L1 are going to be submitted on a [non-contract address](#the-transaction-trail). Between that and improved compression, the L1 security fee should be reduced by about 20%.  
From an application development perspective, EIP-1559 introduces the following changes:  
- The `BASEFEE` opcode is now supported. The `BASEFEE` opcodes returns the base fee of the current block.
- The `eth_maxPriorityFeePerGas` and `eth_feeHistory` RPC methods are now supported. `eth_maxPriorityFeePerGas` returns a fee per gas that is an estimate of how much you can pay as a priority fee, or 'tip', to get a transaction included in the current block. `eth_feeHistory` returns a collection of historical gas information from which you can decide what to submit as your `maxFeePerGas` and/or `maxPriorityFeePerGas`."
139,What new features does EIP-1559 introduce for application developers on Optimism?,"EIP-1559 introduces the `BASEFEE` opcode, which returns the base fee of the current block. It also supports the `eth_maxPriorityFeePerGas` and `eth_feeHistory` RPC methods. `eth_maxPriorityFeePerGas` provides an estimate of the priority fee needed to get a transaction included in the current block, while `eth_feeHistory` offers historical gas information to help decide on `maxFeePerGas` and `maxPriorityFeePerGas` values.","As part of the Bedrock upgrade, we have upgraded the network to support [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559). In EIP-1559 the cost of a unit of gas is composed of two components:  
- **Base fee**: This fee is the same for all transactions in a block. It varies between blocks based on the difference between the actual size of the blocks (which depends on the demand for block space) and the target block size. When the block uses more gas than the target block size the base fee goes up to discourage demand. When the block uses less gas than the target block size the base fee goes down to encourage demand.
- **Priority fee**: This fee is specified in the transaction itself and varies between transactions. Block proposers are expected to select the transactions that offer them the highest priority fees first.  
There are some differences between Ethereum and OP Mainnet in this regard:  
- ETH is not burned. Burning ETH on L2 would only lock it in the bridge forever.
- Some EIP 1559 parameters are different:  
| Parameter | OP Mainnet value | Ethereum value (for reference) |
| - | -: | -: |
| Block gas limit | 30,000,000 gas | 30,000,000 gas
| Block gas target | 5,000,000 gas | 15,000,000 gas
| EIP-1559 elasticity multiplier | 6 | 2
| EIP-1559 denominator | 50 | 8
| Maximum base fee increase (per block) | 10% | 12.5%
| Maximum base fee decrease (per block) | 2% | 12.5%
| Block time in seconds | 2 | 12  
The L1 security fee, which is the majority of the transaction cost, uses the same mechanism as before the upgrade. However, the transactions to L1 are going to be submitted on a [non-contract address](#the-transaction-trail). Between that and improved compression, the L1 security fee should be reduced by about 20%.  
From an application development perspective, EIP-1559 introduces the following changes:  
- The `BASEFEE` opcode is now supported. The `BASEFEE` opcodes returns the base fee of the current block.
- The `eth_maxPriorityFeePerGas` and `eth_feeHistory` RPC methods are now supported. `eth_maxPriorityFeePerGas` returns a fee per gas that is an estimate of how much you can pay as a priority fee, or 'tip', to get a transaction included in the current block. `eth_feeHistory` returns a collection of historical gas information from which you can decide what to submit as your `maxFeePerGas` and/or `maxPriorityFeePerGas`."
140,Why was the `L1BLOCKNUMBER` opcode removed in the Bedrock upgrade?,"The `L1BLOCKNUMBER` opcode was removed in the Bedrock upgrade to reduce differences between OP Mainnet's EVM and vanilla Ethereum's EVM, aiming to achieve maximal EVM equivalence.","One of the design goals of the Bedrock upgrade is to be maximally EVM equivalent. To reduce differences between OP Mainnet's EVM and vanilla Ethereum's EVM, we have removed the `L1BLOCKNUMBER` opcode."
141,How were ETH balances represented in the previous version of the Optimism system?,"In the previous version of the Optimism system, ETH balances were represented using an ERC20 contract called `OVM_ETH`.","The previous version of the system used an ERC20 contract called `OVM_ETH` to represent ETH balances. These balances will be migrated into the Bedrock network's state as part of the migration. To preserve backwards compatibility, the methods on the `OVM_ETH` contract will continue to work. Note, however, that the `totalSupply()` method will return zero."
141,What will happen to the `OVM_ETH` balances during the migration to the Bedrock network?,The `OVM_ETH` balances will be migrated into the Bedrock network's state as part of the migration process.,"The previous version of the system used an ERC20 contract called `OVM_ETH` to represent ETH balances. These balances will be migrated into the Bedrock network's state as part of the migration. To preserve backwards compatibility, the methods on the `OVM_ETH` contract will continue to work. Note, however, that the `totalSupply()` method will return zero."
141,Will the methods on the `OVM_ETH` contract still work after the migration?,"Yes, to preserve backwards compatibility, the methods on the `OVM_ETH` contract will continue to work after the migration. However, the `totalSupply()` method will return zero.","The previous version of the system used an ERC20 contract called `OVM_ETH` to represent ETH balances. These balances will be migrated into the Bedrock network's state as part of the migration. To preserve backwards compatibility, the methods on the `OVM_ETH` contract will continue to work. Note, however, that the `totalSupply()` method will return zero."
142,How does Bedrock handle block reorganization compared to the legacy network?,"Bedrock nodes always derive blocks from L1 (Layer 1). If L1 experiences a reorganization (reorg), L2 (Layer 2) will reorganize itself to match the state of L1. Blocks that have not been submitted to L1 yet are shared via a peer-to-peer network and can be reorganized if the data on L1 does not match the data shared over P2P.","Unlike the legacy network, Bedrock nodes _always_ derive blocks from L1. This means that if L1 experiences a reorg, L2 will reorganize itself to match the state of L1. Blocks that have not been submitted to L1 yet are gossipped via a peer-to-peer network, and can be reorganized if the data on L1 does not match the data gossiped over P2P.  
Bedrock adopts the same vocabulary as the Beacon Chain to describe block finality. Blocks can be in one of the following states:  
- `unsafe`, meaning that the block has been received via gossip but has not yet been submitted to L1. Unsafe blocks can be reorged if L1 reorgs, or the sequencer reorgs.
- `safe`, meaning that the block has been submitted to L1. Safe blocks can also be reorged if L1 reorgs.
- `finalized`, meaning that the block has reached sufficient depth to be considered final. Finalized blocks cannot be reorged.  
The current `safe`, `unsafe`, and `finalized` blocks can be queried via [JSON-RPC](#json-rpc)."
142,How can I query the current state of blocks in Bedrock?,"You can query the current `safe`, `unsafe`, and `finalized` blocks via JSON-RPC.","Unlike the legacy network, Bedrock nodes _always_ derive blocks from L1. This means that if L1 experiences a reorg, L2 will reorganize itself to match the state of L1. Blocks that have not been submitted to L1 yet are gossipped via a peer-to-peer network, and can be reorganized if the data on L1 does not match the data gossiped over P2P.  
Bedrock adopts the same vocabulary as the Beacon Chain to describe block finality. Blocks can be in one of the following states:  
- `unsafe`, meaning that the block has been received via gossip but has not yet been submitted to L1. Unsafe blocks can be reorged if L1 reorgs, or the sequencer reorgs.
- `safe`, meaning that the block has been submitted to L1. Safe blocks can also be reorged if L1 reorgs.
- `finalized`, meaning that the block has reached sufficient depth to be considered final. Finalized blocks cannot be reorged.  
The current `safe`, `unsafe`, and `finalized` blocks can be queried via [JSON-RPC](#json-rpc)."
143,Do Bedrock nodes support pre-Bedrock block data?,"Yes, Bedrock nodes can serve pre-Bedrock block bodies, transactions, and receipts out of the box.","Bedrock nodes can serve pre-Bedrock block bodies, transactions, and receipts out of the box. However, you will need to run a Legacy Geth instance to serve historical execution traces. See the [Node Operator Guide](./node-operator-guide.md) for more information about how to do this.  
Note that the following legacy fields have been removed from pre-Bedrock JSON-RPC transaction responses:  
- `queueOrigin`
- `l1TxOrigin`
- `l1BlockNumber`
- `l1Timestamp`
- `index`
- `queueIndex`
- `rawTransaction`  
If your application needs these fields, query Legacy Geth instead of `op-geth`."
143,What should I do if my application needs legacy fields from pre-Bedrock JSON-RPC transaction responses?,"If your application needs legacy fields like `queueOrigin`, `l1TxOrigin`, `l1BlockNumber`, `l1Timestamp`, `index`, `queueIndex`, or `rawTransaction`, you should query a Legacy Geth instance instead of `op-geth`.","Bedrock nodes can serve pre-Bedrock block bodies, transactions, and receipts out of the box. However, you will need to run a Legacy Geth instance to serve historical execution traces. See the [Node Operator Guide](./node-operator-guide.md) for more information about how to do this.  
Note that the following legacy fields have been removed from pre-Bedrock JSON-RPC transaction responses:  
- `queueOrigin`
- `l1TxOrigin`
- `l1BlockNumber`
- `l1Timestamp`
- `index`
- `queueIndex`
- `rawTransaction`  
If your application needs these fields, query Legacy Geth instead of `op-geth`."
143,Where can I find more information about running a Legacy Geth instance for historical execution traces?,You can find more information about running a Legacy Geth instance in the Node Operator Guide.,"Bedrock nodes can serve pre-Bedrock block bodies, transactions, and receipts out of the box. However, you will need to run a Legacy Geth instance to serve historical execution traces. See the [Node Operator Guide](./node-operator-guide.md) for more information about how to do this.  
Note that the following legacy fields have been removed from pre-Bedrock JSON-RPC transaction responses:  
- `queueOrigin`
- `l1TxOrigin`
- `l1BlockNumber`
- `l1Timestamp`
- `index`
- `queueIndex`
- `rawTransaction`  
If your application needs these fields, query Legacy Geth instead of `op-geth`."
144,How can I get the gas price for transactions on Optimism?,"For the L2 gas price, you can use the `eth_gasPrice` method. For the L1 gas price, you can call the `GasPriceOracle`'s `l1BaseFee` function.","Bedrock supports all of the standard JSON-RPC methods exposed by go-ethereum. In order to reduce differences between Bedrock and vanilla Ethereum, some legacy methods have been removed. These methods and their replacements are:  
- `eth_getBlockRange`: Use `eth_getBlockByNumber` in a batch request instead.
- `rollup_getInfo`: None of the information returned by this method exists on Bedrock, so there is no replacement for this method.
- `rollup_gasPrices`: Use [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice) instead for the L2 gas price.
For the L1 gas price, you can call the [`GasPriceOracle`'s `l1BaseFee` function](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#readContract#F5).
If you want to estimate the cost of a transaction, you can [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).  
To query `op-node`'s sync status, use the `optimism_syncStatus` RPC method. This method will return the current `safe`, `unsafe`, and `finalized` as seen by the `op-node`."
144,Is there a way to check the synchronization status of an Optimism node?,"Yes, you can use the `optimism_syncStatus` RPC method to query the sync status. This method will return the current `safe`, `unsafe`, and `finalized` statuses as seen by the `op-node`.","Bedrock supports all of the standard JSON-RPC methods exposed by go-ethereum. In order to reduce differences between Bedrock and vanilla Ethereum, some legacy methods have been removed. These methods and their replacements are:  
- `eth_getBlockRange`: Use `eth_getBlockByNumber` in a batch request instead.
- `rollup_getInfo`: None of the information returned by this method exists on Bedrock, so there is no replacement for this method.
- `rollup_gasPrices`: Use [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice) instead for the L2 gas price.
For the L1 gas price, you can call the [`GasPriceOracle`'s `l1BaseFee` function](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#readContract#F5).
If you want to estimate the cost of a transaction, you can [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).  
To query `op-node`'s sync status, use the `optimism_syncStatus` RPC method. This method will return the current `safe`, `unsafe`, and `finalized` as seen by the `op-node`."
144,What should I use instead of the `eth_getBlockRange` method on Bedrock?,You should use the `eth_getBlockByNumber` method in a batch request instead of `eth_getBlockRange` on Bedrock.,"Bedrock supports all of the standard JSON-RPC methods exposed by go-ethereum. In order to reduce differences between Bedrock and vanilla Ethereum, some legacy methods have been removed. These methods and their replacements are:  
- `eth_getBlockRange`: Use `eth_getBlockByNumber` in a batch request instead.
- `rollup_getInfo`: None of the information returned by this method exists on Bedrock, so there is no replacement for this method.
- `rollup_gasPrices`: Use [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice) instead for the L2 gas price.
For the L1 gas price, you can call the [`GasPriceOracle`'s `l1BaseFee` function](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#readContract#F5).
If you want to estimate the cost of a transaction, you can [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).  
To query `op-node`'s sync status, use the `optimism_syncStatus` RPC method. This method will return the current `safe`, `unsafe`, and `finalized` as seen by the `op-node`."
145,How does Bedrock handle pending transactions?,Bedrock creates blocks on a fixed interval and uses a private mempool to store pending transactions until they are included in a block.,"Since the legacy network creates a block for every transaction, it processes new transactions in a first-come-first-serve manner. Bedrock, however, creates blocks on a fixed interval and therefore needs a mempool to store pending transactions until they are included in a block. To minimize MEV, Bedrock's mempool is private. To submit transactions, you will need to configure `op-geth` to forward transactions to the sequencer. This may change in the future.  
The sequencer processes transactions in the mempool in order of their base and priority fees."
145,How are transactions processed in Bedrock's mempool?,The sequencer processes transactions in the mempool in order of their base and priority fees.,"Since the legacy network creates a block for every transaction, it processes new transactions in a first-come-first-serve manner. Bedrock, however, creates blocks on a fixed interval and therefore needs a mempool to store pending transactions until they are included in a block. To minimize MEV, Bedrock's mempool is private. To submit transactions, you will need to configure `op-geth` to forward transactions to the sequencer. This may change in the future.  
The sequencer processes transactions in the mempool in order of their base and priority fees."
145,Do I need to configure anything to submit transactions in Bedrock?,"Yes, you will need to configure `op-geth` to forward transactions to the sequencer.","Since the legacy network creates a block for every transaction, it processes new transactions in a first-come-first-serve manner. Bedrock, however, creates blocks on a fixed interval and therefore needs a mempool to store pending transactions until they are included in a block. To minimize MEV, Bedrock's mempool is private. To submit transactions, you will need to configure `op-geth` to forward transactions to the sequencer. This may change in the future.  
The sequencer processes transactions in the mempool in order of their base and priority fees."
146,How long does it take to finalize a withdrawal on the legacy network?,"On the legacy network, it takes seven days for the withdrawal to be finalized after sending a withdrawal message.","On the legacy network, funds are withdrawn as follows:  
1. Users send a withdrawal message.
2. Users wait seven days for the withdrawal to be finalized.
3. Users post a withdrawal proof on L1, and claim their funds.  
However, this introduces a security risk. If the withdrawal proof can be successfully forged, an attacker could withdraw funds from the bridge that they are not authorized to. This kind of attack has been exploited before - a fraudulent proof led to the loss of [$100M on Binance Smart Chain](https://www.nansen.ai/research/bnb-chains-cross-chain-bridge-exploit-explained).  
To eliminate this risk, Bedrock requires users to post their withdrawal proofs upfront. Users must wait for a valid output root to be proposed so that the withdrawal proof can be validated onchain. Once the seven-day waiting period has expired, users can then finalize the withdrawal and claim their funds. The updated withdrawal flow is as follows:  
1. Users send a withdrawal message.
2. Users wait for a state output to be proposed onchain. This can take up to an hour.
3. Users call `proveWithdrawalTransaction()` on the `OptimismPortal` to post and validate their proof.
4. Users wait for the withdrawal to be finalized. This takes seven days on mainnet.
5. Users call `finalizeWithdrawal()` on the `OptimismPortal` to claim their funds.  
Visualized, this flow looks like this:  
<div style=""text-align: center"">  
![](../../../assets/docs/bedrock/two-phase-withdrawals.png)  
</div>  
By posting the proof upfront, it gives onchain monitoring tools enough time to detect a fraudulent withdrawal proof and attempt corrective action.
Regular users can do this monitoring too. For example, an exchange could halt withdrawals in the event of a fraudulent proof.  
Since this change fundamentally changes the way withdrawals are handled, it is **not** backwards-compatible with the old network. If you are performing withdrawals outside our standard bridge interface, you will need to update your software. The easiest way to to do this is to use our [TypeScript SDK](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/packages/sdk), which includes two-phase withdrawals support out of the box.  
For more information on two-phase withdrawals, see the withdrawals specification on [GitHub](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)."
146,What is the main security improvement introduced by Bedrock for withdrawals?,"Bedrock requires users to post their withdrawal proofs upfront, which allows onchain monitoring tools to detect and attempt corrective action against fraudulent withdrawal proofs.","On the legacy network, funds are withdrawn as follows:  
1. Users send a withdrawal message.
2. Users wait seven days for the withdrawal to be finalized.
3. Users post a withdrawal proof on L1, and claim their funds.  
However, this introduces a security risk. If the withdrawal proof can be successfully forged, an attacker could withdraw funds from the bridge that they are not authorized to. This kind of attack has been exploited before - a fraudulent proof led to the loss of [$100M on Binance Smart Chain](https://www.nansen.ai/research/bnb-chains-cross-chain-bridge-exploit-explained).  
To eliminate this risk, Bedrock requires users to post their withdrawal proofs upfront. Users must wait for a valid output root to be proposed so that the withdrawal proof can be validated onchain. Once the seven-day waiting period has expired, users can then finalize the withdrawal and claim their funds. The updated withdrawal flow is as follows:  
1. Users send a withdrawal message.
2. Users wait for a state output to be proposed onchain. This can take up to an hour.
3. Users call `proveWithdrawalTransaction()` on the `OptimismPortal` to post and validate their proof.
4. Users wait for the withdrawal to be finalized. This takes seven days on mainnet.
5. Users call `finalizeWithdrawal()` on the `OptimismPortal` to claim their funds.  
Visualized, this flow looks like this:  
<div style=""text-align: center"">  
![](../../../assets/docs/bedrock/two-phase-withdrawals.png)  
</div>  
By posting the proof upfront, it gives onchain monitoring tools enough time to detect a fraudulent withdrawal proof and attempt corrective action.
Regular users can do this monitoring too. For example, an exchange could halt withdrawals in the event of a fraudulent proof.  
Since this change fundamentally changes the way withdrawals are handled, it is **not** backwards-compatible with the old network. If you are performing withdrawals outside our standard bridge interface, you will need to update your software. The easiest way to to do this is to use our [TypeScript SDK](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/packages/sdk), which includes two-phase withdrawals support out of the box.  
For more information on two-phase withdrawals, see the withdrawals specification on [GitHub](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)."
146,Is the new Bedrock withdrawal process backwards-compatible with the old network?,"No, the new Bedrock withdrawal process is not backwards-compatible with the old network. Users will need to update their software to perform withdrawals outside the standard bridge interface.","On the legacy network, funds are withdrawn as follows:  
1. Users send a withdrawal message.
2. Users wait seven days for the withdrawal to be finalized.
3. Users post a withdrawal proof on L1, and claim their funds.  
However, this introduces a security risk. If the withdrawal proof can be successfully forged, an attacker could withdraw funds from the bridge that they are not authorized to. This kind of attack has been exploited before - a fraudulent proof led to the loss of [$100M on Binance Smart Chain](https://www.nansen.ai/research/bnb-chains-cross-chain-bridge-exploit-explained).  
To eliminate this risk, Bedrock requires users to post their withdrawal proofs upfront. Users must wait for a valid output root to be proposed so that the withdrawal proof can be validated onchain. Once the seven-day waiting period has expired, users can then finalize the withdrawal and claim their funds. The updated withdrawal flow is as follows:  
1. Users send a withdrawal message.
2. Users wait for a state output to be proposed onchain. This can take up to an hour.
3. Users call `proveWithdrawalTransaction()` on the `OptimismPortal` to post and validate their proof.
4. Users wait for the withdrawal to be finalized. This takes seven days on mainnet.
5. Users call `finalizeWithdrawal()` on the `OptimismPortal` to claim their funds.  
Visualized, this flow looks like this:  
<div style=""text-align: center"">  
![](../../../assets/docs/bedrock/two-phase-withdrawals.png)  
</div>  
By posting the proof upfront, it gives onchain monitoring tools enough time to detect a fraudulent withdrawal proof and attempt corrective action.
Regular users can do this monitoring too. For example, an exchange could halt withdrawals in the event of a fraudulent proof.  
Since this change fundamentally changes the way withdrawals are handled, it is **not** backwards-compatible with the old network. If you are performing withdrawals outside our standard bridge interface, you will need to update your software. The easiest way to to do this is to use our [TypeScript SDK](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/packages/sdk), which includes two-phase withdrawals support out of the box.  
For more information on two-phase withdrawals, see the withdrawals specification on [GitHub](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)."
147,Will the changes in the new Bedrock network be compatible with the old network?,"No, the changes in the new Bedrock network are not backwards-compatible with the old network.",":::warning Breaking Change
The changes described in this section are **not** backwards-compatible with the old network. Please read this section carefully.
:::  
On the legacy network, deposits are replayable. This is no longer the case in Bedrock. Additionally, as part of the migration, all deposits on the legacy network that have not been replayed will no longer be replayable. **This means that if you have not replayed your deposit, you must do so before the migration.** This affects fewer than 100 transactions of the nearly 40 million on mainnet."
147,What happens to deposits on the legacy network that have not been replayed before the migration?,Deposits on the legacy network that have not been replayed before the migration will no longer be replayable.,":::warning Breaking Change
The changes described in this section are **not** backwards-compatible with the old network. Please read this section carefully.
:::  
On the legacy network, deposits are replayable. This is no longer the case in Bedrock. Additionally, as part of the migration, all deposits on the legacy network that have not been replayed will no longer be replayable. **This means that if you have not replayed your deposit, you must do so before the migration.** This affects fewer than 100 transactions of the nearly 40 million on mainnet."
147,How many transactions on the mainnet are affected by the need to replay deposits before the migration?,Fewer than 100 transactions out of nearly 40 million on the mainnet are affected by the need to replay deposits before the migration.,":::warning Breaking Change
The changes described in this section are **not** backwards-compatible with the old network. Please read this section carefully.
:::  
On the legacy network, deposits are replayable. This is no longer the case in Bedrock. Additionally, as part of the migration, all deposits on the legacy network that have not been replayed will no longer be replayable. **This means that if you have not replayed your deposit, you must do so before the migration.** This affects fewer than 100 transactions of the nearly 40 million on mainnet."
148,What's the purpose of the `L2OutputOracle` contract in Optimism?,"The `L2OutputOracle` contract contains the state root of the Optimism blockchain, such as OP Mainnet and OP Goerli. It will also receive the result of the fault proof process once fault proofs are activated.","[The `L2OutputOracle` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L2OutputOracle.sol) contains the state root of the Optimism blockchain (OP Mainnet, OP Goerli, etc.).
Once fault proofs are activated, it will be the one that receives the result of the fault proof process.  
This is the contract that replaces the old State Commitment Chain."
148,What did the `L2OutputOracle` contract replace in the Optimism system?,The `L2OutputOracle` contract replaced the old State Commitment Chain in the Optimism system.,"[The `L2OutputOracle` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L2OutputOracle.sol) contains the state root of the Optimism blockchain (OP Mainnet, OP Goerli, etc.).
Once fault proofs are activated, it will be the one that receives the result of the fault proof process.  
This is the contract that replaces the old State Commitment Chain."
149,How can I send messages between L1 and L2 in Optimism?,You can send messages between L1 and L2 using the L1CrossDomainMessenger and L2CrossDomainMessenger. This is the recommended method unless you need to send L2 transactions via L1 to bypass the sequencer.,"[The `OptimismPortal` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol) provides [the low-level API for communications between layers](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc). Unless you are trying to send L2 transactions via L1 to bypass the sequencer, we strongly recommend sending messages between L1 and L2 via the L1CrossDomainMessenger and L2CrossDomainMessenger."
149,What is the purpose of the OptimismPortal contract?,"The OptimismPortal contract provides the low-level API for communications between layers, such as deposits from the underlying L1 Ethereum (Goerli, etc.) to L2 (OP Mainnet, OP Goerli, etc.).","[The `OptimismPortal` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol) provides [the low-level API for communications between layers](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc). Unless you are trying to send L2 transactions via L1 to bypass the sequencer, we strongly recommend sending messages between L1 and L2 via the L1CrossDomainMessenger and L2CrossDomainMessenger."
150,Do I need to modify my dapp to run on Bedrock?,"No, you don't need to modify your dapp to run on Bedrock because the contracts provide the same interface as existed pre-Bedrock.","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol):
The `L1CrossDomainMessenger` contract is used for sending messages between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.). Those messages may or may not have assets attached to them.
- [L1StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol):
The `L1StandardBridge` contract uses `L1CrossDomainMessenger` to transfer ETH and ERC-20 tokens between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.)."
150,What is the purpose of the L1CrossDomainMessenger contract?,"The L1CrossDomainMessenger contract is used for sending messages between the underlying L1 (like Ethereum, Goerli) and L2 (like OP Mainnet, OP Goerli). These messages may or may not have assets attached to them.","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol):
The `L1CrossDomainMessenger` contract is used for sending messages between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.). Those messages may or may not have assets attached to them.
- [L1StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol):
The `L1StandardBridge` contract uses `L1CrossDomainMessenger` to transfer ETH and ERC-20 tokens between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.)."
150,How does the L1StandardBridge contract work?,"The L1StandardBridge contract uses the L1CrossDomainMessenger to transfer ETH and ERC-20 tokens between the underlying L1 (like Ethereum, Goerli) and L2 (like OP Mainnet, OP Goerli).","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol):
The `L1CrossDomainMessenger` contract is used for sending messages between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.). Those messages may or may not have assets attached to them.
- [L1StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol):
The `L1StandardBridge` contract uses `L1CrossDomainMessenger` to transfer ETH and ERC-20 tokens between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.)."
151,How can I find the address of the `L1Block` contract in Optimism?,The `L1Block` contract in Optimism is located at the address `0x4200000000000000000000000000000000000015`.,"[The `L1Block` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol) sits at address `0x4200000000000000000000000000000000000015`.
You can use [the getter functions](https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions) to get these parameters:  
- `number`: The latest L1 block number known to L2 (the `L1BlockNumber` contract is still supported to avoid breaking existing applications)
- `timestamp`: The timestamp of the latest L1 block
- `basefee`: The base fee of the latest L1 block
- `hash`: The hash of the latest L1 block
- `sequenceNumber`: The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)  
Currently the L1 information is delayed by two block confirmations (~24 seconds) to minimize the impact of reorgs."
151,What kind of information can I get from the `L1Block` contract?,"You can use getter functions to retrieve the following parameters from the `L1Block` contract: the latest L1 block number (`number`), the timestamp of the latest L1 block (`timestamp`), the base fee of the latest L1 block (`basefee`), the hash of the latest L1 block (`hash`), and the number of the L2 block within the epoch (`sequenceNumber`).","[The `L1Block` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol) sits at address `0x4200000000000000000000000000000000000015`.
You can use [the getter functions](https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions) to get these parameters:  
- `number`: The latest L1 block number known to L2 (the `L1BlockNumber` contract is still supported to avoid breaking existing applications)
- `timestamp`: The timestamp of the latest L1 block
- `basefee`: The base fee of the latest L1 block
- `hash`: The hash of the latest L1 block
- `sequenceNumber`: The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)  
Currently the L1 information is delayed by two block confirmations (~24 seconds) to minimize the impact of reorgs."
151,Why is there a delay in the L1 information provided by the `L1Block` contract?,"The L1 information is delayed by two block confirmations, which is approximately 24 seconds, to minimize the impact of reorgs (reorganizations) on the network.","[The `L1Block` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol) sits at address `0x4200000000000000000000000000000000000015`.
You can use [the getter functions](https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions) to get these parameters:  
- `number`: The latest L1 block number known to L2 (the `L1BlockNumber` contract is still supported to avoid breaking existing applications)
- `timestamp`: The timestamp of the latest L1 block
- `basefee`: The base fee of the latest L1 block
- `hash`: The hash of the latest L1 block
- `sequenceNumber`: The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)  
Currently the L1 information is delayed by two block confirmations (~24 seconds) to minimize the impact of reorgs."
152,How does the SequencerFeeVault contract fund the sequencer on L1?,The SequencerFeeVault contract funds the sequencer on L1 using the ETH base fee collected on L2.,"[The `SequencerFeeVault` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/SequencerFeeVault.sol) handles funding the sequencer on L1 using the ETH base fee on L2.  
The fees are calculated using [EIP 1559](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md), the same mechanism that Ethereum uses (but with different parameter values)."
152,How are the fees calculated for the SequencerFeeVault contract?,"The fees are calculated using the EIP 1559 mechanism, which is the same mechanism used by Ethereum, but with different parameter values.","[The `SequencerFeeVault` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/SequencerFeeVault.sol) handles funding the sequencer on L1 using the ETH base fee on L2.  
The fees are calculated using [EIP 1559](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md), the same mechanism that Ethereum uses (but with different parameter values)."
153,How does the `L2ToL1MessagePasser` contract function in the Optimism network?,The `L2ToL1MessagePasser` contract is used internally by the `L2CrossDomainMessenger` to initiate withdrawals from Layer 2 (L2) to Layer 1 (L1).,"[The `L2ToL1MessagePasser` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) is used internally by `L2CrossDomainMessenger` to initiate withdrawals.  
Note that in Bedrock there are two contracts:  
- [The legacy contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyMessagePasser.sol) at address `0x4200000000000000000000000000000000000000`
- [The new contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) at address `0x4200000000000000000000000000000000000016`"
153,Are there different versions of the `L2ToL1MessagePasser` contract in Optimism's Bedrock?,"Yes, in Bedrock there are two versions of the contract: the legacy contract at address `0x4200000000000000000000000000000000000000` and the new contract at address `0x4200000000000000000000000000000000000016`.","[The `L2ToL1MessagePasser` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) is used internally by `L2CrossDomainMessenger` to initiate withdrawals.  
Note that in Bedrock there are two contracts:  
- [The legacy contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyMessagePasser.sol) at address `0x4200000000000000000000000000000000000000`
- [The new contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) at address `0x4200000000000000000000000000000000000016`"
153,Where can I find the code for the `L2ToL1MessagePasser` contract?,You can find the code for the `L2ToL1MessagePasser` contract on GitHub. The legacy contract is available [here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyMessagePasser.sol) and the new contract is available [here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol).,"[The `L2ToL1MessagePasser` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) is used internally by `L2CrossDomainMessenger` to initiate withdrawals.  
Note that in Bedrock there are two contracts:  
- [The legacy contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyMessagePasser.sol) at address `0x4200000000000000000000000000000000000000`
- [The new contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) at address `0x4200000000000000000000000000000000000016`"
154,Do I need to modify my dapp to run on Bedrock?,"No, you don't need to modify your dapp to run on Bedrock because the contracts provide the same interface as existed pre-Bedrock.","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1BlockNumber](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/L1BlockNumber.sol):
The `L1BlockNumber` contract provides the number of the latest L1 block.
In Bedrock it is simply a proxy to [`L1Block`](#l1block).
- [L2CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol):
The `L2CrossDomainMessenger` contract is used to send messages from L2 (OP Mainnet, OP Goerli, etc.) to the underlying L1 (Ethereum, Goerli, etc.).
- [L2StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol):
The `L2StandardBridge` contract is used to ""attach"" assets (ETH and ERC-20 tokens) to messages that are then sent by `L2CrossDomainMessenger`.
- [WETH9](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/vendor/WETH9.sol):
[The WETH9 contract](https://web.archive.org/web/20221022164309/https://weth.io/) is an ERC-20 token that wraps around ETH to provide extra functionality, such as approvals."
154,What is the purpose of the L2CrossDomainMessenger contract?,The L2CrossDomainMessenger contract is used to send messages from L2 (like OP Mainnet or OP Goerli) to the underlying L1 (like Ethereum or Goerli).,"These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1BlockNumber](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/L1BlockNumber.sol):
The `L1BlockNumber` contract provides the number of the latest L1 block.
In Bedrock it is simply a proxy to [`L1Block`](#l1block).
- [L2CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol):
The `L2CrossDomainMessenger` contract is used to send messages from L2 (OP Mainnet, OP Goerli, etc.) to the underlying L1 (Ethereum, Goerli, etc.).
- [L2StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol):
The `L2StandardBridge` contract is used to ""attach"" assets (ETH and ERC-20 tokens) to messages that are then sent by `L2CrossDomainMessenger`.
- [WETH9](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/vendor/WETH9.sol):
[The WETH9 contract](https://web.archive.org/web/20221022164309/https://weth.io/) is an ERC-20 token that wraps around ETH to provide extra functionality, such as approvals."
154,What does the L2StandardBridge contract do?,"The L2StandardBridge contract is used to 'attach' assets, such as ETH and ERC-20 tokens, to messages that are then sent by the L2CrossDomainMessenger.","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1BlockNumber](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/L1BlockNumber.sol):
The `L1BlockNumber` contract provides the number of the latest L1 block.
In Bedrock it is simply a proxy to [`L1Block`](#l1block).
- [L2CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol):
The `L2CrossDomainMessenger` contract is used to send messages from L2 (OP Mainnet, OP Goerli, etc.) to the underlying L1 (Ethereum, Goerli, etc.).
- [L2StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol):
The `L2StandardBridge` contract is used to ""attach"" assets (ETH and ERC-20 tokens) to messages that are then sent by `L2CrossDomainMessenger`.
- [WETH9](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/vendor/WETH9.sol):
[The WETH9 contract](https://web.archive.org/web/20221022164309/https://weth.io/) is an ERC-20 token that wraps around ETH to provide extra functionality, such as approvals."
155,Why are some contracts kept even if they are no longer relevant?,Some contracts are kept as part of the state in case there is a call in any decentralized application (dapp) that uses them.,"These are contracts that are no longer relevant, but are kept as part of the state in case there is a call in any dapp that uses them.  
- [DeployerWhitelist](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/DeployerWhitelist.sol):
The `DeployerWhitelist` contract used to manage the whitelist before [OP Mainnet moved out of beta](https://twitter.com/optimismFND/status/1471571415774023682).  
- [OVM_ETH](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyERC20ETH.sol):
The `OVM_ETH` contract used to manage users ETH balances prior to Bedrock."
155,What was the purpose of the DeployerWhitelist contract?,The DeployerWhitelist contract was used to manage the whitelist before OP Mainnet moved out of beta.,"These are contracts that are no longer relevant, but are kept as part of the state in case there is a call in any dapp that uses them.  
- [DeployerWhitelist](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/DeployerWhitelist.sol):
The `DeployerWhitelist` contract used to manage the whitelist before [OP Mainnet moved out of beta](https://twitter.com/optimismFND/status/1471571415774023682).  
- [OVM_ETH](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyERC20ETH.sol):
The `OVM_ETH` contract used to manage users ETH balances prior to Bedrock."
155,What did the OVM_ETH contract do?,The OVM_ETH contract was used to manage users' ETH balances prior to the Bedrock update.,"These are contracts that are no longer relevant, but are kept as part of the state in case there is a call in any dapp that uses them.  
- [DeployerWhitelist](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/DeployerWhitelist.sol):
The `DeployerWhitelist` contract used to manage the whitelist before [OP Mainnet moved out of beta](https://twitter.com/optimismFND/status/1471571415774023682).  
- [OVM_ETH](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyERC20ETH.sol):
The `OVM_ETH` contract used to manage users ETH balances prior to Bedrock."
156,What's the difference between a deposit and a withdrawal in Optimism?,"In Optimism, a 'deposit' refers to any message going from the underlying L1 blockchain to L2, whether it has any assets attached or not. A 'withdrawal' refers to any message going from L2 to the underlying L1.","In Optimism terminology ""deposit"" refers to any message going from the underlying L1 blockchain to L2, whether it has any assets attached or not.
Similarly, ""withdrawal"" refers to any message going from L2 to the underlying L1.  
[See here for the messenger specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/messengers.md) and [here for the bridge specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md).  
<!--"
156,Do deposits in Optimism always involve transferring assets?,"No, in Optimism, a 'deposit' can refer to any message going from the underlying L1 blockchain to L2, whether it has any assets attached or not.","In Optimism terminology ""deposit"" refers to any message going from the underlying L1 blockchain to L2, whether it has any assets attached or not.
Similarly, ""withdrawal"" refers to any message going from L2 to the underlying L1.  
[See here for the messenger specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/messengers.md) and [here for the bridge specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md).  
<!--"
156,Where can I find more technical details about how messages are transferred in Optimism?,You can find more technical details about the messenger specifications [here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/messengers.md) and the bridge specifications [here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md).,"In Optimism terminology ""deposit"" refers to any message going from the underlying L1 blockchain to L2, whether it has any assets attached or not.
Similarly, ""withdrawal"" refers to any message going from L2 to the underlying L1.  
[See here for the messenger specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/messengers.md) and [here for the bridge specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md).  
<!--"
157,Will the gas costs for communication between layers change?,"Yes, the gas costs for communication between layers are expected to change and will probably get lower. More detailed information will be provided once the test network has been profiled.","The gas costs for communication between layers are going to change, they will probably get lower.
More information will be posted here once we have more exact information after we profile a test network.  
-->  
<!-- TODO get the figures and put them here -->"
157,When will we get more information about the new gas costs?,More information will be posted once the team has more exact data after profiling a test network.,"The gas costs for communication between layers are going to change, they will probably get lower.
More information will be posted here once we have more exact information after we profile a test network.  
-->  
<!-- TODO get the figures and put them here -->"
158,How can I ensure my deposit transaction on Optimism doesn't run out of gas?,"To ensure your deposit transaction doesn't run out of gas, you should add a 50% buffer to the gas estimate returned by `estimateGas`. For example, if `eth_estimateGas` estimates that your deposit will consume 100,000 gas, you should multiply this by 1.5 and set your `gasLimit` to at least 150,000 gas. The Optimism SDK already does this automatically.","To create a deposit we recommend that you use the pre-Bedrock contracts [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol) and [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol) also has low-level deposit functionality.  
With the OptimismPortal‚Äôs `depositTransaction` function you can do from L1 anything you can do by contacting L2 directly: send transactions, send payments, create contracts, etc.
This provides an uncensorable alternative in case the sequencer is down.
Even though the sequencer is down, verifiers (nodes that synchronize the Optimism state from L1) are still going to receive such transactions and modify the state accordingly.
When the sequencer is back up it has to process the transactions in the same order to have a valid state.  
We recommend adding a 50% buffer to whatever is returned by `estimateGas` to ensure that your deposit will not run out of gas (Note: the Optimism SDK already does this under the hood). For example, if you wish to send a deposit of ETH, you might call `eth_estimateGas` and see that the deposit is expected to consume `100,000 gas`. You should then multiply that estimated about by `1.5` and then send your transaction with a `gasLimit` of at least `150,000 gas`.  
:::tip
In order to prevent Optimism networks from being DOSed via forced L1 to L2 transactions that bypass the Sequencer, a fee adjustment schedule to all L1‚ÜíL2 transactions that closely mimics EIP1559 is included with Bedrock. Like in the current network, deposit fees are paid by burning some amount of L1 gas proportional to your deposit's L2 gas limit. Unfortunately, this means that you may have cases where you estimate how much gas an L1‚ÜíL2 deposit will cost, and deposit fees increase by the time your transaction gets included in a block and executed, causing your deposit to run out of gas and revert. This is why we recommend adding a 50% buffer to your `gasLimit` to ensure your deposit will not run out of gas.
:::  
Deposits that come from contracts still use [address aliasing](../build/differences.md#address-aliasing).  
Deposits are faster, about a minute, because they only require five blocks for confirmation (and L1 blocks are usually 12 seconds apart).  
[You can read the full deposit specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type).  
[You can read the full withdrawal specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)"
158,What happens if the sequencer is down when I make a deposit on Optimism?,"If the sequencer is down, you can still make deposits using the `depositTransaction` function of the OptimismPortal. Verifiers, which are nodes that synchronize the Optimism state from L1, will receive these transactions and modify the state accordingly. When the sequencer is back up, it will process the transactions in the same order to maintain a valid state.","To create a deposit we recommend that you use the pre-Bedrock contracts [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol) and [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol) also has low-level deposit functionality.  
With the OptimismPortal‚Äôs `depositTransaction` function you can do from L1 anything you can do by contacting L2 directly: send transactions, send payments, create contracts, etc.
This provides an uncensorable alternative in case the sequencer is down.
Even though the sequencer is down, verifiers (nodes that synchronize the Optimism state from L1) are still going to receive such transactions and modify the state accordingly.
When the sequencer is back up it has to process the transactions in the same order to have a valid state.  
We recommend adding a 50% buffer to whatever is returned by `estimateGas` to ensure that your deposit will not run out of gas (Note: the Optimism SDK already does this under the hood). For example, if you wish to send a deposit of ETH, you might call `eth_estimateGas` and see that the deposit is expected to consume `100,000 gas`. You should then multiply that estimated about by `1.5` and then send your transaction with a `gasLimit` of at least `150,000 gas`.  
:::tip
In order to prevent Optimism networks from being DOSed via forced L1 to L2 transactions that bypass the Sequencer, a fee adjustment schedule to all L1‚ÜíL2 transactions that closely mimics EIP1559 is included with Bedrock. Like in the current network, deposit fees are paid by burning some amount of L1 gas proportional to your deposit's L2 gas limit. Unfortunately, this means that you may have cases where you estimate how much gas an L1‚ÜíL2 deposit will cost, and deposit fees increase by the time your transaction gets included in a block and executed, causing your deposit to run out of gas and revert. This is why we recommend adding a 50% buffer to your `gasLimit` to ensure your deposit will not run out of gas.
:::  
Deposits that come from contracts still use [address aliasing](../build/differences.md#address-aliasing).  
Deposits are faster, about a minute, because they only require five blocks for confirmation (and L1 blocks are usually 12 seconds apart).  
[You can read the full deposit specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type).  
[You can read the full withdrawal specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)"
158,How long does it take for a deposit to be confirmed on Optimism?,"Deposits on Optimism are faster and typically take about a minute to be confirmed because they only require five blocks for confirmation, with L1 blocks usually being 12 seconds apart.","To create a deposit we recommend that you use the pre-Bedrock contracts [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol) and [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol) also has low-level deposit functionality.  
With the OptimismPortal‚Äôs `depositTransaction` function you can do from L1 anything you can do by contacting L2 directly: send transactions, send payments, create contracts, etc.
This provides an uncensorable alternative in case the sequencer is down.
Even though the sequencer is down, verifiers (nodes that synchronize the Optimism state from L1) are still going to receive such transactions and modify the state accordingly.
When the sequencer is back up it has to process the transactions in the same order to have a valid state.  
We recommend adding a 50% buffer to whatever is returned by `estimateGas` to ensure that your deposit will not run out of gas (Note: the Optimism SDK already does this under the hood). For example, if you wish to send a deposit of ETH, you might call `eth_estimateGas` and see that the deposit is expected to consume `100,000 gas`. You should then multiply that estimated about by `1.5` and then send your transaction with a `gasLimit` of at least `150,000 gas`.  
:::tip
In order to prevent Optimism networks from being DOSed via forced L1 to L2 transactions that bypass the Sequencer, a fee adjustment schedule to all L1‚ÜíL2 transactions that closely mimics EIP1559 is included with Bedrock. Like in the current network, deposit fees are paid by burning some amount of L1 gas proportional to your deposit's L2 gas limit. Unfortunately, this means that you may have cases where you estimate how much gas an L1‚ÜíL2 deposit will cost, and deposit fees increase by the time your transaction gets included in a block and executed, causing your deposit to run out of gas and revert. This is why we recommend adding a 50% buffer to your `gasLimit` to ensure your deposit will not run out of gas.
:::  
Deposits that come from contracts still use [address aliasing](../build/differences.md#address-aliasing).  
Deposits are faster, about a minute, because they only require five blocks for confirmation (and L1 blocks are usually 12 seconds apart).  
[You can read the full deposit specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type).  
[You can read the full withdrawal specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)"
159,Are there any recent changes in the internal workings of Optimism?,"Yes, there have been some changes in the internals of Optimism. The specific section of the documentation discusses these updates in detail.",This section discusses some of the changes in Optimism internals.
160,How are L2 blocks saved to the Ethereum blockchain now?,L2 blocks are saved to the Ethereum blockchain using a non-contract address to minimize L1 gas expenses.,"There is no longer a CTC (canonical transaction chain) contract. Instead, L2 blocks are saved to the Ethereum blockchain using a non-contract address to minimize the L1 gas expenses. Please see the [Public Testnets](./public-testnets.md) page for more information on where to find batch submission addresses.  
[The block and transaction format is also different](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md#derivation)."
160,Where can I find more information about batch submission addresses?,You can find more information about batch submission addresses on the Public Testnets page in the Optimism Governance Documentation.,"There is no longer a CTC (canonical transaction chain) contract. Instead, L2 blocks are saved to the Ethereum blockchain using a non-contract address to minimize the L1 gas expenses. Please see the [Public Testnets](./public-testnets.md) page for more information on where to find batch submission addresses.  
[The block and transaction format is also different](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md#derivation)."
160,Is the block and transaction format the same as before?,"No, the block and transaction format is different. You can find more details in the Optimism specifications on their GitHub page.","There is no longer a CTC (canonical transaction chain) contract. Instead, L2 blocks are saved to the Ethereum blockchain using a non-contract address to minimize the L1 gas expenses. Please see the [Public Testnets](./public-testnets.md) page for more information on where to find batch submission addresses.  
[The block and transaction format is also different](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md#derivation)."
161,What's Bedrock in the context of Optimism?,"Bedrock is the name of the first ever official release of the OP Stack, which is a set of free and open-source modular components that work together to power blockchains such as OP Mainnet.","---
title: Bedrock Explainer
lang: en-US
meta:
- name: og:image
content: https://dev.optimism.io/content/images/size/w2000/2022/12/bedrock-BLUE.jpg
---  
![Bedrock](https://dev.optimism.io/content/images/size/w2000/2022/12/bedrock-BLUE.jpg)  
Bedrock is the name of the first ever official release of the OP Stack, which is a set of free and open-source modular components that work together to power blockchains such as OP Mainnet.  
- To understand what is in the Bedrock release, keep reading.
- To develop on OP Mainnet, which upgraded its infrastructure to the Bedrock release, read the docs.
- To contribute to the OP Stack, see the contribution guidelines on the Optimism monorepo."
161,How can I start developing on OP Mainnet after the Bedrock release?,"To start developing on OP Mainnet, which upgraded its infrastructure to the Bedrock release, you should read the documentation provided by Optimism.","---
title: Bedrock Explainer
lang: en-US
meta:
- name: og:image
content: https://dev.optimism.io/content/images/size/w2000/2022/12/bedrock-BLUE.jpg
---  
![Bedrock](https://dev.optimism.io/content/images/size/w2000/2022/12/bedrock-BLUE.jpg)  
Bedrock is the name of the first ever official release of the OP Stack, which is a set of free and open-source modular components that work together to power blockchains such as OP Mainnet.  
- To understand what is in the Bedrock release, keep reading.
- To develop on OP Mainnet, which upgraded its infrastructure to the Bedrock release, read the docs.
- To contribute to the OP Stack, see the contribution guidelines on the Optimism monorepo."
161,Where can I find guidelines to contribute to the OP Stack?,"To contribute to the OP Stack, you can see the contribution guidelines on the Optimism monorepo.","---
title: Bedrock Explainer
lang: en-US
meta:
- name: og:image
content: https://dev.optimism.io/content/images/size/w2000/2022/12/bedrock-BLUE.jpg
---  
![Bedrock](https://dev.optimism.io/content/images/size/w2000/2022/12/bedrock-BLUE.jpg)  
Bedrock is the name of the first ever official release of the OP Stack, which is a set of free and open-source modular components that work together to power blockchains such as OP Mainnet.  
- To understand what is in the Bedrock release, keep reading.
- To develop on OP Mainnet, which upgraded its infrastructure to the Bedrock release, read the docs.
- To contribute to the OP Stack, see the contribution guidelines on the Optimism monorepo."
162,How does Bedrock reduce transaction fees?,Bedrock reduces transaction fees by using optimized batch compression and utilizing Ethereum as a data availability layer.,Bedrock improves on its predecessor by reducing transaction fees using optimized batch [compression](#optimized-data-compression) and Ethereum as a data availability layer; shortening delays of including L1 transactions in rollups by handling L1 re-orgs more gracefully; enabling modular proof systems through code re-use; and improving node performance by removing technical debt.
162,What improvements does Bedrock make in handling L1 transactions?,Bedrock shortens the delays of including L1 transactions in rollups by handling L1 re-orgs more gracefully.,Bedrock improves on its predecessor by reducing transaction fees using optimized batch [compression](#optimized-data-compression) and Ethereum as a data availability layer; shortening delays of including L1 transactions in rollups by handling L1 re-orgs more gracefully; enabling modular proof systems through code re-use; and improving node performance by removing technical debt.
162,What are some of the technical improvements in Bedrock?,Bedrock enables modular proof systems through code re-use and improves node performance by removing technical debt.,Bedrock improves on its predecessor by reducing transaction fees using optimized batch [compression](#optimized-data-compression) and Ethereum as a data availability layer; shortening delays of including L1 transactions in rollups by handling L1 re-orgs more gracefully; enabling modular proof systems through code re-use; and improving node performance by removing technical debt.
163,How does Bedrock help in reducing data costs?,Bedrock implements an optimized data compression strategy to minimize data costs. This strategy is expected to significantly reduce fees.,"In addition, Bedrock implements an optimized data [compression](#optimized-data-compression) strategy to minimize data costs. We are currently benchmarking the impact of this change, but we expect it to reduce fees significantly.  
Bedrock also removes all L1 execution gas, reducing L1 data fees to the theoretical minimum. This reduces fees by an additional 10% over the previous version of the protocol."
163,How does Bedrock affect L1 execution gas fees?,"Bedrock removes all L1 execution gas, reducing L1 data fees to the theoretical minimum. This results in an additional 10% fee reduction over the previous version of the protocol.","In addition, Bedrock implements an optimized data [compression](#optimized-data-compression) strategy to minimize data costs. We are currently benchmarking the impact of this change, but we expect it to reduce fees significantly.  
Bedrock also removes all L1 execution gas, reducing L1 data fees to the theoretical minimum. This reduces fees by an additional 10% over the previous version of the protocol."
164,How long does it take for deposits to confirm with the new Bedrock update?,"With the new Bedrock update, deposits are expected to confirm within 3 minutes.","Bedrock introduces support for L1 re-orgs in the node software, which significantly reduces the amount of time users need to wait for deposits. Earlier versions of the protocol could take up to 10 minutes to confirm deposits. With Bedrock, we expect deposits to confirm within 3 minutes."
164,How did the Bedrock update improve the deposit confirmation time?,"The Bedrock update introduced support for L1 re-orgs in the node software, which significantly reduces the amount of time users need to wait for deposits.","Bedrock introduces support for L1 re-orgs in the node software, which significantly reduces the amount of time users need to wait for deposits. Earlier versions of the protocol could take up to 10 minutes to confirm deposits. With Bedrock, we expect deposits to confirm within 3 minutes."
164,How long did it take for deposits to confirm before the Bedrock update?,"Before the Bedrock update, it could take up to 10 minutes to confirm deposits.","Bedrock introduces support for L1 re-orgs in the node software, which significantly reduces the amount of time users need to wait for deposits. Earlier versions of the protocol could take up to 10 minutes to confirm deposits. With Bedrock, we expect deposits to confirm within 3 minutes."
165,How does Bedrock handle proof systems in the OP Stack?,"Bedrock abstracts the proof system from the OP Stack, allowing a rollup to use either a fault proof or a validity proof (such as a zk-SNARK) to prove the correct execution of inputs on the rollup.","Bedrock abstracts the proof system from the OP Stack so that a rollup may use either a fault proof or validity proof (e.g., a zk-SNARK) to prove correct execution of inputs on the rollup. This abstraction enables systems like [Cannon](https://github.com/ethereum-optimism/cannon) to be used to prove faults in the system."
165,What is the benefit of Bedrock abstracting the proof system?,"The abstraction enables flexibility, allowing systems like Cannon to be used to prove faults in the system.","Bedrock abstracts the proof system from the OP Stack so that a rollup may use either a fault proof or validity proof (e.g., a zk-SNARK) to prove correct execution of inputs on the rollup. This abstraction enables systems like [Cannon](https://github.com/ethereum-optimism/cannon) to be used to prove faults in the system."
165,What is an example of a system that can be used with Bedrock to prove faults?,An example of a system that can be used with Bedrock to prove faults is Cannon.,"Bedrock abstracts the proof system from the OP Stack so that a rollup may use either a fault proof or validity proof (e.g., a zk-SNARK) to prove correct execution of inputs on the rollup. This abstraction enables systems like [Cannon](https://github.com/ethereum-optimism/cannon) to be used to prove faults in the system."
166,How has the performance of the node software been improved in the latest version?,"The performance of the node software has been significantly improved by enabling the execution of several transactions in a single rollup 'block' instead of the previous 'one transaction per block' model. This change allows the cost of merkle trie updates to be spread across multiple transactions, reducing state growth by approximately 15GB/year at current transaction volumes.","The node software performance has been significantly improved by enabling execution of several transactions in a single rollup ""block"" as opposed to the prior ""one transaction per block"" model in the previous version. This allows the cost of merkle trie updates to be amortized across multiple transactions. At current transaction volume, this reduces state growth by approximately 15GB/year.  
Node performance is further improved by removing technical debt from the previous version of the protocol. This includes removing the need for a separate ""data transport layer"" node to index L1, and updating the node software to efficiently query for transaction data from L1."
166,What changes have been made to reduce the technical debt in the node software?,"To reduce technical debt, the latest version of the protocol has removed the need for a separate 'data transport layer' node to index L1. Additionally, the node software has been updated to efficiently query for transaction data from L1.","The node software performance has been significantly improved by enabling execution of several transactions in a single rollup ""block"" as opposed to the prior ""one transaction per block"" model in the previous version. This allows the cost of merkle trie updates to be amortized across multiple transactions. At current transaction volume, this reduces state growth by approximately 15GB/year.  
Node performance is further improved by removing technical debt from the previous version of the protocol. This includes removing the need for a separate ""data transport layer"" node to index L1, and updating the node software to efficiently query for transaction data from L1."
167,How does Bedrock compare to Ethereum?,"Bedrock was designed to be as close to Ethereum as possible. It removes several deviations from Ethereum that were present in the previous version of the protocol, such as the one-transaction-per-block model, custom opcodes for L1 block information, separate L1/L2 fee fields in the JSON-RPC API, and a custom ERC20 representation of ETH balances. Additionally, Bedrock adds support for EIP-1559, chain re-orgs, and other Ethereum features present on L1.","Bedrock was designed from the ground up to be as close to Ethereum as possible. Multiple deviations from Ethereum in the previous version of the protocol have been removed, including:  
1. The one-transaction-per-block model.
2. Custom opcodes to get L1 block information.
3. Separate L1/L2 fee fields in the JSON-RPC API.
4. A custom ERC20 representation of ETH balances.  
Bedrock also adds support for EIP-1559, chain re-orgs, and other Ethereum features present on L1."
167,What are some of the features Bedrock adds to align with Ethereum?,"Bedrock adds support for EIP-1559, chain re-orgs, and other Ethereum features that are present on Layer 1 (L1).","Bedrock was designed from the ground up to be as close to Ethereum as possible. Multiple deviations from Ethereum in the previous version of the protocol have been removed, including:  
1. The one-transaction-per-block model.
2. Custom opcodes to get L1 block information.
3. Separate L1/L2 fee fields in the JSON-RPC API.
4. A custom ERC20 representation of ETH balances.  
Bedrock also adds support for EIP-1559, chain re-orgs, and other Ethereum features present on L1."
167,What deviations from Ethereum were removed in Bedrock?,"In Bedrock, several deviations from Ethereum were removed, including the one-transaction-per-block model, custom opcodes to get L1 block information, separate L1/L2 fee fields in the JSON-RPC API, and a custom ERC20 representation of ETH balances.","Bedrock was designed from the ground up to be as close to Ethereum as possible. Multiple deviations from Ethereum in the previous version of the protocol have been removed, including:  
1. The one-transaction-per-block model.
2. Custom opcodes to get L1 block information.
3. Separate L1/L2 fee fields in the JSON-RPC API.
4. A custom ERC20 representation of ETH balances.  
Bedrock also adds support for EIP-1559, chain re-orgs, and other Ethereum features present on L1."
168,Why was Bedrock built to be modular and upgradeable?,"Bedrock was built to be modular and upgradeable to allow for easier updates and improvements over time, ensuring the system can adapt and evolve as needed.","Bedrock was built to be modular & upgradeable, to reuse existing code from Ethereum, and to be as close to 100% Ethereum-equivalent as possible."
168,Does Bedrock use new code or existing code?,"Bedrock reuses existing code from Ethereum, which helps in maintaining compatibility and leveraging the robustness of Ethereum's established codebase.","Bedrock was built to be modular & upgradeable, to reuse existing code from Ethereum, and to be as close to 100% Ethereum-equivalent as possible."
168,How similar is Bedrock to Ethereum?,"Bedrock aims to be as close to 100% Ethereum-equivalent as possible, ensuring high compatibility and seamless integration with Ethereum.","Bedrock was built to be modular & upgradeable, to reuse existing code from Ethereum, and to be as close to 100% Ethereum-equivalent as possible."
169,How does Bedrock ensure flexibility in the OP Stack?,"Bedrock ensures flexibility in the OP Stack by using well-defined interfaces and versioning schemes, which make it easy to swap out different components and add new capabilities.","Bedrock makes it easy to swap out different components in the OP Stack and add new capabilities by using well-defined interfaces and versioning schemes. This allows for a flexible architecture that can adapt to future developments in the Ethereum ecosystem.  
Examples:
- Separation of [rollup node](#rollup-node) and execution client
- Modular fault proof design"
169,What are some examples of the modular design in Bedrock?,"Some examples of the modular design in Bedrock include the separation of the rollup node and execution client, and the modular fault proof design.","Bedrock makes it easy to swap out different components in the OP Stack and add new capabilities by using well-defined interfaces and versioning schemes. This allows for a flexible architecture that can adapt to future developments in the Ethereum ecosystem.  
Examples:
- Separation of [rollup node](#rollup-node) and execution client
- Modular fault proof design"
170,How does Bedrock ensure security and reliability?,Bedrock ensures security and reliability by using existing Ethereum architecture and infrastructure as much as possible. This allows it to inherit the security and 'lindy' benefits from the well-tested codebases used in production on Ethereum Mainnet.,"Bedrock uses existing Ethereum architecture and infrastructure as much as possible. This approach enables the OP Stack to inherit security and ""lindy"" benefits from the battle-tested codebases used in production on Ethereum Mainnet. You'll find examples of this throughout the design including:  
Examples:
- [Minimally modified execution clients](https://op-geth.optimism.io/)
- EVM contracts instead of precompiled client code"
170,What are some examples of how Bedrock uses existing Ethereum infrastructure?,Some examples include minimally modified execution clients and using EVM contracts instead of precompiled client code.,"Bedrock uses existing Ethereum architecture and infrastructure as much as possible. This approach enables the OP Stack to inherit security and ""lindy"" benefits from the battle-tested codebases used in production on Ethereum Mainnet. You'll find examples of this throughout the design including:  
Examples:
- [Minimally modified execution clients](https://op-geth.optimism.io/)
- EVM contracts instead of precompiled client code"
171,How does Bedrock ensure compatibility with the existing Ethereum developer experience?,"Bedrock is designed to have maximum compatibility with the existing Ethereum developer experience, with a few exceptions due to fundamental differences between a Layer 1 (L1) and a rollup. These exceptions include an altered fee model, faster block time (2 seconds vs. 12 seconds), and a special transaction type for including L1 deposit transactions.","Bedrock is designed to have maximum compatibility with the existing Ethereum developer experience. A few exceptions exist due to fundamental differences between an L1 and a rollup: an altered fee model, faster block time (2s vs 12s), and a special transaction type for including L1 [deposit](#deposits) transactions.  
Examples:
- Fault proof designed to prove faults of minimally modified Ethereum [execution client](#execution-client)
- Code re-use of Ethereum [execution client](#execution-client) for use by nodes in the L2 network and sequencers"
171,What are some of the fundamental differences between Bedrock and Ethereum?,"Some fundamental differences between Bedrock and Ethereum include an altered fee model, faster block time (2 seconds vs. 12 seconds), and a special transaction type for including L1 deposit transactions.","Bedrock is designed to have maximum compatibility with the existing Ethereum developer experience. A few exceptions exist due to fundamental differences between an L1 and a rollup: an altered fee model, faster block time (2s vs 12s), and a special transaction type for including L1 [deposit](#deposits) transactions.  
Examples:
- Fault proof designed to prove faults of minimally modified Ethereum [execution client](#execution-client)
- Code re-use of Ethereum [execution client](#execution-client) for use by nodes in the L2 network and sequencers"
171,What is the purpose of the fault proof in Bedrock?,The fault proof in Bedrock is designed to prove faults of a minimally modified Ethereum execution client.,"Bedrock is designed to have maximum compatibility with the existing Ethereum developer experience. A few exceptions exist due to fundamental differences between an L1 and a rollup: an altered fee model, faster block time (2s vs 12s), and a special transaction type for including L1 [deposit](#deposits) transactions.  
Examples:
- Fault proof designed to prove faults of minimally modified Ethereum [execution client](#execution-client)
- Code re-use of Ethereum [execution client](#execution-client) for use by nodes in the L2 network and sequencers"
172,How do rollups derive their data availability source?,Rollups derive their data availability source generally from an L1 blockchain like Ethereum.,"Rollups are derived from a data availability source (generally an L1 blockchain like Ethereum). In their most common configuration, rollup protocols derive a  **""canonical L2 chain""** from two primary sources of information:  
1. Transaction data posted by Sequencers to the L1 and;
2. [Deposit](#deposits) transactions posted by accounts and contracts to a bridge contract on L1.  
The following are the fundamental components of the protocol:  
* Deposits are _writes_ to the canonical L2 chain by directly interacting with smart contracts on the L1.
* Withdrawals are _writes_ to the canonical L2 chain that implicitly trigger interactions with contracts and accounts on the L1.
* Batches are _writes_ of data corresponding to batches on the rollup.
* Block derivation is how _reads_ of data on the L1 are interpreted to understand the canonical L2 chain.
* Proof systems define _finality_ of posted output roots on the L1 such that they may be _executed_ upon (e.g., to execute withdrawals)."
172,What are the primary sources of information for a canonical L2 chain in rollup protocols?,The primary sources of information for a canonical L2 chain in rollup protocols are transaction data posted by Sequencers to the L1 and deposit transactions posted by accounts and contracts to a bridge contract on L1.,"Rollups are derived from a data availability source (generally an L1 blockchain like Ethereum). In their most common configuration, rollup protocols derive a  **""canonical L2 chain""** from two primary sources of information:  
1. Transaction data posted by Sequencers to the L1 and;
2. [Deposit](#deposits) transactions posted by accounts and contracts to a bridge contract on L1.  
The following are the fundamental components of the protocol:  
* Deposits are _writes_ to the canonical L2 chain by directly interacting with smart contracts on the L1.
* Withdrawals are _writes_ to the canonical L2 chain that implicitly trigger interactions with contracts and accounts on the L1.
* Batches are _writes_ of data corresponding to batches on the rollup.
* Block derivation is how _reads_ of data on the L1 are interpreted to understand the canonical L2 chain.
* Proof systems define _finality_ of posted output roots on the L1 such that they may be _executed_ upon (e.g., to execute withdrawals)."
172,What is the role of proof systems in rollup protocols?,"Proof systems define the finality of posted output roots on the L1 so that they may be executed upon, such as for executing withdrawals.","Rollups are derived from a data availability source (generally an L1 blockchain like Ethereum). In their most common configuration, rollup protocols derive a  **""canonical L2 chain""** from two primary sources of information:  
1. Transaction data posted by Sequencers to the L1 and;
2. [Deposit](#deposits) transactions posted by accounts and contracts to a bridge contract on L1.  
The following are the fundamental components of the protocol:  
* Deposits are _writes_ to the canonical L2 chain by directly interacting with smart contracts on the L1.
* Withdrawals are _writes_ to the canonical L2 chain that implicitly trigger interactions with contracts and accounts on the L1.
* Batches are _writes_ of data corresponding to batches on the rollup.
* Block derivation is how _reads_ of data on the L1 are interpreted to understand the canonical L2 chain.
* Proof systems define _finality_ of posted output roots on the L1 such that they may be _executed_ upon (e.g., to execute withdrawals)."
173,What's a deposit in the context of Optimism?,A deposit is a transaction on Layer 1 (L1) that is meant to be included in the rollup on Layer 2 (L2).,A **deposit** is a transaction on L1 that is to be included in the rollup. [Deposits](#deposits) are _guaranteed_ by definition to be included in the [canonical L2 chain](#protocol) as a means of preventing censorship or control of the L2.
173,Are deposits guaranteed to be included in the Layer 2 chain?,"Yes, deposits are guaranteed by definition to be included in the canonical Layer 2 chain to prevent censorship or control of the L2.",A **deposit** is a transaction on L1 that is to be included in the rollup. [Deposits](#deposits) are _guaranteed_ by definition to be included in the [canonical L2 chain](#protocol) as a means of preventing censorship or control of the L2.
174,How does a deposited transaction work in Optimism?,"A deposited transaction in Optimism is a transaction on the rollup that is made as part of a deposit. With the Bedrock upgrade, deposits are fully generalized Ethereum transactions, meaning an account or contract on Ethereum can deposit a contract creation. These transactions on the L2 are derived from the values in the events emitted by the deposit contract on the L1.","A **deposited transaction** is the transaction on the rollup that is made as a part of a [deposit](#deposits). With Bedrock, [deposits](#deposits) are fully generalized Ethereum transactions. For example, an account or contract on Ethereum can ‚Äúdeposit‚Äù a contract creation.  
Bedrock defines a **deposit contract** that is available on the L1: it is a smart contract that L1 accounts and contracts can interact with to write to the L2. [Deposited transactions](#arbitrary-message-passing-from-l1) on the L2 are derived from the values in the event(s) emitted by this [deposit](#deposits) contract, which include expected parameters such as from, to, and data.  
For full details, see the [deposit contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#deposit-contract) section of the protocol specifications."
174,What is a deposit contract in Optimism?,"A deposit contract in Optimism is a smart contract available on the L1 (Layer 1) that L1 accounts and contracts can interact with to write to the L2 (Layer 2). The deposited transactions on the L2 are derived from the values in the events emitted by this deposit contract, which include parameters such as from, to, and data.","A **deposited transaction** is the transaction on the rollup that is made as a part of a [deposit](#deposits). With Bedrock, [deposits](#deposits) are fully generalized Ethereum transactions. For example, an account or contract on Ethereum can ‚Äúdeposit‚Äù a contract creation.  
Bedrock defines a **deposit contract** that is available on the L1: it is a smart contract that L1 accounts and contracts can interact with to write to the L2. [Deposited transactions](#arbitrary-message-passing-from-l1) on the L2 are derived from the values in the event(s) emitted by this [deposit](#deposits) contract, which include expected parameters such as from, to, and data.  
For full details, see the [deposit contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#deposit-contract) section of the protocol specifications."
174,Where can I find more details about the deposit contract in Optimism?,"For full details about the deposit contract in Optimism, you can refer to the deposit contract section of the protocol specifications available on GitHub at this link: https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#deposit-contract.","A **deposited transaction** is the transaction on the rollup that is made as a part of a [deposit](#deposits). With Bedrock, [deposits](#deposits) are fully generalized Ethereum transactions. For example, an account or contract on Ethereum can ‚Äúdeposit‚Äù a contract creation.  
Bedrock defines a **deposit contract** that is available on the L1: it is a smart contract that L1 accounts and contracts can interact with to write to the L2. [Deposited transactions](#arbitrary-message-passing-from-l1) on the L2 are derived from the values in the event(s) emitted by this [deposit](#deposits) contract, which include expected parameters such as from, to, and data.  
For full details, see the [deposit contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#deposit-contract) section of the protocol specifications."
175,How does the gas burn mechanism work in Optimism's Bedrock?,"In Optimism's Bedrock, the gas burn mechanism involves buying gas on Layer 1 (L1) via a gas burn to be used on Layer 2 (L2). This gas is purchased on a fee market, and there is a hard cap on the amount of gas provided to all deposits in a single L1 block. This mechanism helps prevent denial of service attacks by ensuring that gas-intensive transactions on L2 are not cheap to execute on L1.","Bedrock also specifies a gas burn mechanism and a fee market for [deposits](#deposits). The gas that [deposited transactions](#arbitrary-message-passing-from-l1) spend on an L2 is bought on L1 via a gas burn. This gas is purchased on a fee market and there is a hard cap on the amount of gas provided to all [deposits](#deposits) in a single L1 block. This mechanism is used to prevent denial of service attacks that could occur by writing transactions to L2 from L1 that are extremely gas-intensive on L2, but cheap on L1.  
The gas provided to [deposited transactions](#arbitrary-message-passing-from-l1) is sometimes called ""guaranteed gas."" Guaranteed gas is unique in that it is paid for by burning gas on L1 and is therefore not refundable.The total amount of L1 gas that must be burned per unit of guaranteed L2 gas requested depends on the price of L2 gas reported by a EIP-1559 style fee mechanism. Furthermore, users receive a dynamic gas stipend based on the amount of L1 gas spent to compute updates to the fee mechanism.  
For a deeper explanation, read the [deposits section](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#deposits) of the protocol specifications."
175,What is 'guaranteed gas' in the context of Optimism's Bedrock?,"'Guaranteed gas' refers to the gas provided to deposited transactions on L2, which is paid for by burning gas on L1. This gas is unique because it is not refundable. The amount of L1 gas that must be burned per unit of guaranteed L2 gas depends on the L2 gas price reported by an EIP-1559 style fee mechanism.","Bedrock also specifies a gas burn mechanism and a fee market for [deposits](#deposits). The gas that [deposited transactions](#arbitrary-message-passing-from-l1) spend on an L2 is bought on L1 via a gas burn. This gas is purchased on a fee market and there is a hard cap on the amount of gas provided to all [deposits](#deposits) in a single L1 block. This mechanism is used to prevent denial of service attacks that could occur by writing transactions to L2 from L1 that are extremely gas-intensive on L2, but cheap on L1.  
The gas provided to [deposited transactions](#arbitrary-message-passing-from-l1) is sometimes called ""guaranteed gas."" Guaranteed gas is unique in that it is paid for by burning gas on L1 and is therefore not refundable.The total amount of L1 gas that must be burned per unit of guaranteed L2 gas requested depends on the price of L2 gas reported by a EIP-1559 style fee mechanism. Furthermore, users receive a dynamic gas stipend based on the amount of L1 gas spent to compute updates to the fee mechanism.  
For a deeper explanation, read the [deposits section](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#deposits) of the protocol specifications."
175,Why is there a hard cap on the amount of gas provided to deposits in a single L1 block in Optimism's Bedrock?,"The hard cap on the amount of gas provided to deposits in a single L1 block is used to prevent denial of service attacks. This ensures that transactions written to L2 from L1, which could be extremely gas-intensive on L2 but cheap on L1, do not overwhelm the system.","Bedrock also specifies a gas burn mechanism and a fee market for [deposits](#deposits). The gas that [deposited transactions](#arbitrary-message-passing-from-l1) spend on an L2 is bought on L1 via a gas burn. This gas is purchased on a fee market and there is a hard cap on the amount of gas provided to all [deposits](#deposits) in a single L1 block. This mechanism is used to prevent denial of service attacks that could occur by writing transactions to L2 from L1 that are extremely gas-intensive on L2, but cheap on L1.  
The gas provided to [deposited transactions](#arbitrary-message-passing-from-l1) is sometimes called ""guaranteed gas."" Guaranteed gas is unique in that it is paid for by burning gas on L1 and is therefore not refundable.The total amount of L1 gas that must be burned per unit of guaranteed L2 gas requested depends on the price of L2 gas reported by a EIP-1559 style fee mechanism. Furthermore, users receive a dynamic gas stipend based on the amount of L1 gas spent to compute updates to the fee mechanism.  
For a deeper explanation, read the [deposits section](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#deposits) of the protocol specifications."
176,How are withdrawals initiated in the Optimism network?,"Withdrawals are initiated on L2 via a call to the Message Passer predeploy contract, which records the important properties of the message in its storage.","**Withdrawals** are cross-domain transactions that are initiated on L2 and finalized by a transaction executed on L1. Notably, withdrawals may be used by an L2 account to call an L1 contract, or to transfer ETH from an L2 account to an L1 account.  
Withdrawals are initiated on L2 via a call to the **Message Passer** predeploy contract, which records the important properties of the message in its storage. Withdrawals are finalized on L1 via a call to the [OptimismPortal](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md#the-optimism-portal-contract) contract, which proves the inclusion of this withdrawal message. In this way, withdrawals are different from [deposits](#deposits). Instead of relying on [block derivation](#block-derivation), withdrawal transactions must use smart contracts on L1 for finalization."
176,How are withdrawals finalized in the Optimism network?,"Withdrawals are finalized on L1 via a call to the OptimismPortal contract, which proves the inclusion of the withdrawal message.","**Withdrawals** are cross-domain transactions that are initiated on L2 and finalized by a transaction executed on L1. Notably, withdrawals may be used by an L2 account to call an L1 contract, or to transfer ETH from an L2 account to an L1 account.  
Withdrawals are initiated on L2 via a call to the **Message Passer** predeploy contract, which records the important properties of the message in its storage. Withdrawals are finalized on L1 via a call to the [OptimismPortal](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md#the-optimism-portal-contract) contract, which proves the inclusion of this withdrawal message. In this way, withdrawals are different from [deposits](#deposits). Instead of relying on [block derivation](#block-derivation), withdrawal transactions must use smart contracts on L1 for finalization."
176,What is the difference between withdrawals and deposits in the Optimism network?,"Withdrawals are different from deposits because they do not rely on block derivation. Instead, withdrawal transactions must use smart contracts on L1 for finalization.","**Withdrawals** are cross-domain transactions that are initiated on L2 and finalized by a transaction executed on L1. Notably, withdrawals may be used by an L2 account to call an L1 contract, or to transfer ETH from an L2 account to an L1 account.  
Withdrawals are initiated on L2 via a call to the **Message Passer** predeploy contract, which records the important properties of the message in its storage. Withdrawals are finalized on L1 via a call to the [OptimismPortal](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md#the-optimism-portal-contract) contract, which proves the inclusion of this withdrawal message. In this way, withdrawals are different from [deposits](#deposits). Instead of relying on [block derivation](#block-derivation), withdrawal transactions must use smart contracts on L1 for finalization."
177,How does the Bedrock release improve the security of withdrawals?,"The Bedrock release introduces a two-step withdrawal process where a Merkle proof must be submitted 7 days before the withdrawal can be finalized. This extra step allows monitoring tools to detect invalid withdrawal proofs within that 7-day period, reducing the risk of bridge hacks.","Withdrawal proof validation bugs have been the root cause of many of the biggest bridge hacks of the last few years. The Bedrock release introduces an additional step in the withdrawals‚Äô process of prior versions meant to provide an extra layer of defense against these types of bugs. In the two-step withdrawal process, a Merkle proof corresponding to the withdrawal must be submitted 7 days before the withdrawal can be finalized. This new safety mechanism gives monitoring tools a full 7 days to find and detect invalid withdrawal proofs. If the [withdrawal](#withdrawals) proof is found to be invalid, a contract fix can be deployed before funds are lost. This dramatically reduces the risk of a bridge compromise.  
For full details, see the [withdrawals](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md) section of the protocol specification."
177,What happens if an invalid withdrawal proof is detected?,"If an invalid withdrawal proof is detected within the 7-day period, a contract fix can be deployed before any funds are lost, thereby preventing a potential bridge compromise.","Withdrawal proof validation bugs have been the root cause of many of the biggest bridge hacks of the last few years. The Bedrock release introduces an additional step in the withdrawals‚Äô process of prior versions meant to provide an extra layer of defense against these types of bugs. In the two-step withdrawal process, a Merkle proof corresponding to the withdrawal must be submitted 7 days before the withdrawal can be finalized. This new safety mechanism gives monitoring tools a full 7 days to find and detect invalid withdrawal proofs. If the [withdrawal](#withdrawals) proof is found to be invalid, a contract fix can be deployed before funds are lost. This dramatically reduces the risk of a bridge compromise.  
For full details, see the [withdrawals](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md) section of the protocol specification."
177,Why is there a 7-day waiting period for withdrawals in the Bedrock release?,The 7-day waiting period allows monitoring tools enough time to find and detect any invalid withdrawal proofs. This period acts as an additional security measure to prevent bridge hacks by enabling the deployment of a contract fix if an invalid proof is found.,"Withdrawal proof validation bugs have been the root cause of many of the biggest bridge hacks of the last few years. The Bedrock release introduces an additional step in the withdrawals‚Äô process of prior versions meant to provide an extra layer of defense against these types of bugs. In the two-step withdrawal process, a Merkle proof corresponding to the withdrawal must be submitted 7 days before the withdrawal can be finalized. This new safety mechanism gives monitoring tools a full 7 days to find and detect invalid withdrawal proofs. If the [withdrawal](#withdrawals) proof is found to be invalid, a contract fix can be deployed before funds are lost. This dramatically reduces the risk of a bridge compromise.  
For full details, see the [withdrawals](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md) section of the protocol specification."
178,How does Bedrock handle messaging between L1 and L2?,"In Bedrock, a wire format is defined for messaging between the L1 and L2. This format is used for L2 to derive blocks from L1 and for L2 to write transactions to the L1. It is designed to minimize costs and software complexity for writing to the L1.","In Bedrock, a wire format is defined for messaging between the L1 and L2 (i.e., for L2 deriving blocks from L1 and for L2 to write transactions to the L1). This wire format is designed to minimize costs and software complexity for writing to the L1."
178,Why is the wire format in Bedrock important?,The wire format in Bedrock is important because it helps minimize costs and software complexity when writing transactions to the L1. This makes the system more efficient and cost-effective.,"In Bedrock, a wire format is defined for messaging between the L1 and L2 (i.e., for L2 deriving blocks from L1 and for L2 to write transactions to the L1). This wire format is designed to minimize costs and software complexity for writing to the L1."
179,How are L2 transactions organized for data compression in Optimism?,"L2 transactions are organized into lists called sequencer batches, which are then grouped into objects called channels. These channels have a maximum size defined by a configurable parameter.","To optimize data compression, lists of L2 transactions called **sequencer batches** are organized into groups of objects called **channels**, each of which have a maximum size that is defined in a [configurable parameter](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#channel-format) that will initially be set to ~9.5Mb. These [channels](#optimized-data-compression) are expected to be compressed using a compression function and submitted to the L1."
179,What is the initial maximum size for a channel in Optimism?,The initial maximum size for a channel in Optimism is set to approximately 9.5Mb.,"To optimize data compression, lists of L2 transactions called **sequencer batches** are organized into groups of objects called **channels**, each of which have a maximum size that is defined in a [configurable parameter](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#channel-format) that will initially be set to ~9.5Mb. These [channels](#optimized-data-compression) are expected to be compressed using a compression function and submitted to the L1."
179,What happens to the channels after they are created in Optimism?,The channels are expected to be compressed using a compression function and then submitted to the L1 (Layer 1).,"To optimize data compression, lists of L2 transactions called **sequencer batches** are organized into groups of objects called **channels**, each of which have a maximum size that is defined in a [configurable parameter](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#channel-format) that will initially be set to ~9.5Mb. These [channels](#optimized-data-compression) are expected to be compressed using a compression function and submitted to the L1."
180,How does Optimism handle large amounts of data when sending it to Ethereum's Layer 1?,"Optimism breaks down large amounts of data into smaller chunks called channel frames. These frames are compressed and can fit inside a single Ethereum transaction, allowing them to be sent in parallel. This approach minimizes the complexity of the sequencer software and maximizes the use of available space on Layer 1.","To parallelize messages from the sequencers that are submitting [compressed](#optimized-data-compression) [channel](#optimized-data-compression) data to the L1, [channels](#optimized-data-compression) are further broken down into **channel frames**, which are chunks of [compressed](#optimized-data-compression) [channel](#optimized-data-compression) data that can fit inside of a single L1 transaction. Given [channel frames](#parallelized-batch-submission) are mutually independent and the ordering is known, the Ethereum transactions sent by the sequencer to the L1 can be sent in parallel which minimizes sequencer software complexity and allows for filling up all available space for data on the L1."
180,Why is it beneficial for channel frames to be mutually independent?,"When channel frames are mutually independent, they can be processed and sent in parallel. This parallelization reduces the complexity of the sequencer software and ensures that all available space on Layer 1 is efficiently utilized.","To parallelize messages from the sequencers that are submitting [compressed](#optimized-data-compression) [channel](#optimized-data-compression) data to the L1, [channels](#optimized-data-compression) are further broken down into **channel frames**, which are chunks of [compressed](#optimized-data-compression) [channel](#optimized-data-compression) data that can fit inside of a single L1 transaction. Given [channel frames](#parallelized-batch-submission) are mutually independent and the ordering is known, the Ethereum transactions sent by the sequencer to the L1 can be sent in parallel which minimizes sequencer software complexity and allows for filling up all available space for data on the L1."
180,What is the role of the sequencer in Optimism's data submission process?,"The sequencer is responsible for submitting compressed channel data to Ethereum's Layer 1. By breaking this data into smaller, independent channel frames, the sequencer can send transactions in parallel, which simplifies the process and optimizes the use of Layer 1 space.","To parallelize messages from the sequencers that are submitting [compressed](#optimized-data-compression) [channel](#optimized-data-compression) data to the L1, [channels](#optimized-data-compression) are further broken down into **channel frames**, which are chunks of [compressed](#optimized-data-compression) [channel](#optimized-data-compression) data that can fit inside of a single L1 transaction. Given [channel frames](#parallelized-batch-submission) are mutually independent and the ordering is known, the Ethereum transactions sent by the sequencer to the L1 can be sent in parallel which minimizes sequencer software complexity and allows for filling up all available space for data on the L1."
181,How does Bedrock handle execution gas for L1 system transactions?,Bedrock removes all execution gas used by the L1 system from submitting data to the L1 in transactions called batcher transactions. This means that the gas costs associated with these transactions are minimized.,"Bedrock removes all execution gas used by the L1 system from submitting [channel](#optimized-data-compression) data to the L1 in transactions called **batcher transactions**. All validation logic that was previously happening on smart contracts on the L1 is moved into the [block derivation](#block-derivation) logic.  Instead, [batcher transactions](#minimized-usage-of-ethereum-gas) are sent to a single EOA on Ethereum referred to as the **batch inbox address**.  
Batches are still subject to validity checks (i.e. they have to be encoded correctly), and so are individual transactions within the batch (e.g. signatures have to be valid). Invalid [batches](#optimized-data-compression) and invalid individual transactions within an otherwise valid batch are considered to be discarded and irrelevant to the system.  
> Note: Ethereum will soon upgrade to include [EIP-4844](https://eip4844.com/), which introduces a separate fee market for writing data and an increased cap of the amount of data the Ethereum protocol is willing to store. This change is expected to further decrease the costs associated with posting data to an L1.  
For a deeper explanation, read [the wire format specifications](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#overview)."
181,What happens to invalid batches or individual transactions within a batch in the Bedrock system?,Invalid batches and invalid individual transactions within an otherwise valid batch are considered to be discarded and irrelevant to the system. This ensures that only valid data is processed.,"Bedrock removes all execution gas used by the L1 system from submitting [channel](#optimized-data-compression) data to the L1 in transactions called **batcher transactions**. All validation logic that was previously happening on smart contracts on the L1 is moved into the [block derivation](#block-derivation) logic.  Instead, [batcher transactions](#minimized-usage-of-ethereum-gas) are sent to a single EOA on Ethereum referred to as the **batch inbox address**.  
Batches are still subject to validity checks (i.e. they have to be encoded correctly), and so are individual transactions within the batch (e.g. signatures have to be valid). Invalid [batches](#optimized-data-compression) and invalid individual transactions within an otherwise valid batch are considered to be discarded and irrelevant to the system.  
> Note: Ethereum will soon upgrade to include [EIP-4844](https://eip4844.com/), which introduces a separate fee market for writing data and an increased cap of the amount of data the Ethereum protocol is willing to store. This change is expected to further decrease the costs associated with posting data to an L1.  
For a deeper explanation, read [the wire format specifications](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#overview)."
181,What is the batch inbox address in the context of Bedrock?,The batch inbox address is a single externally owned account (EOA) on Ethereum where batcher transactions are sent. This address is used to manage the submission of data batches to the L1.,"Bedrock removes all execution gas used by the L1 system from submitting [channel](#optimized-data-compression) data to the L1 in transactions called **batcher transactions**. All validation logic that was previously happening on smart contracts on the L1 is moved into the [block derivation](#block-derivation) logic.  Instead, [batcher transactions](#minimized-usage-of-ethereum-gas) are sent to a single EOA on Ethereum referred to as the **batch inbox address**.  
Batches are still subject to validity checks (i.e. they have to be encoded correctly), and so are individual transactions within the batch (e.g. signatures have to be valid). Invalid [batches](#optimized-data-compression) and invalid individual transactions within an otherwise valid batch are considered to be discarded and irrelevant to the system.  
> Note: Ethereum will soon upgrade to include [EIP-4844](https://eip4844.com/), which introduces a separate fee market for writing data and an increased cap of the amount of data the Ethereum protocol is willing to store. This change is expected to further decrease the costs associated with posting data to an L1.  
For a deeper explanation, read [the wire format specifications](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#overview)."
182,How does the Bedrock protocol ensure the timing of deposits on L1 is respected in the L2 chain?,"The Bedrock protocol ensures the timing of deposits on L1 is respected in the L2 chain by defining strategies for guaranteeing the inclusion of deposits, handling L1 and L2 timestamps, and processing sequencing windows in a pipeline to ensure correct ordering.","In Bedrock, the protocol is designed to guarantee that the timing of [deposits](#deposits) on the L1 is respected with regards to the [block derivation](#block-derivation) of the [canonical L2 chain](#protocol). Doing so is a _pure function_ of data written to the L1 by sequencers, [deposits](#deposits), and L1 block attributes. To accomplish this, the protocol defines strategies for guaranteeing inclusion of deposits, handling L1 and L2 timestamps, and processing sequencing windows in a pipeline to ensure correct ordering."
182,What is a pure function in the context of the Bedrock protocol?,"In the context of the Bedrock protocol, a pure function refers to the process of deriving the canonical L2 chain based on data written to the L1 by sequencers, deposits, and L1 block attributes, without any side effects or reliance on external state.","In Bedrock, the protocol is designed to guarantee that the timing of [deposits](#deposits) on the L1 is respected with regards to the [block derivation](#block-derivation) of the [canonical L2 chain](#protocol). Doing so is a _pure function_ of data written to the L1 by sequencers, [deposits](#deposits), and L1 block attributes. To accomplish this, the protocol defines strategies for guaranteeing inclusion of deposits, handling L1 and L2 timestamps, and processing sequencing windows in a pipeline to ensure correct ordering."
182,What are the key components involved in the Bedrock protocol's block derivation process?,"The key components involved in the Bedrock protocol's block derivation process include data written to the L1 by sequencers, deposits, and L1 block attributes, as well as strategies for guaranteeing inclusion of deposits, handling timestamps, and processing sequencing windows.","In Bedrock, the protocol is designed to guarantee that the timing of [deposits](#deposits) on the L1 is respected with regards to the [block derivation](#block-derivation) of the [canonical L2 chain](#protocol). Doing so is a _pure function_ of data written to the L1 by sequencers, [deposits](#deposits), and L1 block attributes. To accomplish this, the protocol defines strategies for guaranteeing inclusion of deposits, handling L1 and L2 timestamps, and processing sequencing windows in a pipeline to ensure correct ordering."
183,How often are L2 blocks created in the Bedrock release?,"In the Bedrock release, the target configuration for the block time on L2 is 2 seconds.","A goal of the [block derivation](#block-derivation) protocol is to define it such that there must be an L2 block every ""L2 block time"" number of seconds, and that the timestamp of L2 blocks stays in sync with the timestamps of L1 (i.e., to ensure [deposits](#deposits) are included in a logical temporal order).  
In Bedrock, the concept of a **sequencing epoch** is introduced: it is a range of L2 blocks derived from a range of L1 blocks. Each [epoch](#guaranteed-inclusion-of-deposits) is identified by an **epoch number**, which is equal to the block number of the first L1 block in the sequencing window. Epochs can vary in size, subject to some constraints.  
The batch derivation pipeline treats the timestamps of the L1 blocks associated with [epoch number](#guaranteed-inclusion-of-deposits) as the anchor point for determining the order of transactions on the L2. The protocol guarantees that the first L2 block of an [epoch](#guaranteed-inclusion-of-deposits) never falls behind the timestamp of the L1 block matching the [epoch](#guaranteed-inclusion-of-deposits). The first blocks of an epoch _must_ contain deposits on L1 in order to guarantee that deposits will be processed.  
Note that the target configuration for the block time on L2 in the Bedrock release is 2 seconds."
183,What is a sequencing epoch in the context of Optimism's Bedrock?,"A sequencing epoch in Bedrock is a range of L2 blocks derived from a range of L1 blocks. Each epoch is identified by an epoch number, which is equal to the block number of the first L1 block in the sequencing window.","A goal of the [block derivation](#block-derivation) protocol is to define it such that there must be an L2 block every ""L2 block time"" number of seconds, and that the timestamp of L2 blocks stays in sync with the timestamps of L1 (i.e., to ensure [deposits](#deposits) are included in a logical temporal order).  
In Bedrock, the concept of a **sequencing epoch** is introduced: it is a range of L2 blocks derived from a range of L1 blocks. Each [epoch](#guaranteed-inclusion-of-deposits) is identified by an **epoch number**, which is equal to the block number of the first L1 block in the sequencing window. Epochs can vary in size, subject to some constraints.  
The batch derivation pipeline treats the timestamps of the L1 blocks associated with [epoch number](#guaranteed-inclusion-of-deposits) as the anchor point for determining the order of transactions on the L2. The protocol guarantees that the first L2 block of an [epoch](#guaranteed-inclusion-of-deposits) never falls behind the timestamp of the L1 block matching the [epoch](#guaranteed-inclusion-of-deposits). The first blocks of an epoch _must_ contain deposits on L1 in order to guarantee that deposits will be processed.  
Note that the target configuration for the block time on L2 in the Bedrock release is 2 seconds."
183,How does the protocol ensure that deposits are processed in a timely manner?,The protocol ensures that the first L2 block of an epoch never falls behind the timestamp of the L1 block matching the epoch. The first blocks of an epoch must contain deposits on L1 to guarantee that deposits will be processed.,"A goal of the [block derivation](#block-derivation) protocol is to define it such that there must be an L2 block every ""L2 block time"" number of seconds, and that the timestamp of L2 blocks stays in sync with the timestamps of L1 (i.e., to ensure [deposits](#deposits) are included in a logical temporal order).  
In Bedrock, the concept of a **sequencing epoch** is introduced: it is a range of L2 blocks derived from a range of L1 blocks. Each [epoch](#guaranteed-inclusion-of-deposits) is identified by an **epoch number**, which is equal to the block number of the first L1 block in the sequencing window. Epochs can vary in size, subject to some constraints.  
The batch derivation pipeline treats the timestamps of the L1 blocks associated with [epoch number](#guaranteed-inclusion-of-deposits) as the anchor point for determining the order of transactions on the L2. The protocol guarantees that the first L2 block of an [epoch](#guaranteed-inclusion-of-deposits) never falls behind the timestamp of the L1 block matching the [epoch](#guaranteed-inclusion-of-deposits). The first blocks of an epoch _must_ contain deposits on L1 in order to guarantee that deposits will be processed.  
Note that the target configuration for the block time on L2 in the Bedrock release is 2 seconds."
184,How does Bedrock handle the synchronization of timestamps between L1 and L2?,"Bedrock addresses the synchronization of timestamps between L1 and L2 by allowing a short window of time for sequencing to apply timestamps on L2 transactions. This is done through a sequencing window, which is a sequence of L1 blocks from which an epoch can be derived.","Bedrock attempts to address the problem of reconciling the timestamps on L2 with timestamps on L1 present in [deposited transactions](#arbitrary-message-passing-from-l1). It does this by allowing a short window of time for sequencing to liberally apply timestamps on L2 transactions between [epochs](#guaranteed-inclusion-of-deposits).  
A **sequencing window** is a sequence of L1 blocks from which an [epoch](#guaranteed-inclusion-of-deposits) can be derived. A [sequencing window](#handling-l1-and-l2-timestamps) whose first L1 block has the number `N` contains [batcher transactions](#minimized-usage-of-ethereum-gas) for [epoch](#guaranteed-inclusion-of-deposits) `N`.  
The [sequencing window](#handling-l1-and-l2-timestamps) contains blocks `[N, N + SWS)` where `SWS` is the **sequencer window size**: a fixed rollup-level configuration parameter. This parameter must be at least 2. Increasing it provides more opportunity for sequencers to order L2 transactions with respect to [deposits](#deposits), and lowering it introduces stricter windows of time for sequencers to submit batcher transactions. It is a tradeoff between creating MEV opportunity and increasing software complexity.  
A protocol constant called **max sequencer drift** governs the maximum timestamp a block can have within its epoch. Having this drift allows the sequencer to maintain liveness in case of temporary problems connecting to L1. Each L2 block‚Äôs timestamp fits within the following range:  
```
l1_timestamp <= l2_block.timestamp <= max(l1_timestamp + max_sequencer_drift, l1_timestamp + l2_block_time)
```"
184,What is a sequencing window in the context of Bedrock?,"A sequencing window in Bedrock is a sequence of L1 blocks from which an epoch can be derived. It contains blocks from a starting L1 block number N to N + SWS, where SWS is the sequencer window size, a fixed rollup-level configuration parameter.","Bedrock attempts to address the problem of reconciling the timestamps on L2 with timestamps on L1 present in [deposited transactions](#arbitrary-message-passing-from-l1). It does this by allowing a short window of time for sequencing to liberally apply timestamps on L2 transactions between [epochs](#guaranteed-inclusion-of-deposits).  
A **sequencing window** is a sequence of L1 blocks from which an [epoch](#guaranteed-inclusion-of-deposits) can be derived. A [sequencing window](#handling-l1-and-l2-timestamps) whose first L1 block has the number `N` contains [batcher transactions](#minimized-usage-of-ethereum-gas) for [epoch](#guaranteed-inclusion-of-deposits) `N`.  
The [sequencing window](#handling-l1-and-l2-timestamps) contains blocks `[N, N + SWS)` where `SWS` is the **sequencer window size**: a fixed rollup-level configuration parameter. This parameter must be at least 2. Increasing it provides more opportunity for sequencers to order L2 transactions with respect to [deposits](#deposits), and lowering it introduces stricter windows of time for sequencers to submit batcher transactions. It is a tradeoff between creating MEV opportunity and increasing software complexity.  
A protocol constant called **max sequencer drift** governs the maximum timestamp a block can have within its epoch. Having this drift allows the sequencer to maintain liveness in case of temporary problems connecting to L1. Each L2 block‚Äôs timestamp fits within the following range:  
```
l1_timestamp <= l2_block.timestamp <= max(l1_timestamp + max_sequencer_drift, l1_timestamp + l2_block_time)
```"
184,What is the purpose of the max sequencer drift in Bedrock?,"The max sequencer drift is a protocol constant that governs the maximum timestamp a block can have within its epoch. It allows the sequencer to maintain liveness in case of temporary problems connecting to L1, ensuring that each L2 block‚Äôs timestamp fits within a specific range relative to the L1 timestamp.","Bedrock attempts to address the problem of reconciling the timestamps on L2 with timestamps on L1 present in [deposited transactions](#arbitrary-message-passing-from-l1). It does this by allowing a short window of time for sequencing to liberally apply timestamps on L2 transactions between [epochs](#guaranteed-inclusion-of-deposits).  
A **sequencing window** is a sequence of L1 blocks from which an [epoch](#guaranteed-inclusion-of-deposits) can be derived. A [sequencing window](#handling-l1-and-l2-timestamps) whose first L1 block has the number `N` contains [batcher transactions](#minimized-usage-of-ethereum-gas) for [epoch](#guaranteed-inclusion-of-deposits) `N`.  
The [sequencing window](#handling-l1-and-l2-timestamps) contains blocks `[N, N + SWS)` where `SWS` is the **sequencer window size**: a fixed rollup-level configuration parameter. This parameter must be at least 2. Increasing it provides more opportunity for sequencers to order L2 transactions with respect to [deposits](#deposits), and lowering it introduces stricter windows of time for sequencers to submit batcher transactions. It is a tradeoff between creating MEV opportunity and increasing software complexity.  
A protocol constant called **max sequencer drift** governs the maximum timestamp a block can have within its epoch. Having this drift allows the sequencer to maintain liveness in case of temporary problems connecting to L1. Each L2 block‚Äôs timestamp fits within the following range:  
```
l1_timestamp <= l2_block.timestamp <= max(l1_timestamp + max_sequencer_drift, l1_timestamp + l2_block_time)
```"
185,How does the canonical L2 chain start processing?,"The canonical L2 chain starts processing from the L2 genesis state, setting the L2 chain inception as the first epoch, and then processes all sequencing windows in order to determine the correct ordering of sequencer batches and deposits.","The [canonical L2 chain](#protocol) can be processed from scratch by starting with the L2 genesis state, setting the L2 chain inception as the first epoch, and then processing all sequencing windows in order to determine the correct ordering of [sequencer batches](#optimized-data-compression) and [deposits](#deposits) according to the following simplified pipeline:  
| **Stage** | **Notes** |
| --- | --- |
| Read from L1 | Epochs are defined by L1 blocks. Contained within an L2 block is data pertaining to [batcher transactions](#minimized-usage-of-ethereum-gas) or [deposits](#deposits) which must be included in the [canonical L2 chain](#protocol) |
| Buffer and decode into [channels](#optimized-data-compression) | The data from L1 blocks contains unordered [channel frames](#parallelized-batch-submission), which must all be collected before reconstructing them into channels. |
| Decompress [channels](#optimized-data-compression) into [batches](#optimized-data-compression) | Since [channels](#optimized-data-compression) are [compressed](#optimized-data-compression) to minimize data fee costs on the L1, they must be decompressed. |
| Queue [batches](#optimized-data-compression) into sequential order | With the latest information from L1, [batches](#optimized-data-compression) can be validated and processed sequentially. There are some nuances to what the correct ordering is in relation to [epochs](#guaranteed-inclusion-of-deposits) and timestamps from L2, see the full specification [here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#batch-queue). |
| Interpret as L2 blocks | At this point, the correct ordering of [batches](#optimized-data-compression) can be determined.<br><br>Following this, the [execution client](#execution-client) can interpret them into L2 blocks. For implementation details pertaining to [execution clients](#execution-client), see the [engine queue](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#engine-queue) section of the protocol specifications. |"
185,What is the role of L1 blocks in the L2 chain?,"L1 blocks define epochs and contain data pertaining to batcher transactions or deposits, which must be included in the canonical L2 chain.","The [canonical L2 chain](#protocol) can be processed from scratch by starting with the L2 genesis state, setting the L2 chain inception as the first epoch, and then processing all sequencing windows in order to determine the correct ordering of [sequencer batches](#optimized-data-compression) and [deposits](#deposits) according to the following simplified pipeline:  
| **Stage** | **Notes** |
| --- | --- |
| Read from L1 | Epochs are defined by L1 blocks. Contained within an L2 block is data pertaining to [batcher transactions](#minimized-usage-of-ethereum-gas) or [deposits](#deposits) which must be included in the [canonical L2 chain](#protocol) |
| Buffer and decode into [channels](#optimized-data-compression) | The data from L1 blocks contains unordered [channel frames](#parallelized-batch-submission), which must all be collected before reconstructing them into channels. |
| Decompress [channels](#optimized-data-compression) into [batches](#optimized-data-compression) | Since [channels](#optimized-data-compression) are [compressed](#optimized-data-compression) to minimize data fee costs on the L1, they must be decompressed. |
| Queue [batches](#optimized-data-compression) into sequential order | With the latest information from L1, [batches](#optimized-data-compression) can be validated and processed sequentially. There are some nuances to what the correct ordering is in relation to [epochs](#guaranteed-inclusion-of-deposits) and timestamps from L2, see the full specification [here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#batch-queue). |
| Interpret as L2 blocks | At this point, the correct ordering of [batches](#optimized-data-compression) can be determined.<br><br>Following this, the [execution client](#execution-client) can interpret them into L2 blocks. For implementation details pertaining to [execution clients](#execution-client), see the [engine queue](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#engine-queue) section of the protocol specifications. |"
185,Why is data decompressed in the L2 chain processing?,"Data is decompressed to minimize data fee costs on the L1. Channels are compressed to save on fees, so they must be decompressed before being processed into batches and then into L2 blocks.","The [canonical L2 chain](#protocol) can be processed from scratch by starting with the L2 genesis state, setting the L2 chain inception as the first epoch, and then processing all sequencing windows in order to determine the correct ordering of [sequencer batches](#optimized-data-compression) and [deposits](#deposits) according to the following simplified pipeline:  
| **Stage** | **Notes** |
| --- | --- |
| Read from L1 | Epochs are defined by L1 blocks. Contained within an L2 block is data pertaining to [batcher transactions](#minimized-usage-of-ethereum-gas) or [deposits](#deposits) which must be included in the [canonical L2 chain](#protocol) |
| Buffer and decode into [channels](#optimized-data-compression) | The data from L1 blocks contains unordered [channel frames](#parallelized-batch-submission), which must all be collected before reconstructing them into channels. |
| Decompress [channels](#optimized-data-compression) into [batches](#optimized-data-compression) | Since [channels](#optimized-data-compression) are [compressed](#optimized-data-compression) to minimize data fee costs on the L1, they must be decompressed. |
| Queue [batches](#optimized-data-compression) into sequential order | With the latest information from L1, [batches](#optimized-data-compression) can be validated and processed sequentially. There are some nuances to what the correct ordering is in relation to [epochs](#guaranteed-inclusion-of-deposits) and timestamps from L2, see the full specification [here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#batch-queue). |
| Interpret as L2 blocks | At this point, the correct ordering of [batches](#optimized-data-compression) can be determined.<br><br>Following this, the [execution client](#execution-client) can interpret them into L2 blocks. For implementation details pertaining to [execution clients](#execution-client), see the [engine queue](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/derivation.md#engine-queue) section of the protocol specifications. |"
186,How does Optimism ensure trustless execution of L2-to-L1 messaging?,Optimism ensures trustless execution of L2-to-L1 messaging by writing the outputs computed from executing transactions in L2 blocks to L1. This process involves hashing the outputs in a tree-structured form to minimize the cost of proving any piece of data captured by the outputs.,"After a sequencer processes one or more L2 blocks, the outputs computed from executing transactions in those blocks will need to be written with L1 for trustless execution of L2-to-L1 messaging, such as [withdrawals](#withdrawals).  
In Bedrock, outputs are hashed in a tree-structured form which minimizes the cost of proving any piece of data captured by the outputs. Proposers periodically submit **output roots** that are Merkle roots of the entire [canonical L2 chain](#protocol) to the L1.  
Future upgrades of the OP Stack should include a specification for a variation of a fault proof with bonding included to create incentives for proposers to propose correct output roots.  
For full details, read the [L2 Output Root Proposals section](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/proposals.md#l2-output-root-proposals-specification) of the protocol specifications."
186,What are output roots in the context of Optimism's Bedrock?,"In Optimism's Bedrock, output roots are Merkle roots of the entire canonical L2 chain. Proposers periodically submit these output roots to L1 to ensure the integrity and correctness of the data.","After a sequencer processes one or more L2 blocks, the outputs computed from executing transactions in those blocks will need to be written with L1 for trustless execution of L2-to-L1 messaging, such as [withdrawals](#withdrawals).  
In Bedrock, outputs are hashed in a tree-structured form which minimizes the cost of proving any piece of data captured by the outputs. Proposers periodically submit **output roots** that are Merkle roots of the entire [canonical L2 chain](#protocol) to the L1.  
Future upgrades of the OP Stack should include a specification for a variation of a fault proof with bonding included to create incentives for proposers to propose correct output roots.  
For full details, read the [L2 Output Root Proposals section](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/proposals.md#l2-output-root-proposals-specification) of the protocol specifications."
186,What future upgrades are planned for the OP Stack regarding output roots?,"Future upgrades of the OP Stack are expected to include a specification for a variation of a fault proof with bonding. This will create incentives for proposers to propose correct output roots, enhancing the security and reliability of the system.","After a sequencer processes one or more L2 blocks, the outputs computed from executing transactions in those blocks will need to be written with L1 for trustless execution of L2-to-L1 messaging, such as [withdrawals](#withdrawals).  
In Bedrock, outputs are hashed in a tree-structured form which minimizes the cost of proving any piece of data captured by the outputs. Proposers periodically submit **output roots** that are Merkle roots of the entire [canonical L2 chain](#protocol) to the L1.  
Future upgrades of the OP Stack should include a specification for a variation of a fault proof with bonding included to create incentives for proposers to propose correct output roots.  
For full details, read the [L2 Output Root Proposals section](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/proposals.md#l2-output-root-proposals-specification) of the protocol specifications."
187,How does Bedrock handle the separation of concerns in Optimism?,"Bedrock handles the separation of concerns by mirroring the technical separation specified by Ethereum. It introduces a separation between the execution client and the rollup node, similar to the separation between Ethereum's execution layer and consensus layer.","With Bedrock, the OP Stack leans heavily into the technical separation of concerns specified by Ethereum by mirroring the separation between the Ethereum execution layer and consensus layer. Bedrock introduces separation of execution client and rollup node in this same way."
188,What's an execution client in the context of Optimism?,"An execution client is the system that sequencers and other kinds of node operators run to determine the state of the canonical L2 chain. It also processes inbound transactions, communicates them peer-to-peer, and handles the state of the system to process queries against it.","An **execution client** is the system that sequencers and other kinds of node operators run to determine the state of the [canonical L2 chain](#protocol). It also performs other functions such as processing inbound transactions and communicating them peer-to-peer, and handling the state of the system to process queries against it.  
With Bedrock, the OP Stack is designed to reuse [Ethereum‚Äôs own execution client specifications](https://github.com/ethereum/execution-specs) and its many implementations. In this release, Bedrock has demonstrated an extremely limited modification of go-ethereum, the most popular Ethereum client written in Go, to a [diff of less than 2000 lines of code](https://op-geth.optimism.io/).  
There are two fundamental reasons for having any diff at all: handling deposited transactions, and charging transaction fees."
188,How does Bedrock in the OP Stack relate to Ethereum's execution client?,"Bedrock in the OP Stack is designed to reuse Ethereum‚Äôs own execution client specifications and its many implementations. It has demonstrated an extremely limited modification of go-ethereum, the most popular Ethereum client written in Go, with a diff of less than 2000 lines of code.","An **execution client** is the system that sequencers and other kinds of node operators run to determine the state of the [canonical L2 chain](#protocol). It also performs other functions such as processing inbound transactions and communicating them peer-to-peer, and handling the state of the system to process queries against it.  
With Bedrock, the OP Stack is designed to reuse [Ethereum‚Äôs own execution client specifications](https://github.com/ethereum/execution-specs) and its many implementations. In this release, Bedrock has demonstrated an extremely limited modification of go-ethereum, the most popular Ethereum client written in Go, to a [diff of less than 2000 lines of code](https://op-geth.optimism.io/).  
There are two fundamental reasons for having any diff at all: handling deposited transactions, and charging transaction fees."
188,Why does Bedrock have any modifications to the go-ethereum client?,Bedrock has modifications to the go-ethereum client for two fundamental reasons: handling deposited transactions and charging transaction fees.,"An **execution client** is the system that sequencers and other kinds of node operators run to determine the state of the [canonical L2 chain](#protocol). It also performs other functions such as processing inbound transactions and communicating them peer-to-peer, and handling the state of the system to process queries against it.  
With Bedrock, the OP Stack is designed to reuse [Ethereum‚Äôs own execution client specifications](https://github.com/ethereum/execution-specs) and its many implementations. In this release, Bedrock has demonstrated an extremely limited modification of go-ethereum, the most popular Ethereum client written in Go, to a [diff of less than 2000 lines of code](https://op-geth.optimism.io/).  
There are two fundamental reasons for having any diff at all: handling deposited transactions, and charging transaction fees."
189,How are deposited transactions represented in the Optimism rollup?,Deposited transactions in the Optimism rollup are represented by an additional transaction type introduced specifically for this purpose.,"To represent [deposited transactions](#arbitrary-message-passing-from-l1) in the rollup, there is an additional transaction type introduced. The [execution client](#execution-client) implements this [new transaction type](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type) according to the [EIP-2718 typed transactions](https://eips.ethereum.org/EIPS/eip-2718) standard."
189,What standard does the new transaction type for deposited transactions follow?,The new transaction type for deposited transactions follows the EIP-2718 typed transactions standard.,"To represent [deposited transactions](#arbitrary-message-passing-from-l1) in the rollup, there is an additional transaction type introduced. The [execution client](#execution-client) implements this [new transaction type](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type) according to the [EIP-2718 typed transactions](https://eips.ethereum.org/EIPS/eip-2718) standard."
189,Who implements the new transaction type for deposited transactions in Optimism?,The execution client implements the new transaction type for deposited transactions in Optimism.,"To represent [deposited transactions](#arbitrary-message-passing-from-l1) in the rollup, there is an additional transaction type introduced. The [execution client](#execution-client) implements this [new transaction type](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type) according to the [EIP-2718 typed transactions](https://eips.ethereum.org/EIPS/eip-2718) standard."
190,How are sequencer fees determined in Optimism?,Sequencer fees in Optimism are computed using the same gas table as Ethereum and follow the EIP-1559 algorithm. These fees fluctuate based on the network's congestion and go to the protocol for operating sequencers.,"Rollups also fundamentally have two kinds of fees associated with transactions:  
**Sequencer fees**  
The cost of operating a sequencer is computed using the same gas table as Ethereum and with the same [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559) algorithm. These fees go to the protocol for operating sequencers and fluctuate based on the congestion of the network.  
**Data availability fees**  
Data availability costs are associated with writing [batcher transactions](#minimized-usage-of-ethereum-gas) to the L1. These fees are intended to cover the cost that sequencers need to pay to submit [batcher transactions](#minimized-usage-of-ethereum-gas) to the L1.  
In Bedrock, the data availability portion of the fee is determined based on information in a system contract on the rollup called a [GasPriceOracle](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/predeploys.md#gaspriceoracle). This contract is updated during [block derivation](#block-derivation) from the gas pricing information retrieved from the L1 block attributes that get inserted at the beginning of every [epoch](#guaranteed-inclusion-of-deposits).  
Bedrock specifies that both of these fees are added up into a single `gasPrice` field when using the JSON-RPC."
190,What are data availability fees in Optimism?,Data availability fees in Optimism are associated with writing batcher transactions to the Layer 1 (L1). These fees cover the cost that sequencers need to pay to submit these transactions to the L1.,"Rollups also fundamentally have two kinds of fees associated with transactions:  
**Sequencer fees**  
The cost of operating a sequencer is computed using the same gas table as Ethereum and with the same [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559) algorithm. These fees go to the protocol for operating sequencers and fluctuate based on the congestion of the network.  
**Data availability fees**  
Data availability costs are associated with writing [batcher transactions](#minimized-usage-of-ethereum-gas) to the L1. These fees are intended to cover the cost that sequencers need to pay to submit [batcher transactions](#minimized-usage-of-ethereum-gas) to the L1.  
In Bedrock, the data availability portion of the fee is determined based on information in a system contract on the rollup called a [GasPriceOracle](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/predeploys.md#gaspriceoracle). This contract is updated during [block derivation](#block-derivation) from the gas pricing information retrieved from the L1 block attributes that get inserted at the beginning of every [epoch](#guaranteed-inclusion-of-deposits).  
Bedrock specifies that both of these fees are added up into a single `gasPrice` field when using the JSON-RPC."
190,How are the fees structured in Optimism's Bedrock?,"In Optimism's Bedrock, both sequencer fees and data availability fees are combined into a single `gasPrice` field when using the JSON-RPC. The data availability portion of the fee is determined based on information from a system contract called GasPriceOracle, which is updated during block derivation from gas pricing information retrieved from L1 block attributes.","Rollups also fundamentally have two kinds of fees associated with transactions:  
**Sequencer fees**  
The cost of operating a sequencer is computed using the same gas table as Ethereum and with the same [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559) algorithm. These fees go to the protocol for operating sequencers and fluctuate based on the congestion of the network.  
**Data availability fees**  
Data availability costs are associated with writing [batcher transactions](#minimized-usage-of-ethereum-gas) to the L1. These fees are intended to cover the cost that sequencers need to pay to submit [batcher transactions](#minimized-usage-of-ethereum-gas) to the L1.  
In Bedrock, the data availability portion of the fee is determined based on information in a system contract on the rollup called a [GasPriceOracle](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/predeploys.md#gaspriceoracle). This contract is updated during [block derivation](#block-derivation) from the gas pricing information retrieved from the L1 block attributes that get inserted at the beginning of every [epoch](#guaranteed-inclusion-of-deposits).  
Bedrock specifies that both of these fees are added up into a single `gasPrice` field when using the JSON-RPC."
191,How does Bedrock achieve consensus if it doesn't use proof-of-stake like Ethereum?,Bedrock achieves consensus through a process called block derivation. This involves a rollup node that communicates with an execution client using the same Engine API that Ethereum uses.,"Unlike Ethereum, Bedrock does not have proof-of-stake consensus. Instead, the consensus of the [canonical L2 chain](#protocol) is defined by [block derivation](#block-derivation). An [execution client](#execution-client) of the OP Stack communicates to a new component that implements [block derivation](#block-derivation) called a **rollup node**. This node communicates to the [execution client](#execution-client) using the exact same [Engine API](https://github.com/ethereum/execution-apis/tree/main/src/engine) that Ethereum uses.  
The [rollup node](#rollup-node) is a stateless component responsible for deriving the state of the system by reading data and [deposits](#deposits) on the L1. In Bedrock, a [rollup node](#rollup-node) can either be used to sequence incoming transactions from users or other [rollup nodes](#rollup-node) or to verify confirmed transactions posted on the L1 by singularly relying on the L1.  
The multiple uses of a rollup node are outlined below."
191,What is the role of a rollup node in Bedrock?,"A rollup node in Bedrock is responsible for deriving the state of the system by reading data and deposits on the L1. It can be used to sequence incoming transactions from users or other rollup nodes, or to verify confirmed transactions posted on the L1.","Unlike Ethereum, Bedrock does not have proof-of-stake consensus. Instead, the consensus of the [canonical L2 chain](#protocol) is defined by [block derivation](#block-derivation). An [execution client](#execution-client) of the OP Stack communicates to a new component that implements [block derivation](#block-derivation) called a **rollup node**. This node communicates to the [execution client](#execution-client) using the exact same [Engine API](https://github.com/ethereum/execution-apis/tree/main/src/engine) that Ethereum uses.  
The [rollup node](#rollup-node) is a stateless component responsible for deriving the state of the system by reading data and [deposits](#deposits) on the L1. In Bedrock, a [rollup node](#rollup-node) can either be used to sequence incoming transactions from users or other [rollup nodes](#rollup-node) or to verify confirmed transactions posted on the L1 by singularly relying on the L1.  
The multiple uses of a rollup node are outlined below."
191,How does a rollup node communicate with the execution client in Bedrock?,A rollup node communicates with the execution client using the exact same Engine API that Ethereum uses.,"Unlike Ethereum, Bedrock does not have proof-of-stake consensus. Instead, the consensus of the [canonical L2 chain](#protocol) is defined by [block derivation](#block-derivation). An [execution client](#execution-client) of the OP Stack communicates to a new component that implements [block derivation](#block-derivation) called a **rollup node**. This node communicates to the [execution client](#execution-client) using the exact same [Engine API](https://github.com/ethereum/execution-apis/tree/main/src/engine) that Ethereum uses.  
The [rollup node](#rollup-node) is a stateless component responsible for deriving the state of the system by reading data and [deposits](#deposits) on the L1. In Bedrock, a [rollup node](#rollup-node) can either be used to sequence incoming transactions from users or other [rollup nodes](#rollup-node) or to verify confirmed transactions posted on the L1 by singularly relying on the L1.  
The multiple uses of a rollup node are outlined below."
192,How does a rollup node verify output roots?,A rollup node verifies output roots by reading data from the L1 and interpreting it according to block derivation protocol rules. It ensures that any output roots shared by other nodes or posted on the L1 are correct according to the protocol definition.,"The simplest mode of running a [rollup node](#rollup-node) is to only follow the [canonical L2 chain](#protocol). In this mode, the [rollup node](#rollup-node) has no peers and is strictly used to read data from the L1 and to interpret it according to [block derivation](#block-derivation) protocol rules.  
One purpose of this kind of node is to verify that any output roots shared by other nodes or posted on the L1 are correct according to protocol definition. Additionally, proposers intending to submit output roots to the L1 themselves can generate the output roots they need using the [optimism_outputAtBlock](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md#l2-output-rpc-method) of the node which returns a 32-byte hash corresponding to the L2 output root.  
For this purpose, nodes should only need to follow the finalized head. The term [""finalized""](https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/#finality) refers to the Ethereum proof-of-stake consensus (i.e. canonical and practically irreversible) ‚Äî the finalized L2 head is the head of the [canonical L2 chain](#protocol) that is derived only from finalized L1 blocks."
192,What is the purpose of the optimism_outputAtBlock method?,The optimism_outputAtBlock method is used by proposers intending to submit output roots to the L1. It generates the output roots they need by returning a 32-byte hash corresponding to the L2 output root.,"The simplest mode of running a [rollup node](#rollup-node) is to only follow the [canonical L2 chain](#protocol). In this mode, the [rollup node](#rollup-node) has no peers and is strictly used to read data from the L1 and to interpret it according to [block derivation](#block-derivation) protocol rules.  
One purpose of this kind of node is to verify that any output roots shared by other nodes or posted on the L1 are correct according to protocol definition. Additionally, proposers intending to submit output roots to the L1 themselves can generate the output roots they need using the [optimism_outputAtBlock](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md#l2-output-rpc-method) of the node which returns a 32-byte hash corresponding to the L2 output root.  
For this purpose, nodes should only need to follow the finalized head. The term [""finalized""](https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/#finality) refers to the Ethereum proof-of-stake consensus (i.e. canonical and practically irreversible) ‚Äî the finalized L2 head is the head of the [canonical L2 chain](#protocol) that is derived only from finalized L1 blocks."
192,What does 'finalized' mean in the context of a rollup node?,"In the context of a rollup node, 'finalized' refers to the Ethereum proof-of-stake consensus, meaning the canonical and practically irreversible state. The finalized L2 head is derived only from finalized L1 blocks.","The simplest mode of running a [rollup node](#rollup-node) is to only follow the [canonical L2 chain](#protocol). In this mode, the [rollup node](#rollup-node) has no peers and is strictly used to read data from the L1 and to interpret it according to [block derivation](#block-derivation) protocol rules.  
One purpose of this kind of node is to verify that any output roots shared by other nodes or posted on the L1 are correct according to protocol definition. Additionally, proposers intending to submit output roots to the L1 themselves can generate the output roots they need using the [optimism_outputAtBlock](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md#l2-output-rpc-method) of the node which returns a 32-byte hash corresponding to the L2 output root.  
For this purpose, nodes should only need to follow the finalized head. The term [""finalized""](https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/#finality) refers to the Ethereum proof-of-stake consensus (i.e. canonical and practically irreversible) ‚Äî the finalized L2 head is the head of the [canonical L2 chain](#protocol) that is derived only from finalized L1 blocks."
193,How do rollup nodes participate in a network?,"Rollup nodes participate in a network by tracking the progression and state of an L2. They read data and deposits from the L1, interpret it as blocks, and accept inbound transactions from users and peers in the network.","The most common way to use a [rollup node](#rollup-node) is to participate in a network of other [rollup nodes](#rollup-node) tracking the progression and state of an L2. In this mode, a [rollup node](#rollup-node) is both reading the data and [deposits](#deposits) it observes from the L1 and interpreting it as blocks and accepting inbound transactions from users and peers in a network of other [rollup nodes](#rollup-node).  
Nodes participating in the network may make use of the safe and unsafe heads of the L2 they're syncing.  
- The **safe L2 head** represents the rollup that can be constructed where every block up to and including the head can be fully derived from the reference L1 chain, before L1 has necessarily finalized (i.e., a re-org may occur on L1 still).
- The **unsafe L2 head** includes [unsafe blocks](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#unsafe-l2-block) that have not yet been derived from L1. These blocks either come from operating the [rollup node](#rollup-node) as a sequencer or from [unsafe sync](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#unsafe-sync) with the sequencer. This is also known as the ""latest"" head. The safe L2 head is always chosen over the unsafe L2 head in cases of disagreements. When disagreements occur, the unsafe portion of the chain will reorg.  
For most purposes, nodes in the L2 network will refer to the unsafe L2 head for end-user applications."
193,What is the difference between the safe L2 head and the unsafe L2 head?,"The safe L2 head represents the rollup that can be fully derived from the reference L1 chain, even if L1 has not finalized yet. The unsafe L2 head includes blocks that have not yet been derived from L1 and may come from operating the rollup node as a sequencer or from unsafe sync with the sequencer. The safe L2 head is always chosen over the unsafe L2 head in cases of disagreements.","The most common way to use a [rollup node](#rollup-node) is to participate in a network of other [rollup nodes](#rollup-node) tracking the progression and state of an L2. In this mode, a [rollup node](#rollup-node) is both reading the data and [deposits](#deposits) it observes from the L1 and interpreting it as blocks and accepting inbound transactions from users and peers in a network of other [rollup nodes](#rollup-node).  
Nodes participating in the network may make use of the safe and unsafe heads of the L2 they're syncing.  
- The **safe L2 head** represents the rollup that can be constructed where every block up to and including the head can be fully derived from the reference L1 chain, before L1 has necessarily finalized (i.e., a re-org may occur on L1 still).
- The **unsafe L2 head** includes [unsafe blocks](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#unsafe-l2-block) that have not yet been derived from L1. These blocks either come from operating the [rollup node](#rollup-node) as a sequencer or from [unsafe sync](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#unsafe-sync) with the sequencer. This is also known as the ""latest"" head. The safe L2 head is always chosen over the unsafe L2 head in cases of disagreements. When disagreements occur, the unsafe portion of the chain will reorg.  
For most purposes, nodes in the L2 network will refer to the unsafe L2 head for end-user applications."
193,When do nodes in the L2 network refer to the unsafe L2 head?,"For most purposes, nodes in the L2 network will refer to the unsafe L2 head for end-user applications.","The most common way to use a [rollup node](#rollup-node) is to participate in a network of other [rollup nodes](#rollup-node) tracking the progression and state of an L2. In this mode, a [rollup node](#rollup-node) is both reading the data and [deposits](#deposits) it observes from the L1 and interpreting it as blocks and accepting inbound transactions from users and peers in a network of other [rollup nodes](#rollup-node).  
Nodes participating in the network may make use of the safe and unsafe heads of the L2 they're syncing.  
- The **safe L2 head** represents the rollup that can be constructed where every block up to and including the head can be fully derived from the reference L1 chain, before L1 has necessarily finalized (i.e., a re-org may occur on L1 still).
- The **unsafe L2 head** includes [unsafe blocks](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#unsafe-l2-block) that have not yet been derived from L1. These blocks either come from operating the [rollup node](#rollup-node) as a sequencer or from [unsafe sync](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#unsafe-sync) with the sequencer. This is also known as the ""latest"" head. The safe L2 head is always chosen over the unsafe L2 head in cases of disagreements. When disagreements occur, the unsafe portion of the chain will reorg.  
For most purposes, nodes in the L2 network will refer to the unsafe L2 head for end-user applications."
194,How does a rollup node sequence transactions?,A rollup node sequences transactions by creating new blocks on top of the unsafe L2 head.,"The third way to use a [rollup node](#rollup-node) is to sequence transactions. In this mode, a [rollup node](#rollup-node) will _create_ new blocks on top of the unsafe L2 head. Currently, there is only one sequencer per OP Stack network.  
The sequencer is also responsible for posting batches to L1 for other nodes in the network to sync from."
194,How many sequencers are there per OP Stack network?,"Currently, there is only one sequencer per OP Stack network.","The third way to use a [rollup node](#rollup-node) is to sequence transactions. In this mode, a [rollup node](#rollup-node) will _create_ new blocks on top of the unsafe L2 head. Currently, there is only one sequencer per OP Stack network.  
The sequencer is also responsible for posting batches to L1 for other nodes in the network to sync from."
194,What is the sequencer's responsibility in relation to L1?,The sequencer is responsible for posting batches to L1 so that other nodes in the network can sync from them.,"The third way to use a [rollup node](#rollup-node) is to sequence transactions. In this mode, a [rollup node](#rollup-node) will _create_ new blocks on top of the unsafe L2 head. Currently, there is only one sequencer per OP Stack network.  
The sequencer is also responsible for posting batches to L1 for other nodes in the network to sync from."
195,Who is responsible for producing batches in the Optimism network?,A sequencer is responsible for producing batches in the Optimism network. They run rollup nodes and have separate processes to perform batching by reading from a trusted rollup node they operate.,"The role of a sequencer is to produce [batches](#batches). To do this, a sequencer can run [rollup nodes](#rollup-node) and have separate processes which perform [batching](#batches) by reading from a trusted [rollup node](#rollup-node) they run. This warrants an additional component of the OP Stack called a [batcher](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#batcher) that reads transaction data from a [rollup node](#rollup-node) and interprets it into [batcher transactions](#minimized-usage-of-ethereum-gas) to be written to the L1. The batcher component is responsible for reading the unsafe L2 head of a [rollup node](#rollup-node) run by a sequencer, creating batcher transactions, and writing them to the L1."
195,What is the role of a batcher in the Optimism network?,"The batcher reads transaction data from a rollup node and interprets it into batcher transactions to be written to the L1 (Layer 1). It is responsible for reading the unsafe L2 (Layer 2) head of a rollup node run by a sequencer, creating batcher transactions, and writing them to the L1.","The role of a sequencer is to produce [batches](#batches). To do this, a sequencer can run [rollup nodes](#rollup-node) and have separate processes which perform [batching](#batches) by reading from a trusted [rollup node](#rollup-node) they run. This warrants an additional component of the OP Stack called a [batcher](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/glossary.md#batcher) that reads transaction data from a [rollup node](#rollup-node) and interprets it into [batcher transactions](#minimized-usage-of-ethereum-gas) to be written to the L1. The batcher component is responsible for reading the unsafe L2 head of a [rollup node](#rollup-node) run by a sequencer, creating batcher transactions, and writing them to the L1."
196,How does the bridge in Optimism work?,"The bridge in Optimism involves locking a native token in a contract and then minting an equivalent amount of a mintable token on the other side of the bridge. This process is managed by bridge contracts called standard bridges, which provide simple interfaces for depositing and withdrawing ETH and ERC-20 tokens.","Bedrock also includes a pair of bridge contracts used for the most common kinds of [deposits](#deposits) called the [standard bridges](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md#standard-bridges). These contracts wrap the [deposit](#deposits) and [withdrawal](#withdrawals) contracts to provide simple interfaces for [depositing](#deposits) and [withdrawing](#withdrawals) ETH and ERC-20 tokens.  
These bridges are designed to involve a native token on one side of the bridge, and a wrapped token on the other side that can manage minting and burning. Bridging a native token involves locking the native token in a contract and then minting an equivalent amount of mintable token on the other side of the bridge.  
For full details, see the [standard bridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md#standard-bridges) section of the protocol specifications."
196,What are standard bridges in Optimism?,Standard bridges in Optimism are bridge contracts that wrap the deposit and withdrawal contracts to provide simple interfaces for depositing and withdrawing ETH and ERC-20 tokens. They are designed to involve a native token on one side of the bridge and a wrapped token on the other side that can manage minting and burning.,"Bedrock also includes a pair of bridge contracts used for the most common kinds of [deposits](#deposits) called the [standard bridges](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md#standard-bridges). These contracts wrap the [deposit](#deposits) and [withdrawal](#withdrawals) contracts to provide simple interfaces for [depositing](#deposits) and [withdrawing](#withdrawals) ETH and ERC-20 tokens.  
These bridges are designed to involve a native token on one side of the bridge, and a wrapped token on the other side that can manage minting and burning. Bridging a native token involves locking the native token in a contract and then minting an equivalent amount of mintable token on the other side of the bridge.  
For full details, see the [standard bridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md#standard-bridges) section of the protocol specifications."
196,Where can I find more details about the standard bridges in Optimism?,"For full details about the standard bridges in Optimism, you can refer to the standard bridge section of the protocol specifications available on GitHub.","Bedrock also includes a pair of bridge contracts used for the most common kinds of [deposits](#deposits) called the [standard bridges](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md#standard-bridges). These contracts wrap the [deposit](#deposits) and [withdrawal](#withdrawals) contracts to provide simple interfaces for [depositing](#deposits) and [withdrawing](#withdrawals) ETH and ERC-20 tokens.  
These bridges are designed to involve a native token on one side of the bridge, and a wrapped token on the other side that can manage minting and burning. Bridging a native token involves locking the native token in a contract and then minting an equivalent amount of mintable token on the other side of the bridge.  
For full details, see the [standard bridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md#standard-bridges) section of the protocol specifications."
197,Where is fault proof construction and verification implemented in Optimism?,"Fault proof construction and verification is implemented in the Cannon project, which you can find on GitHub.","Although fault proof construction and verification is implemented in the [Cannon](https://github.com/ethereum-optimism/cannon) project, the fault proof game specification and integration of an output root challenger into the rollup node are part of later specification milestones."
197,What are the future milestones for Optimism's fault proof system?,Future milestones include the specification of the fault proof game and the integration of an output root challenger into the rollup node.,"Although fault proof construction and verification is implemented in the [Cannon](https://github.com/ethereum-optimism/cannon) project, the fault proof game specification and integration of an output root challenger into the rollup node are part of later specification milestones."
198,Where can I find the technical details of the OP Stack?,"The technical details of the OP Stack are defined in the protocol specification, which is located in the Optimism monorepo on GitHub.",The protocol specification defines the technical details of the OP Stack. It is the most up-to-date source of truth for the inner workings of the protocol. The protocol specification is located in [the Optimism monorepo](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/README.md).
198,What is the most up-to-date source for understanding the inner workings of the Optimism protocol?,The most up-to-date source for understanding the inner workings of the Optimism protocol is the protocol specification found in the Optimism monorepo on GitHub.,The protocol specification defines the technical details of the OP Stack. It is the most up-to-date source of truth for the inner workings of the protocol. The protocol specification is located in [the Optimism monorepo](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/README.md).
199,Where can I find detailed information about the differences between Bedrock and previous versions of the protocol?,You can find detailed information about the differences between Bedrock and previous versions of the protocol on the 'How is Bedrock Different?' page.,"For a deep dive into the differences between Bedrock and previous versions of the protocol, see the [How is Bedrock Different?](./how-is-bedrock-different.md) page."
200,What's the latest major release of OP Mainnet?,The latest major release of OP Mainnet is called Bedrock.,"---
title: Bedrock Differences
lang: en-US
---  
Bedrock is the latest major release of OP Mainnet.
Here are the major changes:"
201,Which sections of the Optimism Governance Documentation should a wallet developer focus on?,"A wallet developer should focus on the sections related to EIP-1559, JSON-RPC, and Block Production. These sections will help them understand transaction costs and timing, which are crucial for their users.","If you want to jump directly to the parts relevant to your job role, here are the parts we think will be most useful  
<details>
<summary>Wallet developer</summary>  
As a wallet developer you are most likely to interact with the JSON RPC, and your users want to know how much their transactions are going to cost.
Timing may also be relevant.  
- [EIP-1559](#eip-1559)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp frontend developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp backend (protocol) developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Infrastructure provider (or anybody else running a node)</summary>  
To run a node you need to understand the executables required to run it.
You might also be interested in the existence of the mempool and the changes in block timing, fees, and the JSON RPC.  
- [Mempool](#mempool)
- [Block Production](#block-production)
- [Historical Data](#historical-data)
- [JSON-RPC](#json-rpc)
- [Chain Reorganizations](#chain-reorganizations)  
[See here for a more detailed guide](./node-operator-guide.md) on how to run a Bedrock node.  
</details>  
<details>
<summary>Bridge developer</summary>  
As a bridge developer you are likely most interested in deposits into OP Mainnet and withdrawals back into Ethereum L1.  
- [Two-Phase Withdrawals](#two-phase-withdrawals)
- [Deposits](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc)  
</details>"
201,What information is important for a Dapp frontend developer in the Optimism Governance Documentation?,"A Dapp frontend developer should look at the sections on EIP-1559, Mempool, JSON-RPC, and Block Production. These sections cover transaction fees, changes in the RPC interface, and block timing, which are relevant for application development.","If you want to jump directly to the parts relevant to your job role, here are the parts we think will be most useful  
<details>
<summary>Wallet developer</summary>  
As a wallet developer you are most likely to interact with the JSON RPC, and your users want to know how much their transactions are going to cost.
Timing may also be relevant.  
- [EIP-1559](#eip-1559)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp frontend developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp backend (protocol) developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Infrastructure provider (or anybody else running a node)</summary>  
To run a node you need to understand the executables required to run it.
You might also be interested in the existence of the mempool and the changes in block timing, fees, and the JSON RPC.  
- [Mempool](#mempool)
- [Block Production](#block-production)
- [Historical Data](#historical-data)
- [JSON-RPC](#json-rpc)
- [Chain Reorganizations](#chain-reorganizations)  
[See here for a more detailed guide](./node-operator-guide.md) on how to run a Bedrock node.  
</details>  
<details>
<summary>Bridge developer</summary>  
As a bridge developer you are likely most interested in deposits into OP Mainnet and withdrawals back into Ethereum L1.  
- [Two-Phase Withdrawals](#two-phase-withdrawals)
- [Deposits](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc)  
</details>"
201,What should an infrastructure provider know from the Optimism Governance Documentation?,"An infrastructure provider should be familiar with the sections on Mempool, Block Production, Historical Data, JSON-RPC, and Chain Reorganizations. Additionally, they should refer to the detailed guide on how to run a Bedrock node.","If you want to jump directly to the parts relevant to your job role, here are the parts we think will be most useful  
<details>
<summary>Wallet developer</summary>  
As a wallet developer you are most likely to interact with the JSON RPC, and your users want to know how much their transactions are going to cost.
Timing may also be relevant.  
- [EIP-1559](#eip-1559)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp frontend developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Dapp backend (protocol) developer</summary>  
As an application developer you are probably interested in the fact Bedrock has a mempool and the changes in transaction fees.
You might also be interested in changes in the RPC interface and block timing.  
- [EIP-1559](#eip-1559)
- [Mempool](#mempool)
- [JSON-RPC](#json-rpc)
- [Block Production](#block-production)  
</details>  
<details>
<summary>Infrastructure provider (or anybody else running a node)</summary>  
To run a node you need to understand the executables required to run it.
You might also be interested in the existence of the mempool and the changes in block timing, fees, and the JSON RPC.  
- [Mempool](#mempool)
- [Block Production](#block-production)
- [Historical Data](#historical-data)
- [JSON-RPC](#json-rpc)
- [Chain Reorganizations](#chain-reorganizations)  
[See here for a more detailed guide](./node-operator-guide.md) on how to run a Bedrock node.  
</details>  
<details>
<summary>Bridge developer</summary>  
As a bridge developer you are likely most interested in deposits into OP Mainnet and withdrawals back into Ethereum L1.  
- [Two-Phase Withdrawals](#two-phase-withdrawals)
- [Deposits](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc)  
</details>"
202,How often are blocks produced in the Bedrock network?,"Blocks are produced every two seconds in the Bedrock network, although this value may change in the future.",":::warning Block Time Subject to Change  
Currently blocks are produced every two seconds.
However, that value may change in the future.  
:::  
Unlike the legacy network which mines a block for every incoming transaction, the Bedrock network will produce new blocks every two seconds. This introduces the following changes to the EVM:  
- `TIMESTAMP` will return the timestamp of the block. It will update every two seconds.
- `BLOCKNUMBER` will return an actual block number. It will update every two seconds. The one-to-one mapping between blocks and transactions will no longer apply.  
The Bedrock upgrade also introduces the concept of _system transactions_. System transactions are created by the `op-node`, and are used to execute deposits and update the L2's view of L1. They have the following attributes:  
- Every block will contain at least one system transaction called the [L1 attributes deposited transaction](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#l1-attributes-deposited-transaction). It will always be the first transaction in the block.
- Some blocks will contain one or more [user-deposited transactions](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#user-deposited-transactions).
- All system transactions have an [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718)-compatible transaction type of `0x7E`.
- All system transactions are unsigned, and set their `v`, `r`, and `s` fields to `null`.  
For more information about these transactions, see the [deposited transactions specification](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md) on GitHub.  
:::warning Known Issue
Some Ethereum client libraries, such as Web3j, cannot parse the `null` signature fields described above. To work around this issue, you will need to manually filter out the system transactions before passing them to the library.
:::"
202,What is a system transaction in the Bedrock network?,"System transactions are created by the `op-node` and are used to execute deposits and update the Layer 2's view of Layer 1. Every block will contain at least one system transaction called the L1 attributes deposited transaction, which will always be the first transaction in the block. Some blocks may also contain user-deposited transactions.",":::warning Block Time Subject to Change  
Currently blocks are produced every two seconds.
However, that value may change in the future.  
:::  
Unlike the legacy network which mines a block for every incoming transaction, the Bedrock network will produce new blocks every two seconds. This introduces the following changes to the EVM:  
- `TIMESTAMP` will return the timestamp of the block. It will update every two seconds.
- `BLOCKNUMBER` will return an actual block number. It will update every two seconds. The one-to-one mapping between blocks and transactions will no longer apply.  
The Bedrock upgrade also introduces the concept of _system transactions_. System transactions are created by the `op-node`, and are used to execute deposits and update the L2's view of L1. They have the following attributes:  
- Every block will contain at least one system transaction called the [L1 attributes deposited transaction](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#l1-attributes-deposited-transaction). It will always be the first transaction in the block.
- Some blocks will contain one or more [user-deposited transactions](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#user-deposited-transactions).
- All system transactions have an [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718)-compatible transaction type of `0x7E`.
- All system transactions are unsigned, and set their `v`, `r`, and `s` fields to `null`.  
For more information about these transactions, see the [deposited transactions specification](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md) on GitHub.  
:::warning Known Issue
Some Ethereum client libraries, such as Web3j, cannot parse the `null` signature fields described above. To work around this issue, you will need to manually filter out the system transactions before passing them to the library.
:::"
202,What should I do if my Ethereum client library cannot parse the `null` signature fields in system transactions?,"If your Ethereum client library, such as Web3j, cannot parse the `null` signature fields in system transactions, you will need to manually filter out the system transactions before passing them to the library.",":::warning Block Time Subject to Change  
Currently blocks are produced every two seconds.
However, that value may change in the future.  
:::  
Unlike the legacy network which mines a block for every incoming transaction, the Bedrock network will produce new blocks every two seconds. This introduces the following changes to the EVM:  
- `TIMESTAMP` will return the timestamp of the block. It will update every two seconds.
- `BLOCKNUMBER` will return an actual block number. It will update every two seconds. The one-to-one mapping between blocks and transactions will no longer apply.  
The Bedrock upgrade also introduces the concept of _system transactions_. System transactions are created by the `op-node`, and are used to execute deposits and update the L2's view of L1. They have the following attributes:  
- Every block will contain at least one system transaction called the [L1 attributes deposited transaction](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#l1-attributes-deposited-transaction). It will always be the first transaction in the block.
- Some blocks will contain one or more [user-deposited transactions](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#user-deposited-transactions).
- All system transactions have an [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718)-compatible transaction type of `0x7E`.
- All system transactions are unsigned, and set their `v`, `r`, and `s` fields to `null`.  
For more information about these transactions, see the [deposited transactions specification](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md) on GitHub.  
:::warning Known Issue
Some Ethereum client libraries, such as Web3j, cannot parse the `null` signature fields described above. To work around this issue, you will need to manually filter out the system transactions before passing them to the library.
:::"
203,How does EIP-1559 affect transaction fees on the Optimism network?,"EIP-1559 introduces a two-component fee structure: the base fee and the priority fee. The base fee varies between blocks based on demand for block space, while the priority fee is specified in the transaction and varies between transactions. However, unlike Ethereum, ETH is not burned on the Optimism network.","As part of the Bedrock upgrade, we have upgraded the network to support [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559). In EIP-1559 the cost of a unit of gas is composed of two components:  
- **Base fee**: This fee is the same for all transactions in a block. It varies between blocks based on the difference between the actual size of the blocks (which depends on the demand for block space) and the target block size. When the block uses more gas than the target block size the base fee goes up to discourage demand. When the block uses less gas than the target block size the base fee goes down to encourage demand.
- **Priority fee**: This fee is specified in the transaction itself and varies between transactions. Block proposers are expected to select the transactions that offer them the highest priority fees first.  
There are some differences between Ethereum and OP Mainnet in this regard:  
- ETH is not burned. Burning ETH on L2 would only lock it in the bridge forever.
- Some EIP 1559 parameters are different:  
| Parameter | OP Mainnet value | Ethereum value (for reference) |
| - | -: | -: |
| Block gas limit | 30,000,000 gas | 30,000,000 gas
| Block gas target | 5,000,000 gas | 15,000,000 gas
| EIP-1559 elasticity multiplier | 6 | 2
| EIP-1559 denominator | 50 | 8
| Maximum base fee increase (per block) | 10% | 12.5%
| Maximum base fee decrease (per block) | 2% | 12.5%
| Block time in seconds | 2 | 12  
The L1 security fee, which is the majority of the transaction cost, uses the same mechanism as before the upgrade. However, the transactions to L1 are going to be submitted on a [non-contract address](#the-transaction-trail). Between that and improved compression, the L1 security fee should be reduced by about 20%.  
From an application development perspective, EIP-1559 introduces the following changes:  
- The `BASEFEE` opcode is now supported. The `BASEFEE` opcodes returns the base fee of the current block.
- The `eth_maxPriorityFeePerGas` and `eth_feeHistory` RPC methods are now supported. `eth_maxPriorityFeePerGas` returns a fee per gas that is an estimate of how much you can pay as a priority fee, or 'tip', to get a transaction included in the current block. `eth_feeHistory` returns a collection of historical gas information from which you can decide what to submit as your `maxFeePerGas` and/or `maxPriorityFeePerGas`."
203,What are the differences in EIP-1559 parameters between Ethereum and OP Mainnet?,"Some key differences include the block gas target (5,000,000 gas on OP Mainnet vs. 15,000,000 gas on Ethereum), the EIP-1559 elasticity multiplier (6 on OP Mainnet vs. 2 on Ethereum), and the maximum base fee increase per block (10% on OP Mainnet vs. 12.5% on Ethereum). Additionally, the block time on OP Mainnet is 2 seconds compared to 12 seconds on Ethereum.","As part of the Bedrock upgrade, we have upgraded the network to support [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559). In EIP-1559 the cost of a unit of gas is composed of two components:  
- **Base fee**: This fee is the same for all transactions in a block. It varies between blocks based on the difference between the actual size of the blocks (which depends on the demand for block space) and the target block size. When the block uses more gas than the target block size the base fee goes up to discourage demand. When the block uses less gas than the target block size the base fee goes down to encourage demand.
- **Priority fee**: This fee is specified in the transaction itself and varies between transactions. Block proposers are expected to select the transactions that offer them the highest priority fees first.  
There are some differences between Ethereum and OP Mainnet in this regard:  
- ETH is not burned. Burning ETH on L2 would only lock it in the bridge forever.
- Some EIP 1559 parameters are different:  
| Parameter | OP Mainnet value | Ethereum value (for reference) |
| - | -: | -: |
| Block gas limit | 30,000,000 gas | 30,000,000 gas
| Block gas target | 5,000,000 gas | 15,000,000 gas
| EIP-1559 elasticity multiplier | 6 | 2
| EIP-1559 denominator | 50 | 8
| Maximum base fee increase (per block) | 10% | 12.5%
| Maximum base fee decrease (per block) | 2% | 12.5%
| Block time in seconds | 2 | 12  
The L1 security fee, which is the majority of the transaction cost, uses the same mechanism as before the upgrade. However, the transactions to L1 are going to be submitted on a [non-contract address](#the-transaction-trail). Between that and improved compression, the L1 security fee should be reduced by about 20%.  
From an application development perspective, EIP-1559 introduces the following changes:  
- The `BASEFEE` opcode is now supported. The `BASEFEE` opcodes returns the base fee of the current block.
- The `eth_maxPriorityFeePerGas` and `eth_feeHistory` RPC methods are now supported. `eth_maxPriorityFeePerGas` returns a fee per gas that is an estimate of how much you can pay as a priority fee, or 'tip', to get a transaction included in the current block. `eth_feeHistory` returns a collection of historical gas information from which you can decide what to submit as your `maxFeePerGas` and/or `maxPriorityFeePerGas`."
203,What new features does EIP-1559 introduce for application developers on the Optimism network?,"EIP-1559 introduces the `BASEFEE` opcode, which returns the base fee of the current block. It also supports the `eth_maxPriorityFeePerGas` and `eth_feeHistory` RPC methods. `eth_maxPriorityFeePerGas` provides an estimate of the priority fee needed to get a transaction included in the current block, while `eth_feeHistory` offers historical gas information to help decide on `maxFeePerGas` and `maxPriorityFeePerGas` values.","As part of the Bedrock upgrade, we have upgraded the network to support [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559). In EIP-1559 the cost of a unit of gas is composed of two components:  
- **Base fee**: This fee is the same for all transactions in a block. It varies between blocks based on the difference between the actual size of the blocks (which depends on the demand for block space) and the target block size. When the block uses more gas than the target block size the base fee goes up to discourage demand. When the block uses less gas than the target block size the base fee goes down to encourage demand.
- **Priority fee**: This fee is specified in the transaction itself and varies between transactions. Block proposers are expected to select the transactions that offer them the highest priority fees first.  
There are some differences between Ethereum and OP Mainnet in this regard:  
- ETH is not burned. Burning ETH on L2 would only lock it in the bridge forever.
- Some EIP 1559 parameters are different:  
| Parameter | OP Mainnet value | Ethereum value (for reference) |
| - | -: | -: |
| Block gas limit | 30,000,000 gas | 30,000,000 gas
| Block gas target | 5,000,000 gas | 15,000,000 gas
| EIP-1559 elasticity multiplier | 6 | 2
| EIP-1559 denominator | 50 | 8
| Maximum base fee increase (per block) | 10% | 12.5%
| Maximum base fee decrease (per block) | 2% | 12.5%
| Block time in seconds | 2 | 12  
The L1 security fee, which is the majority of the transaction cost, uses the same mechanism as before the upgrade. However, the transactions to L1 are going to be submitted on a [non-contract address](#the-transaction-trail). Between that and improved compression, the L1 security fee should be reduced by about 20%.  
From an application development perspective, EIP-1559 introduces the following changes:  
- The `BASEFEE` opcode is now supported. The `BASEFEE` opcodes returns the base fee of the current block.
- The `eth_maxPriorityFeePerGas` and `eth_feeHistory` RPC methods are now supported. `eth_maxPriorityFeePerGas` returns a fee per gas that is an estimate of how much you can pay as a priority fee, or 'tip', to get a transaction included in the current block. `eth_feeHistory` returns a collection of historical gas information from which you can decide what to submit as your `maxFeePerGas` and/or `maxPriorityFeePerGas`."
204,Why was the `L1BLOCKNUMBER` opcode removed in the Bedrock upgrade?,"The `L1BLOCKNUMBER` opcode was removed in the Bedrock upgrade to reduce differences between OP Mainnet's EVM and vanilla Ethereum's EVM, aiming for maximal EVM equivalence.","One of the design goals of the Bedrock upgrade is to be maximally EVM equivalent. To reduce differences between OP Mainnet's EVM and vanilla Ethereum's EVM, we have removed the `L1BLOCKNUMBER` opcode."
205,How were ETH balances represented in the previous version of the Optimism system?,"In the previous version of the Optimism system, ETH balances were represented using an ERC20 contract called `OVM_ETH`.","The previous version of the system used an ERC20 contract called `OVM_ETH` to represent ETH balances. These balances will be migrated into the Bedrock network's state as part of the migration. To preserve backwards compatibility, the methods on the `OVM_ETH` contract will continue to work. Note, however, that the `totalSupply()` method will return zero."
205,What will happen to the `OVM_ETH` balances during the migration to the Bedrock network?,The `OVM_ETH` balances will be migrated into the Bedrock network's state as part of the migration process.,"The previous version of the system used an ERC20 contract called `OVM_ETH` to represent ETH balances. These balances will be migrated into the Bedrock network's state as part of the migration. To preserve backwards compatibility, the methods on the `OVM_ETH` contract will continue to work. Note, however, that the `totalSupply()` method will return zero."
205,Will the methods on the `OVM_ETH` contract still work after the migration?,"Yes, to preserve backwards compatibility, the methods on the `OVM_ETH` contract will continue to work. However, the `totalSupply()` method will return zero.","The previous version of the system used an ERC20 contract called `OVM_ETH` to represent ETH balances. These balances will be migrated into the Bedrock network's state as part of the migration. To preserve backwards compatibility, the methods on the `OVM_ETH` contract will continue to work. Note, however, that the `totalSupply()` method will return zero."
206,How does Bedrock handle block reorganization?,"Bedrock nodes always derive blocks from L1 (Layer 1). If L1 experiences a reorganization (reorg), L2 (Layer 2) will reorganize itself to match the state of L1. Blocks that have not been submitted to L1 yet are shared via a peer-to-peer network and can be reorganized if the data on L1 does not match the data shared over P2P.","Unlike the legacy network, Bedrock nodes _always_ derive blocks from L1. This means that if L1 experiences a reorg, L2 will reorganize itself to match the state of L1. Blocks that have not been submitted to L1 yet are gossipped via a peer-to-peer network, and can be reorganized if the data on L1 does not match the data gossiped over P2P.  
Bedrock adopts the same vocabulary as the Beacon Chain to describe block finality. Blocks can be in one of the following states:  
- `unsafe`, meaning that the block has been received via gossip but has not yet been submitted to L1. Unsafe blocks can be reorged if L1 reorgs, or the sequencer reorgs.
- `safe`, meaning that the block has been submitted to L1. Safe blocks can also be reorged if L1 reorgs.
- `finalized`, meaning that the block has reached sufficient depth to be considered final. Finalized blocks cannot be reorged.  
The current `safe`, `unsafe`, and `finalized` blocks can be queried via [JSON-RPC](#json-rpc)."
206,What are the different states of blocks in Bedrock?,"In Bedrock, blocks can be in one of three states: 'unsafe', 'safe', and 'finalized'. 'Unsafe' blocks have been received via gossip but not yet submitted to L1 and can be reorganized if L1 or the sequencer reorgs. 'Safe' blocks have been submitted to L1 and can be reorganized if L1 reorgs. 'Finalized' blocks have reached sufficient depth to be considered final and cannot be reorganized.","Unlike the legacy network, Bedrock nodes _always_ derive blocks from L1. This means that if L1 experiences a reorg, L2 will reorganize itself to match the state of L1. Blocks that have not been submitted to L1 yet are gossipped via a peer-to-peer network, and can be reorganized if the data on L1 does not match the data gossiped over P2P.  
Bedrock adopts the same vocabulary as the Beacon Chain to describe block finality. Blocks can be in one of the following states:  
- `unsafe`, meaning that the block has been received via gossip but has not yet been submitted to L1. Unsafe blocks can be reorged if L1 reorgs, or the sequencer reorgs.
- `safe`, meaning that the block has been submitted to L1. Safe blocks can also be reorged if L1 reorgs.
- `finalized`, meaning that the block has reached sufficient depth to be considered final. Finalized blocks cannot be reorged.  
The current `safe`, `unsafe`, and `finalized` blocks can be queried via [JSON-RPC](#json-rpc)."
206,How can I query the current state of blocks in Bedrock?,"You can query the current 'safe', 'unsafe', and 'finalized' blocks via JSON-RPC.","Unlike the legacy network, Bedrock nodes _always_ derive blocks from L1. This means that if L1 experiences a reorg, L2 will reorganize itself to match the state of L1. Blocks that have not been submitted to L1 yet are gossipped via a peer-to-peer network, and can be reorganized if the data on L1 does not match the data gossiped over P2P.  
Bedrock adopts the same vocabulary as the Beacon Chain to describe block finality. Blocks can be in one of the following states:  
- `unsafe`, meaning that the block has been received via gossip but has not yet been submitted to L1. Unsafe blocks can be reorged if L1 reorgs, or the sequencer reorgs.
- `safe`, meaning that the block has been submitted to L1. Safe blocks can also be reorged if L1 reorgs.
- `finalized`, meaning that the block has reached sufficient depth to be considered final. Finalized blocks cannot be reorged.  
The current `safe`, `unsafe`, and `finalized` blocks can be queried via [JSON-RPC](#json-rpc)."
207,Can Bedrock nodes provide information about older blocks and transactions?,"Yes, Bedrock nodes can serve pre-Bedrock block bodies, transactions, and receipts out of the box. However, for historical execution traces, you will need to run a Legacy Geth instance.","Bedrock nodes can serve pre-Bedrock block bodies, transactions, and receipts out of the box. However, you will need to run a Legacy Geth instance to serve historical execution traces. See the [Node Operator Guide](./node-operator-guide.md) for more information about how to do this.  
Note that the following legacy fields have been removed from pre-Bedrock JSON-RPC transaction responses:  
- `queueOrigin`
- `l1TxOrigin`
- `l1BlockNumber`
- `l1Timestamp`
- `index`
- `queueIndex`
- `rawTransaction`  
If your application needs these fields, query Legacy Geth instead of `op-geth`."
207,What should I do if my application needs certain legacy fields that are no longer available in pre-Bedrock JSON-RPC transaction responses?,"If your application needs legacy fields such as `queueOrigin`, `l1TxOrigin`, `l1BlockNumber`, `l1Timestamp`, `index`, `queueIndex`, or `rawTransaction`, you should query a Legacy Geth instance instead of `op-geth`.","Bedrock nodes can serve pre-Bedrock block bodies, transactions, and receipts out of the box. However, you will need to run a Legacy Geth instance to serve historical execution traces. See the [Node Operator Guide](./node-operator-guide.md) for more information about how to do this.  
Note that the following legacy fields have been removed from pre-Bedrock JSON-RPC transaction responses:  
- `queueOrigin`
- `l1TxOrigin`
- `l1BlockNumber`
- `l1Timestamp`
- `index`
- `queueIndex`
- `rawTransaction`  
If your application needs these fields, query Legacy Geth instead of `op-geth`."
207,Where can I find more information about running a Legacy Geth instance for historical execution traces?,You can find more information about running a Legacy Geth instance in the Node Operator Guide.,"Bedrock nodes can serve pre-Bedrock block bodies, transactions, and receipts out of the box. However, you will need to run a Legacy Geth instance to serve historical execution traces. See the [Node Operator Guide](./node-operator-guide.md) for more information about how to do this.  
Note that the following legacy fields have been removed from pre-Bedrock JSON-RPC transaction responses:  
- `queueOrigin`
- `l1TxOrigin`
- `l1BlockNumber`
- `l1Timestamp`
- `index`
- `queueIndex`
- `rawTransaction`  
If your application needs these fields, query Legacy Geth instead of `op-geth`."
208,How can I get the gas price on Bedrock?,"For the L2 gas price, you can use the `eth_gasPrice` method. For the L1 gas price, you can call the `GasPriceOracle`'s `l1BaseFee` function.","Bedrock supports all of the standard JSON-RPC methods exposed by go-ethereum. In order to reduce differences between Bedrock and vanilla Ethereum, some legacy methods have been removed. These methods and their replacements are:  
- `eth_getBlockRange`: Use `eth_getBlockByNumber` in a batch request instead.
- `rollup_getInfo`: None of the information returned by this method exists on Bedrock, so there is no replacement for this method.
- `rollup_gasPrices`: Use [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice) instead for the L2 gas price.
For the L1 gas price, you can call the [`GasPriceOracle`'s `l1BaseFee` function](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#readContract#F5).
If you want to estimate the cost of a transaction, you can [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).  
To query `op-node`'s sync status, use the `optimism_syncStatus` RPC method. This method will return the current `safe`, `unsafe`, and `finalized` as seen by the `op-node`."
208,What should I use instead of the `eth_getBlockRange` method on Bedrock?,You should use the `eth_getBlockByNumber` method in a batch request instead.,"Bedrock supports all of the standard JSON-RPC methods exposed by go-ethereum. In order to reduce differences between Bedrock and vanilla Ethereum, some legacy methods have been removed. These methods and their replacements are:  
- `eth_getBlockRange`: Use `eth_getBlockByNumber` in a batch request instead.
- `rollup_getInfo`: None of the information returned by this method exists on Bedrock, so there is no replacement for this method.
- `rollup_gasPrices`: Use [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice) instead for the L2 gas price.
For the L1 gas price, you can call the [`GasPriceOracle`'s `l1BaseFee` function](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#readContract#F5).
If you want to estimate the cost of a transaction, you can [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).  
To query `op-node`'s sync status, use the `optimism_syncStatus` RPC method. This method will return the current `safe`, `unsafe`, and `finalized` as seen by the `op-node`."
208,How can I check the sync status of `op-node` on Bedrock?,"You can use the `optimism_syncStatus` RPC method to query `op-node`'s sync status. This method will return the current `safe`, `unsafe`, and `finalized` statuses as seen by the `op-node`.","Bedrock supports all of the standard JSON-RPC methods exposed by go-ethereum. In order to reduce differences between Bedrock and vanilla Ethereum, some legacy methods have been removed. These methods and their replacements are:  
- `eth_getBlockRange`: Use `eth_getBlockByNumber` in a batch request instead.
- `rollup_getInfo`: None of the information returned by this method exists on Bedrock, so there is no replacement for this method.
- `rollup_gasPrices`: Use [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice) instead for the L2 gas price.
For the L1 gas price, you can call the [`GasPriceOracle`'s `l1BaseFee` function](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#readContract#F5).
If you want to estimate the cost of a transaction, you can [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).  
To query `op-node`'s sync status, use the `optimism_syncStatus` RPC method. This method will return the current `safe`, `unsafe`, and `finalized` as seen by the `op-node`."
209,How does Bedrock handle pending transactions?,Bedrock creates blocks on a fixed interval and uses a private mempool to store pending transactions until they are included in a block.,"Since the legacy network creates a block for every transaction, it processes new transactions in a first-come-first-serve manner. Bedrock, however, creates blocks on a fixed interval and therefore needs a mempool to store pending transactions until they are included in a block. To minimize MEV, Bedrock's mempool is private. To submit transactions, you will need to configure `op-geth` to forward transactions to the sequencer. This may change in the future.  
The sequencer processes transactions in the mempool in order of their base and priority fees."
209,How are transactions processed in Bedrock's mempool?,The sequencer processes transactions in the mempool in order of their base and priority fees.,"Since the legacy network creates a block for every transaction, it processes new transactions in a first-come-first-serve manner. Bedrock, however, creates blocks on a fixed interval and therefore needs a mempool to store pending transactions until they are included in a block. To minimize MEV, Bedrock's mempool is private. To submit transactions, you will need to configure `op-geth` to forward transactions to the sequencer. This may change in the future.  
The sequencer processes transactions in the mempool in order of their base and priority fees."
209,Do I need to configure anything to submit transactions in Bedrock?,"Yes, you will need to configure `op-geth` to forward transactions to the sequencer.","Since the legacy network creates a block for every transaction, it processes new transactions in a first-come-first-serve manner. Bedrock, however, creates blocks on a fixed interval and therefore needs a mempool to store pending transactions until they are included in a block. To minimize MEV, Bedrock's mempool is private. To submit transactions, you will need to configure `op-geth` to forward transactions to the sequencer. This may change in the future.  
The sequencer processes transactions in the mempool in order of their base and priority fees."
210,How long does it take to finalize a withdrawal on the legacy network?,"On the legacy network, it takes seven days for the withdrawal to be finalized after sending a withdrawal message.","On the legacy network, funds are withdrawn as follows:  
1. Users send a withdrawal message.
2. Users wait seven days for the withdrawal to be finalized.
3. Users post a withdrawal proof on L1, and claim their funds.  
However, this introduces a security risk. If the withdrawal proof can be successfully forged, an attacker could withdraw funds from the bridge that they are not authorized to. This kind of attack has been exploited before - a fraudulent proof led to the loss of [$100M on Binance Smart Chain](https://www.nansen.ai/research/bnb-chains-cross-chain-bridge-exploit-explained).  
To eliminate this risk, Bedrock requires users to post their withdrawal proofs upfront. Users must wait for a valid output root to be proposed so that the withdrawal proof can be validated onchain. Once the seven-day waiting period has expired, users can then finalize the withdrawal and claim their funds. The updated withdrawal flow is as follows:  
1. Users send a withdrawal message.
2. Users wait for a state output to be proposed onchain. This can take up to an hour.
3. Users call `proveWithdrawalTransaction()` on the `OptimismPortal` to post and validate their proof.
4. Users wait for the withdrawal to be finalized. This takes seven days on mainnet.
5. Users call `finalizeWithdrawal()` on the `OptimismPortal` to claim their funds.  
Visualized, this flow looks like this:  
<div style=""text-align: center"">  
![](../../../assets/docs/bedrock/two-phase-withdrawals.png)  
</div>  
By posting the proof upfront, it gives onchain monitoring tools enough time to detect a fraudulent withdrawal proof and attempt corrective action.
Regular users can do this monitoring too. For example, an exchange could halt withdrawals in the event of a fraudulent proof.  
Since this change fundamentally changes the way withdrawals are handled, it is **not** backwards-compatible with the old network. If you are performing withdrawals outside our standard bridge interface, you will need to update your software. The easiest way to to do this is to use our [TypeScript SDK](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/packages/sdk), which includes two-phase withdrawals support out of the box.  
For more information on two-phase withdrawals, see the withdrawals specification on [GitHub](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)."
210,What is the main security improvement in the Bedrock update for withdrawals?,"The main security improvement in the Bedrock update is that users must post their withdrawal proofs upfront, allowing onchain monitoring tools to detect and address any fraudulent withdrawal proofs before the funds are claimed.","On the legacy network, funds are withdrawn as follows:  
1. Users send a withdrawal message.
2. Users wait seven days for the withdrawal to be finalized.
3. Users post a withdrawal proof on L1, and claim their funds.  
However, this introduces a security risk. If the withdrawal proof can be successfully forged, an attacker could withdraw funds from the bridge that they are not authorized to. This kind of attack has been exploited before - a fraudulent proof led to the loss of [$100M on Binance Smart Chain](https://www.nansen.ai/research/bnb-chains-cross-chain-bridge-exploit-explained).  
To eliminate this risk, Bedrock requires users to post their withdrawal proofs upfront. Users must wait for a valid output root to be proposed so that the withdrawal proof can be validated onchain. Once the seven-day waiting period has expired, users can then finalize the withdrawal and claim their funds. The updated withdrawal flow is as follows:  
1. Users send a withdrawal message.
2. Users wait for a state output to be proposed onchain. This can take up to an hour.
3. Users call `proveWithdrawalTransaction()` on the `OptimismPortal` to post and validate their proof.
4. Users wait for the withdrawal to be finalized. This takes seven days on mainnet.
5. Users call `finalizeWithdrawal()` on the `OptimismPortal` to claim their funds.  
Visualized, this flow looks like this:  
<div style=""text-align: center"">  
![](../../../assets/docs/bedrock/two-phase-withdrawals.png)  
</div>  
By posting the proof upfront, it gives onchain monitoring tools enough time to detect a fraudulent withdrawal proof and attempt corrective action.
Regular users can do this monitoring too. For example, an exchange could halt withdrawals in the event of a fraudulent proof.  
Since this change fundamentally changes the way withdrawals are handled, it is **not** backwards-compatible with the old network. If you are performing withdrawals outside our standard bridge interface, you will need to update your software. The easiest way to to do this is to use our [TypeScript SDK](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/packages/sdk), which includes two-phase withdrawals support out of the box.  
For more information on two-phase withdrawals, see the withdrawals specification on [GitHub](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)."
210,Is the new Bedrock withdrawal process backwards-compatible with the old network?,"No, the new Bedrock withdrawal process is not backwards-compatible with the old network. If you are performing withdrawals outside the standard bridge interface, you will need to update your software to be compatible with the new process.","On the legacy network, funds are withdrawn as follows:  
1. Users send a withdrawal message.
2. Users wait seven days for the withdrawal to be finalized.
3. Users post a withdrawal proof on L1, and claim their funds.  
However, this introduces a security risk. If the withdrawal proof can be successfully forged, an attacker could withdraw funds from the bridge that they are not authorized to. This kind of attack has been exploited before - a fraudulent proof led to the loss of [$100M on Binance Smart Chain](https://www.nansen.ai/research/bnb-chains-cross-chain-bridge-exploit-explained).  
To eliminate this risk, Bedrock requires users to post their withdrawal proofs upfront. Users must wait for a valid output root to be proposed so that the withdrawal proof can be validated onchain. Once the seven-day waiting period has expired, users can then finalize the withdrawal and claim their funds. The updated withdrawal flow is as follows:  
1. Users send a withdrawal message.
2. Users wait for a state output to be proposed onchain. This can take up to an hour.
3. Users call `proveWithdrawalTransaction()` on the `OptimismPortal` to post and validate their proof.
4. Users wait for the withdrawal to be finalized. This takes seven days on mainnet.
5. Users call `finalizeWithdrawal()` on the `OptimismPortal` to claim their funds.  
Visualized, this flow looks like this:  
<div style=""text-align: center"">  
![](../../../assets/docs/bedrock/two-phase-withdrawals.png)  
</div>  
By posting the proof upfront, it gives onchain monitoring tools enough time to detect a fraudulent withdrawal proof and attempt corrective action.
Regular users can do this monitoring too. For example, an exchange could halt withdrawals in the event of a fraudulent proof.  
Since this change fundamentally changes the way withdrawals are handled, it is **not** backwards-compatible with the old network. If you are performing withdrawals outside our standard bridge interface, you will need to update your software. The easiest way to to do this is to use our [TypeScript SDK](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/packages/sdk), which includes two-phase withdrawals support out of the box.  
For more information on two-phase withdrawals, see the withdrawals specification on [GitHub](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)."
211,Will the changes in the new Bedrock network be compatible with the old network?,"No, the changes in the new Bedrock network are not backwards-compatible with the old network.",":::warning Breaking Change
The changes described in this section are **not** backwards-compatible with the old network. Please read this section carefully.
:::  
On the legacy network, deposits are replayable. This is no longer the case in Bedrock. Additionally, as part of the migration, all deposits on the legacy network that have not been replayed will no longer be replayable. **This means that if you have not replayed your deposit, you must do so before the migration.** This affects fewer than 100 transactions of the nearly 40 million on mainnet."
211,What happens to deposits on the legacy network that have not been replayed?,Deposits on the legacy network that have not been replayed will no longer be replayable after the migration to Bedrock.,":::warning Breaking Change
The changes described in this section are **not** backwards-compatible with the old network. Please read this section carefully.
:::  
On the legacy network, deposits are replayable. This is no longer the case in Bedrock. Additionally, as part of the migration, all deposits on the legacy network that have not been replayed will no longer be replayable. **This means that if you have not replayed your deposit, you must do so before the migration.** This affects fewer than 100 transactions of the nearly 40 million on mainnet."
211,How many transactions on the mainnet are affected by the need to replay deposits before the migration?,Fewer than 100 transactions out of nearly 40 million on the mainnet are affected by the need to replay deposits before the migration.,":::warning Breaking Change
The changes described in this section are **not** backwards-compatible with the old network. Please read this section carefully.
:::  
On the legacy network, deposits are replayable. This is no longer the case in Bedrock. Additionally, as part of the migration, all deposits on the legacy network that have not been replayed will no longer be replayable. **This means that if you have not replayed your deposit, you must do so before the migration.** This affects fewer than 100 transactions of the nearly 40 million on mainnet."
212,What's the purpose of the `L2OutputOracle` contract in Optimism?,"The `L2OutputOracle` contract contains the state root of the Optimism blockchain, such as OP Mainnet and OP Goerli. It will also receive the result of the fault proof process once fault proofs are activated.","[The `L2OutputOracle` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L2OutputOracle.sol) contains the state root of the Optimism blockchain (OP Mainnet, OP Goerli, etc.).
Once fault proofs are activated, it will be the one that receives the result of the fault proof process.  
This is the contract that replaces the old State Commitment Chain."
212,What did the `L2OutputOracle` contract replace in the Optimism system?,The `L2OutputOracle` contract replaced the old State Commitment Chain in the Optimism system.,"[The `L2OutputOracle` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L2OutputOracle.sol) contains the state root of the Optimism blockchain (OP Mainnet, OP Goerli, etc.).
Once fault proofs are activated, it will be the one that receives the result of the fault proof process.  
This is the contract that replaces the old State Commitment Chain."
213,How can I send messages between L1 and L2 in Optimism?,You can send messages between L1 and L2 using the L1CrossDomainMessenger and L2CrossDomainMessenger. This is the recommended method unless you need to send L2 transactions via L1 to bypass the sequencer.,"[The `OptimismPortal` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol) provides [the low-level API for communications between layers](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc). Unless you are trying to send L2 transactions via L1 to bypass the sequencer, we strongly recommend sending messages between L1 and L2 via the L1CrossDomainMessenger and L2CrossDomainMessenger."
213,What is the purpose of the OptimismPortal contract?,"The OptimismPortal contract provides the low-level API for communications between layers, such as deposits from the underlying L1 Ethereum (Goerli, etc.) to L2 (OP Mainnet, OP Goerli, etc.).","[The `OptimismPortal` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol) provides [the low-level API for communications between layers](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc). Unless you are trying to send L2 transactions via L1 to bypass the sequencer, we strongly recommend sending messages between L1 and L2 via the L1CrossDomainMessenger and L2CrossDomainMessenger."
213,Where can I find the OptimismPortal contract?,You can find the OptimismPortal contract on GitHub at this link: https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol.,"[The `OptimismPortal` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol) provides [the low-level API for communications between layers](#deposits-from-the-underlying-l1-ethereum-goerli-etc-to-l2-op-mainnet-op-goerli-etc). Unless you are trying to send L2 transactions via L1 to bypass the sequencer, we strongly recommend sending messages between L1 and L2 via the L1CrossDomainMessenger and L2CrossDomainMessenger."
214,Do I need to modify my dapp to run on Bedrock?,"No, you don't need to modify your dapp to run on Bedrock because the contracts provide the same interface as existed pre-Bedrock.","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol):
The `L1CrossDomainMessenger` contract is used for sending messages between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.). Those messages may or may not have assets attached to them.
- [L1StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol):
The `L1StandardBridge` contract uses `L1CrossDomainMessenger` to transfer ETH and ERC-20 tokens between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.)."
214,What is the purpose of the L1CrossDomainMessenger contract?,"The L1CrossDomainMessenger contract is used for sending messages between the underlying L1 (like Ethereum, Goerli, etc.) and L2 (like OP Mainnet, OP Goerli, etc.). These messages may or may not have assets attached to them.","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol):
The `L1CrossDomainMessenger` contract is used for sending messages between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.). Those messages may or may not have assets attached to them.
- [L1StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol):
The `L1StandardBridge` contract uses `L1CrossDomainMessenger` to transfer ETH and ERC-20 tokens between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.)."
214,How does the L1StandardBridge contract work?,"The L1StandardBridge contract uses the L1CrossDomainMessenger to transfer ETH and ERC-20 tokens between the underlying L1 (like Ethereum, Goerli, etc.) and L2 (like OP Mainnet, OP Goerli, etc.).","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol):
The `L1CrossDomainMessenger` contract is used for sending messages between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.). Those messages may or may not have assets attached to them.
- [L1StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol):
The `L1StandardBridge` contract uses `L1CrossDomainMessenger` to transfer ETH and ERC-20 tokens between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.)."
215,How can I find the address of the `L1Block` contract in Optimism?,The `L1Block` contract in Optimism is located at the address `0x4200000000000000000000000000000000000015`.,"[The `L1Block` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol) sits at address `0x4200000000000000000000000000000000000015`.
You can use [the getter functions](https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions) to get these parameters:  
- `number`: The latest L1 block number known to L2 (the `L1BlockNumber` contract is still supported to avoid breaking existing applications)
- `timestamp`: The timestamp of the latest L1 block
- `basefee`: The base fee of the latest L1 block
- `hash`: The hash of the latest L1 block
- `sequenceNumber`: The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)  
Currently the L1 information is delayed by two block confirmations (~24 seconds) to minimize the impact of reorgs."
215,What kind of information can I retrieve using the getter functions of the `L1Block` contract?,"Using the getter functions of the `L1Block` contract, you can retrieve the latest L1 block number, the timestamp of the latest L1 block, the base fee of the latest L1 block, the hash of the latest L1 block, and the sequence number of the L2 block within the epoch.","[The `L1Block` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol) sits at address `0x4200000000000000000000000000000000000015`.
You can use [the getter functions](https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions) to get these parameters:  
- `number`: The latest L1 block number known to L2 (the `L1BlockNumber` contract is still supported to avoid breaking existing applications)
- `timestamp`: The timestamp of the latest L1 block
- `basefee`: The base fee of the latest L1 block
- `hash`: The hash of the latest L1 block
- `sequenceNumber`: The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)  
Currently the L1 information is delayed by two block confirmations (~24 seconds) to minimize the impact of reorgs."
215,Why is there a delay in the L1 information provided by the `L1Block` contract?,"The L1 information is delayed by two block confirmations, which is approximately 24 seconds, to minimize the impact of reorgs (reorganizations) on the network.","[The `L1Block` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol) sits at address `0x4200000000000000000000000000000000000015`.
You can use [the getter functions](https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions) to get these parameters:  
- `number`: The latest L1 block number known to L2 (the `L1BlockNumber` contract is still supported to avoid breaking existing applications)
- `timestamp`: The timestamp of the latest L1 block
- `basefee`: The base fee of the latest L1 block
- `hash`: The hash of the latest L1 block
- `sequenceNumber`: The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)  
Currently the L1 information is delayed by two block confirmations (~24 seconds) to minimize the impact of reorgs."
216,How does the SequencerFeeVault contract fund the sequencer on L1?,The SequencerFeeVault contract funds the sequencer on L1 using the ETH base fee collected on L2.,"[The `SequencerFeeVault` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/SequencerFeeVault.sol) handles funding the sequencer on L1 using the ETH base fee on L2.  
The fees are calculated using [EIP 1559](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md), the same mechanism that Ethereum uses (but with different parameter values)."
216,What mechanism is used to calculate the fees for the SequencerFeeVault contract?,"The fees for the SequencerFeeVault contract are calculated using EIP 1559, the same mechanism that Ethereum uses, but with different parameter values.","[The `SequencerFeeVault` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/SequencerFeeVault.sol) handles funding the sequencer on L1 using the ETH base fee on L2.  
The fees are calculated using [EIP 1559](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md), the same mechanism that Ethereum uses (but with different parameter values)."
217,How does the `L2ToL1MessagePasser` contract function in the Optimism network?,The `L2ToL1MessagePasser` contract is used internally by the `L2CrossDomainMessenger` to initiate withdrawals from Layer 2 (L2) to Layer 1 (L1) in the Optimism network.,"[The `L2ToL1MessagePasser` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) is used internally by `L2CrossDomainMessenger` to initiate withdrawals.  
Note that in Bedrock there are two contracts:  
- [The legacy contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyMessagePasser.sol) at address `0x4200000000000000000000000000000000000000`
- [The new contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) at address `0x4200000000000000000000000000000000000016`"
217,What are the addresses of the legacy and new `L2ToL1MessagePasser` contracts in Bedrock?,"In Bedrock, the legacy `L2ToL1MessagePasser` contract is at address `0x4200000000000000000000000000000000000000`, and the new contract is at address `0x4200000000000000000000000000000000000016`.","[The `L2ToL1MessagePasser` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) is used internally by `L2CrossDomainMessenger` to initiate withdrawals.  
Note that in Bedrock there are two contracts:  
- [The legacy contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyMessagePasser.sol) at address `0x4200000000000000000000000000000000000000`
- [The new contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) at address `0x4200000000000000000000000000000000000016`"
218,Do I need to modify my dapp to run on Bedrock?,"No, the contracts provide the same interface as existed pre-Bedrock, so dapps don‚Äôt have to be modified to run on Bedrock.","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1BlockNumber](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/L1BlockNumber.sol):
The `L1BlockNumber` contract provides the number of the latest L1 block.
In Bedrock it is simply a proxy to [`L1Block`](#l1block).
- [L2CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol):
The `L2CrossDomainMessenger` contract is used to send messages from L2 (OP Mainnet, OP Goerli, etc.) to the underlying L1 (Ethereum, Goerli, etc.).
- [L2StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol):
The `L2StandardBridge` contract is used to ""attach"" assets (ETH and ERC-20 tokens) to messages that are then sent by `L2CrossDomainMessenger`.
- [WETH9](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/vendor/WETH9.sol):
[The WETH9 contract](https://web.archive.org/web/20221022164309/https://weth.io/) is an ERC-20 token that wraps around ETH to provide extra functionality, such as approvals."
218,What is the purpose of the L2CrossDomainMessenger contract?,"The L2CrossDomainMessenger contract is used to send messages from L2 (OP Mainnet, OP Goerli, etc.) to the underlying L1 (Ethereum, Goerli, etc.).","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1BlockNumber](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/L1BlockNumber.sol):
The `L1BlockNumber` contract provides the number of the latest L1 block.
In Bedrock it is simply a proxy to [`L1Block`](#l1block).
- [L2CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol):
The `L2CrossDomainMessenger` contract is used to send messages from L2 (OP Mainnet, OP Goerli, etc.) to the underlying L1 (Ethereum, Goerli, etc.).
- [L2StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol):
The `L2StandardBridge` contract is used to ""attach"" assets (ETH and ERC-20 tokens) to messages that are then sent by `L2CrossDomainMessenger`.
- [WETH9](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/vendor/WETH9.sol):
[The WETH9 contract](https://web.archive.org/web/20221022164309/https://weth.io/) is an ERC-20 token that wraps around ETH to provide extra functionality, such as approvals."
218,What does the WETH9 contract do?,"The WETH9 contract is an ERC-20 token that wraps around ETH to provide extra functionality, such as approvals.","These contracts provide the same interface as existed pre-Bedrock so dapps don‚Äôt have to be modified to run on Bedrock.  
- [L1BlockNumber](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/L1BlockNumber.sol):
The `L1BlockNumber` contract provides the number of the latest L1 block.
In Bedrock it is simply a proxy to [`L1Block`](#l1block).
- [L2CrossDomainMessenger](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol):
The `L2CrossDomainMessenger` contract is used to send messages from L2 (OP Mainnet, OP Goerli, etc.) to the underlying L1 (Ethereum, Goerli, etc.).
- [L2StandardBridge](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol):
The `L2StandardBridge` contract is used to ""attach"" assets (ETH and ERC-20 tokens) to messages that are then sent by `L2CrossDomainMessenger`.
- [WETH9](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/vendor/WETH9.sol):
[The WETH9 contract](https://web.archive.org/web/20221022164309/https://weth.io/) is an ERC-20 token that wraps around ETH to provide extra functionality, such as approvals."
219,Why are some contracts kept as part of the state even if they are no longer relevant?,Some contracts are kept as part of the state in case there is a call in any decentralized application (dapp) that uses them. This ensures compatibility and functionality for older dapps that might still rely on these contracts.,"These are contracts that are no longer relevant, but are kept as part of the state in case there is a call in any dapp that uses them.  
- [DeployerWhitelist](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/DeployerWhitelist.sol):
The `DeployerWhitelist` contract used to manage the whitelist before [OP Mainnet moved out of beta](https://twitter.com/optimismFND/status/1471571415774023682).  
- [OVM_ETH](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyERC20ETH.sol):
The `OVM_ETH` contract used to manage users ETH balances prior to Bedrock."
219,What was the purpose of the DeployerWhitelist contract?,The DeployerWhitelist contract was used to manage the whitelist before the OP Mainnet moved out of beta. It ensured that only approved entities could deploy contracts on the network during its beta phase.,"These are contracts that are no longer relevant, but are kept as part of the state in case there is a call in any dapp that uses them.  
- [DeployerWhitelist](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/DeployerWhitelist.sol):
The `DeployerWhitelist` contract used to manage the whitelist before [OP Mainnet moved out of beta](https://twitter.com/optimismFND/status/1471571415774023682).  
- [OVM_ETH](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyERC20ETH.sol):
The `OVM_ETH` contract used to manage users ETH balances prior to Bedrock."
219,What did the OVM_ETH contract do?,The OVM_ETH contract was used to manage users' ETH balances prior to the Bedrock update. It handled the accounting and transactions of ETH within the Optimism network before the newer system was implemented.,"These are contracts that are no longer relevant, but are kept as part of the state in case there is a call in any dapp that uses them.  
- [DeployerWhitelist](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/DeployerWhitelist.sol):
The `DeployerWhitelist` contract used to manage the whitelist before [OP Mainnet moved out of beta](https://twitter.com/optimismFND/status/1471571415774023682).  
- [OVM_ETH](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyERC20ETH.sol):
The `OVM_ETH` contract used to manage users ETH balances prior to Bedrock."
220,What's the difference between a deposit and a withdrawal in Optimism?,"In Optimism, a 'deposit' refers to any message going from the underlying L1 blockchain to L2, whether it has any assets attached or not. A 'withdrawal' refers to any message going from L2 to the underlying L1.","In Optimism terminology ""deposit"" refers to any message going from the underlying L1 blockchain to L2, whether it has any assets attached or not.
Similarly, ""withdrawal"" refers to any message going from L2 to the underlying L1.  
[See here for the messenger specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/messengers.md) and [here for the bridge specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md).  
<!--"
220,Do deposits in Optimism always involve transferring assets?,"No, in Optimism, a deposit refers to any message going from the underlying L1 blockchain to L2, whether it has any assets attached or not.","In Optimism terminology ""deposit"" refers to any message going from the underlying L1 blockchain to L2, whether it has any assets attached or not.
Similarly, ""withdrawal"" refers to any message going from L2 to the underlying L1.  
[See here for the messenger specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/messengers.md) and [here for the bridge specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md).  
<!--"
220,Where can I find more technical details about how messages are transferred between L1 and L2 in Optimism?,You can find more technical details in the messenger specs and bridge specs available on GitHub. Here are the links: [messenger specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/messengers.md) and [bridge specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md).,"In Optimism terminology ""deposit"" refers to any message going from the underlying L1 blockchain to L2, whether it has any assets attached or not.
Similarly, ""withdrawal"" refers to any message going from L2 to the underlying L1.  
[See here for the messenger specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/messengers.md) and [here for the bridge specs](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/bridges.md).  
<!--"
221,Are the gas costs for communication between layers in Optimism going to change?,"Yes, the gas costs for communication between layers are expected to change, and they will probably get lower.","The gas costs for communication between layers are going to change, they will probably get lower.
More information will be posted here once we have more exact information after we profile a test network.  
-->  
<!-- TODO get the figures and put them here -->"
221,Is there more detailed information available about the new gas costs for communication between layers?,Not yet. More detailed information will be posted once they have more exact information after profiling a test network.,"The gas costs for communication between layers are going to change, they will probably get lower.
More information will be posted here once we have more exact information after we profile a test network.  
-->  
<!-- TODO get the figures and put them here -->"
222,How can I ensure my deposit transaction on Optimism doesn't run out of gas?,"To ensure your deposit transaction doesn't run out of gas, it's recommended to add a 50% buffer to the gas estimate returned by `estimateGas`. For example, if `eth_estimateGas` estimates that your deposit will consume 100,000 gas, you should multiply this by 1.5 and set your `gasLimit` to at least 150,000 gas. The Optimism SDK already includes this buffer automatically.","To create a deposit we recommend that you use the pre-Bedrock contracts [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol) and [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol) also has low-level deposit functionality.  
With the OptimismPortal‚Äôs `depositTransaction` function you can do from L1 anything you can do by contacting L2 directly: send transactions, send payments, create contracts, etc.
This provides an uncensorable alternative in case the sequencer is down.
Even though the sequencer is down, verifiers (nodes that synchronize the Optimism state from L1) are still going to receive such transactions and modify the state accordingly.
When the sequencer is back up it has to process the transactions in the same order to have a valid state.  
We recommend adding a 50% buffer to whatever is returned by `estimateGas` to ensure that your deposit will not run out of gas (Note: the Optimism SDK already does this under the hood). For example, if you wish to send a deposit of ETH, you might call `eth_estimateGas` and see that the deposit is expected to consume `100,000 gas`. You should then multiply that estimated about by `1.5` and then send your transaction with a `gasLimit` of at least `150,000 gas`.  
:::tip
In order to prevent Optimism networks from being DOSed via forced L1 to L2 transactions that bypass the Sequencer, a fee adjustment schedule to all L1‚ÜíL2 transactions that closely mimics EIP1559 is included with Bedrock. Like in the current network, deposit fees are paid by burning some amount of L1 gas proportional to your deposit's L2 gas limit. Unfortunately, this means that you may have cases where you estimate how much gas an L1‚ÜíL2 deposit will cost, and deposit fees increase by the time your transaction gets included in a block and executed, causing your deposit to run out of gas and revert. This is why we recommend adding a 50% buffer to your `gasLimit` to ensure your deposit will not run out of gas.
:::  
Deposits that come from contracts still use [address aliasing](../build/differences.md#address-aliasing).  
Deposits are faster, about a minute, because they only require five blocks for confirmation (and L1 blocks are usually 12 seconds apart).  
[You can read the full deposit specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type).  
[You can read the full withdrawal specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)"
222,What happens if the sequencer is down when I make a deposit on Optimism?,"If the sequencer is down, you can still make deposits using the OptimismPortal‚Äôs `depositTransaction` function. Verifiers, which are nodes that synchronize the Optimism state from L1, will receive these transactions and modify the state accordingly. When the sequencer is back up, it will process the transactions in the same order to maintain a valid state.","To create a deposit we recommend that you use the pre-Bedrock contracts [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol) and [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol) also has low-level deposit functionality.  
With the OptimismPortal‚Äôs `depositTransaction` function you can do from L1 anything you can do by contacting L2 directly: send transactions, send payments, create contracts, etc.
This provides an uncensorable alternative in case the sequencer is down.
Even though the sequencer is down, verifiers (nodes that synchronize the Optimism state from L1) are still going to receive such transactions and modify the state accordingly.
When the sequencer is back up it has to process the transactions in the same order to have a valid state.  
We recommend adding a 50% buffer to whatever is returned by `estimateGas` to ensure that your deposit will not run out of gas (Note: the Optimism SDK already does this under the hood). For example, if you wish to send a deposit of ETH, you might call `eth_estimateGas` and see that the deposit is expected to consume `100,000 gas`. You should then multiply that estimated about by `1.5` and then send your transaction with a `gasLimit` of at least `150,000 gas`.  
:::tip
In order to prevent Optimism networks from being DOSed via forced L1 to L2 transactions that bypass the Sequencer, a fee adjustment schedule to all L1‚ÜíL2 transactions that closely mimics EIP1559 is included with Bedrock. Like in the current network, deposit fees are paid by burning some amount of L1 gas proportional to your deposit's L2 gas limit. Unfortunately, this means that you may have cases where you estimate how much gas an L1‚ÜíL2 deposit will cost, and deposit fees increase by the time your transaction gets included in a block and executed, causing your deposit to run out of gas and revert. This is why we recommend adding a 50% buffer to your `gasLimit` to ensure your deposit will not run out of gas.
:::  
Deposits that come from contracts still use [address aliasing](../build/differences.md#address-aliasing).  
Deposits are faster, about a minute, because they only require five blocks for confirmation (and L1 blocks are usually 12 seconds apart).  
[You can read the full deposit specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type).  
[You can read the full withdrawal specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)"
222,How long does it take for a deposit to be confirmed on Optimism?,"Deposits on Optimism are faster and typically take about a minute to be confirmed because they only require five blocks for confirmation, with L1 blocks usually being 12 seconds apart.","To create a deposit we recommend that you use the pre-Bedrock contracts [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol) and [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol) also has low-level deposit functionality.  
With the OptimismPortal‚Äôs `depositTransaction` function you can do from L1 anything you can do by contacting L2 directly: send transactions, send payments, create contracts, etc.
This provides an uncensorable alternative in case the sequencer is down.
Even though the sequencer is down, verifiers (nodes that synchronize the Optimism state from L1) are still going to receive such transactions and modify the state accordingly.
When the sequencer is back up it has to process the transactions in the same order to have a valid state.  
We recommend adding a 50% buffer to whatever is returned by `estimateGas` to ensure that your deposit will not run out of gas (Note: the Optimism SDK already does this under the hood). For example, if you wish to send a deposit of ETH, you might call `eth_estimateGas` and see that the deposit is expected to consume `100,000 gas`. You should then multiply that estimated about by `1.5` and then send your transaction with a `gasLimit` of at least `150,000 gas`.  
:::tip
In order to prevent Optimism networks from being DOSed via forced L1 to L2 transactions that bypass the Sequencer, a fee adjustment schedule to all L1‚ÜíL2 transactions that closely mimics EIP1559 is included with Bedrock. Like in the current network, deposit fees are paid by burning some amount of L1 gas proportional to your deposit's L2 gas limit. Unfortunately, this means that you may have cases where you estimate how much gas an L1‚ÜíL2 deposit will cost, and deposit fees increase by the time your transaction gets included in a block and executed, causing your deposit to run out of gas and revert. This is why we recommend adding a 50% buffer to your `gasLimit` to ensure your deposit will not run out of gas.
:::  
Deposits that come from contracts still use [address aliasing](../build/differences.md#address-aliasing).  
Deposits are faster, about a minute, because they only require five blocks for confirmation (and L1 blocks are usually 12 seconds apart).  
[You can read the full deposit specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type).  
[You can read the full withdrawal specifications here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/withdrawals.md)"
223,Are there any recent changes in the internal workings of Optimism?,"Yes, there have been some changes in the internals of Optimism. The specific section of the documentation discusses these updates in detail.",This section discusses some of the changes in Optimism internals.
224,How are L2 blocks saved to the Ethereum blockchain now?,L2 blocks are saved to the Ethereum blockchain using a non-contract address to minimize L1 gas expenses.,"There is no longer a CTC (canonical transaction chain) contract. Instead, L2 blocks are saved to the Ethereum blockchain using a non-contract address to minimize the L1 gas expenses. Please see the [Public Testnets](./public-testnets.md) page for more information on where to find batch submission addresses.  
[The block and transaction format is also different](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md#derivation)."
224,Where can I find more information about batch submission addresses?,You can find more information about batch submission addresses on the Public Testnets page in the Optimism Governance Documentation.,"There is no longer a CTC (canonical transaction chain) contract. Instead, L2 blocks are saved to the Ethereum blockchain using a non-contract address to minimize the L1 gas expenses. Please see the [Public Testnets](./public-testnets.md) page for more information on where to find batch submission addresses.  
[The block and transaction format is also different](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md#derivation)."
224,Is the block and transaction format the same as before?,"No, the block and transaction format is different. You can find more details in the Optimism specifications on their GitHub page.","There is no longer a CTC (canonical transaction chain) contract. Instead, L2 blocks are saved to the Ethereum blockchain using a non-contract address to minimize the L1 gas expenses. Please see the [Public Testnets](./public-testnets.md) page for more information on where to find batch submission addresses.  
[The block and transaction format is also different](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md#derivation)."
225,How can I monitor the health of the Bedrock `op-node` system?,"You can monitor the health of the Bedrock `op-node` system by using the metrics it exposes. These metrics are formatted for use with Prometheus and can be accessed via a metrics endpoint, which by default is `http://localhost:7300/metrics`.","---
title: Metrics
lang: en-US
---  
The Bedrock `op-node` exposes a variety of metrics to help observe the health of the system and debug issues. Metrics are formatted for use with Prometheus, and exposed via a metrics endpoint. The default metrics endpoint is `http://localhost:7300/metrics`.  
To enable metrics, pass the `--metrics.enabled` flag to the `op-node`. You can customize the metrics port and address via the `--metrics.port` and `--metrics.addr` flags, respectively."
225,How do I enable metrics for the Bedrock `op-node`?,"To enable metrics for the Bedrock `op-node`, you need to pass the `--metrics.enabled` flag when running the `op-node`.","---
title: Metrics
lang: en-US
---  
The Bedrock `op-node` exposes a variety of metrics to help observe the health of the system and debug issues. Metrics are formatted for use with Prometheus, and exposed via a metrics endpoint. The default metrics endpoint is `http://localhost:7300/metrics`.  
To enable metrics, pass the `--metrics.enabled` flag to the `op-node`. You can customize the metrics port and address via the `--metrics.port` and `--metrics.addr` flags, respectively."
225,Can I customize the metrics endpoint for the Bedrock `op-node`?,"Yes, you can customize the metrics endpoint for the Bedrock `op-node` by using the `--metrics.port` and `--metrics.addr` flags to set the desired port and address, respectively.","---
title: Metrics
lang: en-US
---  
The Bedrock `op-node` exposes a variety of metrics to help observe the health of the system and debug issues. Metrics are formatted for use with Prometheus, and exposed via a metrics endpoint. The default metrics endpoint is `http://localhost:7300/metrics`.  
To enable metrics, pass the `--metrics.enabled` flag to the `op-node`. You can customize the metrics port and address via the `--metrics.port` and `--metrics.addr` flags, respectively."
226,How can I tell if my node is not syncing properly?,"You can monitor the `op_node_default_refs_number` metric. If this number stops increasing, it means that your node is not syncing. If it goes backwards, it indicates that your node is reorging.","To monitor the health of your node, you should monitor the following metrics:  
- `op_node_default_refs_number`: This metric represents the `op-node`'s current L1/L2 reference block number for different sync types. If it stops increasing, it means that the node is not syncing. If it goes backwards, it means your node is reorging.
- `op_node_default_peer_count`: This metric represents how many peers the `op-node` is connected to. Without peers, the `op-node` cannot sync unsafe blocks and your node will lag behind the sequencer as it will fall back to syncing purely from L1.
- `op_node_default_rpc_client_request_duration_seconds`: This metrics measures the latency of RPC requests initiated by the `op-node`. This metric is important when debugging sync performance, as it will reveal which specific RPC calls are slowing down sync. This metric exposes one timeseries per RPC method. The most important RPC methods to monitor are:
- `engine_forkChoiceUpdatedV1`, `engine_getPayloadV1`, and `engine_newPayloadV1`: These methods are used to execute blocks on `op-geth`. If these methods are slow, it means that sync time is bottlenecked by either `op-geth` itself or your connection to it.
- `eth_getBlockByHash`, `eth_getTransactionReceipt`, and `eth_getBlockByNumber`: These methods are used by the `op-node` to fetch transaction data from L1. If these methods are slow, it means that sync time is bottlenecked by your L1 RPC."
226,Why is it important to monitor the number of peers my node is connected to?,"The `op_node_default_peer_count` metric shows how many peers your `op-node` is connected to. Without peers, the `op-node` cannot sync unsafe blocks and your node will lag behind the sequencer, as it will have to fall back to syncing purely from L1.","To monitor the health of your node, you should monitor the following metrics:  
- `op_node_default_refs_number`: This metric represents the `op-node`'s current L1/L2 reference block number for different sync types. If it stops increasing, it means that the node is not syncing. If it goes backwards, it means your node is reorging.
- `op_node_default_peer_count`: This metric represents how many peers the `op-node` is connected to. Without peers, the `op-node` cannot sync unsafe blocks and your node will lag behind the sequencer as it will fall back to syncing purely from L1.
- `op_node_default_rpc_client_request_duration_seconds`: This metrics measures the latency of RPC requests initiated by the `op-node`. This metric is important when debugging sync performance, as it will reveal which specific RPC calls are slowing down sync. This metric exposes one timeseries per RPC method. The most important RPC methods to monitor are:
- `engine_forkChoiceUpdatedV1`, `engine_getPayloadV1`, and `engine_newPayloadV1`: These methods are used to execute blocks on `op-geth`. If these methods are slow, it means that sync time is bottlenecked by either `op-geth` itself or your connection to it.
- `eth_getBlockByHash`, `eth_getTransactionReceipt`, and `eth_getBlockByNumber`: These methods are used by the `op-node` to fetch transaction data from L1. If these methods are slow, it means that sync time is bottlenecked by your L1 RPC."
226,What should I look at if my node's sync performance is slow?,"You should monitor the `op_node_default_rpc_client_request_duration_seconds` metric, which measures the latency of RPC requests initiated by the `op-node`. This will help you identify which specific RPC calls are slowing down the sync. Key RPC methods to monitor include `engine_forkChoiceUpdatedV1`, `engine_getPayloadV1`, `engine_newPayloadV1`, `eth_getBlockByHash`, `eth_getTransactionReceipt`, and `eth_getBlockByNumber`.","To monitor the health of your node, you should monitor the following metrics:  
- `op_node_default_refs_number`: This metric represents the `op-node`'s current L1/L2 reference block number for different sync types. If it stops increasing, it means that the node is not syncing. If it goes backwards, it means your node is reorging.
- `op_node_default_peer_count`: This metric represents how many peers the `op-node` is connected to. Without peers, the `op-node` cannot sync unsafe blocks and your node will lag behind the sequencer as it will fall back to syncing purely from L1.
- `op_node_default_rpc_client_request_duration_seconds`: This metrics measures the latency of RPC requests initiated by the `op-node`. This metric is important when debugging sync performance, as it will reveal which specific RPC calls are slowing down sync. This metric exposes one timeseries per RPC method. The most important RPC methods to monitor are:
- `engine_forkChoiceUpdatedV1`, `engine_getPayloadV1`, and `engine_newPayloadV1`: These methods are used to execute blocks on `op-geth`. If these methods are slow, it means that sync time is bottlenecked by either `op-geth` itself or your connection to it.
- `eth_getBlockByHash`, `eth_getTransactionReceipt`, and `eth_getBlockByNumber`: These methods are used by the `op-node` to fetch transaction data from L1. If these methods are slow, it means that sync time is bottlenecked by your L1 RPC."
227,How can I know if the op node has finished starting up?,"You can check the metric 'op_node_default_up'. If it shows a value of 1, it means the op node has finished starting up.","A complete list of available metrics is below:  
|                       METRIC                        |                                           DESCRIPTION                                            |    LABELS    |   TYPE    |
|-----------------------------------------------------|--------------------------------------------------------------------------------------------------|--------------|-----------|
| op_node_default_info                                | Pseudo-metric tracking version and config info                                                   | version      | gauge     |
| op_node_default_up                                  | 1 if the op node has finished starting up                                                        |              | gauge     |
| op_node_default_rpc_server_requests_total           | Total requests to the RPC server                                                                 | method       | counter   |
| op_node_default_rpc_server_request_duration_seconds | Histogram of RPC server request durations                                                        | method       | histogram |
| op_node_default_rpc_client_requests_total           | Total RPC requests initiated by the opnode's RPC client                                          | method       | counter   |
| op_node_default_rpc_client_request_duration_seconds | Histogram of RPC client request durations                                                        | method       | histogram |
| op_node_default_rpc_client_responses_total          | Total RPC request responses received by the opnode's RPC client                                  | method,error | counter   |
| op_node_default_l1_source_cache_size                | L1 Source cache cache size                                                                       | type         | gauge     |
| op_node_default_l1_source_cache_get                 | L1 Source cache lookups, hitting or not                                                          | type,hit     | counter   |
| op_node_default_l1_source_cache_add                 | L1 Source cache additions, evicting previous values or not                                       | type,evicted | counter   |
| op_node_default_l2_source_cache_size                | L2 Source cache cache size                                                                       | type         | gauge     |
| op_node_default_l2_source_cache_get                 | L2 Source cache lookups, hitting or not                                                          | type,hit     | counter   |
| op_node_default_l2_source_cache_add                 | L2 Source cache additions, evicting previous values or not                                       | type,evicted | counter   |
| op_node_default_derivation_idle                     | 1 if the derivation pipeline is idle                                                             |              | gauge     |
| op_node_default_pipeline_resets_total               | Count of derivation pipeline resets events                                                       |              | counter   |
| op_node_default_last_pipeline_resets_unix           | Timestamp of last derivation pipeline resets event                                               |              | gauge     |
| op_node_default_unsafe_payloads_total               | Count of unsafe payloads events                                                                  |              | counter   |
| op_node_default_last_unsafe_payloads_unix           | Timestamp of last unsafe payloads event                                                          |              | gauge     |
| op_node_default_derivation_errors_total             | Count of derivation errors events                                                                |              | counter   |
| op_node_default_last_derivation_errors_unix         | Timestamp of last derivation errors event                                                        |              | gauge     |
| op_node_default_sequencing_errors_total             | Count of sequencing errors events                                                                |              | counter   |
| op_node_default_last_sequencing_errors_unix         | Timestamp of last sequencing errors event                                                        |              | gauge     |
| op_node_default_publishing_errors_total             | Count of p2p publishing errors events                                                            |              | counter   |
| op_node_default_last_publishing_errors_unix         | Timestamp of last p2p publishing errors event                                                    |              | gauge     |
| op_node_default_unsafe_payloads_buffer_len          | Number of buffered L2 unsafe payloads                                                            |              | gauge     |
| op_node_default_unsafe_payloads_buffer_mem_size     | Total estimated memory size of buffered L2 unsafe payloads                                       |              | gauge     |
| op_node_default_refs_number                         | Gauge representing the different L1/L2 reference block numbers                                   | layer,type   | gauge     |
| op_node_default_refs_time                           | Gauge representing the different L1/L2 reference block timestamps                                | layer,type   | gauge     |
| op_node_default_refs_hash                           | Gauge representing the different L1/L2 reference block hashes truncated to float values          | layer,type   | gauge     |
| op_node_default_refs_seqnr                          | Gauge representing the different L2 reference sequence numbers                                   | type         | gauge     |
| op_node_default_refs_latency                        | Gauge representing the different L1/L2 reference block timestamps minus current time, in seconds | layer,type   | gauge     |
| op_node_default_l1_reorg_depth                      | Histogram of L1 Reorg Depths                                                                     |              | histogram |
| op_node_default_transactions_sequenced_total        | Count of total transactions sequenced                                                            |              | gauge     |
| op_node_default_p2p_peer_count                      | Count of currently connected p2p peers                                                           |              | gauge     |
| op_node_default_p2p_stream_count                    | Count of currently connected p2p streams                                                         |              | gauge     |
| op_node_default_p2p_gossip_events_total             | Count of gossip events by type                                                                   | type         | counter   |
| op_node_default_p2p_bandwidth_bytes_total           | P2P bandwidth by direction                                                                       | direction    | gauge     |
| op_node_default_sequencer_building_diff_seconds     | Histogram of Sequencer building time, minus block time                                           |              | histogram |
| op_node_default_sequencer_building_diff_total       | Number of sequencer block building jobs                                                          |              | counter   |
| op_node_default_sequencer_sealing_seconds           | Histogram of Sequencer block sealing time                                                        |              | histogram |
| op_node_default_sequencer_sealing_total             | Number of sequencer block sealing jobs                                                           |              | counter   |"
227,What does the metric 'op_node_default_rpc_server_requests_total' represent?,The metric 'op_node_default_rpc_server_requests_total' represents the total number of requests made to the RPC server.,"A complete list of available metrics is below:  
|                       METRIC                        |                                           DESCRIPTION                                            |    LABELS    |   TYPE    |
|-----------------------------------------------------|--------------------------------------------------------------------------------------------------|--------------|-----------|
| op_node_default_info                                | Pseudo-metric tracking version and config info                                                   | version      | gauge     |
| op_node_default_up                                  | 1 if the op node has finished starting up                                                        |              | gauge     |
| op_node_default_rpc_server_requests_total           | Total requests to the RPC server                                                                 | method       | counter   |
| op_node_default_rpc_server_request_duration_seconds | Histogram of RPC server request durations                                                        | method       | histogram |
| op_node_default_rpc_client_requests_total           | Total RPC requests initiated by the opnode's RPC client                                          | method       | counter   |
| op_node_default_rpc_client_request_duration_seconds | Histogram of RPC client request durations                                                        | method       | histogram |
| op_node_default_rpc_client_responses_total          | Total RPC request responses received by the opnode's RPC client                                  | method,error | counter   |
| op_node_default_l1_source_cache_size                | L1 Source cache cache size                                                                       | type         | gauge     |
| op_node_default_l1_source_cache_get                 | L1 Source cache lookups, hitting or not                                                          | type,hit     | counter   |
| op_node_default_l1_source_cache_add                 | L1 Source cache additions, evicting previous values or not                                       | type,evicted | counter   |
| op_node_default_l2_source_cache_size                | L2 Source cache cache size                                                                       | type         | gauge     |
| op_node_default_l2_source_cache_get                 | L2 Source cache lookups, hitting or not                                                          | type,hit     | counter   |
| op_node_default_l2_source_cache_add                 | L2 Source cache additions, evicting previous values or not                                       | type,evicted | counter   |
| op_node_default_derivation_idle                     | 1 if the derivation pipeline is idle                                                             |              | gauge     |
| op_node_default_pipeline_resets_total               | Count of derivation pipeline resets events                                                       |              | counter   |
| op_node_default_last_pipeline_resets_unix           | Timestamp of last derivation pipeline resets event                                               |              | gauge     |
| op_node_default_unsafe_payloads_total               | Count of unsafe payloads events                                                                  |              | counter   |
| op_node_default_last_unsafe_payloads_unix           | Timestamp of last unsafe payloads event                                                          |              | gauge     |
| op_node_default_derivation_errors_total             | Count of derivation errors events                                                                |              | counter   |
| op_node_default_last_derivation_errors_unix         | Timestamp of last derivation errors event                                                        |              | gauge     |
| op_node_default_sequencing_errors_total             | Count of sequencing errors events                                                                |              | counter   |
| op_node_default_last_sequencing_errors_unix         | Timestamp of last sequencing errors event                                                        |              | gauge     |
| op_node_default_publishing_errors_total             | Count of p2p publishing errors events                                                            |              | counter   |
| op_node_default_last_publishing_errors_unix         | Timestamp of last p2p publishing errors event                                                    |              | gauge     |
| op_node_default_unsafe_payloads_buffer_len          | Number of buffered L2 unsafe payloads                                                            |              | gauge     |
| op_node_default_unsafe_payloads_buffer_mem_size     | Total estimated memory size of buffered L2 unsafe payloads                                       |              | gauge     |
| op_node_default_refs_number                         | Gauge representing the different L1/L2 reference block numbers                                   | layer,type   | gauge     |
| op_node_default_refs_time                           | Gauge representing the different L1/L2 reference block timestamps                                | layer,type   | gauge     |
| op_node_default_refs_hash                           | Gauge representing the different L1/L2 reference block hashes truncated to float values          | layer,type   | gauge     |
| op_node_default_refs_seqnr                          | Gauge representing the different L2 reference sequence numbers                                   | type         | gauge     |
| op_node_default_refs_latency                        | Gauge representing the different L1/L2 reference block timestamps minus current time, in seconds | layer,type   | gauge     |
| op_node_default_l1_reorg_depth                      | Histogram of L1 Reorg Depths                                                                     |              | histogram |
| op_node_default_transactions_sequenced_total        | Count of total transactions sequenced                                                            |              | gauge     |
| op_node_default_p2p_peer_count                      | Count of currently connected p2p peers                                                           |              | gauge     |
| op_node_default_p2p_stream_count                    | Count of currently connected p2p streams                                                         |              | gauge     |
| op_node_default_p2p_gossip_events_total             | Count of gossip events by type                                                                   | type         | counter   |
| op_node_default_p2p_bandwidth_bytes_total           | P2P bandwidth by direction                                                                       | direction    | gauge     |
| op_node_default_sequencer_building_diff_seconds     | Histogram of Sequencer building time, minus block time                                           |              | histogram |
| op_node_default_sequencer_building_diff_total       | Number of sequencer block building jobs                                                          |              | counter   |
| op_node_default_sequencer_sealing_seconds           | Histogram of Sequencer block sealing time                                                        |              | histogram |
| op_node_default_sequencer_sealing_total             | Number of sequencer block sealing jobs                                                           |              | counter   |"
227,What information does the metric 'op_node_default_refs_number' provide?,The metric 'op_node_default_refs_number' provides a gauge representing the different L1/L2 reference block numbers.,"A complete list of available metrics is below:  
|                       METRIC                        |                                           DESCRIPTION                                            |    LABELS    |   TYPE    |
|-----------------------------------------------------|--------------------------------------------------------------------------------------------------|--------------|-----------|
| op_node_default_info                                | Pseudo-metric tracking version and config info                                                   | version      | gauge     |
| op_node_default_up                                  | 1 if the op node has finished starting up                                                        |              | gauge     |
| op_node_default_rpc_server_requests_total           | Total requests to the RPC server                                                                 | method       | counter   |
| op_node_default_rpc_server_request_duration_seconds | Histogram of RPC server request durations                                                        | method       | histogram |
| op_node_default_rpc_client_requests_total           | Total RPC requests initiated by the opnode's RPC client                                          | method       | counter   |
| op_node_default_rpc_client_request_duration_seconds | Histogram of RPC client request durations                                                        | method       | histogram |
| op_node_default_rpc_client_responses_total          | Total RPC request responses received by the opnode's RPC client                                  | method,error | counter   |
| op_node_default_l1_source_cache_size                | L1 Source cache cache size                                                                       | type         | gauge     |
| op_node_default_l1_source_cache_get                 | L1 Source cache lookups, hitting or not                                                          | type,hit     | counter   |
| op_node_default_l1_source_cache_add                 | L1 Source cache additions, evicting previous values or not                                       | type,evicted | counter   |
| op_node_default_l2_source_cache_size                | L2 Source cache cache size                                                                       | type         | gauge     |
| op_node_default_l2_source_cache_get                 | L2 Source cache lookups, hitting or not                                                          | type,hit     | counter   |
| op_node_default_l2_source_cache_add                 | L2 Source cache additions, evicting previous values or not                                       | type,evicted | counter   |
| op_node_default_derivation_idle                     | 1 if the derivation pipeline is idle                                                             |              | gauge     |
| op_node_default_pipeline_resets_total               | Count of derivation pipeline resets events                                                       |              | counter   |
| op_node_default_last_pipeline_resets_unix           | Timestamp of last derivation pipeline resets event                                               |              | gauge     |
| op_node_default_unsafe_payloads_total               | Count of unsafe payloads events                                                                  |              | counter   |
| op_node_default_last_unsafe_payloads_unix           | Timestamp of last unsafe payloads event                                                          |              | gauge     |
| op_node_default_derivation_errors_total             | Count of derivation errors events                                                                |              | counter   |
| op_node_default_last_derivation_errors_unix         | Timestamp of last derivation errors event                                                        |              | gauge     |
| op_node_default_sequencing_errors_total             | Count of sequencing errors events                                                                |              | counter   |
| op_node_default_last_sequencing_errors_unix         | Timestamp of last sequencing errors event                                                        |              | gauge     |
| op_node_default_publishing_errors_total             | Count of p2p publishing errors events                                                            |              | counter   |
| op_node_default_last_publishing_errors_unix         | Timestamp of last p2p publishing errors event                                                    |              | gauge     |
| op_node_default_unsafe_payloads_buffer_len          | Number of buffered L2 unsafe payloads                                                            |              | gauge     |
| op_node_default_unsafe_payloads_buffer_mem_size     | Total estimated memory size of buffered L2 unsafe payloads                                       |              | gauge     |
| op_node_default_refs_number                         | Gauge representing the different L1/L2 reference block numbers                                   | layer,type   | gauge     |
| op_node_default_refs_time                           | Gauge representing the different L1/L2 reference block timestamps                                | layer,type   | gauge     |
| op_node_default_refs_hash                           | Gauge representing the different L1/L2 reference block hashes truncated to float values          | layer,type   | gauge     |
| op_node_default_refs_seqnr                          | Gauge representing the different L2 reference sequence numbers                                   | type         | gauge     |
| op_node_default_refs_latency                        | Gauge representing the different L1/L2 reference block timestamps minus current time, in seconds | layer,type   | gauge     |
| op_node_default_l1_reorg_depth                      | Histogram of L1 Reorg Depths                                                                     |              | histogram |
| op_node_default_transactions_sequenced_total        | Count of total transactions sequenced                                                            |              | gauge     |
| op_node_default_p2p_peer_count                      | Count of currently connected p2p peers                                                           |              | gauge     |
| op_node_default_p2p_stream_count                    | Count of currently connected p2p streams                                                         |              | gauge     |
| op_node_default_p2p_gossip_events_total             | Count of gossip events by type                                                                   | type         | counter   |
| op_node_default_p2p_bandwidth_bytes_total           | P2P bandwidth by direction                                                                       | direction    | gauge     |
| op_node_default_sequencer_building_diff_seconds     | Histogram of Sequencer building time, minus block time                                           |              | histogram |
| op_node_default_sequencer_building_diff_total       | Number of sequencer block building jobs                                                          |              | counter   |
| op_node_default_sequencer_sealing_seconds           | Histogram of Sequencer block sealing time                                                        |              | histogram |
| op_node_default_sequencer_sealing_total             | Number of sequencer block sealing jobs                                                           |              | counter   |"
228,How can I learn more about how Bedrock works and its motivations?,"To learn more about how Bedrock itself works and its motivations, you can check the specifications on GitHub at this link: https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/specs.","---
title: Node Operator Guide
lang: en-US
---  
This document provides an overview of how to deploy an OP node. To learn more about how Bedrock itself works and its motivations, please see [the specs on GitHub](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/specs). If you want to skip ahead to building and running a node from source, please see [Building a Node from Source](../nodes/intro.md)"
228,Where can I find instructions to build and run an OP node from source?,"If you want to skip ahead to building and running a node from source, you can find the instructions in the 'Building a Node from Source' section at this link: ../nodes/intro.md.","---
title: Node Operator Guide
lang: en-US
---  
This document provides an overview of how to deploy an OP node. To learn more about how Bedrock itself works and its motivations, please see [the specs on GitHub](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/specs). If you want to skip ahead to building and running a node from source, please see [Building a Node from Source](../nodes/intro.md)"
229,Can you explain the core components of a Bedrock deployment in Optimism?,"A Bedrock deployment in Optimism consists of two core components: the Rollup Node (op-node) and the Execution Engine (op-geth). The Rollup Node derives blocks from L1 and passes them to the Execution Engine, while also participating in a peer-to-peer network to synchronize unsubmitted blocks. The Execution Engine executes the blocks it receives and stores state, and it also provides standard JSON-RPC methods to query blockchain data and submit transactions.","A Bedrock deployment consists of two core components:  
1. The Rollup Node, which is responsible for deriving blocks from L1 and passing them to the Execution engine. It also participates in a peer-to-peer network that synchronizes unsubmitted blocks as the sequencer creates them. We refer to this component as `op-node`.
2. The Execution Engine, which is responsible for executing the blocks it receives from the rollup node and storing state. It also exposes standard JSON-RPC methods to query blockchain data and submit transactions to the network. We refer to this component as `op-geth`, since our Execution Engine is [a minimal fork](https://op-geth.optimism.io/) of `go-ethereum`.  
The Rollup Node and Execution Engine communicate with each other over JSON-RPC via the Engine API. This is similar to how regular Ethereum networks are deployed. The Rollup Node functions as Optimism's consensus client, and the Execution Engine as its execution client.  
For OP Mainnet and OP Goerli (but not OP Sepolia), you may also need to run a third component called Legacy Geth. Legacy Geth is used to serve execution traces for transactions prior to the Bedrock upgrade, which we refer to as ""historical transactions"". When the Rollup Node encounters an RPC call that requires historical execution traces, it will forward the request to Legacy Geth. Note, however, that unlike our previous networks requests for historical _data_ will be served by the Execution Engine directly. This distinction will be clarified later on in this document.  
The architecture of a typical Bedrock deployment looks like this:  
<div style=""text-align: center"">
<img width=""400"" src=""../../../assets/docs/bedrock/bedrock-deployment.png"">
</div>"
229,How do the Rollup Node and Execution Engine communicate in Optimism's Bedrock deployment?,"In Optimism's Bedrock deployment, the Rollup Node and Execution Engine communicate with each other over JSON-RPC via the Engine API. This setup is similar to how regular Ethereum networks are deployed, with the Rollup Node functioning as the consensus client and the Execution Engine as the execution client.","A Bedrock deployment consists of two core components:  
1. The Rollup Node, which is responsible for deriving blocks from L1 and passing them to the Execution engine. It also participates in a peer-to-peer network that synchronizes unsubmitted blocks as the sequencer creates them. We refer to this component as `op-node`.
2. The Execution Engine, which is responsible for executing the blocks it receives from the rollup node and storing state. It also exposes standard JSON-RPC methods to query blockchain data and submit transactions to the network. We refer to this component as `op-geth`, since our Execution Engine is [a minimal fork](https://op-geth.optimism.io/) of `go-ethereum`.  
The Rollup Node and Execution Engine communicate with each other over JSON-RPC via the Engine API. This is similar to how regular Ethereum networks are deployed. The Rollup Node functions as Optimism's consensus client, and the Execution Engine as its execution client.  
For OP Mainnet and OP Goerli (but not OP Sepolia), you may also need to run a third component called Legacy Geth. Legacy Geth is used to serve execution traces for transactions prior to the Bedrock upgrade, which we refer to as ""historical transactions"". When the Rollup Node encounters an RPC call that requires historical execution traces, it will forward the request to Legacy Geth. Note, however, that unlike our previous networks requests for historical _data_ will be served by the Execution Engine directly. This distinction will be clarified later on in this document.  
The architecture of a typical Bedrock deployment looks like this:  
<div style=""text-align: center"">
<img width=""400"" src=""../../../assets/docs/bedrock/bedrock-deployment.png"">
</div>"
229,Is there any additional component needed for OP Mainnet and OP Goerli in Optimism's Bedrock deployment?,"Yes, for OP Mainnet and OP Goerli (but not OP Sepolia), you may need to run a third component called Legacy Geth. Legacy Geth is used to serve execution traces for transactions prior to the Bedrock upgrade, referred to as 'historical transactions'. When the Rollup Node encounters an RPC call that requires historical execution traces, it will forward the request to Legacy Geth.","A Bedrock deployment consists of two core components:  
1. The Rollup Node, which is responsible for deriving blocks from L1 and passing them to the Execution engine. It also participates in a peer-to-peer network that synchronizes unsubmitted blocks as the sequencer creates them. We refer to this component as `op-node`.
2. The Execution Engine, which is responsible for executing the blocks it receives from the rollup node and storing state. It also exposes standard JSON-RPC methods to query blockchain data and submit transactions to the network. We refer to this component as `op-geth`, since our Execution Engine is [a minimal fork](https://op-geth.optimism.io/) of `go-ethereum`.  
The Rollup Node and Execution Engine communicate with each other over JSON-RPC via the Engine API. This is similar to how regular Ethereum networks are deployed. The Rollup Node functions as Optimism's consensus client, and the Execution Engine as its execution client.  
For OP Mainnet and OP Goerli (but not OP Sepolia), you may also need to run a third component called Legacy Geth. Legacy Geth is used to serve execution traces for transactions prior to the Bedrock upgrade, which we refer to as ""historical transactions"". When the Rollup Node encounters an RPC call that requires historical execution traces, it will forward the request to Legacy Geth. Note, however, that unlike our previous networks requests for historical _data_ will be served by the Execution Engine directly. This distinction will be clarified later on in this document.  
The architecture of a typical Bedrock deployment looks like this:  
<div style=""text-align: center"">
<img width=""400"" src=""../../../assets/docs/bedrock/bedrock-deployment.png"">
</div>"
230,What are the minimum system requirements to run Bedrock?,"To run Bedrock, you need the following minimum system requirements: For `op-node`, you need at least 2 CPUs and 4GB of RAM, with no storage necessary. For `op-geth`, you need at least 4 CPUs, 8GB of RAM, and at least 40GB of SSD storage for OP Goerli or OP Sepolia, or at least 600GB of SSD storage for the mainnet. The requirements are significantly higher for archive nodes.","We recommend the following minimum system requirements to run Bedrock:  
- `op-node`: Minimum 2CPUs, 4GB RAM. No storage is necessary.
- `op-geth`: Minimum 4 CPUs, 8GB RAM. At least 40GB of storage is required for OP Goerli or OP Sepolia. At least 600GB of storage is required for mainnet. Storage must be SSD. Requirements are significantly higher for archive nodes."
231,How can I run `op-geth` and `op-node` for Optimism?,You can run `op-geth` and `op-node` as Docker images. Make sure to consult the documentation for the specific network you are participating in to get the correct image tag.,"`op-geth` and `op-node` are available as Docker images. Consult the [documentation](./public-testnets.md) for the network you are participating in to get the correct image tag.  
Legacy Geth uses version `0.5.31` of our old `l2geth` image.  
You can also compile `op-geth` and `op-node` from source."
231,Is it possible to compile `op-geth` and `op-node` from source?,"Yes, you can also compile `op-geth` and `op-node` from source if you prefer not to use the Docker images.","`op-geth` and `op-node` are available as Docker images. Consult the [documentation](./public-testnets.md) for the network you are participating in to get the correct image tag.  
Legacy Geth uses version `0.5.31` of our old `l2geth` image.  
You can also compile `op-geth` and `op-node` from source."
231,What version of the old `l2geth` image does Legacy Geth use?,Legacy Geth uses version `0.5.31` of the old `l2geth` image.,"`op-geth` and `op-node` are available as Docker images. Consult the [documentation](./public-testnets.md) for the network you are participating in to get the correct image tag.  
Legacy Geth uses version `0.5.31` of our old `l2geth` image.  
You can also compile `op-geth` and `op-node` from source."
232,How should I configure `op-node` and `op-geth` instances?,"Always run `op-node` and `op-geth` in a one-to-one configuration. Don't run multiple `op-geth` instances behind one `op-node`, or vice versa.",":::warning
Always run `op-node` and `op-geth` in a one-to-one configuration. Don't run multiple `op-geth` instances behind one `op-node`, or vice versa.
:::  
To configure your node, you will need to do the following:  
1. Configure `op-node` to point to the correct L1, `op-geth`, and L2 network.
2. Initialize `op-geth` with the correct network parameters.
3. Configure `op-geth` to properly communicate with the Rollup Node.
4. Optionally, configure Legacy Geth."
232,What are the steps to configure my node?,"To configure your node, you need to: 1. Configure `op-node` to point to the correct L1, `op-geth`, and L2 network. 2. Initialize `op-geth` with the correct network parameters. 3. Configure `op-geth` to properly communicate with the Rollup Node. 4. Optionally, configure Legacy Geth.",":::warning
Always run `op-node` and `op-geth` in a one-to-one configuration. Don't run multiple `op-geth` instances behind one `op-node`, or vice versa.
:::  
To configure your node, you will need to do the following:  
1. Configure `op-node` to point to the correct L1, `op-geth`, and L2 network.
2. Initialize `op-geth` with the correct network parameters.
3. Configure `op-geth` to properly communicate with the Rollup Node.
4. Optionally, configure Legacy Geth."
233,How do I initialize `op-geth` for OP Sepolia?,"To initialize `op-geth` for OP Sepolia, you need to download the genesis file from the provided link and then initialize the data directory using the `geth init` command.",":::tip
Even though the Docker image for the Execution Engine is called `op-geth`, the actually binary is still called `geth` in order to minimize differences between `op-geth` and `go-ethereum`.
:::  
We'll start with `op-geth`'s configuration because it is more complex. As mentioned before, `op-geth` is a minimal fork of `go-ethereum`. As a result, it stores its state in a database that requires initialization. Initialization is done one of two ways, depending on which network you're deploying:  
1. **With a Genesis File:** This is for OP Sepolia, and other testnets or deployments that are not migrated from a legacy network. In this case, you'll download the [genesis file](https://networks.optimism.io/op-sepolia/genesis.json) and initialize the data directory via `geth init`.
2. **With a Data Directory:** This is used for networks that are migrated from a legacy network. This would include OP Mainnet and OP Goerli. In this case, you'll download a preconfigured data directory and extract it. No further initialization is necessary in this case, because the data directory contains the network's genesis information.  
Regardless of how `op-geth` is initialized, you'll need to ensure that you have sufficient disk space available to store the network's data. As of this writing, the mainnet data directory is ~100GB for a full node and ~1TB for an archival node. The OP Goerli data directory is ~40GB for a full node.  
Instructions for each initialization method are below. If you're spinning up an OP Mainnet or OP Goerli node, use the [Initialization via Data Directory](#initialization-via-data-directory) path. If you're spinning up an OP Sepolia node, use the [Initialization via Genesis File](#initialization-via-genesis-file) path."
233,What is the difference between initializing `op-geth` with a Genesis File and a Data Directory?,"Initializing with a Genesis File is used for testnets like OP Sepolia and involves downloading a genesis file and running `geth init`. Initializing with a Data Directory is used for networks migrated from a legacy network, like OP Mainnet and OP Goerli, and involves downloading and extracting a preconfigured data directory.",":::tip
Even though the Docker image for the Execution Engine is called `op-geth`, the actually binary is still called `geth` in order to minimize differences between `op-geth` and `go-ethereum`.
:::  
We'll start with `op-geth`'s configuration because it is more complex. As mentioned before, `op-geth` is a minimal fork of `go-ethereum`. As a result, it stores its state in a database that requires initialization. Initialization is done one of two ways, depending on which network you're deploying:  
1. **With a Genesis File:** This is for OP Sepolia, and other testnets or deployments that are not migrated from a legacy network. In this case, you'll download the [genesis file](https://networks.optimism.io/op-sepolia/genesis.json) and initialize the data directory via `geth init`.
2. **With a Data Directory:** This is used for networks that are migrated from a legacy network. This would include OP Mainnet and OP Goerli. In this case, you'll download a preconfigured data directory and extract it. No further initialization is necessary in this case, because the data directory contains the network's genesis information.  
Regardless of how `op-geth` is initialized, you'll need to ensure that you have sufficient disk space available to store the network's data. As of this writing, the mainnet data directory is ~100GB for a full node and ~1TB for an archival node. The OP Goerli data directory is ~40GB for a full node.  
Instructions for each initialization method are below. If you're spinning up an OP Mainnet or OP Goerli node, use the [Initialization via Data Directory](#initialization-via-data-directory) path. If you're spinning up an OP Sepolia node, use the [Initialization via Genesis File](#initialization-via-genesis-file) path."
233,How much disk space do I need for running an OP Mainnet or OP Goerli node?,"For an OP Mainnet node, you need approximately 100GB for a full node and around 1TB for an archival node. For an OP Goerli node, you need about 40GB for a full node.",":::tip
Even though the Docker image for the Execution Engine is called `op-geth`, the actually binary is still called `geth` in order to minimize differences between `op-geth` and `go-ethereum`.
:::  
We'll start with `op-geth`'s configuration because it is more complex. As mentioned before, `op-geth` is a minimal fork of `go-ethereum`. As a result, it stores its state in a database that requires initialization. Initialization is done one of two ways, depending on which network you're deploying:  
1. **With a Genesis File:** This is for OP Sepolia, and other testnets or deployments that are not migrated from a legacy network. In this case, you'll download the [genesis file](https://networks.optimism.io/op-sepolia/genesis.json) and initialize the data directory via `geth init`.
2. **With a Data Directory:** This is used for networks that are migrated from a legacy network. This would include OP Mainnet and OP Goerli. In this case, you'll download a preconfigured data directory and extract it. No further initialization is necessary in this case, because the data directory contains the network's genesis information.  
Regardless of how `op-geth` is initialized, you'll need to ensure that you have sufficient disk space available to store the network's data. As of this writing, the mainnet data directory is ~100GB for a full node and ~1TB for an archival node. The OP Goerli data directory is ~40GB for a full node.  
Instructions for each initialization method are below. If you're spinning up an OP Mainnet or OP Goerli node, use the [Initialization via Data Directory](#initialization-via-data-directory) path. If you're spinning up an OP Sepolia node, use the [Initialization via Genesis File](#initialization-via-genesis-file) path."
234,How do I initialize the data directory for OP Sepolia using `op-geth`?,"To initialize the data directory for OP Sepolia using `op-geth`, you need to download the genesis JSON file from the provided URL and then run a shell script. The script checks if the genesis file already exists; if not, it downloads the file and initializes the data directory using the `geth init` command.","`op-geth` uses JSON files to encode a network's genesis information. Unlike OP Mainnet and OP Goerli, the genesis for OP Sepolia is not currently included in the `op-geth` binary. For networks that are initialized in this way, you'll receive a URL to the genesis JSON. You'll need to download the genesis JSON, then run the following command to initialize the data directory:  
```bash
#!/bin/sh
FILE=/$DATADIR/genesis.json
OP_GETH_GENESIS_URL=https://networks.optimism.io/op-sepolia/genesis.json

if [ ! -s $FILE ]; then
apk add curl
curl $OP_GETH_GENESIS_URL -o $FILE
geth init --datadir /db $FILE
else
echo ""Genesis file already exists. Skipping initialization.""
fi
```  
::: danger OP Sepolia CLI Flag Requirements  
- `op-node` requires: `--network=op-sepolia`
- `op-geth` requires: `--beta.op-network=op-sepolia`
- Do not set: `--rollup.historicalrpc` or `rollup.historicalrpctimeout`
:::"
234,What are the CLI flag requirements for running `op-node` and `op-geth` on OP Sepolia?,"For running `op-node` on OP Sepolia, you need to use the flag `--network=op-sepolia`. For `op-geth`, you need to use the flag `--beta.op-network=op-sepolia`. Additionally, you should not set the flags `--rollup.historicalrpc` or `rollup.historicalrpctimeout`.","`op-geth` uses JSON files to encode a network's genesis information. Unlike OP Mainnet and OP Goerli, the genesis for OP Sepolia is not currently included in the `op-geth` binary. For networks that are initialized in this way, you'll receive a URL to the genesis JSON. You'll need to download the genesis JSON, then run the following command to initialize the data directory:  
```bash
#!/bin/sh
FILE=/$DATADIR/genesis.json
OP_GETH_GENESIS_URL=https://networks.optimism.io/op-sepolia/genesis.json

if [ ! -s $FILE ]; then
apk add curl
curl $OP_GETH_GENESIS_URL -o $FILE
geth init --datadir /db $FILE
else
echo ""Genesis file already exists. Skipping initialization.""
fi
```  
::: danger OP Sepolia CLI Flag Requirements  
- `op-node` requires: `--network=op-sepolia`
- `op-geth` requires: `--beta.op-network=op-sepolia`
- Do not set: `--rollup.historicalrpc` or `rollup.historicalrpctimeout`
:::"
234,Is the genesis information for OP Sepolia included in the `op-geth` binary?,"No, the genesis information for OP Sepolia is not included in the `op-geth` binary. You need to download the genesis JSON file from a specified URL.","`op-geth` uses JSON files to encode a network's genesis information. Unlike OP Mainnet and OP Goerli, the genesis for OP Sepolia is not currently included in the `op-geth` binary. For networks that are initialized in this way, you'll receive a URL to the genesis JSON. You'll need to download the genesis JSON, then run the following command to initialize the data directory:  
```bash
#!/bin/sh
FILE=/$DATADIR/genesis.json
OP_GETH_GENESIS_URL=https://networks.optimism.io/op-sepolia/genesis.json

if [ ! -s $FILE ]; then
apk add curl
curl $OP_GETH_GENESIS_URL -o $FILE
geth init --datadir /db $FILE
else
echo ""Genesis file already exists. Skipping initialization.""
fi
```  
::: danger OP Sepolia CLI Flag Requirements  
- `op-node` requires: `--network=op-sepolia`
- `op-geth` requires: `--beta.op-network=op-sepolia`
- Do not set: `--rollup.historicalrpc` or `rollup.historicalrpctimeout`
:::"
235,What format is the preconfigured data directory exported as?,The preconfigured data directory is exported as a tar file.,"To initialize `op-geth` with a preconfigured data directory, simply download and extract the data directory to a place of your choosing. The data directory is exported as a tar file. An example command to do this is below:  
```bash
curl -o <path to data directory> -sL <URL to data directory>
tar -xvf <path to data directory>
```"
236,How can I configure `op-geth` for Optimism?,"You can configure `op-geth` via CLI flags. It accepts all the standard `go-ethereum` flags as well as a few extra flags specific to Optimism, such as `--rollup.historicalrpc`, `--rollup.sequencerhttp`, and `--rollup.disabletxpoolgossip`.","Once `op-geth` is initialized, it can be configured via CLI flags. `op-geth` accepts all the [standard `go-ethereum` flags](https://geth.ethereum.org/docs/interface/command-line-options) as well as a few extra flags that are specific to Optimism. These flags are:  
- `--rollup.historicalrpc`: Enables the historical RPC endpoint. This endpoint is used to fetch historical execution data from Legacy Geth. This flag is only necessary for upgraded networks.
- `--rollup.sequencerhttp`: HTTP endpoint of the sequencer. `op-geth` will route `eth_sendRawTransaction` calls to this URL. Bedrock does not currently have a public mempool, so this is required if you want your node to support transaction submission. Consult the documentation for the network you are participating in to get the correct URL.
- `--rollup.disabletxpoolgossip`: Disables transaction pool gossiping. While not required, it's useful to set this to `true` since transaction pool gossip is currently unsupported.  
To communicate with `op-node` and enable the Engine API, you'll also need to generate a JWT secret file and enable Geth's authenticated RPC endpoint.  
To generate the JWT secret, run the following:  
```bash
openssl rand -hex 32 > jwt.txt
```  
Then, specify the following flags:  
- `--authrpc.addr`: Sets the address `op-geth`'s authenticated RPC should listen on.
- `--authrpc.port`: Sets the port `op-geth`'s authenticated RPC should listen on. The default value is `8551`.
- `--authrpc.jwtsecret`: Sets the path to a JWT secret file you generated above.
- `--syncmode=full`: This prevents Geth from attempting to snap sync. Snap sync is currently unsupported, but will be enabled shortly after the mainnet upgrade.
- `--maxpeers=0`: This prevents Geth from peering with other Geth nodes. Execution-layer peering is currently unsupported, but will be added as part of enabling snap sync.
- `--nodiscover`: This disables Geth's peer discovery mechanism. Execution-layer discovery is currently unsupported, but will be added as part of enabling snap sync."
236,What is the purpose of the `--rollup.sequencerhttp` flag?,The `--rollup.sequencerhttp` flag sets the HTTP endpoint of the sequencer. `op-geth` will route `eth_sendRawTransaction` calls to this URL. This is required if you want your node to support transaction submission since Bedrock does not currently have a public mempool.,"Once `op-geth` is initialized, it can be configured via CLI flags. `op-geth` accepts all the [standard `go-ethereum` flags](https://geth.ethereum.org/docs/interface/command-line-options) as well as a few extra flags that are specific to Optimism. These flags are:  
- `--rollup.historicalrpc`: Enables the historical RPC endpoint. This endpoint is used to fetch historical execution data from Legacy Geth. This flag is only necessary for upgraded networks.
- `--rollup.sequencerhttp`: HTTP endpoint of the sequencer. `op-geth` will route `eth_sendRawTransaction` calls to this URL. Bedrock does not currently have a public mempool, so this is required if you want your node to support transaction submission. Consult the documentation for the network you are participating in to get the correct URL.
- `--rollup.disabletxpoolgossip`: Disables transaction pool gossiping. While not required, it's useful to set this to `true` since transaction pool gossip is currently unsupported.  
To communicate with `op-node` and enable the Engine API, you'll also need to generate a JWT secret file and enable Geth's authenticated RPC endpoint.  
To generate the JWT secret, run the following:  
```bash
openssl rand -hex 32 > jwt.txt
```  
Then, specify the following flags:  
- `--authrpc.addr`: Sets the address `op-geth`'s authenticated RPC should listen on.
- `--authrpc.port`: Sets the port `op-geth`'s authenticated RPC should listen on. The default value is `8551`.
- `--authrpc.jwtsecret`: Sets the path to a JWT secret file you generated above.
- `--syncmode=full`: This prevents Geth from attempting to snap sync. Snap sync is currently unsupported, but will be enabled shortly after the mainnet upgrade.
- `--maxpeers=0`: This prevents Geth from peering with other Geth nodes. Execution-layer peering is currently unsupported, but will be added as part of enabling snap sync.
- `--nodiscover`: This disables Geth's peer discovery mechanism. Execution-layer discovery is currently unsupported, but will be added as part of enabling snap sync."
236,How do I generate a JWT secret file for `op-geth`?,"To generate a JWT secret file for `op-geth`, you can run the following command: `openssl rand -hex 32 > jwt.txt`. This file is needed to enable Geth's authenticated RPC endpoint and communicate with `op-node`.","Once `op-geth` is initialized, it can be configured via CLI flags. `op-geth` accepts all the [standard `go-ethereum` flags](https://geth.ethereum.org/docs/interface/command-line-options) as well as a few extra flags that are specific to Optimism. These flags are:  
- `--rollup.historicalrpc`: Enables the historical RPC endpoint. This endpoint is used to fetch historical execution data from Legacy Geth. This flag is only necessary for upgraded networks.
- `--rollup.sequencerhttp`: HTTP endpoint of the sequencer. `op-geth` will route `eth_sendRawTransaction` calls to this URL. Bedrock does not currently have a public mempool, so this is required if you want your node to support transaction submission. Consult the documentation for the network you are participating in to get the correct URL.
- `--rollup.disabletxpoolgossip`: Disables transaction pool gossiping. While not required, it's useful to set this to `true` since transaction pool gossip is currently unsupported.  
To communicate with `op-node` and enable the Engine API, you'll also need to generate a JWT secret file and enable Geth's authenticated RPC endpoint.  
To generate the JWT secret, run the following:  
```bash
openssl rand -hex 32 > jwt.txt
```  
Then, specify the following flags:  
- `--authrpc.addr`: Sets the address `op-geth`'s authenticated RPC should listen on.
- `--authrpc.port`: Sets the port `op-geth`'s authenticated RPC should listen on. The default value is `8551`.
- `--authrpc.jwtsecret`: Sets the path to a JWT secret file you generated above.
- `--syncmode=full`: This prevents Geth from attempting to snap sync. Snap sync is currently unsupported, but will be enabled shortly after the mainnet upgrade.
- `--maxpeers=0`: This prevents Geth from peering with other Geth nodes. Execution-layer peering is currently unsupported, but will be added as part of enabling snap sync.
- `--nodiscover`: This disables Geth's peer discovery mechanism. Execution-layer discovery is currently unsupported, but will be added as part of enabling snap sync."
237,How can I control which hosts are allowed to access the authenticated RPC endpoint in Optimism?,"You can control which hosts are allowed to access the authenticated RPC endpoint by using the `--authrpc.vhosts` flag. This flag whitelists hosts as defined in the `Host` header, and is particularly useful if you're running `op-geth` on containerized infrastructure. The default value is `localhost`.","You may also want to specify the following flags based on your configuration:  
- `--authrpc.vhosts`: Whitelists which hosts (as defined in the `Host` header) are allowed to access the authenticated RPC endpoint. This is useful if you're running `op-geth` on containerized infrastructure. The default value is `localhost`.
- `--http.vhosts`: Whitelists which hosts (as defined in the `Host` header) are allowed to access the unauthenticated RPC endpoint. This is useful if you're running `op-geth` on containerized infrastructure. The default value is `localhost`.
- `--http`, `--http.addr`, and `--http.port`: Enables the unauthenticated RPC endpoint, configures its address, and configures its port. You'll almost certainly want to specify these, since they will enable Geth's JSON-RPC endpoint.
- `--ws`, `--ws.addr`, and `--ws.port`: Enables the WebSocket API.
- `--verbosity`: Configures Geth's log level. This is a number between 0 and 5, with 5 being the most verbose. Defaults to 3."
237,How do I enable and configure the unauthenticated RPC endpoint in Optimism?,"To enable and configure the unauthenticated RPC endpoint, you can use the `--http`, `--http.addr`, and `--http.port` flags. These flags enable the endpoint, configure its address, and set its port, respectively. This setup is essential for enabling Geth's JSON-RPC endpoint.","You may also want to specify the following flags based on your configuration:  
- `--authrpc.vhosts`: Whitelists which hosts (as defined in the `Host` header) are allowed to access the authenticated RPC endpoint. This is useful if you're running `op-geth` on containerized infrastructure. The default value is `localhost`.
- `--http.vhosts`: Whitelists which hosts (as defined in the `Host` header) are allowed to access the unauthenticated RPC endpoint. This is useful if you're running `op-geth` on containerized infrastructure. The default value is `localhost`.
- `--http`, `--http.addr`, and `--http.port`: Enables the unauthenticated RPC endpoint, configures its address, and configures its port. You'll almost certainly want to specify these, since they will enable Geth's JSON-RPC endpoint.
- `--ws`, `--ws.addr`, and `--ws.port`: Enables the WebSocket API.
- `--verbosity`: Configures Geth's log level. This is a number between 0 and 5, with 5 being the most verbose. Defaults to 3."
237,What is the purpose of the `--verbosity` flag in Optimism?,"The `--verbosity` flag is used to configure Geth's log level. It accepts a number between 0 and 5, with 5 being the most verbose. The default log level is set to 3.","You may also want to specify the following flags based on your configuration:  
- `--authrpc.vhosts`: Whitelists which hosts (as defined in the `Host` header) are allowed to access the authenticated RPC endpoint. This is useful if you're running `op-geth` on containerized infrastructure. The default value is `localhost`.
- `--http.vhosts`: Whitelists which hosts (as defined in the `Host` header) are allowed to access the unauthenticated RPC endpoint. This is useful if you're running `op-geth` on containerized infrastructure. The default value is `localhost`.
- `--http`, `--http.addr`, and `--http.port`: Enables the unauthenticated RPC endpoint, configures its address, and configures its port. You'll almost certainly want to specify these, since they will enable Geth's JSON-RPC endpoint.
- `--ws`, `--ws.addr`, and `--ws.port`: Enables the WebSocket API.
- `--verbosity`: Configures Geth's log level. This is a number between 0 and 5, with 5 being the most verbose. Defaults to 3."
238,Where can I find more information on customizing `op-geth`'s behavior?,You can find more information on customizing `op-geth`'s behavior by consulting [Geth's documentation](https://geth.ethereum.org/docs/).,"A valid command that runs `op-geth` and enables RPC over HTTP and WebSockets looks like:  
```bash
geth \
--ws \
--ws.port=8546 \
--ws.addr=localhost \
--ws.origins=""*"" \
--http \
--http.port=8545 \
--http.addr=localhost \
--http.vhosts=""*"" \
--http.corsdomain=""*"" \
--authrpc.addr=localhost \
--authrpc.jwtsecret=/var/secrets/jwt.txt \
--authrpc.port=8551 \
--authrpc.vhosts=""*"" \
--datadir=/data \
--verbosity=3 \
--rollup.disabletxpoolgossip=true \
--rollup.sequencerhttp=https://mainnet-sequencer.optimism.io/ \
--nodiscover \
--syncmode=full \
--maxpeers=0
```  
Consult [Geth's documentation](https://geth.ethereum.org/docs/) for more information on customizing `op-geth`'s behavior."
239,What is the purpose of the `--network` flag in the `op-node` configuration?,"The `--network` flag in the `op-node` configuration specifies the network for which the node is being set up. For official networks like OP Goerli, OP Sepolia, and OP Mainnet, the genesis configuration is hardcoded in the `op-node` software and can be selected using this flag.","`op-node` is a standalone, statically linked binary. It stores no state, and requires no initialization. It consumes configuration parameters either via the command line or environment variables. For some networks, the Rollup Node also requires a configuration file (called `rollup.json` or the ""rollup config"") that configures network-specific genesis parameters. For official networks like OP Goerli, OP Sepolia, and OP Mainnet, the genesis config is hardcoded in the `op-node` software and can be specified via a `--network` flag.  
A minimal valid configuration for a rollup node on our `op sepolia` testnet looks like this:  
```bash
op-node --l1=<sepolia RPC url> \
--l2=<op-geth authenticated RPC url> \
--network=sepolia \
--rpc.addr=127.0.0.1 \
--rpc.port=9545 \
--l2.jwt-secret=<path to JWT secret>
```  
You can manually specify a path to a rollup config with the `--rollup.config` flag. This is used for testnets or internal deployments that are not migrated from a legacy network.  
Each of the above flags can also be defined via an environment variable. Run `op-node --help` to see a list of all available flags and environment variables."
239,Can I use environment variables instead of command-line flags to configure `op-node`?,"Yes, each of the flags used to configure `op-node` can also be defined via environment variables. You can run `op-node --help` to see a list of all available flags and their corresponding environment variables.","`op-node` is a standalone, statically linked binary. It stores no state, and requires no initialization. It consumes configuration parameters either via the command line or environment variables. For some networks, the Rollup Node also requires a configuration file (called `rollup.json` or the ""rollup config"") that configures network-specific genesis parameters. For official networks like OP Goerli, OP Sepolia, and OP Mainnet, the genesis config is hardcoded in the `op-node` software and can be specified via a `--network` flag.  
A minimal valid configuration for a rollup node on our `op sepolia` testnet looks like this:  
```bash
op-node --l1=<sepolia RPC url> \
--l2=<op-geth authenticated RPC url> \
--network=sepolia \
--rpc.addr=127.0.0.1 \
--rpc.port=9545 \
--l2.jwt-secret=<path to JWT secret>
```  
You can manually specify a path to a rollup config with the `--rollup.config` flag. This is used for testnets or internal deployments that are not migrated from a legacy network.  
Each of the above flags can also be defined via an environment variable. Run `op-node --help` to see a list of all available flags and environment variables."
240,How does the `op-node` participate in the network?,"The `op-node` participates in a peer-to-peer network to distribute blocks that have not been submitted to L1 yet. It automatically discovers and connects to peers using a hardcoded set of bootnodes, but you can also manually specify peers using the `--p2p.static` flag.","Unlike the previous system, the `op-node` participates in a peer-to-peer network. This network is used to distribute blocks that have not been submitted to L1 yet. The `op-node` will automatically discover and connect to peers using a hardcoded set of bootnodes. You can also manually specify peers to connect to via the `--p2p.static` flag.  
For best results, run `op-node` with a static IP address that is accessible from the public Internet. For Kubernetes deployments, this can be achieved by configuring a dedicated `Ingress` with an external IP, and using the `--p2p.advertise.ip` flag to specify the IP address of the load balancer when advertising IP addresses to peers.  
The default port for the peer-to-peer network is `9003`. You will need to open this port on your firewall to receive unsubmitted blocks. For your node to be discoverable, this port must be accessible via both TCP and UDP protocols."
240,What is the recommended network setup for running `op-node`?,"For best results, you should run `op-node` with a static IP address that is accessible from the public Internet. In Kubernetes deployments, this can be achieved by configuring a dedicated `Ingress` with an external IP and using the `--p2p.advertise.ip` flag to specify the IP address of the load balancer when advertising IP addresses to peers.","Unlike the previous system, the `op-node` participates in a peer-to-peer network. This network is used to distribute blocks that have not been submitted to L1 yet. The `op-node` will automatically discover and connect to peers using a hardcoded set of bootnodes. You can also manually specify peers to connect to via the `--p2p.static` flag.  
For best results, run `op-node` with a static IP address that is accessible from the public Internet. For Kubernetes deployments, this can be achieved by configuring a dedicated `Ingress` with an external IP, and using the `--p2p.advertise.ip` flag to specify the IP address of the load balancer when advertising IP addresses to peers.  
The default port for the peer-to-peer network is `9003`. You will need to open this port on your firewall to receive unsubmitted blocks. For your node to be discoverable, this port must be accessible via both TCP and UDP protocols."
240,"What port needs to be open for the peer-to-peer network, and what protocols should it support?",The default port for the peer-to-peer network is `9003`. This port needs to be open on your firewall and must be accessible via both TCP and UDP protocols for your node to be discoverable and to receive unsubmitted blocks.,"Unlike the previous system, the `op-node` participates in a peer-to-peer network. This network is used to distribute blocks that have not been submitted to L1 yet. The `op-node` will automatically discover and connect to peers using a hardcoded set of bootnodes. You can also manually specify peers to connect to via the `--p2p.static` flag.  
For best results, run `op-node` with a static IP address that is accessible from the public Internet. For Kubernetes deployments, this can be achieved by configuring a dedicated `Ingress` with an external IP, and using the `--p2p.advertise.ip` flag to specify the IP address of the load balancer when advertising IP addresses to peers.  
The default port for the peer-to-peer network is `9003`. You will need to open this port on your firewall to receive unsubmitted blocks. For your node to be discoverable, this port must be accessible via both TCP and UDP protocols."
241,Do I need to run Legacy Geth for all Optimism networks?,"No, you only need to run Legacy Geth for upgraded networks like OP Mainnet or OP Goerli, but not for OP Sepolia.","If you are running a node for an upgraded network like OP Mainnet or OP Goerli (but not OP Sepolia), you will also need to run Legacy Geth in order to serve historical execution traces. Fundamentally, Legacy Geth is our old `l2geth` binary running against a preconfigured data directory. To configure Legacy Geth, follow the instructions above for using a preconfigured data directory, then execute the following command:  
:::danger
It is imperative that you specify the `USING_OVM=true` environment variable in the command below. Failing to specify this will cause `l2geth` to return invalid execution traces, or panic at startup.
:::  
```bash
USING_OVM=true \
ETH1_SYNC_SERVICE_ENABLE=false \
RPC_API=eth,rollup,net,web3,debug \
RPC_ADDR=0.0.0.0 \
RPC_CORS_DOMAIN=* \
RPC_ENABLE=true \
RPC_PORT=8545 \
RPC_VHOSTS=* \
geth --datadir <path to data directory>
```  
This command is the minimum required to run Legacy Geth and expose a functioning RPC endpoint. As before, `l2geth` takes all standard `go-ethereum` flags so you can customize the configuration as needed.  
As mentioned above, don't forget to specify `--rollup.historicalrpc` on `op-geth` to properly route requests for historical execution to Legacy Geth.  
Since Legacy Geth is read-only, it is safe to run multiple Legacy Geth nodes behind a load balancer."
241,What is the purpose of the `USING_OVM=true` environment variable?,"The `USING_OVM=true` environment variable is crucial because it ensures that `l2geth` returns valid execution traces. If you don't specify this variable, `l2geth` may return invalid execution traces or panic at startup.","If you are running a node for an upgraded network like OP Mainnet or OP Goerli (but not OP Sepolia), you will also need to run Legacy Geth in order to serve historical execution traces. Fundamentally, Legacy Geth is our old `l2geth` binary running against a preconfigured data directory. To configure Legacy Geth, follow the instructions above for using a preconfigured data directory, then execute the following command:  
:::danger
It is imperative that you specify the `USING_OVM=true` environment variable in the command below. Failing to specify this will cause `l2geth` to return invalid execution traces, or panic at startup.
:::  
```bash
USING_OVM=true \
ETH1_SYNC_SERVICE_ENABLE=false \
RPC_API=eth,rollup,net,web3,debug \
RPC_ADDR=0.0.0.0 \
RPC_CORS_DOMAIN=* \
RPC_ENABLE=true \
RPC_PORT=8545 \
RPC_VHOSTS=* \
geth --datadir <path to data directory>
```  
This command is the minimum required to run Legacy Geth and expose a functioning RPC endpoint. As before, `l2geth` takes all standard `go-ethereum` flags so you can customize the configuration as needed.  
As mentioned above, don't forget to specify `--rollup.historicalrpc` on `op-geth` to properly route requests for historical execution to Legacy Geth.  
Since Legacy Geth is read-only, it is safe to run multiple Legacy Geth nodes behind a load balancer."
241,Can I customize the configuration of Legacy Geth?,"Yes, you can customize the configuration of Legacy Geth. The `l2geth` binary takes all standard `go-ethereum` flags, allowing you to adjust the settings as needed.","If you are running a node for an upgraded network like OP Mainnet or OP Goerli (but not OP Sepolia), you will also need to run Legacy Geth in order to serve historical execution traces. Fundamentally, Legacy Geth is our old `l2geth` binary running against a preconfigured data directory. To configure Legacy Geth, follow the instructions above for using a preconfigured data directory, then execute the following command:  
:::danger
It is imperative that you specify the `USING_OVM=true` environment variable in the command below. Failing to specify this will cause `l2geth` to return invalid execution traces, or panic at startup.
:::  
```bash
USING_OVM=true \
ETH1_SYNC_SERVICE_ENABLE=false \
RPC_API=eth,rollup,net,web3,debug \
RPC_ADDR=0.0.0.0 \
RPC_CORS_DOMAIN=* \
RPC_ENABLE=true \
RPC_PORT=8545 \
RPC_VHOSTS=* \
geth --datadir <path to data directory>
```  
This command is the minimum required to run Legacy Geth and expose a functioning RPC endpoint. As before, `l2geth` takes all standard `go-ethereum` flags so you can customize the configuration as needed.  
As mentioned above, don't forget to specify `--rollup.historicalrpc` on `op-geth` to properly route requests for historical execution to Legacy Geth.  
Since Legacy Geth is read-only, it is safe to run multiple Legacy Geth nodes behind a load balancer."
242,Do I need to run Legacy Geth for all types of RPC methods?,"No, you only need to run Legacy Geth for historical execution RPC methods, such as `eth_call`, `eth_estimateGas`, `debug_traceBlockByNumber`, `debug_traceBlockByHash`, `debug_traceCall`, and `debug_traceTransaction`. For everything else, `op-geth` will handle it directly.","Only requests for historical execution will be routed to Legacy Geth.
Everything else will be served by `op-geth` directly.
The term _historical execution_ refers to RPC methods that need to execute transactions prior to bedrock (not just read data from the database):  
- `eth_call`
- `eth_estimateGas`
- `debug_traceBlockByNumber`
- `debug_traceBlockByHash`
- `debug_traceCall`
- `debug_traceTransaction`  
If you do not need these RPC methods for historical data, then you do not need to run Legacy Geth at all."
242,What is meant by 'historical execution' in the context of Optimism Governance?,"Historical execution refers to RPC methods that need to execute transactions prior to the bedrock upgrade, not just read data from the database. Examples include `eth_call`, `eth_estimateGas`, `debug_traceBlockByNumber`, `debug_traceBlockByHash`, `debug_traceCall`, and `debug_traceTransaction`.","Only requests for historical execution will be routed to Legacy Geth.
Everything else will be served by `op-geth` directly.
The term _historical execution_ refers to RPC methods that need to execute transactions prior to bedrock (not just read data from the database):  
- `eth_call`
- `eth_estimateGas`
- `debug_traceBlockByNumber`
- `debug_traceBlockByHash`
- `debug_traceCall`
- `debug_traceTransaction`  
If you do not need these RPC methods for historical data, then you do not need to run Legacy Geth at all."
242,"If I don't need historical data, do I still need to use Legacy Geth?","No, if you do not need to use the specified RPC methods for historical data, you do not need to run Legacy Geth at all.","Only requests for historical execution will be routed to Legacy Geth.
Everything else will be served by `op-geth` directly.
The term _historical execution_ refers to RPC methods that need to execute transactions prior to bedrock (not just read data from the database):  
- `eth_call`
- `eth_estimateGas`
- `debug_traceBlockByNumber`
- `debug_traceBlockByHash`
- `debug_traceCall`
- `debug_traceTransaction`  
If you do not need these RPC methods for historical data, then you do not need to run Legacy Geth at all."
243,Why am I seeing a '401 Unauthorized: signature is invalid' error in my `op-node` logs?,"This error indicates that the `op-node` is unable to authenticate with `op-geth`'s authenticated RPC using the JWT secret. To resolve this, you should check that the JWT secret is correct in both services and ensure that `op-geth`'s authenticated RPC is enabled and the URL is correct.","If you see a log that looks like this in `op-node`:  
```
WARN [12-13|15:53:20.263] Derivation process temporary error       attempts=80 err=""stage 0 failed resetting: temp: failed to find the L2 Heads to start from: failed to fetch current L2 forkchoice state: failed to find the finalized L2 block: failed to determine L2BlockRef of finalized, could not get payload: 401 Unauthorized: signature is invalid
```  
It means that the `op-node` is unable to authenticate with `op-geth`'s authenticated RPC using the JWT secret. To fix:  
1. Check that the JWT secret is correct in both services.
2. Check that `op-geth`'s authenticated RPC is enabled, and that the URL is correct."
243,What should I do if my `op-node` can't find the finalized L2 block?,"If your `op-node` can't find the finalized L2 block, it may be due to an authentication issue with `op-geth`'s authenticated RPC. You should verify that the JWT secret is correct in both the `op-node` and `op-geth` services, and also check that `op-geth`'s authenticated RPC is enabled and the URL is correct.","If you see a log that looks like this in `op-node`:  
```
WARN [12-13|15:53:20.263] Derivation process temporary error       attempts=80 err=""stage 0 failed resetting: temp: failed to find the L2 Heads to start from: failed to fetch current L2 forkchoice state: failed to find the finalized L2 block: failed to determine L2BlockRef of finalized, could not get payload: 401 Unauthorized: signature is invalid
```  
It means that the `op-node` is unable to authenticate with `op-geth`'s authenticated RPC using the JWT secret. To fix:  
1. Check that the JWT secret is correct in both services.
2. Check that `op-geth`'s authenticated RPC is enabled, and that the URL is correct."
244,Why am I seeing a '403 Forbidden: invalid host specified' error in `op-node` logs?,"This error indicates that you have not whitelisted `op-node`'s host with `op-geth`. To resolve this, ensure that the `--authrpc.vhosts` parameter in `op-geth` is set to the correct host or `*`, and verify that `op-geth`'s authenticated RPC is enabled and the URL is correct.","If you see a log that looks like this in `op-node`:  
```
{""err"":""403 Forbidden: invalid host specified\n"",""lvl"":""error"",""msg"":""error getting latest header"",""t"":""2022-12-13T22:29:18.932833159Z""}
```  
It means that you have not whitelisted `op-node`'s host with `op-geth`. To fix:  
1. Make sure that the `--authrpc.vhosts` parameter in `op-geth` is either set to the correct host, or `*`.
2. Check that `op-geth`'s authenticated RPC is enabled, and that the URL is correct."
244,How can I fix the 'error getting latest header' in `op-node`?,"To fix this error, you need to whitelist `op-node`'s host with `op-geth`. Make sure the `--authrpc.vhosts` parameter in `op-geth` is set to the correct host or `*`, and check that `op-geth`'s authenticated RPC is enabled and the URL is correct.","If you see a log that looks like this in `op-node`:  
```
{""err"":""403 Forbidden: invalid host specified\n"",""lvl"":""error"",""msg"":""error getting latest header"",""t"":""2022-12-13T22:29:18.932833159Z""}
```  
It means that you have not whitelisted `op-node`'s host with `op-geth`. To fix:  
1. Make sure that the `--authrpc.vhosts` parameter in `op-geth` is either set to the correct host, or `*`.
2. Check that `op-geth`'s authenticated RPC is enabled, and that the URL is correct."
245,Why is my `op-node` application failing with a 'permission denied' error?,"The `op-node` application is failing because it does not have write access to the P2P discovery or peerstore directories. You need to ensure that the `op-node` has write access to the P2P directory, which is `/p2p` by default. Alternatively, you can set the P2P directory to a location the `op-node` can access using the `--p2p.discovery.path` and `--p2p.peerstore.path` parameters, or disable persistence by setting the discovery path to `memory` using the same parameters.","If you see a log that looks like this in `op-node`:  
```
CRIT [12-13|13:46:21.386] Application failed                       message=""failed to load p2p config: failed to load p2p discovery options: failed to open discovery db: mkdir /p2p: permission denied""
```  
It means that the `op-node` does not have write access to the P2P discovery or peerstore directories. To fix:  
1. Make sure that the `op-node` has write access to the P2P directory. By default, this is `/p2p`.
2. Set the P2P directory to somewhere the `op-node` can access via the `--p2p.discovery.path` and `--p2p.peerstore.path` parameters.
3. Set the discovery path to `memory` to disable persistence via the `--p2p.discovery.path` and `--p2p.peerstore.path` parameters."
245,How can I fix the 'failed to open discovery db: mkdir /p2p: permission denied' error in `op-node`?,"To fix this error, you need to make sure that the `op-node` has write access to the P2P directory. By default, this directory is `/p2p`. You can also set the P2P directory to a location the `op-node` can access using the `--p2p.discovery.path` and `--p2p.peerstore.path` parameters. If you want to disable persistence, you can set the discovery path to `memory` using these parameters.","If you see a log that looks like this in `op-node`:  
```
CRIT [12-13|13:46:21.386] Application failed                       message=""failed to load p2p config: failed to load p2p discovery options: failed to open discovery db: mkdir /p2p: permission denied""
```  
It means that the `op-node` does not have write access to the P2P discovery or peerstore directories. To fix:  
1. Make sure that the `op-node` has write access to the P2P directory. By default, this is `/p2p`.
2. Set the P2P directory to somewhere the `op-node` can access via the `--p2p.discovery.path` and `--p2p.peerstore.path` parameters.
3. Set the discovery path to `memory` to disable persistence via the `--p2p.discovery.path` and `--p2p.peerstore.path` parameters."
246,How can I tell if my `op-node` is pointing to the wrong chain?,"If you see a log message in `op-node` that mentions a temporary error with a message like 'failed to find the L2 Heads to start from: wrong chain L1', it indicates that the `op-node` is pointing to the wrong chain.","If you see a log that looks like this in `op-node`:  
```
{""attempts"":183,""err"":""stage 0 failed resetting: temp: failed to find the L2 Heads to start from: wrong chain L1: genesis: 0x4104895a540d87127ff11eef0d51d8f63ce00a6fc211db751a45a4b3a61a9c83:8106656, got 0x12e2c18a3ac50f74d3dd3c0ed7cb751cc924c2985de3dfed44080e683954f1dd:8106656"",""lvl"":""warn"",""msg"":""Derivation process temporary error"",""t"":""2022-12-13T23:31:37.855253213Z""}
```  
It means that the `op-node` is pointing to the wrong chain. To fix:  
1. Verify that the `op-node`'s L1 URL is pointing to the correct L1 for the given network.
2. Verify that the `op-node`'s rollup config/`--network` parameter is set to the correct network.
3. Verify that the `op-node`'s L2 URL is pointing to the correct instance of `op-geth`, and that `op-geth` is properly initialized for the given network."
246,What steps should I take to fix my `op-node` if it's pointing to the wrong chain?,"To fix this issue, you should: 1) Verify that the `op-node`'s L1 URL is pointing to the correct L1 for the given network. 2) Verify that the `op-node`'s rollup config/`--network` parameter is set to the correct network. 3) Verify that the `op-node`'s L2 URL is pointing to the correct instance of `op-geth`, and that `op-geth` is properly initialized for the given network.","If you see a log that looks like this in `op-node`:  
```
{""attempts"":183,""err"":""stage 0 failed resetting: temp: failed to find the L2 Heads to start from: wrong chain L1: genesis: 0x4104895a540d87127ff11eef0d51d8f63ce00a6fc211db751a45a4b3a61a9c83:8106656, got 0x12e2c18a3ac50f74d3dd3c0ed7cb751cc924c2985de3dfed44080e683954f1dd:8106656"",""lvl"":""warn"",""msg"":""Derivation process temporary error"",""t"":""2022-12-13T23:31:37.855253213Z""}
```  
It means that the `op-node` is pointing to the wrong chain. To fix:  
1. Verify that the `op-node`'s L1 URL is pointing to the correct L1 for the given network.
2. Verify that the `op-node`'s rollup config/`--network` parameter is set to the correct network.
3. Verify that the `op-node`'s L2 URL is pointing to the correct instance of `op-geth`, and that `op-geth` is properly initialized for the given network."
247,Where can I find information on what to expect during an upgrade of the Optimism testnet and mainnet?,You can find information on what to expect during an upgrade of the Optimism testnet and mainnet in the Upgrade Guide. The guide provides details on the upgrade process and what changes to anticipate.,"Now that you've got your node up and running, check out the [Upgrade Guide](./upgrade-guide.md) for what to expect when we upgrade our official testnet and mainnet."
248,Where can I find information about the Optimism Goerli network?,You can find information about the Optimism Goerli network by visiting the '/docs/useful-tools/networks/#optimism-goerli' section of the Optimism Governance Documentation.,"<script>
export default {
mounted () {
window.location.href=""/docs/useful-tools/networks/#optimism-goerli""
}
}
</script>"
249,Where can I find more detailed information about Bedrock Mission Control for Optimism?,You can find more detailed information about Bedrock Mission Control for Optimism by visiting the following link: https://oplabs.notion.site/Bedrock-Mission-Control-EXTERNAL-fca344b1f799447cb1bcf3aae62157c5,"<script>
export default {
mounted () {
window.location.href=""https://oplabs.notion.site/Bedrock-Mission-Control-EXTERNAL-fca344b1f799447cb1bcf3aae62157c5""
}
}
</script>"
250,How has the Bedrock release affected wallets?,"The Bedrock release has introduced a few changes that affect wallets, including changes to some of the JSON RPC methods, the introduction of three possible transaction statuses, and the need for transaction fees to account for EIP 1559 support.","---
title: Wallet upgrade guide
lang: en-US
---  
The Bedrock release introduces a few changes that affect wallets.  
- Some of the JSON RPC methods have changed.
- A transaction can now be in one of three statuses.
- Transaction fees have to acount for EIP 1559 support."
250,What are the new statuses a transaction can have after the Bedrock release?,"After the Bedrock release, a transaction can now be in one of three statuses.","---
title: Wallet upgrade guide
lang: en-US
---  
The Bedrock release introduces a few changes that affect wallets.  
- Some of the JSON RPC methods have changed.
- A transaction can now be in one of three statuses.
- Transaction fees have to acount for EIP 1559 support."
250,Do transaction fees need to account for any new standards after the Bedrock release?,"Yes, transaction fees now have to account for EIP 1559 support after the Bedrock release.","---
title: Wallet upgrade guide
lang: en-US
---  
The Bedrock release introduces a few changes that affect wallets.  
- Some of the JSON RPC methods have changed.
- A transaction can now be in one of three statuses.
- Transaction fees have to acount for EIP 1559 support."
251,How can I get the block range information in Optimism?,"The `eth_getBlockRange` method has been removed. Instead, you should use `eth_getBlockByNumber` in a batch request.","These methods have been removed:  
- `eth_getBlockRange`: Use `eth_getBlockByNumber` in a batch request instead.
- `rollup_getInfo`: None of the information returned by this method exists on Bedrock, so there is no replacement for this method.
- `rollup_gasPrices`: Use [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice) instead for the L2 gas price.
For the L1 gas price, you can call the [`GasPriceOracle`'s `l1BaseFee` function](https://optimistic.etherscan.io/address/0x420000000000000000000000000000000000000F#readContract#F5).
If you want to estimate the cost of a transaction, you can [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas)."
251,What should I use to get the L2 gas price in Optimism?,"To get the L2 gas price, you should use the `eth_gasPrice` method.","These methods have been removed:  
- `eth_getBlockRange`: Use `eth_getBlockByNumber` in a batch request instead.
- `rollup_getInfo`: None of the information returned by this method exists on Bedrock, so there is no replacement for this method.
- `rollup_gasPrices`: Use [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice) instead for the L2 gas price.
For the L1 gas price, you can call the [`GasPriceOracle`'s `l1BaseFee` function](https://optimistic.etherscan.io/address/0x420000000000000000000000000000000000000F#readContract#F5).
If you want to estimate the cost of a transaction, you can [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas)."
251,How can I estimate the cost of a transaction in Optimism?,"To estimate the cost of a transaction, you can use the SDK provided by Optimism. You can find more information and instructions on how to use it in the Optimism tutorial on GitHub.","These methods have been removed:  
- `eth_getBlockRange`: Use `eth_getBlockByNumber` in a batch request instead.
- `rollup_getInfo`: None of the information returned by this method exists on Bedrock, so there is no replacement for this method.
- `rollup_gasPrices`: Use [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice) instead for the L2 gas price.
For the L1 gas price, you can call the [`GasPriceOracle`'s `l1BaseFee` function](https://optimistic.etherscan.io/address/0x420000000000000000000000000000000000000F#readContract#F5).
If you want to estimate the cost of a transaction, you can [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas)."
252,How can I check the status of a specific block in Optimism?,"To check the status of a specific block in Optimism, you can use the `eth_getBlockByNumber` method. If the last finalized block is the same or greater than the block with the transaction whose status you need, then it is finalized. If not, use `eth_getBlockByNumber` with the 'block number' set to `safe`. If that block is the same or after the one with the transaction, then it is `safe`. Otherwise, it is `unsafe`.","We use the same vocabulary as the Beacon Chain to describe block finality.
Blocks (and the transactions within them) can be in one of the following states:  
- `unsafe`, meaning that the block has been received via gossip but has not yet been submitted to L1. Unsafe blocks can be reorged if L1 reorgs, or the sequencer reorgs.
- `safe`, meaning that the block has been submitted to L1. Safe blocks can also be reorged if L1 reorgs.
- `finalized`, meaning that the block has reached sufficient depth to be considered final. Finalized blocks cannot be reorged.  
To get the status of a specific block, use [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) with the ""block number"" `finalized`.
If the last finalized block is the same or greater than the block with the transaction whose status you need, then it is finalized.
If not, use [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) with the ""block number"" `safe`. If that block is the same or after the one with the transaction, then it is `safe` (highly unlikely to be reorganized, but it could happen). Otherwise, it is `unsafe`."
252,"What do the terms 'unsafe', 'safe', and 'finalized' mean in the context of Optimism blocks?",In the context of Optimism blocks: 'unsafe' means the block has been received via gossip but not yet submitted to L1 and can be reorged; 'safe' means the block has been submitted to L1 and can still be reorged if L1 reorgs; 'finalized' means the block has reached sufficient depth to be considered final and cannot be reorged.,"We use the same vocabulary as the Beacon Chain to describe block finality.
Blocks (and the transactions within them) can be in one of the following states:  
- `unsafe`, meaning that the block has been received via gossip but has not yet been submitted to L1. Unsafe blocks can be reorged if L1 reorgs, or the sequencer reorgs.
- `safe`, meaning that the block has been submitted to L1. Safe blocks can also be reorged if L1 reorgs.
- `finalized`, meaning that the block has reached sufficient depth to be considered final. Finalized blocks cannot be reorged.  
To get the status of a specific block, use [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) with the ""block number"" `finalized`.
If the last finalized block is the same or greater than the block with the transaction whose status you need, then it is finalized.
If not, use [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) with the ""block number"" `safe`. If that block is the same or after the one with the transaction, then it is `safe` (highly unlikely to be reorganized, but it could happen). Otherwise, it is `unsafe`."
253,How are transaction fees structured in OP Mainnet?,"In OP Mainnet, transaction fees include both an L1 data fee and an L2 execution fee.","In OP Mainnet (and most other OP Stack chain) transaction fees include both an [L1 data fee](../build/transaction-fees.md#estimating-the-l1-data-fee) and an [L2 execution fee](../build/transaction-fees.md#the-l2-execution-fee).
To display the entire estimated cost of a transaction to your users we recommend you [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas) or [@eth-optimism/fee-estimation](https://github.com/ethereum-optimism/optimism/tree/develop/packages/fee-estimation) if you need to optimize for JS performance.  
In Bedrock we support [EIP 1559](https://eips.ethereum.org/EIPS/eip-1559).
Therefore, the L2 execution fee is composed of two components: a fixed (per-block) base fee and a user selected priority fee."
253,How can I estimate the total cost of a transaction on OP Mainnet?,"To estimate the total cost of a transaction, you can use the SDK or the @eth-optimism/fee-estimation package, which are designed to help display the entire estimated cost to users.","In OP Mainnet (and most other OP Stack chain) transaction fees include both an [L1 data fee](../build/transaction-fees.md#estimating-the-l1-data-fee) and an [L2 execution fee](../build/transaction-fees.md#the-l2-execution-fee).
To display the entire estimated cost of a transaction to your users we recommend you [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas) or [@eth-optimism/fee-estimation](https://github.com/ethereum-optimism/optimism/tree/develop/packages/fee-estimation) if you need to optimize for JS performance.  
In Bedrock we support [EIP 1559](https://eips.ethereum.org/EIPS/eip-1559).
Therefore, the L2 execution fee is composed of two components: a fixed (per-block) base fee and a user selected priority fee."
253,What components make up the L2 execution fee in Bedrock?,"In Bedrock, the L2 execution fee is composed of a fixed (per-block) base fee and a user-selected priority fee, and it supports EIP 1559.","In OP Mainnet (and most other OP Stack chain) transaction fees include both an [L1 data fee](../build/transaction-fees.md#estimating-the-l1-data-fee) and an [L2 execution fee](../build/transaction-fees.md#the-l2-execution-fee).
To display the entire estimated cost of a transaction to your users we recommend you [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas) or [@eth-optimism/fee-estimation](https://github.com/ethereum-optimism/optimism/tree/develop/packages/fee-estimation) if you need to optimize for JS performance.  
In Bedrock we support [EIP 1559](https://eips.ethereum.org/EIPS/eip-1559).
Therefore, the L2 execution fee is composed of two components: a fixed (per-block) base fee and a user selected priority fee."
254,How often are blocks produced on the OP Mainnet?,Blocks are produced every two seconds on the OP Mainnet.,"[The EIP 1559 parameters](./differences.md#eip-1559) have different values in OP Mainnet (and most other OP Stack chain) than those on L1 Ethereum.
As a result, in every block the base fee can be between 98% and 110% of the previous value.
As blocks are produced every two seconds, the base fee can be between 54% and 1,745% of the value a minute earlier.
If it takes the user fourteen seconds to approve the transaction in the wallet, the base fee can almost double in that time.  
The base fee specified in the transaction is not necessarily the base fee that the user will pay, *it is merely an upper limit to that amount*.
In most cases, it makes sense to specify a much higher base fee than the current value, to ensure acceptance.  
For example, as I'm writing this, ETH is about $2000, and a cent is about 5000 gwei.
Assuming 20% of a cent is an acceptable base fee for a transaction, and that the transaction is a big 5,000,000 gas one (at the target block size), this gives us a base fee of 200,000 wei.
That would be the value to put in the transaction, even though the L2 base fee (as I'm writing this) is 2,420 wei.  
::: info Up to date information  
You can get the current L2 base fee [in the gas tracker dashboard](https://optimism.io/gas-tracker). We recommend setting your `Max Fee` to _at least_ 0.1 gwei. This value will get your user's transaction included in the next block 98% of the time.  
:::"
254,Why should I specify a higher base fee than the current value when making a transaction?,"Specifying a higher base fee than the current value ensures that your transaction is more likely to be accepted, as the base fee specified in the transaction is just an upper limit and not necessarily the amount you will pay.","[The EIP 1559 parameters](./differences.md#eip-1559) have different values in OP Mainnet (and most other OP Stack chain) than those on L1 Ethereum.
As a result, in every block the base fee can be between 98% and 110% of the previous value.
As blocks are produced every two seconds, the base fee can be between 54% and 1,745% of the value a minute earlier.
If it takes the user fourteen seconds to approve the transaction in the wallet, the base fee can almost double in that time.  
The base fee specified in the transaction is not necessarily the base fee that the user will pay, *it is merely an upper limit to that amount*.
In most cases, it makes sense to specify a much higher base fee than the current value, to ensure acceptance.  
For example, as I'm writing this, ETH is about $2000, and a cent is about 5000 gwei.
Assuming 20% of a cent is an acceptable base fee for a transaction, and that the transaction is a big 5,000,000 gas one (at the target block size), this gives us a base fee of 200,000 wei.
That would be the value to put in the transaction, even though the L2 base fee (as I'm writing this) is 2,420 wei.  
::: info Up to date information  
You can get the current L2 base fee [in the gas tracker dashboard](https://optimism.io/gas-tracker). We recommend setting your `Max Fee` to _at least_ 0.1 gwei. This value will get your user's transaction included in the next block 98% of the time.  
:::"
254,Where can I find the current L2 base fee for Optimism?,You can find the current L2 base fee on the gas tracker dashboard at https://optimism.io/gas-tracker.,"[The EIP 1559 parameters](./differences.md#eip-1559) have different values in OP Mainnet (and most other OP Stack chain) than those on L1 Ethereum.
As a result, in every block the base fee can be between 98% and 110% of the previous value.
As blocks are produced every two seconds, the base fee can be between 54% and 1,745% of the value a minute earlier.
If it takes the user fourteen seconds to approve the transaction in the wallet, the base fee can almost double in that time.  
The base fee specified in the transaction is not necessarily the base fee that the user will pay, *it is merely an upper limit to that amount*.
In most cases, it makes sense to specify a much higher base fee than the current value, to ensure acceptance.  
For example, as I'm writing this, ETH is about $2000, and a cent is about 5000 gwei.
Assuming 20% of a cent is an acceptable base fee for a transaction, and that the transaction is a big 5,000,000 gas one (at the target block size), this gives us a base fee of 200,000 wei.
That would be the value to put in the transaction, even though the L2 base fee (as I'm writing this) is 2,420 wei.  
::: info Up to date information  
You can get the current L2 base fee [in the gas tracker dashboard](https://optimism.io/gas-tracker). We recommend setting your `Max Fee` to _at least_ 0.1 gwei. This value will get your user's transaction included in the next block 98% of the time.  
:::"
255,How low can I set the Max Priority Fee on OP Chains?,You can set the Max Priority Fee to as low as 0.0001 gwei on OP Chains.,"In contrast to the base fee, the priority fee in the transaction is the amount that the user pays, and therefore it makes sense to keep it as low as possible.
For OP Chains, you can set the `Max Priority Fee` to as low as 0.0001 gwei.  
Note that on OP Mainnet the priority fee tends to be very low.
As I am writing this, a priority fee of 500 wei is sufficient ([see here](https://optimism.io/gas-tracker) to get the current values)."
255,What is the typical priority fee on OP Mainnet?,"On OP Mainnet, the priority fee tends to be very low. As of the latest information, a priority fee of 500 wei is usually sufficient.","In contrast to the base fee, the priority fee in the transaction is the amount that the user pays, and therefore it makes sense to keep it as low as possible.
For OP Chains, you can set the `Max Priority Fee` to as low as 0.0001 gwei.  
Note that on OP Mainnet the priority fee tends to be very low.
As I am writing this, a priority fee of 500 wei is sufficient ([see here](https://optimism.io/gas-tracker) to get the current values)."
255,Where can I check the current priority fee values for OP Mainnet?,You can check the current priority fee values for OP Mainnet by visiting the gas tracker at https://optimism.io/gas-tracker.,"In contrast to the base fee, the priority fee in the transaction is the amount that the user pays, and therefore it makes sense to keep it as low as possible.
For OP Chains, you can set the `Max Priority Fee` to as low as 0.0001 gwei.  
Note that on OP Mainnet the priority fee tends to be very low.
As I am writing this, a priority fee of 500 wei is sufficient ([see here](https://optimism.io/gas-tracker) to get the current values)."
256,Why do app developers need to move data and assets between OP Mainnet and Ethereum?,"App developers need to move data and assets between OP Mainnet and Ethereum to ensure that their applications can interact seamlessly with both networks. This process, known as 'bridging,' allows for the transfer of information and resources, enabling better functionality and integration.","---
title: Bridging basics
lang: en-US
---  
Although OP Mainnet is an L2 (and therefore fundamentally connected to Ethereum), it's also a separate blockchain system.
App developers commonly need to move data and assets between OP Mainnet and Ethereum.
We call the process of moving data and assets between the two networks ""bridging""."
256,What is bridging in the context of OP Mainnet and Ethereum?,"Bridging is the process of moving data and assets between OP Mainnet and Ethereum. It allows for the transfer of information and resources between the two networks, facilitating better interaction and integration for applications that operate on both blockchains.","---
title: Bridging basics
lang: en-US
---  
Although OP Mainnet is an L2 (and therefore fundamentally connected to Ethereum), it's also a separate blockchain system.
App developers commonly need to move data and assets between OP Mainnet and Ethereum.
We call the process of moving data and assets between the two networks ""bridging""."
257,How can I move tokens between OP Mainnet and Ethereum?,"You can use the Standard Token Bridge, which is a simple smart contract designed to facilitate the movement of tokens between OP Mainnet and Ethereum.","For the most common usecase, moving tokens around, we've created the [Standard Token Bridge](./standard-bridge.md).
The Standard Token Bridge is a simple smart contract with the functionality you need to move tokens between OP Mainnet and Ethereum.
It also allows you to easily create L2 representations of existing tokens on Ethereum."
257,Is it possible to create L2 representations of existing tokens on Ethereum?,"Yes, the Standard Token Bridge allows you to easily create L2 representations of existing tokens on Ethereum.","For the most common usecase, moving tokens around, we've created the [Standard Token Bridge](./standard-bridge.md).
The Standard Token Bridge is a simple smart contract with the functionality you need to move tokens between OP Mainnet and Ethereum.
It also allows you to easily create L2 representations of existing tokens on Ethereum."
258,Can I send data other than tokens between Ethereum and OP Mainnet?,"Yes, you can send arbitrary data between L1 (Ethereum) and L2 (OP Mainnet) if the Standard Token Bridge doesn't fully cover your use case.","If the Standard Token Bridge doesn't fully cover your usecase, you can also [send arbitrary data between L1 and L2](./messaging.md).
You can use this functionality to have a contract on Ethereum trigger a contract function on OP Mainnet and vice versa.
We've made this process as easy as possible by giving developers a simple API for triggering a cross-chain function call.
We even [use this API under the hood](https://github.com/ethereum-optimism/optimism/blob/a21cec6d3d00c9d7ed100c0257d4b966b034620f/packages/contracts/contracts/L1/messaging/L1StandardBridge.sol#L202) inside the Standard Token Bridge."
258,How can I trigger a contract function on OP Mainnet from Ethereum?,"You can use the provided API to trigger a cross-chain function call, allowing a contract on Ethereum to trigger a contract function on OP Mainnet and vice versa.","If the Standard Token Bridge doesn't fully cover your usecase, you can also [send arbitrary data between L1 and L2](./messaging.md).
You can use this functionality to have a contract on Ethereum trigger a contract function on OP Mainnet and vice versa.
We've made this process as easy as possible by giving developers a simple API for triggering a cross-chain function call.
We even [use this API under the hood](https://github.com/ethereum-optimism/optimism/blob/a21cec6d3d00c9d7ed100c0257d4b966b034620f/packages/contracts/contracts/L1/messaging/L1StandardBridge.sol#L202) inside the Standard Token Bridge."
258,Is the API for cross-chain function calls difficult to use?,"No, the process has been made as easy as possible for developers by providing a simple API for triggering cross-chain function calls.","If the Standard Token Bridge doesn't fully cover your usecase, you can also [send arbitrary data between L1 and L2](./messaging.md).
You can use this functionality to have a contract on Ethereum trigger a contract function on OP Mainnet and vice versa.
We've made this process as easy as possible by giving developers a simple API for triggering a cross-chain function call.
We even [use this API under the hood](https://github.com/ethereum-optimism/optimism/blob/a21cec6d3d00c9d7ed100c0257d4b966b034620f/packages/contracts/contracts/L1/messaging/L1StandardBridge.sol#L202) inside the Standard Token Bridge."
259,Why is the L2 state vulnerable in Optimism?,"The L2 state is vulnerable to fault challenges until the fault challenge period, which is currently one week, passes. This means that during this period, the state can be contested and potentially altered.","---
title: Communication Strategies
lang: en-US
---  
Dapps' inter-layer communication strategies are based on trade-offs between several parameters:  
- Speed
- Cost
- Trust assumptions  
An issue related to both speed and decentralization is the L2 state.
This state is vulnerable to fault challenges until the fault challenge period (currently one week) passes.
If you want to do something that relies on the L2 state prior to that point, you should [run a replica](../build/run-a-node.md) yourself to make sure the state you use is correct."
259,What should I do if I need to rely on the L2 state before the fault challenge period ends?,"If you need to rely on the L2 state before the fault challenge period ends, you should run a replica yourself to ensure the state you are using is correct.","---
title: Communication Strategies
lang: en-US
---  
Dapps' inter-layer communication strategies are based on trade-offs between several parameters:  
- Speed
- Cost
- Trust assumptions  
An issue related to both speed and decentralization is the L2 state.
This state is vulnerable to fault challenges until the fault challenge period (currently one week) passes.
If you want to do something that relies on the L2 state prior to that point, you should [run a replica](../build/run-a-node.md) yourself to make sure the state you use is correct."
259,What are the main trade-offs in Dapps' inter-layer communication strategies in Optimism?,"The main trade-offs in Dapps' inter-layer communication strategies in Optimism are between speed, cost, and trust assumptions.","---
title: Communication Strategies
lang: en-US
---  
Dapps' inter-layer communication strategies are based on trade-offs between several parameters:  
- Speed
- Cost
- Trust assumptions  
An issue related to both speed and decentralization is the L2 state.
This state is vulnerable to fault challenges until the fault challenge period (currently one week) passes.
If you want to do something that relies on the L2 state prior to that point, you should [run a replica](../build/run-a-node.md) yourself to make sure the state you use is correct."
260,How can I connect my dapp to both Ethereum and OP Mainnet?,"If your dapp has a centralized always on server, the easiest solution is to have two providers: one connected to Ethereum (L1) and the other to OP Mainnet (L2).","If your dapp has a centralized always on server, the easiest solution is to just have two providers, one connected to Ethereum (L1) and the other to OP Mainnet (L2).  
| Parameter         | Evaluation |
| - | - |
| Speed             | Fastest
| Cost              | Cheapest
| Trust assumption  | Centralized"
260,What are the benefits of using a centralized server for my dapp?,"Using a centralized server for your dapp provides the fastest speed and the cheapest cost, but it comes with the trust assumption of being centralized.","If your dapp has a centralized always on server, the easiest solution is to just have two providers, one connected to Ethereum (L1) and the other to OP Mainnet (L2).  
| Parameter         | Evaluation |
| - | - |
| Speed             | Fastest
| Cost              | Cheapest
| Trust assumption  | Centralized"
261,Can a client connect to both Ethereum and OP Mainnet?,"Yes, a client, typically a browser with a wallet, can connect to both Ethereum and OP Mainnet. However, this isn't considered a great mechanism for inter-layer communication.","The client (typically a browser with a wallet) can also connect to both Ethereum and OP Mainnet, but it isn't a great mechanism for inter-layer communication.
You know what the code in the server is, because you wrote it.
You know what the code in the client is *supposed to be*, but it is possible for users to run a different client that pretends to be the legitimate one.
The only time that you can trust the client for inter-layer communication is when it is in the best interest of the user running the client not to lie.
And even then, you shouldn't because a hacker can cause a user to run malware."
261,Is it possible for users to run a different client that pretends to be the legitimate one?,"Yes, it is possible for users to run a different client that pretends to be the legitimate one. This means you can't always trust the client for inter-layer communication.","The client (typically a browser with a wallet) can also connect to both Ethereum and OP Mainnet, but it isn't a great mechanism for inter-layer communication.
You know what the code in the server is, because you wrote it.
You know what the code in the client is *supposed to be*, but it is possible for users to run a different client that pretends to be the legitimate one.
The only time that you can trust the client for inter-layer communication is when it is in the best interest of the user running the client not to lie.
And even then, you shouldn't because a hacker can cause a user to run malware."
261,When can you trust the client for inter-layer communication?,"You can only trust the client for inter-layer communication when it is in the best interest of the user running the client not to lie. However, even in such cases, you should be cautious because a hacker can cause a user to run malware.","The client (typically a browser with a wallet) can also connect to both Ethereum and OP Mainnet, but it isn't a great mechanism for inter-layer communication.
You know what the code in the server is, because you wrote it.
You know what the code in the client is *supposed to be*, but it is possible for users to run a different client that pretends to be the legitimate one.
The only time that you can trust the client for inter-layer communication is when it is in the best interest of the user running the client not to lie.
And even then, you shouldn't because a hacker can cause a user to run malware."
262,How does Optimism ensure decentralization similar to OP Mainnet and Ethereum?,Optimism ensures decentralization similar to OP Mainnet and Ethereum by using the same messaging infrastructure and development process.,"If you want to keep the same decentralization promises as OP Mainnet and Ethereum, you can [rely on our messaging infrastructure](messaging.md).
You are already trusting Optimism to run the chain, and the messaging infrastructure goes through the same development process."
262,Can I trust the messaging infrastructure used by Optimism?,"Yes, you can trust the messaging infrastructure used by Optimism because it goes through the same development process as the chain itself.","If you want to keep the same decentralization promises as OP Mainnet and Ethereum, you can [rely on our messaging infrastructure](messaging.md).
You are already trusting Optimism to run the chain, and the messaging infrastructure goes through the same development process."
263,How can I make L1 code communicate with L2 code in Optimism?,You can make L1 code communicate with L2 code by issuing a single L1 transaction.,"If you want L1 code to either tell L2 code to do something, or update L2 code with some information, you just need to [issue a single L1 transaction](messaging.md#for-ethereum-l1-to-op-mainnet-l2-transactions).  
| Parameter         | Evaluation |
| - | - |
| Speed             | About one minute
| Cost              | Cheapish (requires an L1 transaction)
| Trust assumption  | Same as using OP Mainnet"
263,How long does it take for an L1 transaction to update L2 code in Optimism?,It takes about one minute for an L1 transaction to update L2 code in Optimism.,"If you want L1 code to either tell L2 code to do something, or update L2 code with some information, you just need to [issue a single L1 transaction](messaging.md#for-ethereum-l1-to-op-mainnet-l2-transactions).  
| Parameter         | Evaluation |
| - | - |
| Speed             | About one minute
| Cost              | Cheapish (requires an L1 transaction)
| Trust assumption  | Same as using OP Mainnet"
263,Is it expensive to make an L1 transaction to update L2 code in Optimism?,"No, it is relatively cheap to make an L1 transaction to update L2 code in Optimism, although it does require an L1 transaction.","If you want L1 code to either tell L2 code to do something, or update L2 code with some information, you just need to [issue a single L1 transaction](messaging.md#for-ethereum-l1-to-op-mainnet-l2-transactions).  
| Parameter         | Evaluation |
| - | - |
| Speed             | About one minute
| Cost              | Cheapish (requires an L1 transaction)
| Trust assumption  | Same as using OP Mainnet"
264,Why is sending messages from L2 to L1 more difficult?,"Sending messages from L2 to L1 is more difficult because it requires three transactions: an initiating transaction on L2, a proving transaction on L1 that includes a merkle proof, and a claiming transaction on L1 after the fault challenge period passes. The proving transaction is particularly expensive due to the cost of merkle proof verification.","Sending messages from L2 to L1 is [a lot harder](messaging.md#for-op-mainnet-l2-to-ethereum-l1-transactions).
It requires three transactions:  
1. An initiating transaction on L2, which is pretty cheap.
1. After the state root is posted to L1, a proving transaction of L1, which includes [a merkle proof](https://medium.com/crypto-0-nite/merkle-proofs-explained-6dd429623dc5).
This transaction is expensive because merkle proof verification is expensive.
1. After the fault challenge period passes, a claiming transaction on L1, which runs the actual transaction on L1.  
| Parameter         | Evaluation |
| - | - |
| Speed             | >7 days
| Cost              | Expensive
| Trust Assumption  | Almost as good as using OP Mainnet, however someone needs to run the proof and claim transactions on L1 (your server can do that for better user experience)"
264,How long does it take to send a message from L2 to L1?,Sending a message from L2 to L1 takes more than 7 days because of the fault challenge period that needs to pass before the claiming transaction can be executed on L1.,"Sending messages from L2 to L1 is [a lot harder](messaging.md#for-op-mainnet-l2-to-ethereum-l1-transactions).
It requires three transactions:  
1. An initiating transaction on L2, which is pretty cheap.
1. After the state root is posted to L1, a proving transaction of L1, which includes [a merkle proof](https://medium.com/crypto-0-nite/merkle-proofs-explained-6dd429623dc5).
This transaction is expensive because merkle proof verification is expensive.
1. After the fault challenge period passes, a claiming transaction on L1, which runs the actual transaction on L1.  
| Parameter         | Evaluation |
| - | - |
| Speed             | >7 days
| Cost              | Expensive
| Trust Assumption  | Almost as good as using OP Mainnet, however someone needs to run the proof and claim transactions on L1 (your server can do that for better user experience)"
264,Is it expensive to send messages from L2 to L1?,"Yes, it is expensive to send messages from L2 to L1, primarily because the proving transaction on L1, which includes a merkle proof, is costly.","Sending messages from L2 to L1 is [a lot harder](messaging.md#for-op-mainnet-l2-to-ethereum-l1-transactions).
It requires three transactions:  
1. An initiating transaction on L2, which is pretty cheap.
1. After the state root is posted to L1, a proving transaction of L1, which includes [a merkle proof](https://medium.com/crypto-0-nite/merkle-proofs-explained-6dd429623dc5).
This transaction is expensive because merkle proof verification is expensive.
1. After the fault challenge period passes, a claiming transaction on L1, which runs the actual transaction on L1.  
| Parameter         | Evaluation |
| - | - |
| Speed             | >7 days
| Cost              | Expensive
| Trust Assumption  | Almost as good as using OP Mainnet, however someone needs to run the proof and claim transactions on L1 (your server can do that for better user experience)"
265,How do incentives work in Optimism governance?,"In Optimism governance, incentives can be used to encourage honest behavior. For example, mechanisms like UMA's can be employed where honest relays get paid and dishonest ones get penalized. This is similar to how optimistic rollups function.","You can also use incentives, for example using a mechanism such as [UMA's](../../useful-tools/oracles/#universal-market-access-uma).
This is similar to the way optimistic rollups work - honest relays get paid, dishonest ones get slashed.
However,  this mechanism is only truly decentralized if there are enough relayers to make sure there will always be an honest one.
Otherwise, it's similar to centralized communications, just with a few extra relayers that can take over."
265,Is the incentive mechanism in Optimism governance truly decentralized?,"The incentive mechanism is only truly decentralized if there are enough relayers to ensure that there will always be an honest one. Without sufficient relayers, it can resemble centralized communications, albeit with a few extra relayers that can potentially take over.","You can also use incentives, for example using a mechanism such as [UMA's](../../useful-tools/oracles/#universal-market-access-uma).
This is similar to the way optimistic rollups work - honest relays get paid, dishonest ones get slashed.
However,  this mechanism is only truly decentralized if there are enough relayers to make sure there will always be an honest one.
Otherwise, it's similar to centralized communications, just with a few extra relayers that can take over."
266,How can apps on OP Mainnet interact with apps on Ethereum?,"Apps on OP Mainnet can interact with apps on Ethereum via a process called 'bridging'. This allows contracts on OP Mainnet to trigger contract functions on Ethereum, and vice versa.","---
title: Sending data between L1 and L2
lang: en-US
---  
Apps on OP Mainnet can be made to interact with apps on Ethereum via a process called ""bridging"".
In a nutshell, **contracts on OP Mainnet can trigger contract functions on Ethereum, and vice versa**.
With just a little bit of elbow grease, you too can create contracts that bridge the gap between Layer 1 and Layer 2!  
::: tip
[See here for a step by step tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-comm)
:::  
<details>  
<summary><b>Understanding contract calls</b></summary>  
To understand the process of creating bridges between contracts on Layer 1 and Layer 2, you should first have a basic understanding of the way contracts on *Ethereum* communicate with one another.
If you're a smart contract developer, you might be familiar with stuff like this:  
```solidity
contract MyContract {
function doSomething(uint256 myFunctionParam) public {
// ... some sort of code goes here
}
}

contract MyOtherContract {
function doTheThing(address myContractAddress, uint256 myFunctionParam) public {
MyContract(myContractAddress).doSomething(myFunctionParam);
}
}
```  
Here, `MyOtherContract.doTheThing` triggers a ""call"" to `MyContract.doSomething`.
A ""call"" is defined by a few key input parameters, mainly a `target address` and some `calldata`.
In this specific example, the `target address` is going to be the address of our instance of `MyContract`.
The `calldata`, on the other hand, depends on the function we're trying to call.
Solidity uses an encoding scheme called [Contract ABI](https://docs.soliditylang.org/en/v0.8.4/abi-spec.html) to both [select which function to call](https://docs.soliditylang.org/en/v0.8.4/abi-spec.html#function-selector) and to [encode function input arguments](https://docs.soliditylang.org/en/v0.8.4/abi-spec.html#argument-encoding).  
Solidity gives us some useful tools to perform this same encoding manually.
For the sake of learning, let's take a look at how we can duplicate the same code with a manual encoding:  
```solidity
contract MyContract {
function doSomething(uint256 myFunctionParam) public {
// ... some sort of code goes here
}
}

contract MyOtherContract {
function doTheThing(address myContractAddress, uint256 myFunctionParam) public {
myContractAddress.call(
abi.encodeWithSignature(
""doSomething(uint256)"",
myFunctionParam
)
);
}
}
```  
Here we're using the [low-level ""call"" function](https://docs.soliditylang.org/en/v0.8.4/units-and-global-variables.html#members-of-address-types) and one of the [ABI encoding functions built into Solidity](https://docs.soliditylang.org/en/v0.8.4/units-and-global-variables.html#abi-encoding-and-decoding-functions).
Although these two code snippets look a bit different, they're actually functionally identical.  
</details>"
266,What is a 'call' in the context of Ethereum smart contracts?,"A 'call' in Ethereum smart contracts is a process where one contract triggers a function in another contract. It involves key input parameters, mainly a target address and some calldata. The target address is the address of the contract instance, and the calldata depends on the function being called.","---
title: Sending data between L1 and L2
lang: en-US
---  
Apps on OP Mainnet can be made to interact with apps on Ethereum via a process called ""bridging"".
In a nutshell, **contracts on OP Mainnet can trigger contract functions on Ethereum, and vice versa**.
With just a little bit of elbow grease, you too can create contracts that bridge the gap between Layer 1 and Layer 2!  
::: tip
[See here for a step by step tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-comm)
:::  
<details>  
<summary><b>Understanding contract calls</b></summary>  
To understand the process of creating bridges between contracts on Layer 1 and Layer 2, you should first have a basic understanding of the way contracts on *Ethereum* communicate with one another.
If you're a smart contract developer, you might be familiar with stuff like this:  
```solidity
contract MyContract {
function doSomething(uint256 myFunctionParam) public {
// ... some sort of code goes here
}
}

contract MyOtherContract {
function doTheThing(address myContractAddress, uint256 myFunctionParam) public {
MyContract(myContractAddress).doSomething(myFunctionParam);
}
}
```  
Here, `MyOtherContract.doTheThing` triggers a ""call"" to `MyContract.doSomething`.
A ""call"" is defined by a few key input parameters, mainly a `target address` and some `calldata`.
In this specific example, the `target address` is going to be the address of our instance of `MyContract`.
The `calldata`, on the other hand, depends on the function we're trying to call.
Solidity uses an encoding scheme called [Contract ABI](https://docs.soliditylang.org/en/v0.8.4/abi-spec.html) to both [select which function to call](https://docs.soliditylang.org/en/v0.8.4/abi-spec.html#function-selector) and to [encode function input arguments](https://docs.soliditylang.org/en/v0.8.4/abi-spec.html#argument-encoding).  
Solidity gives us some useful tools to perform this same encoding manually.
For the sake of learning, let's take a look at how we can duplicate the same code with a manual encoding:  
```solidity
contract MyContract {
function doSomething(uint256 myFunctionParam) public {
// ... some sort of code goes here
}
}

contract MyOtherContract {
function doTheThing(address myContractAddress, uint256 myFunctionParam) public {
myContractAddress.call(
abi.encodeWithSignature(
""doSomething(uint256)"",
myFunctionParam
)
);
}
}
```  
Here we're using the [low-level ""call"" function](https://docs.soliditylang.org/en/v0.8.4/units-and-global-variables.html#members-of-address-types) and one of the [ABI encoding functions built into Solidity](https://docs.soliditylang.org/en/v0.8.4/units-and-global-variables.html#abi-encoding-and-decoding-functions).
Although these two code snippets look a bit different, they're actually functionally identical.  
</details>"
266,What is ABI in Solidity and why is it important?,"ABI stands for Application Binary Interface. In Solidity, it is used to encode and decode the data that is sent to and from smart contracts. It helps in selecting which function to call and encoding the function input arguments, making it essential for contract communication.","---
title: Sending data between L1 and L2
lang: en-US
---  
Apps on OP Mainnet can be made to interact with apps on Ethereum via a process called ""bridging"".
In a nutshell, **contracts on OP Mainnet can trigger contract functions on Ethereum, and vice versa**.
With just a little bit of elbow grease, you too can create contracts that bridge the gap between Layer 1 and Layer 2!  
::: tip
[See here for a step by step tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-comm)
:::  
<details>  
<summary><b>Understanding contract calls</b></summary>  
To understand the process of creating bridges between contracts on Layer 1 and Layer 2, you should first have a basic understanding of the way contracts on *Ethereum* communicate with one another.
If you're a smart contract developer, you might be familiar with stuff like this:  
```solidity
contract MyContract {
function doSomething(uint256 myFunctionParam) public {
// ... some sort of code goes here
}
}

contract MyOtherContract {
function doTheThing(address myContractAddress, uint256 myFunctionParam) public {
MyContract(myContractAddress).doSomething(myFunctionParam);
}
}
```  
Here, `MyOtherContract.doTheThing` triggers a ""call"" to `MyContract.doSomething`.
A ""call"" is defined by a few key input parameters, mainly a `target address` and some `calldata`.
In this specific example, the `target address` is going to be the address of our instance of `MyContract`.
The `calldata`, on the other hand, depends on the function we're trying to call.
Solidity uses an encoding scheme called [Contract ABI](https://docs.soliditylang.org/en/v0.8.4/abi-spec.html) to both [select which function to call](https://docs.soliditylang.org/en/v0.8.4/abi-spec.html#function-selector) and to [encode function input arguments](https://docs.soliditylang.org/en/v0.8.4/abi-spec.html#argument-encoding).  
Solidity gives us some useful tools to perform this same encoding manually.
For the sake of learning, let's take a look at how we can duplicate the same code with a manual encoding:  
```solidity
contract MyContract {
function doSomething(uint256 myFunctionParam) public {
// ... some sort of code goes here
}
}

contract MyOtherContract {
function doTheThing(address myContractAddress, uint256 myFunctionParam) public {
myContractAddress.call(
abi.encodeWithSignature(
""doSomething(uint256)"",
myFunctionParam
)
);
}
}
```  
Here we're using the [low-level ""call"" function](https://docs.soliditylang.org/en/v0.8.4/units-and-global-variables.html#members-of-address-types) and one of the [ABI encoding functions built into Solidity](https://docs.soliditylang.org/en/v0.8.4/units-and-global-variables.html#abi-encoding-and-decoding-functions).
Although these two code snippets look a bit different, they're actually functionally identical.  
</details>"
267,How do contracts on Ethereum communicate with contracts on Optimism?,"Contracts on Ethereum communicate with contracts on Optimism using special smart contracts called 'messengers'. Each layer (L1 and L2) has its own messenger contract that abstracts away lower-level communication details. The main function used for this communication is `sendMessage`, which allows a contract on one network to call a contract on the other network.","At a high level, this process is pretty similar to the same process for two contracts on Ethereum (with a few caveats).
**Communication between L1 and L2 is enabled by two special smart contracts called the ""messengers""**.
Each layer has its own messenger contract which serves to abstract away some lower-level communication details, a lot like how HTTP libraries abstract away physical network connections.  
We won't get into *too* much detail about these contracts here ‚Äî the only thing you really need to know about is the `sendMessage` function attached to each messenger:  
```solidity
function sendMessage(
address _target,
bytes memory _message,
uint32 _gasLimit
) public;
```  
It's the same as that `call` function used for contract messaging within L1 Ethereums.
We have an extra `_gasLimit` field here, but `call` has that too.
This is basically equivalent to:  
```solidity
address(_target).call{gas: _gasLimit}(_message);
```  
Except, of course, that we're calling a contract on a completely different network.  
We're glossing over a lot of the technical details that make this whole thing work under the hood.
Point is, it works.
Want to call a contract on OP Mainnet from a contract on Ethereum?
It's dead simple:  
```solidity
// Pretend this is on L2
contract MyOptimisticContract {
function doSomething(uint256 myFunctionParam) public {
// ... some sort of code goes here
}
}

// And pretend this is on L1
contract MyOtherContract {
function doTheThing(address myOptimisticContractAddress, uint256 myFunctionParam) public {
ovmL1CrossDomainMessenger.sendMessage(
myOptimisticContractAddress,
abi.encodeWithSignature(
""doSomething(uint256)"",
myFunctionParam
),
1000000 // use whatever gas limit you want
)
}
}
```  
::: tip Using the messenger contracts
Our messenger contracts, the [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/L1CrossDomainMessenger.sol) and [`L2CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L2/L2CrossDomainMessenger.sol), always come pre-deployed to each of our networks.
You can find the exact addresses of these contracts on our various deployments [inside of the Optimism monorepo](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments).
:::"
267,What is the `sendMessage` function and how is it used?,"The `sendMessage` function is part of the messenger contracts used for communication between L1 (Ethereum) and L2 (Optimism). It takes three parameters: the target contract address, the message to be sent, and a gas limit. This function is similar to the `call` function used within L1 Ethereum, but it is used to call contracts on a different network. For example, you can use it to call a function on an Optimism contract from an Ethereum contract.","At a high level, this process is pretty similar to the same process for two contracts on Ethereum (with a few caveats).
**Communication between L1 and L2 is enabled by two special smart contracts called the ""messengers""**.
Each layer has its own messenger contract which serves to abstract away some lower-level communication details, a lot like how HTTP libraries abstract away physical network connections.  
We won't get into *too* much detail about these contracts here ‚Äî the only thing you really need to know about is the `sendMessage` function attached to each messenger:  
```solidity
function sendMessage(
address _target,
bytes memory _message,
uint32 _gasLimit
) public;
```  
It's the same as that `call` function used for contract messaging within L1 Ethereums.
We have an extra `_gasLimit` field here, but `call` has that too.
This is basically equivalent to:  
```solidity
address(_target).call{gas: _gasLimit}(_message);
```  
Except, of course, that we're calling a contract on a completely different network.  
We're glossing over a lot of the technical details that make this whole thing work under the hood.
Point is, it works.
Want to call a contract on OP Mainnet from a contract on Ethereum?
It's dead simple:  
```solidity
// Pretend this is on L2
contract MyOptimisticContract {
function doSomething(uint256 myFunctionParam) public {
// ... some sort of code goes here
}
}

// And pretend this is on L1
contract MyOtherContract {
function doTheThing(address myOptimisticContractAddress, uint256 myFunctionParam) public {
ovmL1CrossDomainMessenger.sendMessage(
myOptimisticContractAddress,
abi.encodeWithSignature(
""doSomething(uint256)"",
myFunctionParam
),
1000000 // use whatever gas limit you want
)
}
}
```  
::: tip Using the messenger contracts
Our messenger contracts, the [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/L1CrossDomainMessenger.sol) and [`L2CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L2/L2CrossDomainMessenger.sol), always come pre-deployed to each of our networks.
You can find the exact addresses of these contracts on our various deployments [inside of the Optimism monorepo](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments).
:::"
267,Where can I find the addresses of the messenger contracts on Optimism?,"The addresses of the messenger contracts, `L1CrossDomainMessenger` and `L2CrossDomainMessenger`, are pre-deployed on each of the Optimism networks. You can find the exact addresses of these contracts in the Optimism monorepo under the deployments section.","At a high level, this process is pretty similar to the same process for two contracts on Ethereum (with a few caveats).
**Communication between L1 and L2 is enabled by two special smart contracts called the ""messengers""**.
Each layer has its own messenger contract which serves to abstract away some lower-level communication details, a lot like how HTTP libraries abstract away physical network connections.  
We won't get into *too* much detail about these contracts here ‚Äî the only thing you really need to know about is the `sendMessage` function attached to each messenger:  
```solidity
function sendMessage(
address _target,
bytes memory _message,
uint32 _gasLimit
) public;
```  
It's the same as that `call` function used for contract messaging within L1 Ethereums.
We have an extra `_gasLimit` field here, but `call` has that too.
This is basically equivalent to:  
```solidity
address(_target).call{gas: _gasLimit}(_message);
```  
Except, of course, that we're calling a contract on a completely different network.  
We're glossing over a lot of the technical details that make this whole thing work under the hood.
Point is, it works.
Want to call a contract on OP Mainnet from a contract on Ethereum?
It's dead simple:  
```solidity
// Pretend this is on L2
contract MyOptimisticContract {
function doSomething(uint256 myFunctionParam) public {
// ... some sort of code goes here
}
}

// And pretend this is on L1
contract MyOtherContract {
function doTheThing(address myOptimisticContractAddress, uint256 myFunctionParam) public {
ovmL1CrossDomainMessenger.sendMessage(
myOptimisticContractAddress,
abi.encodeWithSignature(
""doSomething(uint256)"",
myFunctionParam
),
1000000 // use whatever gas limit you want
)
}
}
```  
::: tip Using the messenger contracts
Our messenger contracts, the [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/L1CrossDomainMessenger.sol) and [`L2CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L2/L2CrossDomainMessenger.sol), always come pre-deployed to each of our networks.
You can find the exact addresses of these contracts on our various deployments [inside of the Optimism monorepo](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments).
:::"
268,Are transactions between Ethereum and OP Mainnet instantaneous?,"No, transactions between Ethereum and OP Mainnet are not instantaneous. The speed of these cross-chain transactions depends on the direction in which the transaction is sent.","Unlike calls between contracts on the same blockchain, calls between Ethereum and OP Mainnet are *not* instantaneous.
The exact speed of a cross-chain transaction depends on the direction in which the transaction is sent."
268,Do calls between contracts on the same blockchain take the same amount of time as calls between Ethereum and OP Mainnet?,"No, calls between contracts on the same blockchain are instantaneous, unlike calls between Ethereum and OP Mainnet, which are not instantaneous.","Unlike calls between contracts on the same blockchain, calls between Ethereum and OP Mainnet are *not* instantaneous.
The exact speed of a cross-chain transaction depends on the direction in which the transaction is sent."
269,How long does it take for a transaction to go from Ethereum to OP Mainnet?,Transactions sent from Ethereum to OP Mainnet take approximately a minute.,"Transactions sent from L1 to L2 take approximately a minute to get from Ethereum to OP Mainnet, or from Goerli to OP Goerli.
This is because L2 nodes wait for five block confirmations on Ethereum before executing an L1 to L2 transaction, to reduce the chance of a chain reorg."
269,Why do transactions from L1 to L2 take about a minute?,L2 nodes wait for five block confirmations on Ethereum before executing an L1 to L2 transaction to reduce the chance of a chain reorganization.,"Transactions sent from L1 to L2 take approximately a minute to get from Ethereum to OP Mainnet, or from Goerli to OP Goerli.
This is because L2 nodes wait for five block confirmations on Ethereum before executing an L1 to L2 transaction, to reduce the chance of a chain reorg."
270,How long do L2 to L1 transactions take on Optimism?,"L2 to L1 transactions on Optimism have to wait for two periods: the time until the state root is written to L1, which can be estimated by looking at the State Commitment Chain, and the fault challenge period, which is a few seconds on Goerli and seven days on mainnet.","L2 to L1 transactions have to wait two periods:  
1. The time until the state root is written to L1.
You can estimate this time by looking at how often transactions happen to the State Commitment Chain (on both [mainnet](https://etherscan.io/address/0xBe5dAb4A2e9cd0F27300dB4aB94BeE3A233AEB19) and [goerli](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)).  
It is necessary to provide a Merkle proof of the message on L1 after the state root is written.
The fault challenge period starts *after* that proof transaction becomes part of the L1 chain.  
1. The [fault challenge period](#understanding-the-challenge-period), which is a few seconds on goerli and seven days on mainnet.
This waiting period is a core part of the security mechanism designed to keep funds on Optimism secure and cannot be circumvented.
After this waiting period, any user can ""finalize"" the transaction by triggering a second transaction on Ethereum that sends the message to the target L1 contract."
270,Why is there a waiting period for L2 to L1 transactions on Optimism?,"The waiting period is a core part of the security mechanism designed to keep funds on Optimism secure. It includes the time until the state root is written to L1 and the fault challenge period, ensuring that transactions are verified and secure before being finalized.","L2 to L1 transactions have to wait two periods:  
1. The time until the state root is written to L1.
You can estimate this time by looking at how often transactions happen to the State Commitment Chain (on both [mainnet](https://etherscan.io/address/0xBe5dAb4A2e9cd0F27300dB4aB94BeE3A233AEB19) and [goerli](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)).  
It is necessary to provide a Merkle proof of the message on L1 after the state root is written.
The fault challenge period starts *after* that proof transaction becomes part of the L1 chain.  
1. The [fault challenge period](#understanding-the-challenge-period), which is a few seconds on goerli and seven days on mainnet.
This waiting period is a core part of the security mechanism designed to keep funds on Optimism secure and cannot be circumvented.
After this waiting period, any user can ""finalize"" the transaction by triggering a second transaction on Ethereum that sends the message to the target L1 contract."
270,What is the fault challenge period in Optimism?,"The fault challenge period is a security measure that starts after the state root is written to L1 and a Merkle proof of the message is provided. It lasts a few seconds on Goerli and seven days on mainnet, allowing time to challenge any potential faults in the transaction.","L2 to L1 transactions have to wait two periods:  
1. The time until the state root is written to L1.
You can estimate this time by looking at how often transactions happen to the State Commitment Chain (on both [mainnet](https://etherscan.io/address/0xBe5dAb4A2e9cd0F27300dB4aB94BeE3A233AEB19) and [goerli](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)).  
It is necessary to provide a Merkle proof of the message on L1 after the state root is written.
The fault challenge period starts *after* that proof transaction becomes part of the L1 chain.  
1. The [fault challenge period](#understanding-the-challenge-period), which is a few seconds on goerli and seven days on mainnet.
This waiting period is a core part of the security mechanism designed to keep funds on Optimism secure and cannot be circumvented.
After this waiting period, any user can ""finalize"" the transaction by triggering a second transaction on Ethereum that sends the message to the target L1 contract."
271,How do contracts typically restrict access to certain functions?,Contracts often use the Ownable pattern to selectively restrict access to certain functions. This pattern allows only the owner of the contract to execute specific functions.,"Contracts frequently make use of `msg.sender` to make decisions based on the calling account.
For example, many contracts will use the [Ownable](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol) pattern to selectively restrict access to certain functions.
Because messages are essentially shuttled between L1 and L2 by the messenger contracts, **the `msg.sender` you'll see when receiving one of these messages will be the messenger contract** corresponding to the layer you're on.  
In order to get around this, we added a `xDomainMessageSender` function to each messenger:  
```solidity
function xDomainMessageSender() public returns (address);
```  
If your contract has been called by one of the messenger contracts, you can use this function to see who's *actually* sending this message.
Here's how you might implement an `onlyOwner` modifier on L2:  
```solidity
modifier onlyOwner() {
require(
msg.sender == address(ovmL2CrossDomainMessenger)
&& ovmL2CrossDomainMessenger.xDomainMessageSender() == owner
);
_;
}
```"
271,What is the role of the `msg.sender` in contracts?,The `msg.sender` is used in contracts to make decisions based on the calling account. It identifies the address of the account that called the contract.,"Contracts frequently make use of `msg.sender` to make decisions based on the calling account.
For example, many contracts will use the [Ownable](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol) pattern to selectively restrict access to certain functions.
Because messages are essentially shuttled between L1 and L2 by the messenger contracts, **the `msg.sender` you'll see when receiving one of these messages will be the messenger contract** corresponding to the layer you're on.  
In order to get around this, we added a `xDomainMessageSender` function to each messenger:  
```solidity
function xDomainMessageSender() public returns (address);
```  
If your contract has been called by one of the messenger contracts, you can use this function to see who's *actually* sending this message.
Here's how you might implement an `onlyOwner` modifier on L2:  
```solidity
modifier onlyOwner() {
require(
msg.sender == address(ovmL2CrossDomainMessenger)
&& ovmL2CrossDomainMessenger.xDomainMessageSender() == owner
);
_;
}
```"
271,What is the `xDomainMessageSender` function used for?,"The `xDomainMessageSender` function is used to determine the actual sender of a message when a contract is called by one of the messenger contracts. This is necessary because the `msg.sender` in such cases will be the messenger contract itself, not the original sender.","Contracts frequently make use of `msg.sender` to make decisions based on the calling account.
For example, many contracts will use the [Ownable](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol) pattern to selectively restrict access to certain functions.
Because messages are essentially shuttled between L1 and L2 by the messenger contracts, **the `msg.sender` you'll see when receiving one of these messages will be the messenger contract** corresponding to the layer you're on.  
In order to get around this, we added a `xDomainMessageSender` function to each messenger:  
```solidity
function xDomainMessageSender() public returns (address);
```  
If your contract has been called by one of the messenger contracts, you can use this function to see who's *actually* sending this message.
Here's how you might implement an `onlyOwner` modifier on L2:  
```solidity
modifier onlyOwner() {
require(
msg.sender == address(ovmL2CrossDomainMessenger)
&& ovmL2CrossDomainMessenger.xDomainMessageSender() == owner
);
_;
}
```"
272,How is the cost of an L1 to L2 transaction determined?,"The cost of an L1 to L2 transaction is primarily determined by the gas prices on Ethereum when sending the cross-chain transaction. You send a transaction to the L1CrossDomainMessenger contract, which then sends a call to the CanonicalTransactionChain contract. The first 1.92 million gas on L2 is free, but if your transaction requires more gas, additional costs are incurred based on a 1:32 ratio of L1 gas to L2 gas.","The majority of the cost of an L1 to L2 transaction comes from sending a transaction on Ethereum.
You send a transaction to the [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/L1CrossDomainMessenger.sol)
contract, which then sends a call to the [`CanonicalTransactionChain`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/rollup/CanonicalTransactionChain.sol).
This cost is ultimately determined by gas prices on Ethereum when you're sending the cross-chain transaction.  
An L1 to L2 message is expected to trigger contract execution on L2, and that contract execution costs gas.
The first 1.92 million gas on L2 is free.
The vast majority of L1 to L2 calls spend less than the 1.92 million, so nothing further is required.  
If you think that your call might spend more than that on L2, you can specify a higher gas limit.
However, to prevent denial of service attacks, we have to impose a cost on gas limits higher than 1.92 million.
This cost is one unit of L1 gas for every 32 units of L2 gas requested beyond the free amount.  
For example, if you specify a 2.0 million gas limit in the call to `L1CrossDomainMessenger`, it will be processed this way:  
| Amount | Action  |
| ------ | ------- |
| free gas: 1.92 million   | Nothing, this gas is provided on L2 for free |
| excess gas required: 80,000 | 2,500 gas is spent on the L1 portion of the gas fee and in return 80,000 extra gas is provided to the L2 transaction. This is inline with the 1:32 ratio of gas. |  
This gas burn happens on L1 when the L1 contract calls `L1CrossDomainMessenger`.
This is before the message has been sent to the L2, and as such there is no way to know how much L2 gas will actually be used.
Therefore, the amount burned is based *only* on the gas limit specified in the L1 call.  
For example, if the call above with a gas limit of two million only takes ten thousand gas on L2, the 2,500 gas on L1 is still burned.
There is no refund.  
The parameters in the explanation above were 1.92 million and 32 at the time of writing, but they may change in the future.
To see the present values, [go to Etherscan](https://etherscan.io/address/0x5E4e65926BA27467555EB562121fac00D24E9dD2#readContract) and expand `enqueueL2GasPrepaid` for the free L2 gas amount and `l2GasDiscountDivisor` for the exchange rate at which L1 gas is burned for additional L2 gas."
272,What happens if my L1 to L2 transaction requires more than 1.92 million gas on L2?,"If your L1 to L2 transaction requires more than 1.92 million gas on L2, you can specify a higher gas limit. However, for every 32 units of L2 gas requested beyond the free 1.92 million, one unit of L1 gas is burned. This cost is incurred on L1 when the L1 contract calls L1CrossDomainMessenger, and there is no refund even if the actual L2 gas used is less than the specified limit.","The majority of the cost of an L1 to L2 transaction comes from sending a transaction on Ethereum.
You send a transaction to the [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/L1CrossDomainMessenger.sol)
contract, which then sends a call to the [`CanonicalTransactionChain`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/rollup/CanonicalTransactionChain.sol).
This cost is ultimately determined by gas prices on Ethereum when you're sending the cross-chain transaction.  
An L1 to L2 message is expected to trigger contract execution on L2, and that contract execution costs gas.
The first 1.92 million gas on L2 is free.
The vast majority of L1 to L2 calls spend less than the 1.92 million, so nothing further is required.  
If you think that your call might spend more than that on L2, you can specify a higher gas limit.
However, to prevent denial of service attacks, we have to impose a cost on gas limits higher than 1.92 million.
This cost is one unit of L1 gas for every 32 units of L2 gas requested beyond the free amount.  
For example, if you specify a 2.0 million gas limit in the call to `L1CrossDomainMessenger`, it will be processed this way:  
| Amount | Action  |
| ------ | ------- |
| free gas: 1.92 million   | Nothing, this gas is provided on L2 for free |
| excess gas required: 80,000 | 2,500 gas is spent on the L1 portion of the gas fee and in return 80,000 extra gas is provided to the L2 transaction. This is inline with the 1:32 ratio of gas. |  
This gas burn happens on L1 when the L1 contract calls `L1CrossDomainMessenger`.
This is before the message has been sent to the L2, and as such there is no way to know how much L2 gas will actually be used.
Therefore, the amount burned is based *only* on the gas limit specified in the L1 call.  
For example, if the call above with a gas limit of two million only takes ten thousand gas on L2, the 2,500 gas on L1 is still burned.
There is no refund.  
The parameters in the explanation above were 1.92 million and 32 at the time of writing, but they may change in the future.
To see the present values, [go to Etherscan](https://etherscan.io/address/0x5E4e65926BA27467555EB562121fac00D24E9dD2#readContract) and expand `enqueueL2GasPrepaid` for the free L2 gas amount and `l2GasDiscountDivisor` for the exchange rate at which L1 gas is burned for additional L2 gas."
272,Where can I find the current values for the free L2 gas amount and the L1 to L2 gas exchange rate?,You can find the current values for the free L2 gas amount and the L1 to L2 gas exchange rate on Etherscan. Expand 'enqueueL2GasPrepaid' for the free L2 gas amount and 'l2GasDiscountDivisor' for the exchange rate at which L1 gas is burned for additional L2 gas.,"The majority of the cost of an L1 to L2 transaction comes from sending a transaction on Ethereum.
You send a transaction to the [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/L1CrossDomainMessenger.sol)
contract, which then sends a call to the [`CanonicalTransactionChain`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/rollup/CanonicalTransactionChain.sol).
This cost is ultimately determined by gas prices on Ethereum when you're sending the cross-chain transaction.  
An L1 to L2 message is expected to trigger contract execution on L2, and that contract execution costs gas.
The first 1.92 million gas on L2 is free.
The vast majority of L1 to L2 calls spend less than the 1.92 million, so nothing further is required.  
If you think that your call might spend more than that on L2, you can specify a higher gas limit.
However, to prevent denial of service attacks, we have to impose a cost on gas limits higher than 1.92 million.
This cost is one unit of L1 gas for every 32 units of L2 gas requested beyond the free amount.  
For example, if you specify a 2.0 million gas limit in the call to `L1CrossDomainMessenger`, it will be processed this way:  
| Amount | Action  |
| ------ | ------- |
| free gas: 1.92 million   | Nothing, this gas is provided on L2 for free |
| excess gas required: 80,000 | 2,500 gas is spent on the L1 portion of the gas fee and in return 80,000 extra gas is provided to the L2 transaction. This is inline with the 1:32 ratio of gas. |  
This gas burn happens on L1 when the L1 contract calls `L1CrossDomainMessenger`.
This is before the message has been sent to the L2, and as such there is no way to know how much L2 gas will actually be used.
Therefore, the amount burned is based *only* on the gas limit specified in the L1 call.  
For example, if the call above with a gas limit of two million only takes ten thousand gas on L2, the 2,500 gas on L1 is still burned.
There is no refund.  
The parameters in the explanation above were 1.92 million and 32 at the time of writing, but they may change in the future.
To see the present values, [go to Etherscan](https://etherscan.io/address/0x5E4e65926BA27467555EB562121fac00D24E9dD2#readContract) and expand `enqueueL2GasPrepaid` for the free L2 gas amount and `l2GasDiscountDivisor` for the exchange rate at which L1 gas is burned for additional L2 gas."
273,How many transactions are required for a message to go from L2 to L1 in Optimism?,"Three transactions are required: an L2 transaction to initiate the process, an L1 transaction to prove the transaction, and another L1 transaction to finalize it.","Each message from L2 to L1 requires three transactions:  
1. An L2 transaction that *initiates* the transaction, which is priced the same as any other transaction made on OP Mainnet.  
1. An L1 transaction that *proves* the transaction.
This transaction can only be submitted after the state root is submitted to L1.
This transaction is expensive because it includes verifying a [Merkle trie](https://eth.wiki/fundamentals/patricia-tree) inclusion proof.  
1. An L1 transaction that *finalizes* the transaction.
This transaction can only be submitted after the transaction challenge period (7 days on mainnet) has passed.  
The total cost of an L2 to L1 transaction is therefore the combined cost of the L2 initialization transaction and the two L1 transactions.
The L1 proof and finalization transactions are typically significantly more expensive than the L2 initialization transaction."
273,Why is the L1 proof transaction considered expensive?,"The L1 proof transaction is expensive because it includes verifying a Merkle trie inclusion proof, which is a computationally intensive process.","Each message from L2 to L1 requires three transactions:  
1. An L2 transaction that *initiates* the transaction, which is priced the same as any other transaction made on OP Mainnet.  
1. An L1 transaction that *proves* the transaction.
This transaction can only be submitted after the state root is submitted to L1.
This transaction is expensive because it includes verifying a [Merkle trie](https://eth.wiki/fundamentals/patricia-tree) inclusion proof.  
1. An L1 transaction that *finalizes* the transaction.
This transaction can only be submitted after the transaction challenge period (7 days on mainnet) has passed.  
The total cost of an L2 to L1 transaction is therefore the combined cost of the L2 initialization transaction and the two L1 transactions.
The L1 proof and finalization transactions are typically significantly more expensive than the L2 initialization transaction."
273,What is the transaction challenge period for finalizing an L2 to L1 transaction on Optimism?,The transaction challenge period for finalizing an L2 to L1 transaction on Optimism is 7 days on the mainnet.,"Each message from L2 to L1 requires three transactions:  
1. An L2 transaction that *initiates* the transaction, which is priced the same as any other transaction made on OP Mainnet.  
1. An L1 transaction that *proves* the transaction.
This transaction can only be submitted after the state root is submitted to L1.
This transaction is expensive because it includes verifying a [Merkle trie](https://eth.wiki/fundamentals/patricia-tree) inclusion proof.  
1. An L1 transaction that *finalizes* the transaction.
This transaction can only be submitted after the transaction challenge period (7 days on mainnet) has passed.  
The total cost of an L2 to L1 transaction is therefore the combined cost of the L2 initialization transaction and the two L1 transactions.
The L1 proof and finalization transactions are typically significantly more expensive than the L2 initialization transaction."
274,Why do messages sent from Layer 2 to Layer 1 take a week to be relayed?,Messages sent from Layer 2 to Layer 1 take a week to be relayed because of the 'challenge period.' This period allows anyone to re-execute the transaction on Ethereum to prove if the published result is incorrect. This helps ensure the integrity and correctness of the transaction results.,"One of the most important things to understand about L1 ‚áî L2 interaction is that **mainnet messages sent from Layer 2 to Layer 1 cannot be relayed for at least one week**.
This means that any messages you send from Layer 2 will only be received on Layer 1 after this one week period has elapsed.
We call this period of time the ""challenge period"" because it is the time during which a transaction can be challenged with a [fault proof](../../protocol/2-rollup-protocol.md#fault-proofs).  
Optimistic Rollups are ""optimistic"" because they're based around the idea of publishing the *result* of a transaction to Ethereum without actually executing the transaction on Ethereum.
In the ""optimistic"" case, this transaction result is correct and we can completely avoid the need to perform complicated (and expensive) logic on Ethereum.
Cheap transactions, yay!  
However, we still need some way to prevent incorrect transaction results from being published in place of correct ones.
Here's where the ""fault proof"" comes into play.
Whenever a transaction result is published, it's considered ""pending"" for a period of time known as the challenge period.
During this period of time, anyone may re-execute the transaction *on Ethereum* in an attempt to demonstrate that the published result was incorrect.  
If someone is able prove that a transaction result is faulty, then the result is scrubbed from existence and anyone can publish another result in its place (hopefully the correct one this time, financial punishments make faulty results *very* costly for their publishers).
Once the window for a given transaction result has fully passed without a challenge the result can be considered fully valid (or else someone would've challenged it).  
Anyway, the point here is that **you don't want to be making decisions about Layer 2 transaction results from inside a smart contract on Layer 1 until this challenge period has elapsed**.
Otherwise you might be making decisions based on an invalid transaction result.
As a result, L2 ‚áí L1 messages sent using the standard messenger contracts cannot be relayed until they've waited out the full challenge period.  
::: tip On the length of the challenge period
We've set the challenge period to be exactly seven days on the OP Mainnet.
We believe this is a reasonable balance between security and usability, with an emphasis on increased security to start. Testnet messages sent from Layer 2 to Layer 1 have a much shorter period of 5 minutes to prove and 1 minute to withdraw.  
We're open to changing the length of the window as long as we feel this can be done without significantly reducing the security of the system.
If you're strongly opinionated about this, we recommend [opening an issue on GitHub](https://github.com/ethereum-optimism/optimism/issues) explaining your position.
We *will* hear you out!
:::"
274,What is the purpose of the challenge period in Optimistic Rollups?,"The challenge period in Optimistic Rollups serves to prevent incorrect transaction results from being published. During this period, anyone can re-execute the transaction on Ethereum to demonstrate that the published result is incorrect. If proven faulty, the result is discarded, and a correct result can be published instead.","One of the most important things to understand about L1 ‚áî L2 interaction is that **mainnet messages sent from Layer 2 to Layer 1 cannot be relayed for at least one week**.
This means that any messages you send from Layer 2 will only be received on Layer 1 after this one week period has elapsed.
We call this period of time the ""challenge period"" because it is the time during which a transaction can be challenged with a [fault proof](../../protocol/2-rollup-protocol.md#fault-proofs).  
Optimistic Rollups are ""optimistic"" because they're based around the idea of publishing the *result* of a transaction to Ethereum without actually executing the transaction on Ethereum.
In the ""optimistic"" case, this transaction result is correct and we can completely avoid the need to perform complicated (and expensive) logic on Ethereum.
Cheap transactions, yay!  
However, we still need some way to prevent incorrect transaction results from being published in place of correct ones.
Here's where the ""fault proof"" comes into play.
Whenever a transaction result is published, it's considered ""pending"" for a period of time known as the challenge period.
During this period of time, anyone may re-execute the transaction *on Ethereum* in an attempt to demonstrate that the published result was incorrect.  
If someone is able prove that a transaction result is faulty, then the result is scrubbed from existence and anyone can publish another result in its place (hopefully the correct one this time, financial punishments make faulty results *very* costly for their publishers).
Once the window for a given transaction result has fully passed without a challenge the result can be considered fully valid (or else someone would've challenged it).  
Anyway, the point here is that **you don't want to be making decisions about Layer 2 transaction results from inside a smart contract on Layer 1 until this challenge period has elapsed**.
Otherwise you might be making decisions based on an invalid transaction result.
As a result, L2 ‚áí L1 messages sent using the standard messenger contracts cannot be relayed until they've waited out the full challenge period.  
::: tip On the length of the challenge period
We've set the challenge period to be exactly seven days on the OP Mainnet.
We believe this is a reasonable balance between security and usability, with an emphasis on increased security to start. Testnet messages sent from Layer 2 to Layer 1 have a much shorter period of 5 minutes to prove and 1 minute to withdraw.  
We're open to changing the length of the window as long as we feel this can be done without significantly reducing the security of the system.
If you're strongly opinionated about this, we recommend [opening an issue on GitHub](https://github.com/ethereum-optimism/optimism/issues) explaining your position.
We *will* hear you out!
:::"
274,Can the length of the challenge period be changed?,"Yes, the length of the challenge period can be changed. Currently, it is set to seven days on the OP Mainnet for a balance between security and usability. However, the team is open to changing this period if it can be done without significantly reducing the system's security. Users can express their opinions on this by opening an issue on GitHub.","One of the most important things to understand about L1 ‚áî L2 interaction is that **mainnet messages sent from Layer 2 to Layer 1 cannot be relayed for at least one week**.
This means that any messages you send from Layer 2 will only be received on Layer 1 after this one week period has elapsed.
We call this period of time the ""challenge period"" because it is the time during which a transaction can be challenged with a [fault proof](../../protocol/2-rollup-protocol.md#fault-proofs).  
Optimistic Rollups are ""optimistic"" because they're based around the idea of publishing the *result* of a transaction to Ethereum without actually executing the transaction on Ethereum.
In the ""optimistic"" case, this transaction result is correct and we can completely avoid the need to perform complicated (and expensive) logic on Ethereum.
Cheap transactions, yay!  
However, we still need some way to prevent incorrect transaction results from being published in place of correct ones.
Here's where the ""fault proof"" comes into play.
Whenever a transaction result is published, it's considered ""pending"" for a period of time known as the challenge period.
During this period of time, anyone may re-execute the transaction *on Ethereum* in an attempt to demonstrate that the published result was incorrect.  
If someone is able prove that a transaction result is faulty, then the result is scrubbed from existence and anyone can publish another result in its place (hopefully the correct one this time, financial punishments make faulty results *very* costly for their publishers).
Once the window for a given transaction result has fully passed without a challenge the result can be considered fully valid (or else someone would've challenged it).  
Anyway, the point here is that **you don't want to be making decisions about Layer 2 transaction results from inside a smart contract on Layer 1 until this challenge period has elapsed**.
Otherwise you might be making decisions based on an invalid transaction result.
As a result, L2 ‚áí L1 messages sent using the standard messenger contracts cannot be relayed until they've waited out the full challenge period.  
::: tip On the length of the challenge period
We've set the challenge period to be exactly seven days on the OP Mainnet.
We believe this is a reasonable balance between security and usability, with an emphasis on increased security to start. Testnet messages sent from Layer 2 to Layer 1 have a much shorter period of 5 minutes to prove and 1 minute to withdraw.  
We're open to changing the length of the window as long as we feel this can be done without significantly reducing the security of the system.
If you're strongly opinionated about this, we recommend [opening an issue on GitHub](https://github.com/ethereum-optimism/optimism/issues) explaining your position.
We *will* hear you out!
:::"
275,How can I transfer ETH and ERC20 tokens between Layer 1 and Layer 2 networks?,"You can use the Standard Bridge to transfer ETH and ERC20 tokens between Layer 1 (L1) and Layer 2 (L2) networks. The Standard Bridge makes it easy to move these assets by depositing and locking tokens on L1 in exchange for the same amount of equivalent tokens on L2, and vice versa.","---
title: Using the Standard Bridge
lang: en-US
---  
Certain interactions, like transferring ETH and ERC20 tokens between the two networks, are common enough that we've built the ""Standard Bridge"" to make moving these assets between L1 and L2 as easy as possible.  
The standard bridge functionality provides a method for an ERC20 token to be deposited and locked on L1 in exchange of the same amount of an equivalent token on L2. This process is known as ""bridging a token"", e.g. depositing 100 USDC on L1 in exchange for 100 USDC on L2 and also the reverse - withdrawing 100 USDC on L2 in exchange for the same amount on L1. In addition to bridging tokens the standard bridge is also used for ETH.  
The Standard Bridge is composed of two main contracts the [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol) (for Layer 1) and the [`L2StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol) (for Layer 2). The contract addresses can be found [here](../../useful-tools/networks/#contract-addresses).  
Here we'll go over the basics of using this bridge to move ERC20 assets between Layer 1 and Layer 2.  
::: tip
[See here for a step by step tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20)
:::"
275,What are the main components of the Standard Bridge?,The Standard Bridge is composed of two main contracts: the L1StandardBridge for Layer 1 and the L2StandardBridge for Layer 2. These contracts handle the process of bridging tokens between the two layers.,"---
title: Using the Standard Bridge
lang: en-US
---  
Certain interactions, like transferring ETH and ERC20 tokens between the two networks, are common enough that we've built the ""Standard Bridge"" to make moving these assets between L1 and L2 as easy as possible.  
The standard bridge functionality provides a method for an ERC20 token to be deposited and locked on L1 in exchange of the same amount of an equivalent token on L2. This process is known as ""bridging a token"", e.g. depositing 100 USDC on L1 in exchange for 100 USDC on L2 and also the reverse - withdrawing 100 USDC on L2 in exchange for the same amount on L1. In addition to bridging tokens the standard bridge is also used for ETH.  
The Standard Bridge is composed of two main contracts the [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol) (for Layer 1) and the [`L2StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol) (for Layer 2). The contract addresses can be found [here](../../useful-tools/networks/#contract-addresses).  
Here we'll go over the basics of using this bridge to move ERC20 assets between Layer 1 and Layer 2.  
::: tip
[See here for a step by step tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20)
:::"
275,Where can I find a step-by-step tutorial for using the Standard Bridge?,You can find a step-by-step tutorial for using the Standard Bridge to move ERC20 assets between Layer 1 and Layer 2 [here](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20).,"---
title: Using the Standard Bridge
lang: en-US
---  
Certain interactions, like transferring ETH and ERC20 tokens between the two networks, are common enough that we've built the ""Standard Bridge"" to make moving these assets between L1 and L2 as easy as possible.  
The standard bridge functionality provides a method for an ERC20 token to be deposited and locked on L1 in exchange of the same amount of an equivalent token on L2. This process is known as ""bridging a token"", e.g. depositing 100 USDC on L1 in exchange for 100 USDC on L2 and also the reverse - withdrawing 100 USDC on L2 in exchange for the same amount on L1. In addition to bridging tokens the standard bridge is also used for ETH.  
The Standard Bridge is composed of two main contracts the [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol) (for Layer 1) and the [`L2StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol) (for Layer 2). The contract addresses can be found [here](../../useful-tools/networks/#contract-addresses).  
Here we'll go over the basics of using this bridge to move ERC20 assets between Layer 1 and Layer 2.  
::: tip
[See here for a step by step tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20)
:::"
276,Can I use a smart contract wallet to deposit ETH on OP Mainnet?,"Currently, smart contract wallets are blocked from calling the `depositETH` function on OP Mainnet. However, you can use the `depositETHTo` function if you know what you're doing.","::: warning NOTICE
We're working hard to get more smart contract wallet software deployed and tested on OP Mainnet.
However, as a safety measure, **we currently block smart contract wallets from calling the `depositETH` and `depositERC20` functions**.
If you want to deposit using a smart contract wallet and you know what you're doing, you can use the `depositETHTo` and `depositERC20To` functions instead.
:::"
276,Are there any restrictions on depositing ERC20 tokens using a smart contract wallet on OP Mainnet?,"Yes, smart contract wallets are blocked from calling the `depositERC20` function on OP Mainnet. You can use the `depositERC20To` function instead if you are familiar with the process.","::: warning NOTICE
We're working hard to get more smart contract wallet software deployed and tested on OP Mainnet.
However, as a safety measure, **we currently block smart contract wallets from calling the `depositETH` and `depositERC20` functions**.
If you want to deposit using a smart contract wallet and you know what you're doing, you can use the `depositETHTo` and `depositERC20To` functions instead.
:::"
276,Why are smart contract wallets blocked from calling certain deposit functions on OP Mainnet?,"As a safety measure, smart contract wallets are currently blocked from calling the `depositETH` and `depositERC20` functions to ensure the security and stability of the network while more smart contract wallet software is being deployed and tested.","::: warning NOTICE
We're working hard to get more smart contract wallet software deployed and tested on OP Mainnet.
However, as a safety measure, **we currently block smart contract wallets from calling the `depositETH` and `depositERC20` functions**.
If you want to deposit using a smart contract wallet and you know what you're doing, you can use the `depositETHTo` and `depositERC20To` functions instead.
:::"
277,How can I deposit ERC20 tokens into Optimism Layer 2?,"You can deposit ERC20 tokens into Optimism Layer 2 using the `depositERC20` and `depositERC20To` functions on the L1StandardBridge. However, you must first approve the Standard Token Bridge to use the amount of tokens you want to deposit, or the deposit will fail.","ERC20 deposits into L2 can be triggered via the `depositERC20` and `depositERC20To` functions on the [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol#L145-L205).
You **must** approve the Standard Token Bridge to use the amount of tokens that you want to deposit or the deposit will fail.  
Note that the bridge does *not* support certain ERC-20 configurations:  
- [Fee on transfer tokens](https://github.com/d-xo/weird-erc20#fee-on-transfer)
- [Tokens that modify balances without emitting a Transfer event](https://github.com/d-xo/weird-erc20#balance-modifications-outside-of-transfers-rebasingairdrops)  
::: danger Use the standard bridge contract only with standard bridge tokens
The standard bridge can only be used with tokens that have a properly configured ERC-20 version on OP Mainnet.
If you send any other type of token to the standard bridge directly (not using the user interface or the API), it gets stuck there and you lose that value.  
Note that if you use the [OP Mainnet bridge UI](https://app.optimism.io/bridge), or the [Optimism SDK](../../sdk/js-client.md) it automatically chooses the correct bridge contract, so this problem does not happen.  
There are two ways to check if a token can use the standard bridge:  
1. Look in [the token list](https://static.optimism.io/optimism.tokenlist.json).
If a token can use the standard bridge, then the `""chainId"": 10` entry will have the standard L2 bridge address, `0x4200..0010`. For example, this entry shows that on OP Mainnet `0xBTC` can use the standard bridge.  
```json
{
""chainId"": 10,
""address"": ""0xe0BB0D3DE8c10976511e5030cA403dBf4c25165B"",
""name"": ""0xBitcoin"",
""symbol"": ""0xBTC"",
""decimals"": 8,
""logoURI"": ""https://ethereum-optimism.github.io/data/0xBTC/logo.png"",
""extensions"": {
""optimismBridgeAddress"": ""0x4200000000000000000000000000000000000010""
}
},
```  
If the token exists in the token list but does not use the standard bridge, the `extensions.optimismBridgeAddress` value is different. For example, this entry shows that on OP Mainnet `DAI` uses a different bridge:  
```json
{
""chainId"": 10,
""address"": ""0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1"",
""name"": ""Dai stable coin"",
""symbol"": ""DAI"",
""decimals"": 18,
""logoURI"": ""https://ethereum-optimism.github.io/data/DAI/logo.svg"",
""extensions"": {
""optimismBridgeAddress"": ""0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65""
}
},
```  
1. You can ""ask"" the L2 token contract by calling it.
ERC-20 tokens that can use the standard bridge not only if they:
- Have an `l2Bridge` method
- That method returns `0x4200...0010`.  
For example, [this link](https://optimistic.etherscan.io/address/0xe0bb0d3de8c10976511e5030ca403dbf4c25165b#readContract#F5) can be used to see that `0xBTC` uses the standard bridge.  
Note that you cannot query the L1 token contract the same way.
L2 contracts know the identity of their L1 counterpart, but L1 contracts only need to implement the standard ERC-20 methods.  
:::"
277,Are there any ERC20 tokens that are not supported by the Optimism bridge?,"Yes, the Optimism bridge does not support certain ERC20 configurations, such as fee on transfer tokens and tokens that modify balances without emitting a Transfer event. It's important to use the standard bridge contract only with tokens that have a properly configured ERC-20 version on OP Mainnet.","ERC20 deposits into L2 can be triggered via the `depositERC20` and `depositERC20To` functions on the [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol#L145-L205).
You **must** approve the Standard Token Bridge to use the amount of tokens that you want to deposit or the deposit will fail.  
Note that the bridge does *not* support certain ERC-20 configurations:  
- [Fee on transfer tokens](https://github.com/d-xo/weird-erc20#fee-on-transfer)
- [Tokens that modify balances without emitting a Transfer event](https://github.com/d-xo/weird-erc20#balance-modifications-outside-of-transfers-rebasingairdrops)  
::: danger Use the standard bridge contract only with standard bridge tokens
The standard bridge can only be used with tokens that have a properly configured ERC-20 version on OP Mainnet.
If you send any other type of token to the standard bridge directly (not using the user interface or the API), it gets stuck there and you lose that value.  
Note that if you use the [OP Mainnet bridge UI](https://app.optimism.io/bridge), or the [Optimism SDK](../../sdk/js-client.md) it automatically chooses the correct bridge contract, so this problem does not happen.  
There are two ways to check if a token can use the standard bridge:  
1. Look in [the token list](https://static.optimism.io/optimism.tokenlist.json).
If a token can use the standard bridge, then the `""chainId"": 10` entry will have the standard L2 bridge address, `0x4200..0010`. For example, this entry shows that on OP Mainnet `0xBTC` can use the standard bridge.  
```json
{
""chainId"": 10,
""address"": ""0xe0BB0D3DE8c10976511e5030cA403dBf4c25165B"",
""name"": ""0xBitcoin"",
""symbol"": ""0xBTC"",
""decimals"": 8,
""logoURI"": ""https://ethereum-optimism.github.io/data/0xBTC/logo.png"",
""extensions"": {
""optimismBridgeAddress"": ""0x4200000000000000000000000000000000000010""
}
},
```  
If the token exists in the token list but does not use the standard bridge, the `extensions.optimismBridgeAddress` value is different. For example, this entry shows that on OP Mainnet `DAI` uses a different bridge:  
```json
{
""chainId"": 10,
""address"": ""0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1"",
""name"": ""Dai stable coin"",
""symbol"": ""DAI"",
""decimals"": 18,
""logoURI"": ""https://ethereum-optimism.github.io/data/DAI/logo.svg"",
""extensions"": {
""optimismBridgeAddress"": ""0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65""
}
},
```  
1. You can ""ask"" the L2 token contract by calling it.
ERC-20 tokens that can use the standard bridge not only if they:
- Have an `l2Bridge` method
- That method returns `0x4200...0010`.  
For example, [this link](https://optimistic.etherscan.io/address/0xe0bb0d3de8c10976511e5030ca403dbf4c25165b#readContract#F5) can be used to see that `0xBTC` uses the standard bridge.  
Note that you cannot query the L1 token contract the same way.
L2 contracts know the identity of their L1 counterpart, but L1 contracts only need to implement the standard ERC-20 methods.  
:::"
277,How can I check if a token can use the standard bridge on Optimism?,"There are two ways to check if a token can use the standard bridge: 1) Look in the token list at https://static.optimism.io/optimism.tokenlist.json. If a token can use the standard bridge, the 'chainId': 10 entry will have the standard L2 bridge address, 0x4200..0010. 2) You can 'ask' the L2 token contract by calling it. ERC-20 tokens that can use the standard bridge will have an `l2Bridge` method that returns 0x4200...0010.","ERC20 deposits into L2 can be triggered via the `depositERC20` and `depositERC20To` functions on the [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol#L145-L205).
You **must** approve the Standard Token Bridge to use the amount of tokens that you want to deposit or the deposit will fail.  
Note that the bridge does *not* support certain ERC-20 configurations:  
- [Fee on transfer tokens](https://github.com/d-xo/weird-erc20#fee-on-transfer)
- [Tokens that modify balances without emitting a Transfer event](https://github.com/d-xo/weird-erc20#balance-modifications-outside-of-transfers-rebasingairdrops)  
::: danger Use the standard bridge contract only with standard bridge tokens
The standard bridge can only be used with tokens that have a properly configured ERC-20 version on OP Mainnet.
If you send any other type of token to the standard bridge directly (not using the user interface or the API), it gets stuck there and you lose that value.  
Note that if you use the [OP Mainnet bridge UI](https://app.optimism.io/bridge), or the [Optimism SDK](../../sdk/js-client.md) it automatically chooses the correct bridge contract, so this problem does not happen.  
There are two ways to check if a token can use the standard bridge:  
1. Look in [the token list](https://static.optimism.io/optimism.tokenlist.json).
If a token can use the standard bridge, then the `""chainId"": 10` entry will have the standard L2 bridge address, `0x4200..0010`. For example, this entry shows that on OP Mainnet `0xBTC` can use the standard bridge.  
```json
{
""chainId"": 10,
""address"": ""0xe0BB0D3DE8c10976511e5030cA403dBf4c25165B"",
""name"": ""0xBitcoin"",
""symbol"": ""0xBTC"",
""decimals"": 8,
""logoURI"": ""https://ethereum-optimism.github.io/data/0xBTC/logo.png"",
""extensions"": {
""optimismBridgeAddress"": ""0x4200000000000000000000000000000000000010""
}
},
```  
If the token exists in the token list but does not use the standard bridge, the `extensions.optimismBridgeAddress` value is different. For example, this entry shows that on OP Mainnet `DAI` uses a different bridge:  
```json
{
""chainId"": 10,
""address"": ""0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1"",
""name"": ""Dai stable coin"",
""symbol"": ""DAI"",
""decimals"": 18,
""logoURI"": ""https://ethereum-optimism.github.io/data/DAI/logo.svg"",
""extensions"": {
""optimismBridgeAddress"": ""0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65""
}
},
```  
1. You can ""ask"" the L2 token contract by calling it.
ERC-20 tokens that can use the standard bridge not only if they:
- Have an `l2Bridge` method
- That method returns `0x4200...0010`.  
For example, [this link](https://optimistic.etherscan.io/address/0xe0bb0d3de8c10976511e5030ca403dbf4c25165b#readContract#F5) can be used to see that `0xBTC` uses the standard bridge.  
Note that you cannot query the L1 token contract the same way.
L2 contracts know the identity of their L1 counterpart, but L1 contracts only need to implement the standard ERC-20 methods.  
:::"
278,How can I deposit ETH into L2 on Optimism?,"You can deposit ETH into L2 on Optimism by using the `depositETH` and `depositETHTo` functions on the `L1StandardBridge`. Alternatively, you can also deposit ETH by sending it directly to the `L1StandardBridge`.","ETH deposits into L2 can be triggered via the `depositETH` and `depositETHTo` functions on the [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol#L110-L143).
ETH deposits can alternatively be triggered by sending ETH directly to the `L1StandardBridge`.
Once your deposit is detected and finalized on OP Mainnet, your account will be funded with the corresponding amount of ETH on L2."
278,What happens after I deposit ETH into L2 on Optimism?,"Once your deposit is detected and finalized on the OP Mainnet, your account will be funded with the corresponding amount of ETH on L2.","ETH deposits into L2 can be triggered via the `depositETH` and `depositETHTo` functions on the [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol#L110-L143).
ETH deposits can alternatively be triggered by sending ETH directly to the `L1StandardBridge`.
Once your deposit is detected and finalized on OP Mainnet, your account will be funded with the corresponding amount of ETH on L2."
279,What's the difference between USDC and USDC.e on the OP Mainnet?,"USDC is the native USDC issued by Circle and is considered the official form of USDC for the ecosystem. USDC.e, on the other hand, is bridged USDC from Ethereum. They are different token contracts, and it's important to use the correct one to avoid issues.","USDC issued by Circle will be native to OP Mainnet and can be considered the official form of USDC for the ecosystem. Over time, native USDC liquidity may grow and replace the currently circulating bridged USDC liquidity that comes from Ethereum.  
::: danger USDC.e vs USDC  
These are different token contracts. If you're using `depositERC20` or `depositERC20To` make sure you're bridging to the correct destination address. Mixing up the mapping will result in your assets being stuck in the bridge.
:::  
| Token Symbol  | Description | Token Address |
| - | - | - |
| `USDC.e`| Bridged USDC from Ethereum   | [0x7f5c764cbc14f9669b88837ca1490cca17c31607](https://optimistic.etherscan.io/token/0x7f5c764cbc14f9669b88837ca1490cca17c31607) |
| `USDC`| Native USDC issued by Circle   | [0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85](https://optimistic.etherscan.io/token/0x0b2c639c533813f4aa9d7837caf62653d097ff85) |"
279,Why is it important to know the difference between USDC and USDC.e when using deposit functions?,It's important because using the wrong token contract address when bridging can result in your assets being stuck in the bridge. You need to ensure you're bridging to the correct destination address for either USDC or USDC.e.,"USDC issued by Circle will be native to OP Mainnet and can be considered the official form of USDC for the ecosystem. Over time, native USDC liquidity may grow and replace the currently circulating bridged USDC liquidity that comes from Ethereum.  
::: danger USDC.e vs USDC  
These are different token contracts. If you're using `depositERC20` or `depositERC20To` make sure you're bridging to the correct destination address. Mixing up the mapping will result in your assets being stuck in the bridge.
:::  
| Token Symbol  | Description | Token Address |
| - | - | - |
| `USDC.e`| Bridged USDC from Ethereum   | [0x7f5c764cbc14f9669b88837ca1490cca17c31607](https://optimistic.etherscan.io/token/0x7f5c764cbc14f9669b88837ca1490cca17c31607) |
| `USDC`| Native USDC issued by Circle   | [0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85](https://optimistic.etherscan.io/token/0x0b2c639c533813f4aa9d7837caf62653d097ff85) |"
279,Will native USDC liquidity replace bridged USDC liquidity over time?,"Yes, over time, native USDC liquidity is expected to grow and replace the currently circulating bridged USDC liquidity that comes from Ethereum.","USDC issued by Circle will be native to OP Mainnet and can be considered the official form of USDC for the ecosystem. Over time, native USDC liquidity may grow and replace the currently circulating bridged USDC liquidity that comes from Ethereum.  
::: danger USDC.e vs USDC  
These are different token contracts. If you're using `depositERC20` or `depositERC20To` make sure you're bridging to the correct destination address. Mixing up the mapping will result in your assets being stuck in the bridge.
:::  
| Token Symbol  | Description | Token Address |
| - | - | - |
| `USDC.e`| Bridged USDC from Ethereum   | [0x7f5c764cbc14f9669b88837ca1490cca17c31607](https://optimistic.etherscan.io/token/0x7f5c764cbc14f9669b88837ca1490cca17c31607) |
| `USDC`| Native USDC issued by Circle   | [0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85](https://optimistic.etherscan.io/token/0x0b2c639c533813f4aa9d7837caf62653d097ff85) |"
280,How can I trigger ERC20 withdrawals on Optimism?,ERC20 withdrawals can be triggered via the `withdraw` or `withdrawTo` functions on the `L2StandardBridge` contract.,"ERC20 withdrawals can be triggered via the `withdraw` or `withdrawTo` functions on the [`L2StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol).
If you'd like to see this contracts in action, you should check out the [L1 ‚áî L2 deposit-and-withdraw example](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20)."
280,Where can I find an example of how to use the L2StandardBridge contract for deposits and withdrawals?,You can check out the L1 ‚áî L2 deposit-and-withdraw example on the Optimism GitHub repository.,"ERC20 withdrawals can be triggered via the `withdraw` or `withdrawTo` functions on the [`L2StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol).
If you'd like to see this contracts in action, you should check out the [L1 ‚áî L2 deposit-and-withdraw example](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20)."
281,How do I withdraw ETH on L2 in Optimism?,"Unlike on L1, there is no separate function for withdrawing ETH on L2. Instead, you can use the `withdraw` or `withdrawTo` functions on the `L2StandardBridge` and use the address `0xDeadDeAddeAddEAddeadDEaDDEAdDeaDDeAD0000` as the L2 token address.","Unlike on L1, we do not have a separate function on L2 for withdrawing ETH.
Instead, you can use the `withdraw` or `withdrawTo` functions on the [`L2StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol) and use the address `0xDeadDeAddeAddEAddeadDEaDDEAdDeaDDeAD0000` as the L2 token address."
281,What address should I use as the L2 token address when withdrawing ETH on Optimism?,You should use the address `0xDeadDeAddeAddEAddeadDEaDDEAdDeaDDeAD0000` as the L2 token address when using the `withdraw` or `withdrawTo` functions on the `L2StandardBridge`.,"Unlike on L1, we do not have a separate function on L2 for withdrawing ETH.
Instead, you can use the `withdraw` or `withdrawTo` functions on the [`L2StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol) and use the address `0xDeadDeAddeAddEAddeadDEaDDEAdDeaDDeAD0000` as the L2 token address."
282,How can I add my token to the standard bridge on Optimism?,"To add your token to the standard bridge on Optimism, you can follow the guide titled 'Adding an ERC20 token to the Standard Bridge' available on the Optimism GitHub repository.","::: tip
To add your token to the standard bridge, see the guide [Adding an ERC20 token to the Standard Bridge](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-standard-token).
:::"
283,How can I add my token to the Superchain token list?,"To add your token to the Superchain token list, you need to make a pull request against the Superchain token list repository. You'll need the addresses for both the L1 and L2 tokens, as well as a logo for the token. You can follow an example pull request for guidance.","The Standard bridge allows a one-to-many mapping between L1 and L2 tokens, meaning that there can be many OP Mainnet implementations of an L1 token.
However there is always a one-to-one mapping between L1 and L2 tokens in the [Superchain token list](https://github.com/ethereum-optimism/ethereum-optimism.github.io/blob/master/optimism.tokenlist.json).
The Superchain token list is used as the source of truth for the [OP Mainnet bridge UI](https://app.optimism.io/bridge/deposit) which is the main portal for moving assets between Layer 1 and Layer 2.  
If you want to have your token added to the Superchain token list, you must make a pull request against the [Superchain token list repository](https://github.com/ethereum-optimism/ethereum-optimism.github.io#adding-a-token-to-the-list).
You'll need the addresses for both the L1 and L2 tokens, as well as a logo for the token.
If you're looking for an example to follow, take a look at [this simple pull request that adds a token to the token list](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/319/files)."
283,What is the main portal for moving assets between Layer 1 and Layer 2 on Optimism?,"The main portal for moving assets between Layer 1 and Layer 2 on Optimism is the OP Mainnet bridge UI, which can be accessed at https://app.optimism.io/bridge/deposit.","The Standard bridge allows a one-to-many mapping between L1 and L2 tokens, meaning that there can be many OP Mainnet implementations of an L1 token.
However there is always a one-to-one mapping between L1 and L2 tokens in the [Superchain token list](https://github.com/ethereum-optimism/ethereum-optimism.github.io/blob/master/optimism.tokenlist.json).
The Superchain token list is used as the source of truth for the [OP Mainnet bridge UI](https://app.optimism.io/bridge/deposit) which is the main portal for moving assets between Layer 1 and Layer 2.  
If you want to have your token added to the Superchain token list, you must make a pull request against the [Superchain token list repository](https://github.com/ethereum-optimism/ethereum-optimism.github.io#adding-a-token-to-the-list).
You'll need the addresses for both the L1 and L2 tokens, as well as a logo for the token.
If you're looking for an example to follow, take a look at [this simple pull request that adds a token to the token list](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/319/files)."
283,Is there a one-to-one mapping between L1 and L2 tokens in the Superchain token list?,"Yes, there is always a one-to-one mapping between L1 and L2 tokens in the Superchain token list.","The Standard bridge allows a one-to-many mapping between L1 and L2 tokens, meaning that there can be many OP Mainnet implementations of an L1 token.
However there is always a one-to-one mapping between L1 and L2 tokens in the [Superchain token list](https://github.com/ethereum-optimism/ethereum-optimism.github.io/blob/master/optimism.tokenlist.json).
The Superchain token list is used as the source of truth for the [OP Mainnet bridge UI](https://app.optimism.io/bridge/deposit) which is the main portal for moving assets between Layer 1 and Layer 2.  
If you want to have your token added to the Superchain token list, you must make a pull request against the [Superchain token list repository](https://github.com/ethereum-optimism/ethereum-optimism.github.io#adding-a-token-to-the-list).
You'll need the addresses for both the L1 and L2 tokens, as well as a logo for the token.
If you're looking for an example to follow, take a look at [this simple pull request that adds a token to the token list](https://github.com/ethereum-optimism/ethereum-optimism.github.io/pull/319/files)."
284,How does the cost of using a decentralized application on OP Mainnet compare to using one on L1 Ethereum?,The cost of using a decentralized application on OP Mainnet is much lower than the cost of using the equivalent application on L1 Ethereum.,"---
title: Making OP Mainnet Dapps Even Cheaper
lang: en-US
---  
The cost of using a decentralized application in OP Mainnet is much lower than the cost of the equivalent application on L1 Ethereum.
[See here](https://l2fees.info/) for the current values.
However, with proper optimization, we can make our decentralized applications even cheaper.
Here are some strategies."
284,Can the cost of using decentralized applications on OP Mainnet be reduced further?,"Yes, with proper optimization, we can make our decentralized applications even cheaper on OP Mainnet.","---
title: Making OP Mainnet Dapps Even Cheaper
lang: en-US
---  
The cost of using a decentralized application in OP Mainnet is much lower than the cost of the equivalent application on L1 Ethereum.
[See here](https://l2fees.info/) for the current values.
However, with proper optimization, we can make our decentralized applications even cheaper.
Here are some strategies."
284,Where can I find the current cost values for using decentralized applications on OP Mainnet?,You can find the current cost values for using decentralized applications on OP Mainnet at [this link](https://l2fees.info/).,"---
title: Making OP Mainnet Dapps Even Cheaper
lang: en-US
---  
The cost of using a decentralized application in OP Mainnet is much lower than the cost of the equivalent application on L1 Ethereum.
[See here](https://l2fees.info/) for the current values.
However, with proper optimization, we can make our decentralized applications even cheaper.
Here are some strategies."
285,How can I optimize my contracts for the OP Mainnet environment?,"To optimize your contracts for the OP Mainnet environment, you need to understand some basic concepts specific to this environment. The documentation provides an introduction to these concepts to help you get started.",This is a basic introduction into some of the concepts you need to understand to fully optimise your contracts in the OP Mainnet environment.
286,How is the cost of an L2 transaction on OP Mainnet determined?,"The cost of an L2 transaction on OP Mainnet is composed of two components: the L2 execution fee, which is proportional to the gas actually used in processing the transaction, and the L1 data fee, which is proportional to the gas cost of writing the transaction's data to L1 and the cost of gas on L1.","The cost of an L2 transaction on OP Mainnet is composed of two components:  
- L2 execution fee, which is proportional to the gas actually used in processing the transaction.  
- L1 data fee, which is proportional to:
- The gas cost of writing the transaction's data to L1 (roughly equal to the transaction's length)
- The cost of gas on L1.
The cost of gas on L1 can be extremely volatile.  
To view the current gas costs as a user, [see here](https://optimism.io/gas-tracker). To retrieve them programatically, [see here](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).  
For a more in depth look at how transaction fees are calculated see our [fee documentation](transaction-fees.md)."
286,Why can the cost of gas on L1 be unpredictable?,"The cost of gas on L1 can be extremely volatile, meaning it can change rapidly and unpredictably.","The cost of an L2 transaction on OP Mainnet is composed of two components:  
- L2 execution fee, which is proportional to the gas actually used in processing the transaction.  
- L1 data fee, which is proportional to:
- The gas cost of writing the transaction's data to L1 (roughly equal to the transaction's length)
- The cost of gas on L1.
The cost of gas on L1 can be extremely volatile.  
To view the current gas costs as a user, [see here](https://optimism.io/gas-tracker). To retrieve them programatically, [see here](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).  
For a more in depth look at how transaction fees are calculated see our [fee documentation](transaction-fees.md)."
286,Where can I find the current gas costs for transactions on OP Mainnet?,"You can view the current gas costs as a user by visiting the gas tracker on the Optimism website. For programmatic retrieval, you can refer to the Optimism SDK on GitHub.","The cost of an L2 transaction on OP Mainnet is composed of two components:  
- L2 execution fee, which is proportional to the gas actually used in processing the transaction.  
- L1 data fee, which is proportional to:
- The gas cost of writing the transaction's data to L1 (roughly equal to the transaction's length)
- The cost of gas on L1.
The cost of gas on L1 can be extremely volatile.  
To view the current gas costs as a user, [see here](https://optimism.io/gas-tracker). To retrieve them programatically, [see here](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).  
For a more in depth look at how transaction fees are calculated see our [fee documentation](transaction-fees.md)."
287,Why are transaction costs on OP Mainnet different from those on Ethereum?,"On OP Mainnet, the majority of the transaction cost comes from the L1 data fee, while the L2 execution fee is negligible. This makes the optimization tradeoffs very different compared to Ethereum.","In almost all cases, the L1 data fee is the vast majority of the transaction's cost.
The L2 execution fee is, comparatively speaking, negligible.
This means that the optimization tradeoffs are very different in OP Mainnet than they are in Ethereum.  
Transaction call data is *expensive*.
The cost of writing a byte to L1 is approximately 16 gas.
At a cost of 45 gwei per L1 gas unit, writing one byte to L1 on OP Mainnet costs 720 gwei, or 720,000 units of L2 gas (at the non-congested price of 0.001 gwei per L2 gas unit).  
In comparison, onchain processing and storage are cheap.
The worst case for writing to storage (previously uninitialized storage) is a cost of [22100 L2 gas per EVM word, which contains 32 bytes of data](https://www.evm.codes/#55), which averages out to less than 700 L2 gas / byte.
At a cost of 45 gwei per L1 gas unit, this means it is cheaper to write a whole kilobyte to storage, rather than add one byte to the transaction call data."
287,How much does it cost to write one byte to L1 on OP Mainnet?,"Writing one byte to L1 on OP Mainnet costs approximately 720 gwei, or 720,000 units of L2 gas at the non-congested price of 0.001 gwei per L2 gas unit.","In almost all cases, the L1 data fee is the vast majority of the transaction's cost.
The L2 execution fee is, comparatively speaking, negligible.
This means that the optimization tradeoffs are very different in OP Mainnet than they are in Ethereum.  
Transaction call data is *expensive*.
The cost of writing a byte to L1 is approximately 16 gas.
At a cost of 45 gwei per L1 gas unit, writing one byte to L1 on OP Mainnet costs 720 gwei, or 720,000 units of L2 gas (at the non-congested price of 0.001 gwei per L2 gas unit).  
In comparison, onchain processing and storage are cheap.
The worst case for writing to storage (previously uninitialized storage) is a cost of [22100 L2 gas per EVM word, which contains 32 bytes of data](https://www.evm.codes/#55), which averages out to less than 700 L2 gas / byte.
At a cost of 45 gwei per L1 gas unit, this means it is cheaper to write a whole kilobyte to storage, rather than add one byte to the transaction call data."
287,Is it cheaper to write data to storage or to transaction call data on OP Mainnet?,It is cheaper to write data to storage. Writing a whole kilobyte to storage is less expensive than adding one byte to the transaction call data.,"In almost all cases, the L1 data fee is the vast majority of the transaction's cost.
The L2 execution fee is, comparatively speaking, negligible.
This means that the optimization tradeoffs are very different in OP Mainnet than they are in Ethereum.  
Transaction call data is *expensive*.
The cost of writing a byte to L1 is approximately 16 gas.
At a cost of 45 gwei per L1 gas unit, writing one byte to L1 on OP Mainnet costs 720 gwei, or 720,000 units of L2 gas (at the non-congested price of 0.001 gwei per L2 gas unit).  
In comparison, onchain processing and storage are cheap.
The worst case for writing to storage (previously uninitialized storage) is a cost of [22100 L2 gas per EVM word, which contains 32 bytes of data](https://www.evm.codes/#55), which averages out to less than 700 L2 gas / byte.
At a cost of 45 gwei per L1 gas unit, this means it is cheaper to write a whole kilobyte to storage, rather than add one byte to the transaction call data."
288,Why is the standard ABI not optimal for OP Mainnet?,"The standard ABI uses four-byte function selectors and pads values to a 32-byte size, which is not efficient for OP Mainnet. It is more efficient to create a shorter ABI with just the required bytes and decode it onchain.","[The standard ABI](https://docs.soliditylang.org/en/latest/abi-spec.html) was designed with L1 tradeoffs in mind.
It uses four byte function selectors and pads values to a 32 byte size.
Neither is optimal when using OP Mainnet.  
It is much more efficient to [create a shorter ABI with just the required bytes, and decode it onchain](https://ethereum.org/en/developers/tutorials/short-abi/).
All of your [`view`](https://docs.soliditylang.org/en/latest/contracts.html#view-functions) and [`pure`](https://docs.soliditylang.org/en/latest/contracts.html#pure-functions) functions can use the standard ABI at no cost."
288,Can I still use the standard ABI for some functions on OP Mainnet?,"Yes, you can use the standard ABI for your 'view' and 'pure' functions at no cost on OP Mainnet.","[The standard ABI](https://docs.soliditylang.org/en/latest/abi-spec.html) was designed with L1 tradeoffs in mind.
It uses four byte function selectors and pads values to a 32 byte size.
Neither is optimal when using OP Mainnet.  
It is much more efficient to [create a shorter ABI with just the required bytes, and decode it onchain](https://ethereum.org/en/developers/tutorials/short-abi/).
All of your [`view`](https://docs.soliditylang.org/en/latest/contracts.html#view-functions) and [`pure`](https://docs.soliditylang.org/en/latest/contracts.html#pure-functions) functions can use the standard ABI at no cost."
289,Why should I avoid using `uint256` for storing ETH balances?,"Using `uint256` for storing ETH balances is overkill because it can represent numbers up to about 1.2*10<sup>77</sup>, while the total supply of ETH is only around 120 million. Instead, you can use `uint88`, which is more efficient as it uses fewer bytes.","Your modified ABI is not going to pad values, so the less bytes you use the better.
For example, it is standard to use `uint256` for amounts.
This means that the highest number we can represent is 2<sup>256</sup>-1, or about 1.2*10<sup>77</sup>.
When storing ETH balances, for example, using `uint256` is overkill as there are only [120 million ETH](https://ycharts.com/indicators/ethereum_supply). Thus, we can safely store ETH balances in `uint88` which is just eleven bytes.  
Go through your contracts and identify any values that will never reach 32 bytes and reduce them to logical sizes. You can do this same process for ints, bytes and [other Solidity data types](https://docs.soliditylang.org/en/develop/types.html#types)."
289,How can I optimize the storage of values in my smart contracts?,"You can optimize storage by identifying values that will never reach 32 bytes and reducing them to more logical sizes. For example, instead of using `uint256` for all amounts, you can use smaller data types like `uint88` for ETH balances. This process can also be applied to other data types like ints and bytes.","Your modified ABI is not going to pad values, so the less bytes you use the better.
For example, it is standard to use `uint256` for amounts.
This means that the highest number we can represent is 2<sup>256</sup>-1, or about 1.2*10<sup>77</sup>.
When storing ETH balances, for example, using `uint256` is overkill as there are only [120 million ETH](https://ycharts.com/indicators/ethereum_supply). Thus, we can safely store ETH balances in `uint88` which is just eleven bytes.  
Go through your contracts and identify any values that will never reach 32 bytes and reduce them to logical sizes. You can do this same process for ints, bytes and [other Solidity data types](https://docs.soliditylang.org/en/develop/types.html#types)."
289,What is the benefit of using smaller data types in my smart contracts?,"Using smaller data types reduces the amount of storage space required, which can lead to more efficient and cost-effective smart contracts. For instance, using `uint88` instead of `uint256` for ETH balances saves storage space because `uint88` uses only eleven bytes compared to the 32 bytes used by `uint256`.","Your modified ABI is not going to pad values, so the less bytes you use the better.
For example, it is standard to use `uint256` for amounts.
This means that the highest number we can represent is 2<sup>256</sup>-1, or about 1.2*10<sup>77</sup>.
When storing ETH balances, for example, using `uint256` is overkill as there are only [120 million ETH](https://ycharts.com/indicators/ethereum_supply). Thus, we can safely store ETH balances in `uint88` which is just eleven bytes.  
Go through your contracts and identify any values that will never reach 32 bytes and reduce them to logical sizes. You can do this same process for ints, bytes and [other Solidity data types](https://docs.soliditylang.org/en/develop/types.html#types)."
290,How can I set up a local development environment for Optimism?,"To set up a local development environment for Optimism, you would need to follow the guidelines provided in the 'Running a local development environment' section of the Optimism Governance Documentation. This section will provide you with the necessary steps and tools required to get your local environment up and running.","---
title: Running a local development environment
lang: en-US
---"
290,What is the purpose of running a local development environment for Optimism?,Running a local development environment for Optimism allows developers to test and develop their applications in a controlled setting before deploying them to a live environment. This helps in identifying and fixing issues early in the development process.,"---
title: Running a local development environment
lang: en-US
---"
291,Why should I use a local development environment for OP Mainnet?,Using a local development environment for OP Mainnet allows you to test your code and see how your contracts will behave on the mainnet before deploying them to a testnet or the mainnet itself. This helps in identifying and fixing issues early in the development process.,"A development environment is a local installation of the entire OP Mainnet system.
Our default development environment includes both L1 and L2 development nodes.
Running the OP Mainnet environment locally is a great way to test your code and see how your contracts will behave on OP Mainnet before you graduate to a testnet deployment (and eventually a mainnet deployment).  
Alternatively, you can get a hosted development node from [any of these providers](../../useful-tools/providers.md)."
291,What does the default development environment for OP Mainnet include?,The default development environment for OP Mainnet includes both L1 (Layer 1) and L2 (Layer 2) development nodes. This setup helps in simulating the entire OP Mainnet system locally.,"A development environment is a local installation of the entire OP Mainnet system.
Our default development environment includes both L1 and L2 development nodes.
Running the OP Mainnet environment locally is a great way to test your code and see how your contracts will behave on OP Mainnet before you graduate to a testnet deployment (and eventually a mainnet deployment).  
Alternatively, you can get a hosted development node from [any of these providers](../../useful-tools/providers.md)."
291,Can I use a hosted development node instead of setting up a local environment?,"Yes, you can use a hosted development node from various providers as an alternative to setting up a local development environment. This can be convenient if you prefer not to manage the local setup yourself.","A development environment is a local installation of the entire OP Mainnet system.
Our default development environment includes both L1 and L2 development nodes.
Running the OP Mainnet environment locally is a great way to test your code and see how your contracts will behave on OP Mainnet before you graduate to a testnet deployment (and eventually a mainnet deployment).  
Alternatively, you can get a hosted development node from [any of these providers](../../useful-tools/providers.md)."
292,Why should I use the local development environment for my application?,"You should use the local development environment if your application involves building contracts on both OP Mainnet and Ethereum that need to interact with each other, or if your application might be subject to the differences between Ethereum and OP Mainnet. This environment allows you to quickly test interactions and ensure everything runs as expected without the delays and potential issues that can occur on the test networks.","We generally recommend using the local development environment if your application falls into one of the following categories:  
1. **You're building contracts on both OP Mainnet and Ethereum that need to interact with one another.** The local development environment is a great way to quickly test interactions between L1 and L2. The OP Mainnet and test networks have a communication delay between L1 and L2 that can make testing slow during the early stages of development.  
2. **You're building an application that might be subject to one of the few [differences between Ethereum and OP Mainnet](./differences.md).** Although OP Mainnet is [EVM equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), it's not exactly the same as Ethereum. If you're building an application that might be subject to one of these differences, you should use the local development environment to double check that everything is running as expected. You might otherwise have unexpected issues when you move to testnet. We strongly recommend reviewing these differences carefully to see if you might fall into this category.  
However, not everyone will need to use the local development environment.
OP Mainnet is [EVM equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), which means that OP Mainnet looks almost exactly like Ethereum under the hood.
If you don't fall into one of the above categories, you can probably get away with simply relying on existing testing tools like Truffle or Hardhat.
If you don't know whether or not you should be using the development environment, feel free to hop into the [Optimism discord](https://discord-gateway.optimism.io).
Someone nice will help you out!"
292,What are the differences between Ethereum and OP Mainnet?,"Although OP Mainnet is EVM equivalent, meaning it looks almost exactly like Ethereum under the hood, there are still some differences. These differences can affect how your application runs, so it's important to review them carefully. You can find more details in the documentation linked in the fragment.","We generally recommend using the local development environment if your application falls into one of the following categories:  
1. **You're building contracts on both OP Mainnet and Ethereum that need to interact with one another.** The local development environment is a great way to quickly test interactions between L1 and L2. The OP Mainnet and test networks have a communication delay between L1 and L2 that can make testing slow during the early stages of development.  
2. **You're building an application that might be subject to one of the few [differences between Ethereum and OP Mainnet](./differences.md).** Although OP Mainnet is [EVM equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), it's not exactly the same as Ethereum. If you're building an application that might be subject to one of these differences, you should use the local development environment to double check that everything is running as expected. You might otherwise have unexpected issues when you move to testnet. We strongly recommend reviewing these differences carefully to see if you might fall into this category.  
However, not everyone will need to use the local development environment.
OP Mainnet is [EVM equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), which means that OP Mainnet looks almost exactly like Ethereum under the hood.
If you don't fall into one of the above categories, you can probably get away with simply relying on existing testing tools like Truffle or Hardhat.
If you don't know whether or not you should be using the development environment, feel free to hop into the [Optimism discord](https://discord-gateway.optimism.io).
Someone nice will help you out!"
292,What should I do if I'm not sure whether to use the local development environment?,"If you're unsure whether you need to use the local development environment, you can rely on existing testing tools like Truffle or Hardhat if your application doesn't fall into the specified categories. Alternatively, you can ask for help in the Optimism Discord, where someone will assist you in making the right decision.","We generally recommend using the local development environment if your application falls into one of the following categories:  
1. **You're building contracts on both OP Mainnet and Ethereum that need to interact with one another.** The local development environment is a great way to quickly test interactions between L1 and L2. The OP Mainnet and test networks have a communication delay between L1 and L2 that can make testing slow during the early stages of development.  
2. **You're building an application that might be subject to one of the few [differences between Ethereum and OP Mainnet](./differences.md).** Although OP Mainnet is [EVM equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), it's not exactly the same as Ethereum. If you're building an application that might be subject to one of these differences, you should use the local development environment to double check that everything is running as expected. You might otherwise have unexpected issues when you move to testnet. We strongly recommend reviewing these differences carefully to see if you might fall into this category.  
However, not everyone will need to use the local development environment.
OP Mainnet is [EVM equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), which means that OP Mainnet looks almost exactly like Ethereum under the hood.
If you don't fall into one of the above categories, you can probably get away with simply relying on existing testing tools like Truffle or Hardhat.
If you don't know whether or not you should be using the development environment, feel free to hop into the [Optimism discord](https://discord-gateway.optimism.io).
Someone nice will help you out!"
293,Is there a way to set up a development node for Optimism?,"Yes, the Optimism monorepo includes a devnode setup that you can use. You can find more information and instructions in the provided link to the GitHub repository.",The Optimism monorepo includes [a devnode setup you can use](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/meta/devnet.md).
294,How do I install the necessary command line utilities for Optimism on Ubuntu 20.04 LTS?,You can install the necessary command line utilities `make` and `jq` by running the following command: `sudo apt install -y make jq`.,"1. First, make sure these components are installed.
Note that the command line directions were verified under Ubuntu 20.04 LTS.
Other OSes or versions may use different tools.  
- The command line utilities `make` and `jq`.  
```sh
sudo apt install -y make jq
```  
- [Go programming language](https://go.dev/)  
```sh
sudo apt update
wget https://go.dev/dl/go1.20.linux-amd64.tar.gz
tar xvzf go1.20.linux-amd64.tar.gz
sudo cp go/bin/go /usr/bin/go
sudo mv go /usr/lib
echo export GOROOT=/usr/lib/go >> ~/.bashrc
```  
- [Docker (the engine version is enough)](https://docs.docker.com/engine/install/#server)  
The latest version of docker uses `docker compose` instead of a separate `docker-compose` executable.
To process scripts that use `docker-compose`, run these commands:  
```sh
echo docker compose '$*' | sudo tee /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
```  
- The Optimism monorepo.  
```sh
git clone https://github.com/ethereum-optimism/optimism.git
cd optimism
```"
295,How do I start the development network for Optimism?,"To start the development network, run the command `make devnet-up` in the root directory of the monorepo. The first time it runs, it will be relatively slow because it needs to download the images, but it will be faster after that.","- To start, run (in the root directory of the monorepo) `make devnet-up`.
The first time it runs it will be relatively slow because it needs to download the images, after that it will be faster.  
- To stop, run (in the root directory of the monorepo) `make devnet-down`.  
- To clean everything, run (in the root directory of the monorepo) `make devnet-clean`.  
- [The monorepo includes the L1 contract addresses](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/deploy-config/devnetL1.json).
The L2 contract addresses are, of course, the standard ones.  
- There are some differences between the development node and the real world (a.k.a. Ethereum mainnet and OP Mainnet):  
| Parameter | Real-world | Devnode |
| - | -: | -: |
| L1 chain ID |  1 | 900
| L2 chain ID | 10 | 901
| Time between L1 blocks (in seconds) | 12 | 3  
- Test ETH:  
- Address: `0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266`
- Private key: `ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80`"
295,How can I stop the development network for Optimism?,"To stop the development network, run the command `make devnet-down` in the root directory of the monorepo.","- To start, run (in the root directory of the monorepo) `make devnet-up`.
The first time it runs it will be relatively slow because it needs to download the images, after that it will be faster.  
- To stop, run (in the root directory of the monorepo) `make devnet-down`.  
- To clean everything, run (in the root directory of the monorepo) `make devnet-clean`.  
- [The monorepo includes the L1 contract addresses](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/deploy-config/devnetL1.json).
The L2 contract addresses are, of course, the standard ones.  
- There are some differences between the development node and the real world (a.k.a. Ethereum mainnet and OP Mainnet):  
| Parameter | Real-world | Devnode |
| - | -: | -: |
| L1 chain ID |  1 | 900
| L2 chain ID | 10 | 901
| Time between L1 blocks (in seconds) | 12 | 3  
- Test ETH:  
- Address: `0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266`
- Private key: `ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80`"
295,What are the chain IDs for the development node compared to the real-world networks?,"In the real world, the L1 chain ID is 1 and the L2 chain ID is 10. For the development node, the L1 chain ID is 900 and the L2 chain ID is 901.","- To start, run (in the root directory of the monorepo) `make devnet-up`.
The first time it runs it will be relatively slow because it needs to download the images, after that it will be faster.  
- To stop, run (in the root directory of the monorepo) `make devnet-down`.  
- To clean everything, run (in the root directory of the monorepo) `make devnet-clean`.  
- [The monorepo includes the L1 contract addresses](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/deploy-config/devnetL1.json).
The L2 contract addresses are, of course, the standard ones.  
- There are some differences between the development node and the real world (a.k.a. Ethereum mainnet and OP Mainnet):  
| Parameter | Real-world | Devnode |
| - | -: | -: |
| L1 chain ID |  1 | 900
| L2 chain ID | 10 | 901
| Time between L1 blocks (in seconds) | 12 | 3  
- Test ETH:  
- Address: `0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266`
- Private key: `ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80`"
296,Are there any differences between Ethereum and OP Mainnet?,"Yes, there are various minor discrepancies between the behavior of OP Mainnet and Ethereum. It's important to be aware of these differences when building apps on top of OP Mainnet.","---
title: Differences between Ethereum and OP Mainnet
lang: en-US
---  
It's important to note that there are various minor discrepancies between the behavior of OP Mainnet and Ethereum.
You should be aware of these descrepancies when building apps on top of OP Mainnet."
297,How is the `block.difficulty` value determined on Optimism?,"On Optimism, the `block.difficulty` value is set by the sequencer and is not as reliably random as the L1 equivalent. For more reliable randomness, you can use an oracle.","| Opcode  | Solidity equivalent | Behavior |
| - | - | - |
| `COINBASE`| `block.coinbase`   | Undefined |
| `DIFFICULTY` | `block.difficulty` | Random value. As this value is set by the sequencer, it is not as reliably random as the L1 equivalent. [You can use an oracle for randomness](../../useful-tools/oracles.md#verifiable-randomness-function-vrf). |
| `NUMBER`     | `block.number`     | L2 block number
| `TIMESTAMP`  | `block.timestamp`  | Timestamp of the L2 block
| `ORIGIN`     | `tx.origin`        | If the transaction is an L1 ‚áí L2 transaction, then `tx.origin` is set to the [aliased address](#address-aliasing) of the address that triggered the L1 ‚áí L2 transaction. Otherwise, this opcode behaves normally. |
| `CALLER`     | `msg.sender`      | If the transaction is an L1 ‚áí L2 transaction, and this is the initial call (rather than an internal transaction from one contract to another), the same [address aliasing](#address-aliasing) behavior applies.
| [`PUSH0`](https://www.evm.codes/#5f?fork=shanghai)      | N/A               | Opcode not supported yet (will be added in a hardfork)  
::: tip `tx.origin == msg.sender`  
On L1 Ethereum `tx.origin` is equal to `msg.sender` only when the smart contract was called directly from an externally owned account (EOA).
However, on OP Mainnet `tx.origin` is the origin *on OP Mainnet*.
It could be an EOA.
However, in the case of messages from L1, it is possible for a message from a smart contract on L1 to appear on L2 with `tx.origin == msg.sender`.
This is unlikely to make a significant difference, because an L1 smart contract cannot directly manipulate the L2 state.
However, there could be edge cases we did not think about where this matters.  
:::"
297,What happens to `tx.origin` in an L1 to L2 transaction on Optimism?,"In an L1 to L2 transaction on Optimism, `tx.origin` is set to the aliased address of the address that triggered the L1 to L2 transaction. This is different from the normal behavior where `tx.origin` would be the original sender of the transaction.","| Opcode  | Solidity equivalent | Behavior |
| - | - | - |
| `COINBASE`| `block.coinbase`   | Undefined |
| `DIFFICULTY` | `block.difficulty` | Random value. As this value is set by the sequencer, it is not as reliably random as the L1 equivalent. [You can use an oracle for randomness](../../useful-tools/oracles.md#verifiable-randomness-function-vrf). |
| `NUMBER`     | `block.number`     | L2 block number
| `TIMESTAMP`  | `block.timestamp`  | Timestamp of the L2 block
| `ORIGIN`     | `tx.origin`        | If the transaction is an L1 ‚áí L2 transaction, then `tx.origin` is set to the [aliased address](#address-aliasing) of the address that triggered the L1 ‚áí L2 transaction. Otherwise, this opcode behaves normally. |
| `CALLER`     | `msg.sender`      | If the transaction is an L1 ‚áí L2 transaction, and this is the initial call (rather than an internal transaction from one contract to another), the same [address aliasing](#address-aliasing) behavior applies.
| [`PUSH0`](https://www.evm.codes/#5f?fork=shanghai)      | N/A               | Opcode not supported yet (will be added in a hardfork)  
::: tip `tx.origin == msg.sender`  
On L1 Ethereum `tx.origin` is equal to `msg.sender` only when the smart contract was called directly from an externally owned account (EOA).
However, on OP Mainnet `tx.origin` is the origin *on OP Mainnet*.
It could be an EOA.
However, in the case of messages from L1, it is possible for a message from a smart contract on L1 to appear on L2 with `tx.origin == msg.sender`.
This is unlikely to make a significant difference, because an L1 smart contract cannot directly manipulate the L2 state.
However, there could be edge cases we did not think about where this matters.  
:::"
297,What is the behavior of the `CALLER` opcode in an L1 to L2 transaction on Optimism?,"In an L1 to L2 transaction on Optimism, if it is the initial call, the `CALLER` opcode will also follow the address aliasing behavior. This means `msg.sender` will be the aliased address of the original sender from L1.","| Opcode  | Solidity equivalent | Behavior |
| - | - | - |
| `COINBASE`| `block.coinbase`   | Undefined |
| `DIFFICULTY` | `block.difficulty` | Random value. As this value is set by the sequencer, it is not as reliably random as the L1 equivalent. [You can use an oracle for randomness](../../useful-tools/oracles.md#verifiable-randomness-function-vrf). |
| `NUMBER`     | `block.number`     | L2 block number
| `TIMESTAMP`  | `block.timestamp`  | Timestamp of the L2 block
| `ORIGIN`     | `tx.origin`        | If the transaction is an L1 ‚áí L2 transaction, then `tx.origin` is set to the [aliased address](#address-aliasing) of the address that triggered the L1 ‚áí L2 transaction. Otherwise, this opcode behaves normally. |
| `CALLER`     | `msg.sender`      | If the transaction is an L1 ‚áí L2 transaction, and this is the initial call (rather than an internal transaction from one contract to another), the same [address aliasing](#address-aliasing) behavior applies.
| [`PUSH0`](https://www.evm.codes/#5f?fork=shanghai)      | N/A               | Opcode not supported yet (will be added in a hardfork)  
::: tip `tx.origin == msg.sender`  
On L1 Ethereum `tx.origin` is equal to `msg.sender` only when the smart contract was called directly from an externally owned account (EOA).
However, on OP Mainnet `tx.origin` is the origin *on OP Mainnet*.
It could be an EOA.
However, in the case of messages from L1, it is possible for a message from a smart contract on L1 to appear on L2 with `tx.origin == msg.sender`.
This is unlikely to make a significant difference, because an L1 smart contract cannot directly manipulate the L2 state.
However, there could be edge cases we did not think about where this matters.  
:::"
298,How can I get information about the latest L1 block in Optimism?,You can get information about the latest L1 block from the `L1Block` contract. This contract is predeployed at the address `0x4200000000000000000000000000000000000015` on the Optimism network.,"If you need the equivalent information from the latest L1 block, you can get it from [the `L1Block` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol).
This contract is a predeploy at address [`0x4200000000000000000000000000000000000015`](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015).
You can use [the getter functions](https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions) to get these parameters:  
- `number`: The latest L1 block number known to L2
- `timestamp`: The timestamp of the latest L1 block
- `basefee`: The base fee of the latest L1 block
- `hash`: The hash of the latest L1 block
- `sequenceNumber`: The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)"
298,What kind of information can I retrieve from the `L1Block` contract?,"You can retrieve several parameters from the `L1Block` contract using getter functions, including the latest L1 block number (`number`), the timestamp of the latest L1 block (`timestamp`), the base fee of the latest L1 block (`basefee`), the hash of the latest L1 block (`hash`), and the number of the L2 block within the epoch (`sequenceNumber`).","If you need the equivalent information from the latest L1 block, you can get it from [the `L1Block` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol).
This contract is a predeploy at address [`0x4200000000000000000000000000000000000015`](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015).
You can use [the getter functions](https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions) to get these parameters:  
- `number`: The latest L1 block number known to L2
- `timestamp`: The timestamp of the latest L1 block
- `basefee`: The base fee of the latest L1 block
- `hash`: The hash of the latest L1 block
- `sequenceNumber`: The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)"
298,Where can I find the `L1Block` contract code?,You can find the `L1Block` contract code on GitHub at this link: https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol.,"If you need the equivalent information from the latest L1 block, you can get it from [the `L1Block` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol).
This contract is a predeploy at address [`0x4200000000000000000000000000000000000015`](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015).
You can use [the getter functions](https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions) to get these parameters:  
- `number`: The latest L1 block number known to L2
- `timestamp`: The timestamp of the latest L1 block
- `basefee`: The base fee of the latest L1 block
- `hash`: The hash of the latest L1 block
- `sequenceNumber`: The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)"
299,How does the `CREATE` opcode behavior affect contract addresses on L1 and L2?,The `CREATE` opcode can result in a user creating a contract on L1 and L2 that share the same address but have different bytecode. This can break trust assumptions because one contract may be trusted while the other is untrusted.,"<details>  
Because of the behavior of the `CREATE` opcode, it is possible for a user to create a contract on L1 and on L2 that share the same address but have different bytecode.
This can break trust assumptions, because one contract may be trusted and another be untrusted (see below).
To prevent this problem the behavior of the `ORIGIN` and `CALLER` opcodes (`tx.origin` and `msg.sender`) differs slightly between L1 and L2.  
The value of `tx.origin` is determined as follows:  
| Call source                        | `tx.origin`                                |
| ---------------------------------- | ------------------------------------------ |
| L2 user (Externally Owned Account) | The user's address (same as in Ethereum)   |
| L1 user (Externally Owned Account) | The user's address (same as in Ethereum)   |
| L1 contract (using `CanonicalTransactionChain.enqueue`) | `L1_contract_address + 0x1111000000000000000000000000000000001111` |  
The value of `msg.sender` at the top-level (the very first contract being called) is always equal to `tx.origin`.
Therefore, if the value of `tx.origin` is affected by the rules defined above, the top-level value of `msg.sender` will also be impacted.  
Note that in general, [`tx.origin` should *not* be used for authorization](https://docs.soliditylang.org/en/latest/security-considerations.html#tx-origin).
However, that is a separate issue from address aliasing because address aliasing also affects `msg.sender`."
299,What is the difference in the value of `tx.origin` between L1 and L2?,"The value of `tx.origin` is determined by the source of the call. For L2 and L1 users (Externally Owned Accounts), it is the user's address, same as in Ethereum. For L1 contracts using `CanonicalTransactionChain.enqueue`, it is the L1 contract address plus `0x1111000000000000000000000000000000001111`.","<details>  
Because of the behavior of the `CREATE` opcode, it is possible for a user to create a contract on L1 and on L2 that share the same address but have different bytecode.
This can break trust assumptions, because one contract may be trusted and another be untrusted (see below).
To prevent this problem the behavior of the `ORIGIN` and `CALLER` opcodes (`tx.origin` and `msg.sender`) differs slightly between L1 and L2.  
The value of `tx.origin` is determined as follows:  
| Call source                        | `tx.origin`                                |
| ---------------------------------- | ------------------------------------------ |
| L2 user (Externally Owned Account) | The user's address (same as in Ethereum)   |
| L1 user (Externally Owned Account) | The user's address (same as in Ethereum)   |
| L1 contract (using `CanonicalTransactionChain.enqueue`) | `L1_contract_address + 0x1111000000000000000000000000000000001111` |  
The value of `msg.sender` at the top-level (the very first contract being called) is always equal to `tx.origin`.
Therefore, if the value of `tx.origin` is affected by the rules defined above, the top-level value of `msg.sender` will also be impacted.  
Note that in general, [`tx.origin` should *not* be used for authorization](https://docs.soliditylang.org/en/latest/security-considerations.html#tx-origin).
However, that is a separate issue from address aliasing because address aliasing also affects `msg.sender`."
299,Why should `tx.origin` generally not be used for authorization?,"In general, `tx.origin` should not be used for authorization because it can lead to security vulnerabilities. This is a separate issue from address aliasing, which also affects `msg.sender`.","<details>  
Because of the behavior of the `CREATE` opcode, it is possible for a user to create a contract on L1 and on L2 that share the same address but have different bytecode.
This can break trust assumptions, because one contract may be trusted and another be untrusted (see below).
To prevent this problem the behavior of the `ORIGIN` and `CALLER` opcodes (`tx.origin` and `msg.sender`) differs slightly between L1 and L2.  
The value of `tx.origin` is determined as follows:  
| Call source                        | `tx.origin`                                |
| ---------------------------------- | ------------------------------------------ |
| L2 user (Externally Owned Account) | The user's address (same as in Ethereum)   |
| L1 user (Externally Owned Account) | The user's address (same as in Ethereum)   |
| L1 contract (using `CanonicalTransactionChain.enqueue`) | `L1_contract_address + 0x1111000000000000000000000000000000001111` |  
The value of `msg.sender` at the top-level (the very first contract being called) is always equal to `tx.origin`.
Therefore, if the value of `tx.origin` is affected by the rules defined above, the top-level value of `msg.sender` will also be impacted.  
Note that in general, [`tx.origin` should *not* be used for authorization](https://docs.soliditylang.org/en/latest/security-considerations.html#tx-origin).
However, that is a separate issue from address aliasing because address aliasing also affects `msg.sender`."
300,Why is it a problem to have two identical source addresses for L1 and L2 contracts?,"The problem with having two identical source addresses for L1 and L2 contracts is that trust is extended based on the address. This means you might want to trust one contract but not the other, which can lead to security issues.","The problem with two identical source addresses (the L1 contract and the L2 contract) is that we extend trust based on the address.
It is possible that we will want to trust one of the contracts, but not the other.  
1. Helena Hacker forks [Uniswap](https://uniswap.org/) to create her own exchange (on L2), called Hackswap.  
**Note:** There are actually multiple contracts in Uniswap, so this explanation is a bit simplified.
[See here if you want additional details](https://ethereum.org/en/developers/tutorials/uniswap-v2-annotated-code/).  
1. Helena Hacker provides Hackswap with liquidity that appears to allow for profitable arbitrage opportunities.
For example, she can make it so that you can spend 1 [DAI](https://www.coindesk.com/price/dai/)to buy 1.1 [USDT](https://www.coindesk.com/price/tether/).
Both of those coins are supposed to be worth exactly $1.  
1. Nimrod Naive knows that if something looks too good to be true it probably is.
However, he checks the Hackswap contract's bytecode and verifies it is 100% identical to Uniswap.
He decides this means the contract can be trusted to behave exactly as Uniswap does.  
1. Nimrod approves an allowance of 1000 DAI for the Hackswap contract.
Nimrod expects to call the swap function on Hackswap and receive back nearly 1100 USDT.  
1. Before Nimrod's swap transaction is sent to the blockchain, Helena Hacker sends a transaction from an L1 contract with the same address as Hackswap.
This transaction transfers 1000 DAI from Nimrod's address to Helena Hacker's address.
If this transaction were to come from the same address as Hackswap on L2, it would be able to transfer the 1000 DAI because of the allowance Nimrod *had* to give Hackswap in the previous step to swap tokens.  
Nimrod, despite his naivete, is protected because OP Mainnet modified the transaction's `tx.origin` (which is also the initial `msg.sender`).
That transaction comes from a *different* address, one that does not have the allowance.  
**Note:** It is simple to create two different contracts on the same address in different chains.
But it is nearly impossible to create two that are different by a specified amount, so Helena Hacker can't do that.  
</details>"
300,How does OP Mainnet protect users like Nimrod from potential scams?,"OP Mainnet protects users by modifying the transaction's `tx.origin` (which is also the initial `msg.sender`). This ensures that a transaction coming from an L1 contract with the same address as an L2 contract will be recognized as coming from a different address, one that does not have the allowance.","The problem with two identical source addresses (the L1 contract and the L2 contract) is that we extend trust based on the address.
It is possible that we will want to trust one of the contracts, but not the other.  
1. Helena Hacker forks [Uniswap](https://uniswap.org/) to create her own exchange (on L2), called Hackswap.  
**Note:** There are actually multiple contracts in Uniswap, so this explanation is a bit simplified.
[See here if you want additional details](https://ethereum.org/en/developers/tutorials/uniswap-v2-annotated-code/).  
1. Helena Hacker provides Hackswap with liquidity that appears to allow for profitable arbitrage opportunities.
For example, she can make it so that you can spend 1 [DAI](https://www.coindesk.com/price/dai/)to buy 1.1 [USDT](https://www.coindesk.com/price/tether/).
Both of those coins are supposed to be worth exactly $1.  
1. Nimrod Naive knows that if something looks too good to be true it probably is.
However, he checks the Hackswap contract's bytecode and verifies it is 100% identical to Uniswap.
He decides this means the contract can be trusted to behave exactly as Uniswap does.  
1. Nimrod approves an allowance of 1000 DAI for the Hackswap contract.
Nimrod expects to call the swap function on Hackswap and receive back nearly 1100 USDT.  
1. Before Nimrod's swap transaction is sent to the blockchain, Helena Hacker sends a transaction from an L1 contract with the same address as Hackswap.
This transaction transfers 1000 DAI from Nimrod's address to Helena Hacker's address.
If this transaction were to come from the same address as Hackswap on L2, it would be able to transfer the 1000 DAI because of the allowance Nimrod *had* to give Hackswap in the previous step to swap tokens.  
Nimrod, despite his naivete, is protected because OP Mainnet modified the transaction's `tx.origin` (which is also the initial `msg.sender`).
That transaction comes from a *different* address, one that does not have the allowance.  
**Note:** It is simple to create two different contracts on the same address in different chains.
But it is nearly impossible to create two that are different by a specified amount, so Helena Hacker can't do that.  
</details>"
300,What is the significance of the allowance in the context of the Hackswap example?,"In the Hackswap example, Nimrod approves an allowance of 1000 DAI for the Hackswap contract, expecting to swap it for nearly 1100 USDT. The allowance is significant because it permits the contract to transfer a specified amount of tokens on behalf of the user. However, due to OP Mainnet's protection, a transaction from an L1 contract with the same address cannot misuse this allowance.","The problem with two identical source addresses (the L1 contract and the L2 contract) is that we extend trust based on the address.
It is possible that we will want to trust one of the contracts, but not the other.  
1. Helena Hacker forks [Uniswap](https://uniswap.org/) to create her own exchange (on L2), called Hackswap.  
**Note:** There are actually multiple contracts in Uniswap, so this explanation is a bit simplified.
[See here if you want additional details](https://ethereum.org/en/developers/tutorials/uniswap-v2-annotated-code/).  
1. Helena Hacker provides Hackswap with liquidity that appears to allow for profitable arbitrage opportunities.
For example, she can make it so that you can spend 1 [DAI](https://www.coindesk.com/price/dai/)to buy 1.1 [USDT](https://www.coindesk.com/price/tether/).
Both of those coins are supposed to be worth exactly $1.  
1. Nimrod Naive knows that if something looks too good to be true it probably is.
However, he checks the Hackswap contract's bytecode and verifies it is 100% identical to Uniswap.
He decides this means the contract can be trusted to behave exactly as Uniswap does.  
1. Nimrod approves an allowance of 1000 DAI for the Hackswap contract.
Nimrod expects to call the swap function on Hackswap and receive back nearly 1100 USDT.  
1. Before Nimrod's swap transaction is sent to the blockchain, Helena Hacker sends a transaction from an L1 contract with the same address as Hackswap.
This transaction transfers 1000 DAI from Nimrod's address to Helena Hacker's address.
If this transaction were to come from the same address as Hackswap on L2, it would be able to transfer the 1000 DAI because of the allowance Nimrod *had* to give Hackswap in the previous step to swap tokens.  
Nimrod, despite his naivete, is protected because OP Mainnet modified the transaction's `tx.origin` (which is also the initial `msg.sender`).
That transaction comes from a *different* address, one that does not have the allowance.  
**Note:** It is simple to create two different contracts on the same address in different chains.
But it is nearly impossible to create two that are different by a specified amount, so Helena Hacker can't do that.  
</details>"
301,Are there any fees associated with transactions on the OP Mainnet?,"Yes, transaction costs on the OP Mainnet include an L2 execution fee and an L1 data fee.",[Transaction costs on OP Mainnet](./transaction-fees.md) include an [L2 execution fee](./transaction-fees.md#the-l2-execution-fee) and an [L1 data fee](./transaction-fees.md#the-l1-data-fee).
301,What are the types of fees I need to pay for a transaction on the OP Mainnet?,"For a transaction on the OP Mainnet, you need to pay an L2 execution fee and an L1 data fee.",[Transaction costs on OP Mainnet](./transaction-fees.md) include an [L2 execution fee](./transaction-fees.md#the-l2-execution-fee) and an [L1 data fee](./transaction-fees.md#the-l1-data-fee).
302,How is the L2 execution fee calculated in Optimism?,"The L2 execution fee in Optimism is calculated using the EIP-1559 model. It consists of two components: the base fee, which is the same for all transactions in a block and varies based on block size and demand, and the priority fee, which is specified in the transaction and varies between transactions.","The L2 execution fee is calculated using [EIP-1559](https://notes.ethereum.org/@vbuterin/eip-1559-faq). The cost of a unit of gas is composed of two components:  
- **Base fee**: This fee is the same for all transactions in a block. It varies between blocks based on the difference between the actual size of the blocks (which depends on the demand for block space) and the target block size. When the block uses more gas than the target block size the base fee goes up to discourage demand. When the block uses less gas than the target block size the base fee goes down to encourage demand.
- **Priority fee**: This fee is specified in the transaction itself and varies between transactions. Block proposers are expected to select the transactions that offer them the highest priority fees first.  
The EIP-1559 parameters are different:  
| Parameter | OP Mainnet value | Ethereum value (for reference) |
| - | -: | -: |
| Block gas limit | 30,000,000 gas | 30,000,000 gas
| Block gas target | 5,000,000 gas | 15,000,000 gas
| EIP-1559 elasticity multiplier | 6 | 2
| EIP-1559 denominator | 50 | 8
| Maximum base fee increase (per block) | 10% | 12.5%
| Maximum base fee decrease (per block) | 2% | 12.5%
| Block time in seconds | 2 | 12"
302,What are the components of the gas cost in Optimism?,"The gas cost in Optimism is composed of two components: the base fee and the priority fee. The base fee is the same for all transactions in a block and adjusts based on block size and demand. The priority fee is specified in the transaction itself and varies between transactions, with block proposers selecting transactions that offer the highest priority fees first.","The L2 execution fee is calculated using [EIP-1559](https://notes.ethereum.org/@vbuterin/eip-1559-faq). The cost of a unit of gas is composed of two components:  
- **Base fee**: This fee is the same for all transactions in a block. It varies between blocks based on the difference between the actual size of the blocks (which depends on the demand for block space) and the target block size. When the block uses more gas than the target block size the base fee goes up to discourage demand. When the block uses less gas than the target block size the base fee goes down to encourage demand.
- **Priority fee**: This fee is specified in the transaction itself and varies between transactions. Block proposers are expected to select the transactions that offer them the highest priority fees first.  
The EIP-1559 parameters are different:  
| Parameter | OP Mainnet value | Ethereum value (for reference) |
| - | -: | -: |
| Block gas limit | 30,000,000 gas | 30,000,000 gas
| Block gas target | 5,000,000 gas | 15,000,000 gas
| EIP-1559 elasticity multiplier | 6 | 2
| EIP-1559 denominator | 50 | 8
| Maximum base fee increase (per block) | 10% | 12.5%
| Maximum base fee decrease (per block) | 2% | 12.5%
| Block time in seconds | 2 | 12"
302,What are some differences in EIP-1559 parameters between Optimism and Ethereum?,"Some differences in EIP-1559 parameters between Optimism and Ethereum include the block gas target (5,000,000 gas for Optimism vs. 15,000,000 gas for Ethereum), the EIP-1559 elasticity multiplier (6 for Optimism vs. 2 for Ethereum), the EIP-1559 denominator (50 for Optimism vs. 8 for Ethereum), the maximum base fee increase per block (10% for Optimism vs. 12.5% for Ethereum), the maximum base fee decrease per block (2% for Optimism vs. 12.5% for Ethereum), and the block time in seconds (2 seconds for Optimism vs. 12 seconds for Ethereum).","The L2 execution fee is calculated using [EIP-1559](https://notes.ethereum.org/@vbuterin/eip-1559-faq). The cost of a unit of gas is composed of two components:  
- **Base fee**: This fee is the same for all transactions in a block. It varies between blocks based on the difference between the actual size of the blocks (which depends on the demand for block space) and the target block size. When the block uses more gas than the target block size the base fee goes up to discourage demand. When the block uses less gas than the target block size the base fee goes down to encourage demand.
- **Priority fee**: This fee is specified in the transaction itself and varies between transactions. Block proposers are expected to select the transactions that offer them the highest priority fees first.  
The EIP-1559 parameters are different:  
| Parameter | OP Mainnet value | Ethereum value (for reference) |
| - | -: | -: |
| Block gas limit | 30,000,000 gas | 30,000,000 gas
| Block gas target | 5,000,000 gas | 15,000,000 gas
| EIP-1559 elasticity multiplier | 6 | 2
| EIP-1559 denominator | 50 | 8
| Maximum base fee increase (per block) | 10% | 12.5%
| Maximum base fee decrease (per block) | 2% | 12.5%
| Block time in seconds | 2 | 12"
303,How are transactions stored in Optimism before they are included in a block?,"As in L1 Ethereum, transactions in Optimism are stored in a pool until they can be included in a block.","As in L1 Ethereum, transactions are stored in a pool until they can be included in a block.
To minimize MEV, Bedrock's mempool is private.
To submit transactions, you will need to configure `op-geth` to forward transactions to the sequencer. This may change in the future.  
The sequencer processes transactions in the mempool in order of their base and priority fees."
303,How does Optimism minimize MEV (Miner Extractable Value)?,"To minimize MEV, Bedrock's mempool in Optimism is private.","As in L1 Ethereum, transactions are stored in a pool until they can be included in a block.
To minimize MEV, Bedrock's mempool is private.
To submit transactions, you will need to configure `op-geth` to forward transactions to the sequencer. This may change in the future.  
The sequencer processes transactions in the mempool in order of their base and priority fees."
303,How are transactions processed in Optimism's mempool?,The sequencer processes transactions in the mempool in order of their base and priority fees.,"As in L1 Ethereum, transactions are stored in a pool until they can be included in a block.
To minimize MEV, Bedrock's mempool is private.
To submit transactions, you will need to configure `op-geth` to forward transactions to the sequencer. This may change in the future.  
The sequencer processes transactions in the mempool in order of their base and priority fees."
304,How often are blocks produced on Optimism Bedrock compared to L1 Ethereum?,"On Optimism Bedrock, blocks are produced every 2 seconds, whereas on L1 Ethereum, the ideal time between blocks is 12 seconds. However, if any blocks are missed on L1 Ethereum, the time could be an integer multiple of 12 seconds, such as 24 or 36 seconds.","There are several differences in the way blocks are produced between L1 Ethereum and OP Mainnet.  
| Parameter           | L1 Ethereum | Optimism Bedrock |
| - | -: | -: |
| Time between blocks | 12 seconds<sup>1</sup>  | 2 seconds |
| Block target size   | 15,000,000 gas | 5,000,000 gas |
| Block maximum size  | 30,000,000 gas | 30,000,000 gas |  
(1) This is the ideal.
If any blocks are missed it could be an integer multiple such as 24 seconds, 36 seconds, etc.  
**Note:** The L1 Ethereum parameter values are taken from [ethereum.org](https://ethereum.org/en/developers/docs/blocks/#block-time)."
304,What is the target size for blocks on Optimism Bedrock?,"The target size for blocks on Optimism Bedrock is 5,000,000 gas, compared to 15,000,000 gas on L1 Ethereum.","There are several differences in the way blocks are produced between L1 Ethereum and OP Mainnet.  
| Parameter           | L1 Ethereum | Optimism Bedrock |
| - | -: | -: |
| Time between blocks | 12 seconds<sup>1</sup>  | 2 seconds |
| Block target size   | 15,000,000 gas | 5,000,000 gas |
| Block maximum size  | 30,000,000 gas | 30,000,000 gas |  
(1) This is the ideal.
If any blocks are missed it could be an integer multiple such as 24 seconds, 36 seconds, etc.  
**Note:** The L1 Ethereum parameter values are taken from [ethereum.org](https://ethereum.org/en/developers/docs/blocks/#block-time)."
304,Is there a difference in the maximum block size between L1 Ethereum and Optimism Bedrock?,"No, both L1 Ethereum and Optimism Bedrock have the same maximum block size of 30,000,000 gas.","There are several differences in the way blocks are produced between L1 Ethereum and OP Mainnet.  
| Parameter           | L1 Ethereum | Optimism Bedrock |
| - | -: | -: |
| Time between blocks | 12 seconds<sup>1</sup>  | 2 seconds |
| Block target size   | 15,000,000 gas | 5,000,000 gas |
| Block maximum size  | 30,000,000 gas | 30,000,000 gas |  
(1) This is the ideal.
If any blocks are missed it could be an integer multiple such as 24 seconds, 36 seconds, etc.  
**Note:** The L1 Ethereum parameter values are taken from [ethereum.org](https://ethereum.org/en/developers/docs/blocks/#block-time)."
305,Does OP Mainnet use the same API as Ethereum?,"Yes, OP Mainnet uses the same JSON-RPC API as Ethereum.","OP Mainnet uses the same [JSON-RPC API](https://eth.wiki/json-rpc/API) as Ethereum.
Some additional OP Mainnet specific methods have been introduced.
See the full list of [custom JSON-RPC methods](./json-rpc.md) for more information."
305,Are there any additional methods specific to OP Mainnet?,"Yes, some additional OP Mainnet specific methods have been introduced.","OP Mainnet uses the same [JSON-RPC API](https://eth.wiki/json-rpc/API) as Ethereum.
Some additional OP Mainnet specific methods have been introduced.
See the full list of [custom JSON-RPC methods](./json-rpc.md) for more information."
305,Where can I find more information about the custom JSON-RPC methods for OP Mainnet?,You can see the full list of custom JSON-RPC methods in the documentation linked as './json-rpc.md'.,"OP Mainnet uses the same [JSON-RPC API](https://eth.wiki/json-rpc/API) as Ethereum.
Some additional OP Mainnet specific methods have been introduced.
See the full list of [custom JSON-RPC methods](./json-rpc.md) for more information."
306,Are the addresses for infrastructure contracts the same on L1 Ethereum and OP Mainnet?,"No, the addresses for infrastructure contracts are different between L1 Ethereum and OP Mainnet. For example, the WETH9 contract is installed on L1 Ethereum at address `0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2`, while on OP Mainnet it is installed at address `0x4200000000000000000000000000000000000006`.","The addresses in which various infrastructure contracts are installed are different between L1 Ethereum and OP Mainnet.
For example, [WETH9](https://github.com/gnosis/canonical-weth/blob/master/contracts/WETH9.sol) is installed on L1 Ethereum on [address `0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2`](https://etherscan.io/address/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2).
On OP Mainnet the same contract is installed on [address `0x4200000000000000000000000000000000000006`](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000006)."
306,Can you give an example of a contract with different addresses on L1 Ethereum and OP Mainnet?,"Yes, the WETH9 contract is an example. On L1 Ethereum, it is located at address `0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2`, and on OP Mainnet, it is located at address `0x4200000000000000000000000000000000000006`.","The addresses in which various infrastructure contracts are installed are different between L1 Ethereum and OP Mainnet.
For example, [WETH9](https://github.com/gnosis/canonical-weth/blob/master/contracts/WETH9.sol) is installed on L1 Ethereum on [address `0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2`](https://etherscan.io/address/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2).
On OP Mainnet the same contract is installed on [address `0x4200000000000000000000000000000000000006`](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000006)."
307,Does Optimism have an RPC API?,"Yes, Optimism has several components on the OP Mainnet that provide an RPC API.","---
title: JSON-RPC API
lang: en-US
---  
There are several OP Mainnet components with an RPC API:"
308,What's the name of the rollup node implementation for the OP Mainnet?,The rollup node implementation for the OP Mainnet is called 'op-node'.,"[*Rollup node*](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md) refers to the component in the protocol specifications.
The OP Mainnet implementation is called *op-node*.  
The `op-node` component implements several RPC methods:"
308,What does the 'op-node' component do?,The 'op-node' component implements several RPC methods as part of the protocol specifications.,"[*Rollup node*](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md) refers to the component in the protocol specifications.
The OP Mainnet implementation is called *op-node*.  
The `op-node` component implements several RPC methods:"
310,What information is included in the synchronization status response?,"The synchronization status response includes several pieces of information such as the current L1 block, the head L1 block, the safe L1 block, the finalized L1 block, the unsafe L2 block, the safe L2 block, and the finalized L2 block. Each block contains details like hash, number, parentHash, and timestamp.","Get the synchronization status.  
```sh
curl -X POST -H ""Content-Type: application/json"" --data \
'{""jsonrpc"":""2.0"",""method"":""optimism_syncStatus"",""params"":[],""id"":1}'  \
http://localhost:9545
```  
Sample output:  
```json
{
""jsonrpc"": ""2.0"",
""id"": 1,
""result"": {
""current_l1"": {
""hash"": ""0x5adcfcbd1c2fcf9e06bfdaa8414a4586f84e11f487396abca940299eb0ed2da5"",
""number"": 7569281,
""parentHash"": ""0xfd022ca8a8c4e0f3bfd67081c18551840ea0717cc01d9a94601e1e41e92616d3"",
""timestamp"": 1662862860
},
""head_l1"": {
""hash"": ""0x5c12fde5ea79aefe4b52c0c8cc0e0eb33a2ccb423cb3cd9c9132e18ad42e89b6"",
""number"": 8042823,
""parentHash"": ""0x74818f8ecaa932431bf9523e929dcfa11ab382c752529d8271a24810884a2551"",
""timestamp"": 1669735356
},
""safe_l1"": {
""hash"": ""0x0000000000000000000000000000000000000000000000000000000000000000"",
""number"": 0,
""parentHash"": ""0x0000000000000000000000000000000000000000000000000000000000000000"",
""timestamp"": 0
},
""finalized_l1"": {
""hash"": ""0x0000000000000000000000000000000000000000000000000000000000000000"",
""number"": 0,
""parentHash"": ""0x0000000000000000000000000000000000000000000000000000000000000000"",
""timestamp"": 0
},
""unsafe_l2"": {
""hash"": ""0x1cad05886ec0e2cda728674e00eadcbb9245ff34c0bfd86c866673a615c1c43a"",
""number"": 1752,
""parentHash"": ""0x0115dbbd26aaf9563d7e3cad65bad41926d94b2643ccb080f71e394c2c3d62a3"",
""timestamp"": 1662861300,
""l1origin"": {
""hash"": ""0x43fe1601041056e9a2a5dabaa20715518ae0058abf67a69f5ebdd53b1f6ff02f"",
""number"": 7569162
},
""sequenceNumber"": 0
},
""safe_l2"": {
""hash"": ""0x1cad05886ec0e2cda728674e00eadcbb9245ff34c0bfd86c866673a615c1c43a"",
""number"": 1752,
""parentHash"": ""0x0115dbbd26aaf9563d7e3cad65bad41926d94b2643ccb080f71e394c2c3d62a3"",
""timestamp"": 1662861300,
""l1origin"": {
""hash"": ""0x43fe1601041056e9a2a5dabaa20715518ae0058abf67a69f5ebdd53b1f6ff02f"",
""number"": 7569162
},
""sequenceNumber"": 0
},
""finalized_l2"": {
""hash"": ""0x6758307d692d4f2f6650acd3762674749a0c1cc2530b9b481845d0f8ee1bd456"",
""number"": 0,
""parentHash"": ""0x0000000000000000000000000000000000000000000000000000000000000000"",
""timestamp"": 1662857796,
""l1origin"": {
""hash"": ""0xb0bbb79a00fb8485185b1bedfac386812d662e1cddba77b67a26e1ed9ba8f0ec"",
""number"": 7568910
},
""sequenceNumber"": 0
}
}
}
```"
310,What does the 'finalized_l1' field represent in the synchronization status?,"The 'finalized_l1' field represents the last finalized block on Layer 1 (L1). In the sample output provided, it shows a hash of '0x0000000000000000000000000000000000000000000000000000000000000000', a number of 0, and a timestamp of 0, indicating that no L1 block has been finalized yet.","Get the synchronization status.  
```sh
curl -X POST -H ""Content-Type: application/json"" --data \
'{""jsonrpc"":""2.0"",""method"":""optimism_syncStatus"",""params"":[],""id"":1}'  \
http://localhost:9545
```  
Sample output:  
```json
{
""jsonrpc"": ""2.0"",
""id"": 1,
""result"": {
""current_l1"": {
""hash"": ""0x5adcfcbd1c2fcf9e06bfdaa8414a4586f84e11f487396abca940299eb0ed2da5"",
""number"": 7569281,
""parentHash"": ""0xfd022ca8a8c4e0f3bfd67081c18551840ea0717cc01d9a94601e1e41e92616d3"",
""timestamp"": 1662862860
},
""head_l1"": {
""hash"": ""0x5c12fde5ea79aefe4b52c0c8cc0e0eb33a2ccb423cb3cd9c9132e18ad42e89b6"",
""number"": 8042823,
""parentHash"": ""0x74818f8ecaa932431bf9523e929dcfa11ab382c752529d8271a24810884a2551"",
""timestamp"": 1669735356
},
""safe_l1"": {
""hash"": ""0x0000000000000000000000000000000000000000000000000000000000000000"",
""number"": 0,
""parentHash"": ""0x0000000000000000000000000000000000000000000000000000000000000000"",
""timestamp"": 0
},
""finalized_l1"": {
""hash"": ""0x0000000000000000000000000000000000000000000000000000000000000000"",
""number"": 0,
""parentHash"": ""0x0000000000000000000000000000000000000000000000000000000000000000"",
""timestamp"": 0
},
""unsafe_l2"": {
""hash"": ""0x1cad05886ec0e2cda728674e00eadcbb9245ff34c0bfd86c866673a615c1c43a"",
""number"": 1752,
""parentHash"": ""0x0115dbbd26aaf9563d7e3cad65bad41926d94b2643ccb080f71e394c2c3d62a3"",
""timestamp"": 1662861300,
""l1origin"": {
""hash"": ""0x43fe1601041056e9a2a5dabaa20715518ae0058abf67a69f5ebdd53b1f6ff02f"",
""number"": 7569162
},
""sequenceNumber"": 0
},
""safe_l2"": {
""hash"": ""0x1cad05886ec0e2cda728674e00eadcbb9245ff34c0bfd86c866673a615c1c43a"",
""number"": 1752,
""parentHash"": ""0x0115dbbd26aaf9563d7e3cad65bad41926d94b2643ccb080f71e394c2c3d62a3"",
""timestamp"": 1662861300,
""l1origin"": {
""hash"": ""0x43fe1601041056e9a2a5dabaa20715518ae0058abf67a69f5ebdd53b1f6ff02f"",
""number"": 7569162
},
""sequenceNumber"": 0
},
""finalized_l2"": {
""hash"": ""0x6758307d692d4f2f6650acd3762674749a0c1cc2530b9b481845d0f8ee1bd456"",
""number"": 0,
""parentHash"": ""0x0000000000000000000000000000000000000000000000000000000000000000"",
""timestamp"": 1662857796,
""l1origin"": {
""hash"": ""0xb0bbb79a00fb8485185b1bedfac386812d662e1cddba77b67a26e1ed9ba8f0ec"",
""number"": 7568910
},
""sequenceNumber"": 0
}
}
}
```"
311,What kind of information is included in the rollup configuration parameters?,"The rollup configuration parameters include details such as the genesis block information for both L1 and L2, block time, max sequencer drift, sequence window size, channel timeout, L1 and L2 chain IDs, and various addresses like the P2P sequencer address, fee recipient address, batch inbox address, batch sender address, and deposit contract address.","Get the rollup configuration parameters.  
```sh
curl -X POST -H ""Content-Type: application/json"" --data \
'{""jsonrpc"":""2.0"",""method"":""optimism_rollupConfig"",""params"":[],""id"":1}'  \
http://localhost:9545
```  
Sample output:  
```json
{
""jsonrpc"":""2.0"",
""id"":1,
""result"":{
""genesis"":{
""l1"":{
""hash"":""0xb0bbb79a00fb8485185b1bedfac386812d662e1cddba77b67a26e1ed9ba8f0ec"",
""number"":7568910
},
""l2"":{
""hash"":""0x6758307d692d4f2f6650acd3762674749a0c1cc2530b9b481845d0f8ee1bd456"",
""number"":0
},
""l2_time"":1662857796
},
""block_time"":2,
""max_sequencer_drift"":120,
""seq_window_size"":120,
""channel_timeout"":30,
""l1_chain_id"":5,
""l2_chain_id"":28528,
""p2p_sequencer_address"":""0x59dc8e68a80833cc8a9592d532fed42374c8b5dc"",
""fee_recipient_address"":""0xdffc6a1c238ff9504b055ad7efeee0148f2d62bd"",
""batch_inbox_address"":""0xfeb2acb903f95fb5f5497157c0727a7d16e3fd16"",
""batch_sender_address"":""0x4ff79526ea1d492a3db2aa210d7318ff13f2012c"",
""deposit_contract_address"":""0xa581ca3353db73115c4625ffc7adf5db379434a8""
}
}
```"
311,What is the block time in the rollup configuration for Optimism?,The block time in the rollup configuration for Optimism is 2 seconds.,"Get the rollup configuration parameters.  
```sh
curl -X POST -H ""Content-Type: application/json"" --data \
'{""jsonrpc"":""2.0"",""method"":""optimism_rollupConfig"",""params"":[],""id"":1}'  \
http://localhost:9545
```  
Sample output:  
```json
{
""jsonrpc"":""2.0"",
""id"":1,
""result"":{
""genesis"":{
""l1"":{
""hash"":""0xb0bbb79a00fb8485185b1bedfac386812d662e1cddba77b67a26e1ed9ba8f0ec"",
""number"":7568910
},
""l2"":{
""hash"":""0x6758307d692d4f2f6650acd3762674749a0c1cc2530b9b481845d0f8ee1bd456"",
""number"":0
},
""l2_time"":1662857796
},
""block_time"":2,
""max_sequencer_drift"":120,
""seq_window_size"":120,
""channel_timeout"":30,
""l1_chain_id"":5,
""l2_chain_id"":28528,
""p2p_sequencer_address"":""0x59dc8e68a80833cc8a9592d532fed42374c8b5dc"",
""fee_recipient_address"":""0xdffc6a1c238ff9504b055ad7efeee0148f2d62bd"",
""batch_inbox_address"":""0xfeb2acb903f95fb5f5497157c0727a7d16e3fd16"",
""batch_sender_address"":""0x4ff79526ea1d492a3db2aa210d7318ff13f2012c"",
""deposit_contract_address"":""0xa581ca3353db73115c4625ffc7adf5db379434a8""
}
}
```"
313,How do rollup nodes share pending L2 blocks with each other?,Rollup nodes can optionally use peer-to-peer synchronization to provide pending L2 blocks to other rollup nodes. This helps in keeping the nodes updated with the latest information.,"Optionally, the rollup node can provide [peer to peer synchronization](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node-p2p.md) to provide pending L2 blocks to other rollup nodes."
313,What is the purpose of peer-to-peer synchronization in rollup nodes?,"The purpose of peer-to-peer synchronization in rollup nodes is to share pending L2 blocks with other rollup nodes, ensuring that all nodes have the most current data.","Optionally, the rollup node can provide [peer to peer synchronization](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node-p2p.md) to provide pending L2 blocks to other rollup nodes."
314,What's the name of the execution engine implementation for the OP Mainnet?,The execution engine implementation for the OP Mainnet is called op-geth.,"[*Execution engine*](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md) refers to the component in the protocol specifications.
The OP Mainnet implementation is called *op-geth*.  
The execution engine's RPC interface is identical to [the upstream Geth RPC interface](https://geth.ethereum.org/docs/rpc/server). This includes the ability to provide [snap sync](https://github.com/ethereum/devp2p/blob/master/caps/snap.md) functionality to other execution engines.  
The responses are nearly identical too, except we also include the L1 gas usage and price information."
314,How does the RPC interface of the execution engine in Optimism compare to the upstream Geth RPC interface?,"The RPC interface of the execution engine in Optimism is identical to the upstream Geth RPC interface, with the addition of L1 gas usage and price information.","[*Execution engine*](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md) refers to the component in the protocol specifications.
The OP Mainnet implementation is called *op-geth*.  
The execution engine's RPC interface is identical to [the upstream Geth RPC interface](https://geth.ethereum.org/docs/rpc/server). This includes the ability to provide [snap sync](https://github.com/ethereum/devp2p/blob/master/caps/snap.md) functionality to other execution engines.  
The responses are nearly identical too, except we also include the L1 gas usage and price information."
314,What additional functionality does the execution engine's RPC interface provide?,"The execution engine's RPC interface provides snap sync functionality to other execution engines, in addition to the standard features of the upstream Geth RPC interface.","[*Execution engine*](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/rollup-node.md) refers to the component in the protocol specifications.
The OP Mainnet implementation is called *op-geth*.  
The execution engine's RPC interface is identical to [the upstream Geth RPC interface](https://geth.ethereum.org/docs/rpc/server). This includes the ability to provide [snap sync](https://github.com/ethereum/devp2p/blob/master/caps/snap.md) functionality to other execution engines.  
The responses are nearly identical too, except we also include the L1 gas usage and price information."
315,Can the legacy geth be used to send transactions on the blockchain?,"No, the legacy geth cannot be used to send transactions because it does not implement `eth_sendTransaction` and `eth_sendRawTransaction` methods. It is a read-only copy meant for providing information about the blockchain prior to Bedrock.","The legacy geth provides information about the blockchain prior to Bedrock.
It implements the read-only methods of [the interface used by L1 execution engines](https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/execution-apis/assembled-spec/openrpc.json&uiSchema%5BappBar%5D%5Bui:splitView%5D=false&uiSchema%5BappBar%5D%5Bui:input%5D=false&uiSchema%5BappBar%5D%5Bui:examplesDropdown%5D=false).
It does not implement `eth_sendTransaction` and `eth_sendRawTransaction`, because they don't make sense in a read-only copy."
315,What kind of methods does the legacy geth implement?,The legacy geth implements the read-only methods of the interface used by L1 execution engines. This means it can provide information about the blockchain but cannot perform actions like sending transactions.,"The legacy geth provides information about the blockchain prior to Bedrock.
It implements the read-only methods of [the interface used by L1 execution engines](https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/execution-apis/assembled-spec/openrpc.json&uiSchema%5BappBar%5D%5Bui:splitView%5D=false&uiSchema%5BappBar%5D%5Bui:input%5D=false&uiSchema%5BappBar%5D%5Bui:examplesDropdown%5D=false).
It does not implement `eth_sendTransaction` and `eth_sendRawTransaction`, because they don't make sense in a read-only copy."
315,What is the purpose of the legacy geth in the context of Optimism?,The legacy geth provides information about the blockchain prior to the Bedrock upgrade. It is used to access historical data in a read-only format.,"The legacy geth provides information about the blockchain prior to Bedrock.
It implements the read-only methods of [the interface used by L1 execution engines](https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/execution-apis/assembled-spec/openrpc.json&uiSchema%5BappBar%5D%5Bui:splitView%5D=false&uiSchema%5BappBar%5D%5Bui:input%5D=false&uiSchema%5BappBar%5D%5Bui:examplesDropdown%5D=false).
It does not implement `eth_sendTransaction` and `eth_sendRawTransaction`, because they don't make sense in a read-only copy."
316,Where can I find the introduction for developers about nodes in the Optimism documentation?,You can find the introduction for developers about nodes in the Optimism documentation by visiting the URL '/docs/developers/nodes/intro'.,"<script>
export default {
mounted () {
window.location.href=""/docs/developers/nodes/intro""
}
}
</script>"
317,How can I interact with OP Mainnet contracts?,"You can interact with OP Mainnet contracts for various purposes such as sending messages and tokens between L1 (Ethereum) and L2 (OP Mainnet), and querying information about the current L1 data fee. The documentation provides guidance on how to work with these contracts directly from other contracts and from the client side.","---
title: Interacting with OP Mainnet contracts
lang: en-US
---  
OP Mainnet is composed, in part, of a series of smart contracts on both L1 (Ethereum) and L2 (OP Mainnet).
You may want to interact with these contracts for any number of reasons, including:  
- Sending messages between L1 and L2
- Sending tokens between L1 and L2
- Querying information about the current [L1 data fee](./transaction-fees.md#the-l1-data-fee)
- And lots more!  
On this page we'll show you how to work with these contracts directly from other contracts and how to work with them from the client side."
317,What are some reasons I might want to interact with OP Mainnet contracts?,"Some reasons to interact with OP Mainnet contracts include sending messages and tokens between L1 (Ethereum) and L2 (OP Mainnet), and querying information about the current L1 data fee.","---
title: Interacting with OP Mainnet contracts
lang: en-US
---  
OP Mainnet is composed, in part, of a series of smart contracts on both L1 (Ethereum) and L2 (OP Mainnet).
You may want to interact with these contracts for any number of reasons, including:  
- Sending messages between L1 and L2
- Sending tokens between L1 and L2
- Querying information about the current [L1 data fee](./transaction-fees.md#the-l1-data-fee)
- And lots more!  
On this page we'll show you how to work with these contracts directly from other contracts and how to work with them from the client side."
317,Does OP Mainnet involve both L1 and L2 contracts?,"Yes, OP Mainnet is composed of a series of smart contracts on both L1 (Ethereum) and L2 (OP Mainnet).","---
title: Interacting with OP Mainnet contracts
lang: en-US
---  
OP Mainnet is composed, in part, of a series of smart contracts on both L1 (Ethereum) and L2 (OP Mainnet).
You may want to interact with these contracts for any number of reasons, including:  
- Sending messages between L1 and L2
- Sending tokens between L1 and L2
- Querying information about the current [L1 data fee](./transaction-fees.md#the-l1-data-fee)
- And lots more!  
On this page we'll show you how to work with these contracts directly from other contracts and how to work with them from the client side."
318,Where can I find the address of a specific contract on Optimism?,You can find the address of the specific contract you want to interact with by checking the Networks and Connection Details page or by looking in the deployments folder of the contracts package on the Optimism GitHub repository.,"You'll need to find the address of the particular contract that you want to interact with before you can actually interact with it.
Check out the [Networks and Connection Details page](../../useful-tools/networks.md) for links to the contract addresses for each network.
You can also find the addresses for all networks in the [deployments folder](https://github.com/ethereum-optimism/optimism/tree/master/packages/contracts/deployments) of the [`contracts` package](https://github.com/ethereum-optimism/optimism/tree/master/packages/contracts)."
318,How do I get the contract addresses for different networks on Optimism?,You can get the contract addresses for different networks by visiting the Networks and Connection Details page or by checking the deployments folder in the contracts package on the Optimism GitHub repository.,"You'll need to find the address of the particular contract that you want to interact with before you can actually interact with it.
Check out the [Networks and Connection Details page](../../useful-tools/networks.md) for links to the contract addresses for each network.
You can also find the addresses for all networks in the [deployments folder](https://github.com/ethereum-optimism/optimism/tree/master/packages/contracts/deployments) of the [`contracts` package](https://github.com/ethereum-optimism/optimism/tree/master/packages/contracts)."
319,How can I interact with OP Mainnet system contracts from another contract?,"To interact with OP Mainnet system contracts from another contract, you need the address of the contract and an interface. You can find the address by following the provided instructions, and then you simply need to import the appropriate contracts.","All you need to interact with the OP Mainnet system contracts from another contract is an address and an interface.
You can follow [the instructions above](#finding-contract-addresses) to find the address of the contract you want to interact with.
Now you simply need to import the appropriate contracts."
319,Where can I find the address of the OP Mainnet system contract I want to interact with?,You can find the address of the OP Mainnet system contract by following the instructions provided in the documentation under the section 'finding contract addresses'.,"All you need to interact with the OP Mainnet system contracts from another contract is an address and an interface.
You can follow [the instructions above](#finding-contract-addresses) to find the address of the contract you want to interact with.
Now you simply need to import the appropriate contracts."
320,How can I use OP Mainnet contracts in my NPM or Yarn project?,You can use OP Mainnet contracts in your NPM or Yarn project by installing the `@eth-optimism/contracts` package. You can install it using the command: `npm install @eth-optimism/contracts`.,"We export a package [`@eth-optimism/contracts`](https://www.npmjs.com/package/@eth-optimism/contracts?activeTab=readme) that makes it easy to use the OP Mainnet contracts within NPM or Yarn based projects.
Install the package as follows:  
```
npm install @eth-optimism/contracts
```"
320,Is there a specific package for using Optimism contracts in development?,"Yes, there is a specific package called `@eth-optimism/contracts` that you can use to easily integrate OP Mainnet contracts into your NPM or Yarn based projects.","We export a package [`@eth-optimism/contracts`](https://www.npmjs.com/package/@eth-optimism/contracts?activeTab=readme) that makes it easy to use the OP Mainnet contracts within NPM or Yarn based projects.
Install the package as follows:  
```
npm install @eth-optimism/contracts
```"
321,Where can I find the path to a specific Optimism contract?,"The path to a specific Optimism contract can be found within the `@eth-optimism/contracts` package. You can refer to the folder structure in the Optimism GitHub repository to locate the exact path. For example, the `L1CrossDomainMessenger` contract is located at `@eth-optimism/contracts/L1/messaging/L1CrossDomainMessenger.sol`.","Simply import the desired contract or interface from the `@eth-optimism/contracts` package:  
```solidity
import { SomeOptimismContract } from ""@eth-optimism/contracts/path/to/SomeOptimismContract.sol"";
```  
Please note that `path/to/SomeOptimismContract` is the path to the contract [within this folder](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts/contracts).
For example, if you wanted to import the [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol) contract, you would use the following import:  
```solidity
import { L1CrossDomainMessenger } from ""@eth-optimism/contracts/L1/messaging/L1CrossDomainMessenger.sol"";
```"
322,Are the addresses of system contracts on the L2 side of the network the same across different networks?,"Yes, the addresses of system contracts on the L2 side of the network are the same on every network.","Addresses of system contracts on the L2 side of the network are the same on every network.
We provide these addresses as constants within the [`Lib_PredeployAddresses`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/constants/Lib_PredeployAddresses.sol) contract."
322,Where can I find the addresses of these system contracts?,"The addresses are provided as constants within the `Lib_PredeployAddresses` contract, which can be found in the Optimism GitHub repository.","Addresses of system contracts on the L2 side of the network are the same on every network.
We provide these addresses as constants within the [`Lib_PredeployAddresses`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/constants/Lib_PredeployAddresses.sol) contract."
323,How can I interact with the OP Mainnet system contracts from the client side?,You can interact with the OP Mainnet system contracts from the client side by using the packages that have been created specifically for this purpose. These packages make the interaction process easy and straightforward.,"Just like when interacting from another contract, we've created a few packages that make it easy to interact with the OP Mainnet system contracts from the client side."
324,How can I interact with the OP Mainnet system contracts from a JavaScript or TypeScript project?,You can use the `@eth-optimism/contracts` package to interact with the OP Mainnet system contracts from a JavaScript or TypeScript based project.,"You can use the [`@eth-optimism/contracts`](https://www.npmjs.com/package/@eth-optimism/contracts?activeTab=readme) package to interact with the OP Mainnet system contracts from a JavaScript or TypeScript based project.
Install the package as follows:  
```
npm install @eth-optimism/contracts
```"
324,How do I install the `@eth-optimism/contracts` package?,You can install the `@eth-optimism/contracts` package by running the command `npm install @eth-optimism/contracts` in your project directory.,"You can use the [`@eth-optimism/contracts`](https://www.npmjs.com/package/@eth-optimism/contracts?activeTab=readme) package to interact with the OP Mainnet system contracts from a JavaScript or TypeScript based project.
Install the package as follows:  
```
npm install @eth-optimism/contracts
```"
325,How can I obtain the ABI and bytecode for an OP Mainnet contract?,"You can obtain the ABI and bytecode for an OP Mainnet contract by using the `getContractDefinition` function from the '@eth-optimism/contracts' package. For example, you can import the function and then call it with the contract name to get the artifact, which includes the ABI, bytecode, and deployed bytecode.","You can get the compiler artifact, bytecode, and ABI for any OP Mainnet contract as follows:  
```ts
import { getContractDefinition } from '@eth-optimism/contracts'

const artifact = getContractDefinition('SomeOptimismContract')
const abi = artifact.abi
const bytecode = artifact.bytecode
const deployedBytecode = artifact.deployedBytecode
```  
Similarly, you can also get [ethers Interface objects](https://docs.ethers.io/v5/api/utils/abi/interface/) for any contract:  
```ts
import { getContractInterface } from '@eth-optimism/contracts'

const iface = getContractInterface('SomeOptimismContract')
```"
325,Is there a way to get an ethers Interface object for an Optimism contract?,"Yes, you can get an ethers Interface object for an Optimism contract by using the `getContractInterface` function from the '@eth-optimism/contracts' package. You just need to import the function and call it with the contract name to get the Interface object.","You can get the compiler artifact, bytecode, and ABI for any OP Mainnet contract as follows:  
```ts
import { getContractDefinition } from '@eth-optimism/contracts'

const artifact = getContractDefinition('SomeOptimismContract')
const abi = artifact.abi
const bytecode = artifact.bytecode
const deployedBytecode = artifact.deployedBytecode
```  
Similarly, you can also get [ethers Interface objects](https://docs.ethers.io/v5/api/utils/abi/interface/) for any contract:  
```ts
import { getContractInterface } from '@eth-optimism/contracts'

const iface = getContractInterface('SomeOptimismContract')
```"
326,How can I find the address of an L2 contract in Optimism?,You can find the address of any L2 contract in Optimism by using the `predeploys` object from the `@eth-optimism/contracts` package. You would import the `predeploys` object and then access the specific contract address using `predeploys.CONTRACT_NAME_GOES_HERE`.,"You can get the address of any L2 contract as follows:  
```ts
import { predeploys } from '@eth-optimism/contracts'

const address = predeploys.CONTRACT_NAME_GOES_HERE
```"
327,Are there any differences in testing decentralized applications on OP Mainnet compared to Ethereum?,"For the most part, running and testing applications on OP Mainnet is identical to running them on Ethereum. However, there are some best practices specific to OP Mainnet that you should be aware of.","---
title: Testing Decentralized Applications for OP Mainnet
lang: en-US
---  
For the most part running applications on OP Mainnet is identical to running them on Ethereum, so the testing is identical too.
In this article you learn the best practices for OP Mainnet testing where there are differences."
327,What will I learn from the article about testing on OP Mainnet?,"The article will teach you the best practices for testing decentralized applications on OP Mainnet, particularly focusing on the differences from testing on Ethereum.","---
title: Testing Decentralized Applications for OP Mainnet
lang: en-US
---  
For the most part running applications on OP Mainnet is identical to running them on Ethereum, so the testing is identical too.
In this article you learn the best practices for OP Mainnet testing where there are differences."
328,Why is it inefficient to test everything on OP Mainnet or a test network?,"Testing everything on OP Mainnet or a test network is inefficient because most Ethereum development stacks include features that make testing easier and faster, which normal Ethereum clients like geth or op-geth don't support.","The vast majority of tests do not involve any OP Mainnet-specific features.
In those cases, while you *could* test everything on OP Mainnet or a test network, that would normally be inefficient.
Most Ethereum development stacks include features that make testing easier, which normal Ethereum clients, such as geth (and our modified version, `op-geth`) don't support.
Therefore, it is a good idea to run the majority of tests, which do not rely on OP Mainnet-specific features, in the development stack.
It is a lot faster.  
Ideally you would want to be able to run some tests on an OP test network, either a [local development environment](dev-node.md) or [the test network](../../useful-tools/networks.md#op-goerli).
This would be a much slower process, but it would let you identify cases where [the equivalence between OP Mainnet and Ethereum breaks down](differences.md) (or the equivalence between Ethereum itself and the development stack, for that matter)."
328,Where should the majority of tests be run if they do not rely on OP Mainnet-specific features?,The majority of tests should be run in the development stack because it is a lot faster and more efficient.,"The vast majority of tests do not involve any OP Mainnet-specific features.
In those cases, while you *could* test everything on OP Mainnet or a test network, that would normally be inefficient.
Most Ethereum development stacks include features that make testing easier, which normal Ethereum clients, such as geth (and our modified version, `op-geth`) don't support.
Therefore, it is a good idea to run the majority of tests, which do not rely on OP Mainnet-specific features, in the development stack.
It is a lot faster.  
Ideally you would want to be able to run some tests on an OP test network, either a [local development environment](dev-node.md) or [the test network](../../useful-tools/networks.md#op-goerli).
This would be a much slower process, but it would let you identify cases where [the equivalence between OP Mainnet and Ethereum breaks down](differences.md) (or the equivalence between Ethereum itself and the development stack, for that matter)."
328,Why would you want to run some tests on an OP test network?,"Running some tests on an OP test network, like a local development environment or the OP Goerli test network, allows you to identify cases where the equivalence between OP Mainnet and Ethereum breaks down, or where the equivalence between Ethereum and the development stack breaks down.","The vast majority of tests do not involve any OP Mainnet-specific features.
In those cases, while you *could* test everything on OP Mainnet or a test network, that would normally be inefficient.
Most Ethereum development stacks include features that make testing easier, which normal Ethereum clients, such as geth (and our modified version, `op-geth`) don't support.
Therefore, it is a good idea to run the majority of tests, which do not rely on OP Mainnet-specific features, in the development stack.
It is a lot faster.  
Ideally you would want to be able to run some tests on an OP test network, either a [local development environment](dev-node.md) or [the test network](../../useful-tools/networks.md#op-goerli).
This would be a much slower process, but it would let you identify cases where [the equivalence between OP Mainnet and Ethereum breaks down](differences.md) (or the equivalence between Ethereum itself and the development stack, for that matter)."
329,Why might some dapps need OP Mainnet-specific features?,Some dapps might need OP Mainnet-specific features because these features are not available as part of the standard development stack. These features could be essential for the dapp's functionality.,"Some dapps need OP Mainnet-specific features that aren't available as part of the development stack.
For example, if your decentralized application relies on [inter-domain communication](../bridge/messaging.md), the effort of developing a stub to let you debug it in a development stack is probably greater than the hassle of having the automated test go to [a local development environment](dev-node.md) each time."
329,What is an example of a feature that might require OP Mainnet-specific development?,"An example of a feature that might require OP Mainnet-specific development is inter-domain communication. This feature might be complex to debug in a development stack, making it more practical to test in a local development environment.","Some dapps need OP Mainnet-specific features that aren't available as part of the development stack.
For example, if your decentralized application relies on [inter-domain communication](../bridge/messaging.md), the effort of developing a stub to let you debug it in a development stack is probably greater than the hassle of having the automated test go to [a local development environment](dev-node.md) each time."
329,Why might it be more practical to use a local development environment for testing certain features?,It might be more practical to use a local development environment for testing certain features because developing a stub for debugging in the development stack could be more effort than the hassle of running automated tests in a local environment.,"Some dapps need OP Mainnet-specific features that aren't available as part of the development stack.
For example, if your decentralized application relies on [inter-domain communication](../bridge/messaging.md), the effort of developing a stub to let you debug it in a development stack is probably greater than the hassle of having the automated test go to [a local development environment](dev-node.md) each time."
330,Can I use mainnet forking with OP Mainnet?,"Yes, you can use mainnet forking with OP Mainnet to simulate the mainnet environment for testing purposes.","In many cases a decentralized application requires the services of other contracts.
For example, [Perpetual v. 2](https://support.perp.com/hc/en-us/articles/5748372509081-Perpetual-Uniswap) cannot function without [Uniswap v. 3](https://uniswap.org/blog/uniswap-v3).  
If that is the case you can use [mainnet forking](https://hardhat.org/hardhat-network/guides/mainnet-forking.html).
It works with OP Mainnet.
Alternatively, you can connect to our [test network](../../useful-tools/networks.md#op-goerli) if those contracts are also deployed there (in many cases they are)."
330,What should I do if my decentralized application requires services from other contracts?,"If your decentralized application requires services from other contracts, you can use mainnet forking or connect to the OP Goerli test network if those contracts are deployed there.","In many cases a decentralized application requires the services of other contracts.
For example, [Perpetual v. 2](https://support.perp.com/hc/en-us/articles/5748372509081-Perpetual-Uniswap) cannot function without [Uniswap v. 3](https://uniswap.org/blog/uniswap-v3).  
If that is the case you can use [mainnet forking](https://hardhat.org/hardhat-network/guides/mainnet-forking.html).
It works with OP Mainnet.
Alternatively, you can connect to our [test network](../../useful-tools/networks.md#op-goerli) if those contracts are also deployed there (in many cases they are)."
330,Is it possible to test my application on a network other than the mainnet?,"Yes, you can test your application on the OP Goerli test network if the required contracts are deployed there.","In many cases a decentralized application requires the services of other contracts.
For example, [Perpetual v. 2](https://support.perp.com/hc/en-us/articles/5748372509081-Perpetual-Uniswap) cannot function without [Uniswap v. 3](https://uniswap.org/blog/uniswap-v3).  
If that is the case you can use [mainnet forking](https://hardhat.org/hardhat-network/guides/mainnet-forking.html).
It works with OP Mainnet.
Alternatively, you can connect to our [test network](../../useful-tools/networks.md#op-goerli) if those contracts are also deployed there (in many cases they are)."
331,How do transaction fees on OP Mainnet compare to those on Ethereum?,"Transaction fees on OP Mainnet work similarly to those on Ethereum, but Layer 2 introduces some new paradigms that make it different. However, OP Mainnet's EVM equivalence makes these differences easy to understand and handle within your app.","---
title: Transaction fees on OP Mainnet
lang: en-US
---  
Transaction fees on OP Mainnet work a lot like fees on Ethereum.
However, Layer 2 introduces some new paradigms that means it can never be exactly like Ethereum.
Luckily, OP Mainnet's [EVM equivalence](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306) makes these differences easy to understand and even easier to handle within your app.  
This page includes the formula for calculating the gas cost of transactions on OP Mainnet.
You can [use our SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas) to calculate those costs for you. If the SDK is too heavy, or you just want to walk through some reference code, use [@eth-optimism/fee-estimation](https://github.com/ethereum-optimism/optimism/tree/develop/packages/fee-estimation). OP Stack fee estimation will soon be natively availabe in your favorite Ethereum tools.  
There are two costs for transaction on OP Mainnet: the L2 execution fee and the L1 data/security fee."
331,What are the components of transaction fees on OP Mainnet?,There are two costs for transactions on OP Mainnet: the L2 execution fee and the L1 data/security fee.,"---
title: Transaction fees on OP Mainnet
lang: en-US
---  
Transaction fees on OP Mainnet work a lot like fees on Ethereum.
However, Layer 2 introduces some new paradigms that means it can never be exactly like Ethereum.
Luckily, OP Mainnet's [EVM equivalence](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306) makes these differences easy to understand and even easier to handle within your app.  
This page includes the formula for calculating the gas cost of transactions on OP Mainnet.
You can [use our SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas) to calculate those costs for you. If the SDK is too heavy, or you just want to walk through some reference code, use [@eth-optimism/fee-estimation](https://github.com/ethereum-optimism/optimism/tree/develop/packages/fee-estimation). OP Stack fee estimation will soon be natively availabe in your favorite Ethereum tools.  
There are two costs for transaction on OP Mainnet: the L2 execution fee and the L1 data/security fee."
331,How can I calculate the gas cost of transactions on OP Mainnet?,"You can use the provided SDK to calculate the gas costs for you. If the SDK is too heavy, you can walk through some reference code using @eth-optimism/fee-estimation. OP Stack fee estimation will soon be natively available in your favorite Ethereum tools.","---
title: Transaction fees on OP Mainnet
lang: en-US
---  
Transaction fees on OP Mainnet work a lot like fees on Ethereum.
However, Layer 2 introduces some new paradigms that means it can never be exactly like Ethereum.
Luckily, OP Mainnet's [EVM equivalence](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306) makes these differences easy to understand and even easier to handle within your app.  
This page includes the formula for calculating the gas cost of transactions on OP Mainnet.
You can [use our SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas) to calculate those costs for you. If the SDK is too heavy, or you just want to walk through some reference code, use [@eth-optimism/fee-estimation](https://github.com/ethereum-optimism/optimism/tree/develop/packages/fee-estimation). OP Stack fee estimation will soon be natively availabe in your favorite Ethereum tools.  
There are two costs for transaction on OP Mainnet: the L2 execution fee and the L1 data/security fee."
332,How are transaction fees calculated on OP Mainnet?,Transaction fees on OP Mainnet are calculated based on the amount of gas used by the transaction multiplied by the gas price attached to the transaction. The gas price is the sum of the L2 base fee and the L2 priority fee.,"Just like on Ethereum, transactions on OP Mainnet have to pay **gas** for the amount of computation and storage that they use.
Every L2 transaction will pay some **execution fee**, equal to the amount of gas used by the transaction multiplied by the gas price attached to the transaction.
This is exactly how fees work on Ethereum with the added bonus that gas prices on OP Mainnet are seriously low.  
Here's the (simple) math:  
```
transaction_gas_price = l2_base_fee + l2_priority_fee
l2_execution_fee = transaction_gas_price * l2_gas_used
```  
The amount of L2 gas used depends on the particular transaction that you're trying to send.
Thanks to [EVM equivalence](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), transactions typically use approximately the same amount of gas on OP Mainnet as they do on Ethereum.
Gas prices fluctuate with time and congestion, but you can always check the current estimated L2 gas price on the [public OP Mainnet dashboard](https://optimism.io/gas-tracker)."
332,Are gas prices on OP Mainnet higher or lower compared to Ethereum?,"Gas prices on OP Mainnet are generally lower compared to Ethereum, making transactions more cost-effective.","Just like on Ethereum, transactions on OP Mainnet have to pay **gas** for the amount of computation and storage that they use.
Every L2 transaction will pay some **execution fee**, equal to the amount of gas used by the transaction multiplied by the gas price attached to the transaction.
This is exactly how fees work on Ethereum with the added bonus that gas prices on OP Mainnet are seriously low.  
Here's the (simple) math:  
```
transaction_gas_price = l2_base_fee + l2_priority_fee
l2_execution_fee = transaction_gas_price * l2_gas_used
```  
The amount of L2 gas used depends on the particular transaction that you're trying to send.
Thanks to [EVM equivalence](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), transactions typically use approximately the same amount of gas on OP Mainnet as they do on Ethereum.
Gas prices fluctuate with time and congestion, but you can always check the current estimated L2 gas price on the [public OP Mainnet dashboard](https://optimism.io/gas-tracker)."
332,Where can I check the current gas prices for OP Mainnet?,You can check the current estimated L2 gas prices on the public OP Mainnet dashboard available at https://optimism.io/gas-tracker.,"Just like on Ethereum, transactions on OP Mainnet have to pay **gas** for the amount of computation and storage that they use.
Every L2 transaction will pay some **execution fee**, equal to the amount of gas used by the transaction multiplied by the gas price attached to the transaction.
This is exactly how fees work on Ethereum with the added bonus that gas prices on OP Mainnet are seriously low.  
Here's the (simple) math:  
```
transaction_gas_price = l2_base_fee + l2_priority_fee
l2_execution_fee = transaction_gas_price * l2_gas_used
```  
The amount of L2 gas used depends on the particular transaction that you're trying to send.
Thanks to [EVM equivalence](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), transactions typically use approximately the same amount of gas on OP Mainnet as they do on Ethereum.
Gas prices fluctuate with time and congestion, but you can always check the current estimated L2 gas price on the [public OP Mainnet dashboard](https://optimism.io/gas-tracker)."
333,How is the base fee for a transaction determined?,The base fee for a transaction is determined by a formula based on the base fee of the previous block and how full that block was. It is the same for each transaction in the block.,"The [base fee](https://eips.ethereum.org/EIPS/eip-1559#simple-summary) is charged for each unit of gas that a transaction uses.
It is the same base fee for each transaction in the block, and is determined by formula based on the base fee of the previous block and how full that block was.  
[The EIP-1559 parameters](./differences.md#eip-1559) have different values in OP Mainnet (and most other OP Stack chain) than those on L1 Ethereum.
As a result, in every block the base fee can be between 98% and 110% of the previous value.  
::: info Base fee volatility  
As blocks are produced every two seconds, the base fee can be between 54% and 1,745% of the value a minute earlier. If it takes the user fourteen seconds to approve the transaction in the wallet, the base fee can almost double in that time.
For now, without protocol adjustments, we recommend setting your `Max Fee` to _at least_ 0.1 gwei. This value will get your user's transaction included in the next block 98% of the time.  
:::  
The base fee specified in the transaction (`max_gas_fee - max_priority_fee`) is not necessarily the base fee that the user will pay, *it is merely an upper limit to that amount*.
In most cases, it makes sense to specify a much higher base fee than the current value, to ensure acceptance.  
For example, as I'm writing this, ETH is about $2000, and a cent is about 5000 gwei.
Assuming 20% of a cent is an acceptable base fee for a transaction, and that the transaction is a big 5,000,000 gas one (at the target block size), this gives us a base fee of 200,000 wei.
That plus a reasonable priority fee would be the value to put in the transaction as max gas fee, even though the L2 base fee (as I'm writing this) is 2,420 wei.  
You can get the current L2 base fee [in the gas tracker dashboard](https://optimism.io/gas-tracker)."
333,Why should I set my Max Fee to at least 0.1 gwei?,"Setting your Max Fee to at least 0.1 gwei is recommended because it will get your transaction included in the next block 98% of the time, considering the base fee can fluctuate significantly within a short period.","The [base fee](https://eips.ethereum.org/EIPS/eip-1559#simple-summary) is charged for each unit of gas that a transaction uses.
It is the same base fee for each transaction in the block, and is determined by formula based on the base fee of the previous block and how full that block was.  
[The EIP-1559 parameters](./differences.md#eip-1559) have different values in OP Mainnet (and most other OP Stack chain) than those on L1 Ethereum.
As a result, in every block the base fee can be between 98% and 110% of the previous value.  
::: info Base fee volatility  
As blocks are produced every two seconds, the base fee can be between 54% and 1,745% of the value a minute earlier. If it takes the user fourteen seconds to approve the transaction in the wallet, the base fee can almost double in that time.
For now, without protocol adjustments, we recommend setting your `Max Fee` to _at least_ 0.1 gwei. This value will get your user's transaction included in the next block 98% of the time.  
:::  
The base fee specified in the transaction (`max_gas_fee - max_priority_fee`) is not necessarily the base fee that the user will pay, *it is merely an upper limit to that amount*.
In most cases, it makes sense to specify a much higher base fee than the current value, to ensure acceptance.  
For example, as I'm writing this, ETH is about $2000, and a cent is about 5000 gwei.
Assuming 20% of a cent is an acceptable base fee for a transaction, and that the transaction is a big 5,000,000 gas one (at the target block size), this gives us a base fee of 200,000 wei.
That plus a reasonable priority fee would be the value to put in the transaction as max gas fee, even though the L2 base fee (as I'm writing this) is 2,420 wei.  
You can get the current L2 base fee [in the gas tracker dashboard](https://optimism.io/gas-tracker)."
333,Where can I find the current L2 base fee?,You can find the current L2 base fee on the gas tracker dashboard available at the Optimism website.,"The [base fee](https://eips.ethereum.org/EIPS/eip-1559#simple-summary) is charged for each unit of gas that a transaction uses.
It is the same base fee for each transaction in the block, and is determined by formula based on the base fee of the previous block and how full that block was.  
[The EIP-1559 parameters](./differences.md#eip-1559) have different values in OP Mainnet (and most other OP Stack chain) than those on L1 Ethereum.
As a result, in every block the base fee can be between 98% and 110% of the previous value.  
::: info Base fee volatility  
As blocks are produced every two seconds, the base fee can be between 54% and 1,745% of the value a minute earlier. If it takes the user fourteen seconds to approve the transaction in the wallet, the base fee can almost double in that time.
For now, without protocol adjustments, we recommend setting your `Max Fee` to _at least_ 0.1 gwei. This value will get your user's transaction included in the next block 98% of the time.  
:::  
The base fee specified in the transaction (`max_gas_fee - max_priority_fee`) is not necessarily the base fee that the user will pay, *it is merely an upper limit to that amount*.
In most cases, it makes sense to specify a much higher base fee than the current value, to ensure acceptance.  
For example, as I'm writing this, ETH is about $2000, and a cent is about 5000 gwei.
Assuming 20% of a cent is an acceptable base fee for a transaction, and that the transaction is a big 5,000,000 gas one (at the target block size), this gives us a base fee of 200,000 wei.
That plus a reasonable priority fee would be the value to put in the transaction as max gas fee, even though the L2 base fee (as I'm writing this) is 2,420 wei.  
You can get the current L2 base fee [in the gas tracker dashboard](https://optimism.io/gas-tracker)."
334,How low can I set the Max Priority Fee on OP Chains?,You can set the Max Priority Fee to as low as 0.0001 gwei on OP Chains.,"In contrast to the base fee, the priority fee in the transaction is the amount that the user pays, and therefore it makes sense to keep it as low as possible.
For OP Chains, you can set the `Max Priority Fee` to as low as 0.0001 gwei."
334,Why is it important to keep the priority fee low in a transaction?,"The priority fee is the amount that the user pays, so it makes sense to keep it as low as possible to minimize transaction costs.","In contrast to the base fee, the priority fee in the transaction is the amount that the user pays, and therefore it makes sense to keep it as low as possible.
For OP Chains, you can set the `Max Priority Fee` to as low as 0.0001 gwei."
335,Why do users on OP Mainnet have to pay an L1 data fee?,"Users on OP Mainnet have to pay an L1 data fee because all transactions on OP Mainnet are also published to Ethereum. This ensures that all the data needed to sync an OP Mainnet node is publicly available on Ethereum, which is crucial for the security of OP Mainnet.","OP Mainnet differs from Ethereum because all transactions on OP Mainnet are also published to Ethereum.
This step is crucial to the security properties of OP Mainnet because it means that all of the data you need to sync an OP Mainnet node is always publicly available on Ethereum.
It's what makes OP Mainnet an L2.  
Users on OP Mainnet have to pay for the cost of submitting their transactions to Ethereum.
We call this the **L1 data fee**, and it's the primary discrepancy between OP Mainnet (and other L2s) and Ethereum.
Because the cost of gas is so expensive on Ethereum, the L1 data fee typically dominates the total cost of a transaction on OP Mainnet.
This fee is based on four factors:  
1. The current gas price on Ethereum.
2. The gas cost to publish the transaction to Ethereum. This scales roughly with the size of the transaction (in bytes).
3. A fixed overhead cost denominated in gas. This is currently set to 188.
4. A dynamic overhead cost which scales the L1 fee paid by a fixed number. This is currently set to 0.684.  
Here's the math:  
```
l1_data_fee = l1_gas_price * (tx_data_gas + fixed_overhead + noncalldata_gas) * dynamic_overhead
```  
Where `tx_data_gas` is:  
```
tx_data_gas = count_zero_bytes(tx_data) * 4 + count_non_zero_bytes(tx_data) * 16
```  
You can read the parameter values from the [gas oracle contract](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#readContract).  
::: warning NOTE
Ethereum has limited support for adding custom transaction types.
As a result, unlike the L2 execution fee, **users are not able to set limits for the L1 data fee that they may be charged**.
The L1 gas price used to charge the data fee is automatically updated when new data is received from Ethereum.
**Spikes in Ethereum gas prices may result in users paying a higher or lower than estimated L1 data fee, by up to 25%.**  
[See here for a detailed explanation why the difference is capped at 25%](https://help.optimism.io/hc/en-us/articles/4416677738907-What-happens-if-the-L1-gas-price-spikes-while-a-transaction-is-in-process).
:::"
335,What factors determine the L1 data fee on OP Mainnet?,"The L1 data fee on OP Mainnet is determined by four factors: the current gas price on Ethereum, the gas cost to publish the transaction to Ethereum (which scales with the size of the transaction in bytes), a fixed overhead cost denominated in gas (currently set to 188), and a dynamic overhead cost that scales the L1 fee by a fixed number (currently set to 0.684).","OP Mainnet differs from Ethereum because all transactions on OP Mainnet are also published to Ethereum.
This step is crucial to the security properties of OP Mainnet because it means that all of the data you need to sync an OP Mainnet node is always publicly available on Ethereum.
It's what makes OP Mainnet an L2.  
Users on OP Mainnet have to pay for the cost of submitting their transactions to Ethereum.
We call this the **L1 data fee**, and it's the primary discrepancy between OP Mainnet (and other L2s) and Ethereum.
Because the cost of gas is so expensive on Ethereum, the L1 data fee typically dominates the total cost of a transaction on OP Mainnet.
This fee is based on four factors:  
1. The current gas price on Ethereum.
2. The gas cost to publish the transaction to Ethereum. This scales roughly with the size of the transaction (in bytes).
3. A fixed overhead cost denominated in gas. This is currently set to 188.
4. A dynamic overhead cost which scales the L1 fee paid by a fixed number. This is currently set to 0.684.  
Here's the math:  
```
l1_data_fee = l1_gas_price * (tx_data_gas + fixed_overhead + noncalldata_gas) * dynamic_overhead
```  
Where `tx_data_gas` is:  
```
tx_data_gas = count_zero_bytes(tx_data) * 4 + count_non_zero_bytes(tx_data) * 16
```  
You can read the parameter values from the [gas oracle contract](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#readContract).  
::: warning NOTE
Ethereum has limited support for adding custom transaction types.
As a result, unlike the L2 execution fee, **users are not able to set limits for the L1 data fee that they may be charged**.
The L1 gas price used to charge the data fee is automatically updated when new data is received from Ethereum.
**Spikes in Ethereum gas prices may result in users paying a higher or lower than estimated L1 data fee, by up to 25%.**  
[See here for a detailed explanation why the difference is capped at 25%](https://help.optimism.io/hc/en-us/articles/4416677738907-What-happens-if-the-L1-gas-price-spikes-while-a-transaction-is-in-process).
:::"
335,Can users set limits for the L1 data fee on OP Mainnet?,"No, users are not able to set limits for the L1 data fee on OP Mainnet. The L1 gas price used to charge the data fee is automatically updated when new data is received from Ethereum. Spikes in Ethereum gas prices may result in users paying a higher or lower than estimated L1 data fee, by up to 25%.","OP Mainnet differs from Ethereum because all transactions on OP Mainnet are also published to Ethereum.
This step is crucial to the security properties of OP Mainnet because it means that all of the data you need to sync an OP Mainnet node is always publicly available on Ethereum.
It's what makes OP Mainnet an L2.  
Users on OP Mainnet have to pay for the cost of submitting their transactions to Ethereum.
We call this the **L1 data fee**, and it's the primary discrepancy between OP Mainnet (and other L2s) and Ethereum.
Because the cost of gas is so expensive on Ethereum, the L1 data fee typically dominates the total cost of a transaction on OP Mainnet.
This fee is based on four factors:  
1. The current gas price on Ethereum.
2. The gas cost to publish the transaction to Ethereum. This scales roughly with the size of the transaction (in bytes).
3. A fixed overhead cost denominated in gas. This is currently set to 188.
4. A dynamic overhead cost which scales the L1 fee paid by a fixed number. This is currently set to 0.684.  
Here's the math:  
```
l1_data_fee = l1_gas_price * (tx_data_gas + fixed_overhead + noncalldata_gas) * dynamic_overhead
```  
Where `tx_data_gas` is:  
```
tx_data_gas = count_zero_bytes(tx_data) * 4 + count_non_zero_bytes(tx_data) * 16
```  
You can read the parameter values from the [gas oracle contract](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#readContract).  
::: warning NOTE
Ethereum has limited support for adding custom transaction types.
As a result, unlike the L2 execution fee, **users are not able to set limits for the L1 data fee that they may be charged**.
The L1 gas price used to charge the data fee is automatically updated when new data is received from Ethereum.
**Spikes in Ethereum gas prices may result in users paying a higher or lower than estimated L1 data fee, by up to 25%.**  
[See here for a detailed explanation why the difference is capped at 25%](https://help.optimism.io/hc/en-us/articles/4416677738907-What-happens-if-the-L1-gas-price-spikes-while-a-transaction-is-in-process).
:::"
336,How do I send a transaction on OP Mainnet?,"The process of sending a transaction on OP Mainnet is identical to the process of sending a transaction on Ethereum. You need to provide a gas price greater than or equal to the current L2 gas price or use transaction type 2 with a priority fee within the same range as the transactions included in the latest block. Additionally, you should set your transaction gas limit in the same way you would on Ethereum, for example, using `eth_estimateGas`.","The process of sending a transaction on OP Mainnet is identical to the process of sending a transaction on Ethereum.
When sending a transaction, you should provide a gas price greater than or equal to the current L2 gas price, or use [transaction type 2](https://www.educative.io/answers/type-0-vs-type-2-ethereum-transactions) and a priority fee that is within the same range as the transactions included in the latest block.
Similarly, you should set your transaction gas limit in the same way that you would set your transaction gas limit on Ethereum (e.g. via `eth_estimateGas`)."
336,What gas price should I use when sending a transaction on OP Mainnet?,"You should provide a gas price that is greater than or equal to the current L2 gas price. Alternatively, you can use transaction type 2 and set a priority fee that is within the same range as the transactions included in the latest block.","The process of sending a transaction on OP Mainnet is identical to the process of sending a transaction on Ethereum.
When sending a transaction, you should provide a gas price greater than or equal to the current L2 gas price, or use [transaction type 2](https://www.educative.io/answers/type-0-vs-type-2-ethereum-transactions) and a priority fee that is within the same range as the transactions included in the latest block.
Similarly, you should set your transaction gas limit in the same way that you would set your transaction gas limit on Ethereum (e.g. via `eth_estimateGas`)."
336,How do I set the gas limit for a transaction on OP Mainnet?,"You should set your transaction gas limit in the same way that you would set it on Ethereum, for example, by using `eth_estimateGas`.","The process of sending a transaction on OP Mainnet is identical to the process of sending a transaction on Ethereum.
When sending a transaction, you should provide a gas price greater than or equal to the current L2 gas price, or use [transaction type 2](https://www.educative.io/answers/type-0-vs-type-2-ethereum-transactions) and a priority fee that is within the same range as the transactions included in the latest block.
Similarly, you should set your transaction gas limit in the same way that you would set your transaction gas limit on Ethereum (e.g. via `eth_estimateGas`)."
337,How are transaction fees calculated on OP Mainnet?,"On OP Mainnet, transaction fees are calculated by summing both an L2 execution fee and an L1 data fee. This provides users with the most accurate estimate of the total cost of a transaction.","Many Ethereum applications display estimated fees to users by multiplying the gas price by the gas limit.
However, as discussed earlier, users on OP Mainnet are charged both an L2 execution fee and an L1 data fee.
As a result, you should display the sum of both of these fees to give users the most accurate estimate of the total cost of a transaction.  
[See here for a code sample using the JavaScript SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas)"
337,Why can't I just use the gas price and gas limit to estimate fees on OP Mainnet?,"On OP Mainnet, using just the gas price and gas limit won't give you an accurate estimate because you need to account for both the L2 execution fee and the L1 data fee. Both of these fees combined give the true cost of a transaction.","Many Ethereum applications display estimated fees to users by multiplying the gas price by the gas limit.
However, as discussed earlier, users on OP Mainnet are charged both an L2 execution fee and an L1 data fee.
As a result, you should display the sum of both of these fees to give users the most accurate estimate of the total cost of a transaction.  
[See here for a code sample using the JavaScript SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas)"
337,Is there a resource to help me estimate gas fees for OP Mainnet transactions?,"Yes, there is a code sample using the JavaScript SDK available [here](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas) that can help you estimate gas fees for OP Mainnet transactions.","Many Ethereum applications display estimated fees to users by multiplying the gas price by the gas limit.
However, as discussed earlier, users on OP Mainnet are charged both an L2 execution fee and an L1 data fee.
As a result, you should display the sum of both of these fees to give users the most accurate estimate of the total cost of a transaction.  
[See here for a code sample using the JavaScript SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas)"
338,How can I estimate the L2 execution fee on Optimism?,"You can estimate the L2 execution fee by multiplying the gas price by the gas limit, just like on Ethereum.","You can estimate the L2 execution fee by multiplying the gas price by the gas limit, just like on Ethereum."
339,How can I estimate the L1 data fee on the Optimism network?,"You can estimate the L1 data fee using the `GasPriceOracle` predeployed smart contract located at `0x420000000000000000000000000000000000000F`. To do so, call `GasPriceOracle.getL1Fee(<unsigned RLP encoded transaction>)`.","You can use the SDK [(see here)](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).
Alternatively, you can estimate the L1 data fee using the `GasPriceOracle` predeployed smart contract located at [`0x420000000000000000000000000000000000000F`](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F).
[The `GasPriceOracle` contract](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L2/GasPriceOracle.sol) is located at the same address on every Optimism network (mainnet and testnet).
To do so, call `GasPriceOracle.getL1Fee(<unsigned RLP encoded transaction>)`."
339,Is the `GasPriceOracle` contract address the same on all Optimism networks?,"Yes, the `GasPriceOracle` contract is located at the same address (`0x420000000000000000000000000000000000000F`) on every Optimism network, including both mainnet and testnet.","You can use the SDK [(see here)](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).
Alternatively, you can estimate the L1 data fee using the `GasPriceOracle` predeployed smart contract located at [`0x420000000000000000000000000000000000000F`](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F).
[The `GasPriceOracle` contract](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L2/GasPriceOracle.sol) is located at the same address on every Optimism network (mainnet and testnet).
To do so, call `GasPriceOracle.getL1Fee(<unsigned RLP encoded transaction>)`."
339,Where can I find more information about the SDK for estimating gas fees on Optimism?,You can find more information about the SDK for estimating gas fees on Optimism in the [Optimism tutorial repository](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).,"You can use the SDK [(see here)](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).
Alternatively, you can estimate the L1 data fee using the `GasPriceOracle` predeployed smart contract located at [`0x420000000000000000000000000000000000000F`](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F).
[The `GasPriceOracle` contract](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L2/GasPriceOracle.sol) is located at the same address on every Optimism network (mainnet and testnet).
To do so, call `GasPriceOracle.getL1Fee(<unsigned RLP encoded transaction>)`."
340,How can I estimate the total fee for a transaction on Optimism?,You can estimate the total fee by combining your estimates for the L2 execution fee and L1 data fee.,You can estimate the total fee by combining your estimates for the L2 execution fee and L1 data fee.
341,How do I send the maximum amount of ETH from my wallet on Optimism?,"To send the maximum amount of ETH from your wallet on Optimism, you need to subtract the estimated L2 execution fee and the estimated L1 data fee from the total amount of ETH you have. This ensures that you have enough ETH to cover the transaction fees.","Sending the maximum amount of ETH that a user has in their wallet is a relatively common use case.
When doing this, you will need to subtract the estimated L2 execution fee and the estimated L1 data fee from the amount of ETH you want the user to send.
Use the logic described above for estimating the total fee."
341,What are the fees involved when sending ETH on Optimism?,"When sending ETH on Optimism, you need to account for two types of fees: the L2 execution fee and the L1 data fee. These fees need to be subtracted from the total amount of ETH you want to send to ensure the transaction can be processed.","Sending the maximum amount of ETH that a user has in their wallet is a relatively common use case.
When doing this, you will need to subtract the estimated L2 execution fee and the estimated L1 data fee from the amount of ETH you want the user to send.
Use the logic described above for estimating the total fee."
342,Why am I getting an error code `-32000` when trying to send a transaction on Optimism?,"You are getting this error because you don't have enough ETH to cover the value of the transaction, the L2 execution fee, and the L1 data fee.","- Error code: `-32000`
- Error message: `invalid transaction: insufficient funds for l1Fee + l2Fee + value`  
You'll get this error when attempting to send a transaction and you don't have enough ETH to pay for the value of the transaction, the L2 execution fee, and the L1 data fee.
You might get this error when attempting to send max ETH if you aren't properly accounting for both the L2 execution fee and the L1 data fee."
342,What does the error message `invalid transaction: insufficient funds for l1Fee + l2Fee + value` mean?,"This error message means that you don't have enough ETH to pay for the transaction value, the L2 execution fee, and the L1 data fee. You need to ensure you have sufficient funds to cover all these costs.","- Error code: `-32000`
- Error message: `invalid transaction: insufficient funds for l1Fee + l2Fee + value`  
You'll get this error when attempting to send a transaction and you don't have enough ETH to pay for the value of the transaction, the L2 execution fee, and the L1 data fee.
You might get this error when attempting to send max ETH if you aren't properly accounting for both the L2 execution fee and the L1 data fee."
342,How can I avoid the `invalid transaction: insufficient funds for l1Fee + l2Fee + value` error when sending max ETH?,"To avoid this error, make sure to account for both the L2 execution fee and the L1 data fee in addition to the transaction value when sending max ETH. This ensures you have enough funds to cover all necessary fees.","- Error code: `-32000`
- Error message: `invalid transaction: insufficient funds for l1Fee + l2Fee + value`  
You'll get this error when attempting to send a transaction and you don't have enough ETH to pay for the value of the transaction, the L2 execution fee, and the L1 data fee.
You might get this error when attempting to send max ETH if you aren't properly accounting for both the L2 execution fee and the L1 data fee."
343,Are there any known issues with Optimism?,"Yes, the Optimism Governance Documentation includes a section specifically titled 'Known Issues' which details any current problems or limitations users might encounter.","---
title: Known Issues
lang: en-US
---"
344,Why might my transaction on the OP Chain become stuck?,"Your transaction might become stuck if the maximum fee per gas specified by your transaction is less than the block base fee. In this case, the transaction does not get included until the base fee drops below the value specified in your transaction.","OP Chain uses EIP-1559, but with different parameters than L1 Ethereum.
As a result, while the base fee on L1 can grow by up to 12.5% in a twelve second period (in the case of a single 30M gas block), the L2 base fee can grow by up to 77% (in the case of six 30M gas blocks).
However, it still shrinks by only up to 12.5% in the same twelve second period (if all the blocks are empty).  
If the maximum fee per gas specified by the transaction is less than the block base fee, it does not get included until the base fee drops to below the value in the transaction.
When this happens, some users may see their transaction become stuck.
No funds are lost, but the transaction does not clear on its own.  
We have a workaround that users and wallet operators can implement immediately, and we expect a protocol-level fix to be live by the end of Q4."
344,Is there a way to fix a stuck transaction on the OP Chain?,"Yes, there is a workaround that users and wallet operators can implement immediately to fix a stuck transaction. Additionally, a protocol-level fix is expected to be live by the end of Q4.","OP Chain uses EIP-1559, but with different parameters than L1 Ethereum.
As a result, while the base fee on L1 can grow by up to 12.5% in a twelve second period (in the case of a single 30M gas block), the L2 base fee can grow by up to 77% (in the case of six 30M gas blocks).
However, it still shrinks by only up to 12.5% in the same twelve second period (if all the blocks are empty).  
If the maximum fee per gas specified by the transaction is less than the block base fee, it does not get included until the base fee drops to below the value in the transaction.
When this happens, some users may see their transaction become stuck.
No funds are lost, but the transaction does not clear on its own.  
We have a workaround that users and wallet operators can implement immediately, and we expect a protocol-level fix to be live by the end of Q4."
344,How does the base fee growth on OP Chain compare to L1 Ethereum?,"On the OP Chain, the base fee can grow by up to 77% in a twelve-second period, whereas on L1 Ethereum, it can grow by up to 12.5% in the same period.","OP Chain uses EIP-1559, but with different parameters than L1 Ethereum.
As a result, while the base fee on L1 can grow by up to 12.5% in a twelve second period (in the case of a single 30M gas block), the L2 base fee can grow by up to 77% (in the case of six 30M gas blocks).
However, it still shrinks by only up to 12.5% in the same twelve second period (if all the blocks are empty).  
If the maximum fee per gas specified by the transaction is less than the block base fee, it does not get included until the base fee drops to below the value in the transaction.
When this happens, some users may see their transaction become stuck.
No funds are lost, but the transaction does not clear on its own.  
We have a workaround that users and wallet operators can implement immediately, and we expect a protocol-level fix to be live by the end of Q4."
345,How can I save on the cost of L2 gas on Optimism?,"To save on the cost of L2 gas, you should minimize the max priority fee for your transactions.","Set the maximum fee per gas for transactions to a relatively high value, such as 0.1 gwei.
This will *not* increase the transaction cost because the same base fee, determined by a formula, is charged to all the transactions in the block.
[See here for more details](../guides/wallet-dev.md#base-fee).
To save on the cost of L2 gas you want to minimize the max priority fee.  
Also, if the [current base fee](https://optimism.io/gas-tracker) is comparable to 0.1 gwei or higher, you might want to suggest to users a higher multiple of the base fee than you would on L1 Ethereum, because it can grow faster in the time interval between transaction creation and transaction signing and submission."
345,Does setting a high maximum fee per gas increase my transaction cost on Optimism?,"No, setting a high maximum fee per gas, such as 0.1 gwei, will not increase your transaction cost because the same base fee, determined by a formula, is charged to all transactions in the block.","Set the maximum fee per gas for transactions to a relatively high value, such as 0.1 gwei.
This will *not* increase the transaction cost because the same base fee, determined by a formula, is charged to all the transactions in the block.
[See here for more details](../guides/wallet-dev.md#base-fee).
To save on the cost of L2 gas you want to minimize the max priority fee.  
Also, if the [current base fee](https://optimism.io/gas-tracker) is comparable to 0.1 gwei or higher, you might want to suggest to users a higher multiple of the base fee than you would on L1 Ethereum, because it can grow faster in the time interval between transaction creation and transaction signing and submission."
345,Why might I need to suggest a higher multiple of the base fee on Optimism compared to L1 Ethereum?,"You might need to suggest a higher multiple of the base fee on Optimism if the current base fee is comparable to 0.1 gwei or higher, because the base fee can grow faster in the time interval between transaction creation and transaction signing and submission.","Set the maximum fee per gas for transactions to a relatively high value, such as 0.1 gwei.
This will *not* increase the transaction cost because the same base fee, determined by a formula, is charged to all the transactions in the block.
[See here for more details](../guides/wallet-dev.md#base-fee).
To save on the cost of L2 gas you want to minimize the max priority fee.  
Also, if the [current base fee](https://optimism.io/gas-tracker) is comparable to 0.1 gwei or higher, you might want to suggest to users a higher multiple of the base fee than you would on L1 Ethereum, because it can grow faster in the time interval between transaction creation and transaction signing and submission."
346,Who determines the default priority fee and max fee for a transaction in Optimism?,"Wallets are usually in charge of determining the default priority fee and max fee that a transaction would include, so the recommendations can be applied directly.","Wallets are usually in charge of determining the default priority fee and max fee that a transaction would include, so the above recommendations can be applied directly."
347,Can dapp developers override the default wallet recommendations?,"Yes, as a dapp developer, you can usually override the default recommendation of the wallet.","As a dapp developer you can usually override the default recommendation of the wallet
(see, for example, [ethers](https://github.com/ethers-io/ethers.js/blob/v5.7/packages/contracts/lib/index.d.ts#L10-L11)).
As long as not all wallets are upgraded according to our recommendations, it makes sense for dapps to get the current base fee and recommend a value based on that."
347,Why might it be necessary for dapps to get the current base fee and recommend a value based on that?,It makes sense for dapps to get the current base fee and recommend a value based on that because not all wallets are upgraded according to the recommendations.,"As a dapp developer you can usually override the default recommendation of the wallet
(see, for example, [ethers](https://github.com/ethers-io/ethers.js/blob/v5.7/packages/contracts/lib/index.d.ts#L10-L11)).
As long as not all wallets are upgraded according to our recommendations, it makes sense for dapps to get the current base fee and recommend a value based on that."
348,How can I manage the gas fees for my transactions on Optimism?,"You can manage the gas fees by modifying the transaction fields. For a detailed explanation on how to do this, you can visit the help center [here](https://help.optimism.io/hc/en-us/articles/16711400204315-Managing-the-gas-fees-that-make-up-the-L2-execution-fee).","As a user you are the final authority on transaction fields.
[See the help center](https://help.optimism.io/hc/en-us/articles/16711400204315-Managing-the-gas-fees-that-make-up-the-L2-execution-fee) for an explanation of how to modify the fees.  
If you already have a transaction that is stuck and you want to cancel it, or increase its base fee, submit another transaction with the same nonce value.
[See the help center for information on how to do it](https://help.optimism.io/hc/en-us/articles/17045804513307-What-to-do-with-a-stuck-pending-transaction-)."
348,What should I do if my transaction is stuck on Optimism?,"If your transaction is stuck, you can either cancel it or increase its base fee by submitting another transaction with the same nonce value. For more information on how to handle a stuck transaction, you can visit the help center [here](https://help.optimism.io/hc/en-us/articles/17045804513307-What-to-do-with-a-stuck-pending-transaction-).","As a user you are the final authority on transaction fields.
[See the help center](https://help.optimism.io/hc/en-us/articles/16711400204315-Managing-the-gas-fees-that-make-up-the-L2-execution-fee) for an explanation of how to modify the fees.  
If you already have a transaction that is stuck and you want to cancel it, or increase its base fee, submit another transaction with the same nonce value.
[See the help center for information on how to do it](https://help.optimism.io/hc/en-us/articles/17045804513307-What-to-do-with-a-stuck-pending-transaction-)."
349,Why don't deposit transactions on Optimism's L2 have a chainID?,"Deposit transactions on Optimism's L2 don't have a chainID because they come from a dummy address and don't have a signature. In Ethereum, the chainID is encoded as part of the signature, so without a signature, there's no recoverable chainID. However, this isn't a problem because these transactions are only created during the block derivation process, and there's no need to recover the chainID.","These are issues that appear like they might be a problem, but really aren't.  
- **Deposit transactions don't have a chainId on L2**.  
[Deposit transactions](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type) are transactions added to the L2 blockchain as part of the block derivation process.
These transactions come from a dummy address and don't have a signature.
Because in Ethereum the chainID is encoded as part of the signature, this means there is no recoverable chainID for these transactions.  
This is not a problem because the only source of deposit transactions is the block derivation process.
There shouldn't be a need to recover the chainID."
349,What are deposit transactions in Optimism?,Deposit transactions in Optimism are transactions added to the L2 blockchain as part of the block derivation process. They come from a dummy address and don't have a signature. These transactions are specifically created during the block derivation process and are not a cause for concern.,"These are issues that appear like they might be a problem, but really aren't.  
- **Deposit transactions don't have a chainId on L2**.  
[Deposit transactions](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/deposits.md#the-deposited-transaction-type) are transactions added to the L2 blockchain as part of the block derivation process.
These transactions come from a dummy address and don't have a signature.
Because in Ethereum the chainID is encoded as part of the signature, this means there is no recoverable chainID for these transactions.  
This is not a problem because the only source of deposit transactions is the block derivation process.
There shouldn't be a need to recover the chainID."
350,Where can I find governance videos for Optimism?,You can find governance videos for Optimism by following the link provided in the documentation: ../governance/media.md.,"---
title: Developer Videos
lang: en-US
---  
These are developer videos.
[See here for governance videos](../governance/media.md)."
351,How can I deploy a contract on OP Goerli?,You can learn how to deploy a contract on OP Goerli by watching the video linked in the documentation. The specific section for deploying a contract starts at 1:24 in the video.,"In this video you learn how to use OP Mainnet (or a test network) for your own development:  
- [Deploy a contract on OP Goerli (Foundry) (1:24)](https://youtu.be/_Y6CwsYgqwI?t=84)
- [Interact with an OP Goerli contract (Foundry) (2:20)](https://youtu.be/_Y6CwsYgqwI?t=140)
- [Use the Etherscan block explorer with OP Goerli (2:53)](https://youtu.be/_Y6CwsYgqwI?t=173)
- [Getting started docs, with other development stacks (4:45)](https://youtu.be/_Y6CwsYgqwI?t=285)
- [Getting test ETH (6:00)](https://youtu.be/_Y6CwsYgqwI?t=360)
- [The OP Mainnet Bridge (7:25)](https://youtu.be/_Y6CwsYgqwI?t=445)
- [Inter-layer communication, between Ethereum and OP Mainnet, or Goerli and OP Goerli (8:48)](https://youtu.be/_Y6CwsYgqwI?t=528)
- [Gas cost calculation (10:20)](https://youtu.be/_Y6CwsYgqwI?t=620)  
<iframe src=""https://www.youtube.com/embed/_Y6CwsYgqwI"" title=""Getting Started with OP Mainnet"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
351,Where can I find information on how to interact with an OP Goerli contract?,"The video in the documentation provides a section on interacting with an OP Goerli contract, which starts at 2:20.","In this video you learn how to use OP Mainnet (or a test network) for your own development:  
- [Deploy a contract on OP Goerli (Foundry) (1:24)](https://youtu.be/_Y6CwsYgqwI?t=84)
- [Interact with an OP Goerli contract (Foundry) (2:20)](https://youtu.be/_Y6CwsYgqwI?t=140)
- [Use the Etherscan block explorer with OP Goerli (2:53)](https://youtu.be/_Y6CwsYgqwI?t=173)
- [Getting started docs, with other development stacks (4:45)](https://youtu.be/_Y6CwsYgqwI?t=285)
- [Getting test ETH (6:00)](https://youtu.be/_Y6CwsYgqwI?t=360)
- [The OP Mainnet Bridge (7:25)](https://youtu.be/_Y6CwsYgqwI?t=445)
- [Inter-layer communication, between Ethereum and OP Mainnet, or Goerli and OP Goerli (8:48)](https://youtu.be/_Y6CwsYgqwI?t=528)
- [Gas cost calculation (10:20)](https://youtu.be/_Y6CwsYgqwI?t=620)  
<iframe src=""https://www.youtube.com/embed/_Y6CwsYgqwI"" title=""Getting Started with OP Mainnet"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
351,How do I get test ETH for development on OP Goerli?,"The video linked in the documentation explains how to get test ETH, and this section starts at 6:00.","In this video you learn how to use OP Mainnet (or a test network) for your own development:  
- [Deploy a contract on OP Goerli (Foundry) (1:24)](https://youtu.be/_Y6CwsYgqwI?t=84)
- [Interact with an OP Goerli contract (Foundry) (2:20)](https://youtu.be/_Y6CwsYgqwI?t=140)
- [Use the Etherscan block explorer with OP Goerli (2:53)](https://youtu.be/_Y6CwsYgqwI?t=173)
- [Getting started docs, with other development stacks (4:45)](https://youtu.be/_Y6CwsYgqwI?t=285)
- [Getting test ETH (6:00)](https://youtu.be/_Y6CwsYgqwI?t=360)
- [The OP Mainnet Bridge (7:25)](https://youtu.be/_Y6CwsYgqwI?t=445)
- [Inter-layer communication, between Ethereum and OP Mainnet, or Goerli and OP Goerli (8:48)](https://youtu.be/_Y6CwsYgqwI?t=528)
- [Gas cost calculation (10:20)](https://youtu.be/_Y6CwsYgqwI?t=620)  
<iframe src=""https://www.youtube.com/embed/_Y6CwsYgqwI"" title=""Getting Started with OP Mainnet"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
352,Did Optimism participate in any events in early 2023?,"Yes, Optimism participated in ETHDenver 2023, which took place from February 24th to March 5th, 2023.","February 24th to Mar 5th, 2023  
<iframe width=""682"" height=""384"" src=""https://www.youtube.com/embed/Q5TL_AJhuro"" title=""Optimism at ETHDenver 2023"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
353,Who participated in the panel about scaling Ethereum for global adoption?,"The panel included Liam Horne from OP Labs, Jesse from Base, Eva from The Graph Foundation, and Stani from Aave. It was moderated by Molly from Protocol Labs.","OP Labs' CEO, Liam Horne joined Jesse from Base, Eva from The Graph Foundation, and Stani from Aave for a panel covering how L2s are scaling Ethereum for global adoption, moderated by Molly from Protocol Labs.  
<iframe width=""720"" height=""407"" src=""https://www.youtube.com/embed/bBNmPNM8U_c"" title=""Scaling Ethereum for Global Adoption with L2 Panel"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
353,What was the main topic of the panel discussion?,The main topic of the panel discussion was how Layer 2 solutions (L2s) are scaling Ethereum for global adoption.,"OP Labs' CEO, Liam Horne joined Jesse from Base, Eva from The Graph Foundation, and Stani from Aave for a panel covering how L2s are scaling Ethereum for global adoption, moderated by Molly from Protocol Labs.  
<iframe width=""720"" height=""407"" src=""https://www.youtube.com/embed/bBNmPNM8U_c"" title=""Scaling Ethereum for Global Adoption with L2 Panel"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
353,Where can I watch the panel discussion on scaling Ethereum for global adoption?,You can watch the panel discussion on YouTube through the provided link: https://www.youtube.com/embed/bBNmPNM8U_c.,"OP Labs' CEO, Liam Horne joined Jesse from Base, Eva from The Graph Foundation, and Stani from Aave for a panel covering how L2s are scaling Ethereum for global adoption, moderated by Molly from Protocol Labs.  
<iframe width=""720"" height=""407"" src=""https://www.youtube.com/embed/bBNmPNM8U_c"" title=""Scaling Ethereum for Global Adoption with L2 Panel"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
354,Who is Kelvin Fichter and what did he talk about?,"Kelvin Fichter is a member of the OP Labs DevRel team, and he talked about building decentralized, attestation-based identity onchain.","From the OP Labs DevRel team, Kelvin Fichter talked about building decentralized, attestation-based identity onchain. Come for the knowledge, stay for the slide art.  
<iframe width=""720"" height=""407"" src=""https://www.youtube.com/embed/o0N1Z9AyrEM"" title=""Doing Decentralized Identity Right with Kelvin Fichter"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
354,Where can I watch Kelvin Fichter's talk on decentralized identity?,You can watch Kelvin Fichter's talk on decentralized identity on YouTube. The video is embedded in the Optimism Governance Documentation and can be accessed through the provided link.,"From the OP Labs DevRel team, Kelvin Fichter talked about building decentralized, attestation-based identity onchain. Come for the knowledge, stay for the slide art.  
<iframe width=""720"" height=""407"" src=""https://www.youtube.com/embed/o0N1Z9AyrEM"" title=""Doing Decentralized Identity Right with Kelvin Fichter"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
355,Who participated in the panel discussion about Web3 identity?,"The panel discussion about Web3 identity included Kelvin Fichter, Masha Healy, and Evin McMullen.","He continued to share his thoughts on a panel, where he sat down Masha Healy & Evin McMullen as they all discussed Web3 identity off-chain, on-chain, or both.  
<iframe width=""720"" height=""407"" src=""https://www.youtube.com/embed/b7UTF1Ri7AM"" title=""Web3 identity off-chain, on-chain, and both with Kelvin Fichter, Masha Healy &amp; Evin McMullen"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
355,What topics were discussed in the panel?,"The panel discussed Web3 identity, specifically focusing on whether it should be off-chain, on-chain, or a combination of both.","He continued to share his thoughts on a panel, where he sat down Masha Healy & Evin McMullen as they all discussed Web3 identity off-chain, on-chain, or both.  
<iframe width=""720"" height=""407"" src=""https://www.youtube.com/embed/b7UTF1Ri7AM"" title=""Web3 identity off-chain, on-chain, and both with Kelvin Fichter, Masha Healy &amp; Evin McMullen"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
355,Is there a video available for the panel discussion?,"Yes, there is a video available for the panel discussion, which can be found on YouTube.","He continued to share his thoughts on a panel, where he sat down Masha Healy & Evin McMullen as they all discussed Web3 identity off-chain, on-chain, or both.  
<iframe width=""720"" height=""407"" src=""https://www.youtube.com/embed/b7UTF1Ri7AM"" title=""Web3 identity off-chain, on-chain, and both with Kelvin Fichter, Masha Healy &amp; Evin McMullen"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
356,Is there a video related to Optimism Governance that I can watch?,"Yes, there is a video titled 'Kelvin Does Denver' which you can watch on YouTube. It covers topics related to Optimism Governance and can be accessed through an embedded link in the documentation.","<iframe width=""682"" height=""384"" src=""https://www.youtube.com/embed/TXDqMrjPAKg"" title=""Kelvin Does Denver"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
356,Where can I find more visual content about Optimism Governance?,"You can find visual content such as videos in the Optimism Governance Documentation. For example, there is a video titled 'Kelvin Does Denver' that is embedded directly in the documentation for easy access.","<iframe width=""682"" height=""384"" src=""https://www.youtube.com/embed/TXDqMrjPAKg"" title=""Kelvin Does Denver"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
357,"Why is September 22nd, 2022 significant in the context of Optimism Governance?","The fragment does not provide enough information to determine the significance of September 22nd, 2022 in the context of Optimism Governance.","September 22nd, 2022"
358,What's the OP Stack chain software?,"The OP Stack chain software is a framework that allows for the deployment of op-chains, which are optimized blockchain networks designed to serve new use cases and be future-proof.","This talk covers the OP Stack chain software, and how the Bedrock release will enable deployments of op-chains which serve new use cases, are future proof, and will all one day fit together to form the Superchain.  
<iframe src=""https://www.youtube.com/embed/jlKPjiDu_KM?list=RDCMUCfF9ZO8Ug4xk_AJd4aeT5HA"" title=""Modular OP Stack - Karl Floersch"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
358,What is the Bedrock release?,The Bedrock release is an update to the OP Stack chain software that will enable the deployment of op-chains. These op-chains will eventually fit together to form what is called the Superchain.,"This talk covers the OP Stack chain software, and how the Bedrock release will enable deployments of op-chains which serve new use cases, are future proof, and will all one day fit together to form the Superchain.  
<iframe src=""https://www.youtube.com/embed/jlKPjiDu_KM?list=RDCMUCfF9ZO8Ug4xk_AJd4aeT5HA"" title=""Modular OP Stack - Karl Floersch"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
358,What is the Superchain?,The Superchain is a future vision where all op-chains deployed using the OP Stack chain software will interconnect and work together seamlessly.,"This talk covers the OP Stack chain software, and how the Bedrock release will enable deployments of op-chains which serve new use cases, are future proof, and will all one day fit together to form the Superchain.  
<iframe src=""https://www.youtube.com/embed/jlKPjiDu_KM?list=RDCMUCfF9ZO8Ug4xk_AJd4aeT5HA"" title=""Modular OP Stack - Karl Floersch"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
359,How does the bedrock architecture impact fees?,"The bedrock architecture reduces fees by redesigning the rollup architecture, making it more efficient and cost-effective.","This talks covers bedrock‚Äôs architecture. It explains how redesigning the rollup architecture in bedrock reduces fees & increases implementation simplicity. It also covers the various components of the system & how they interact.  
<iframe src=""https://www.youtube.com/embed/fkoTMchOFPI?list=RDCMUCfF9ZO8Ug4xk_AJd4aeT5HA"" title=""Introduction to Architecture - Joshua Gutow"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
359,What are some components of the bedrock system?,The bedrock system includes various components that interact with each other to improve the overall functionality and simplicity of the implementation.,"This talks covers bedrock‚Äôs architecture. It explains how redesigning the rollup architecture in bedrock reduces fees & increases implementation simplicity. It also covers the various components of the system & how they interact.  
<iframe src=""https://www.youtube.com/embed/fkoTMchOFPI?list=RDCMUCfF9ZO8Ug4xk_AJd4aeT5HA"" title=""Introduction to Architecture - Joshua Gutow"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
360,Can you explain what the video in the Optimism Governance Documentation is about?,The video discusses the design space around two key design choices related to sequencing: who sequences (decentralization) and how they sequence (MEV!).,"In this video you learn the design space around two design choices related to sequencing:  
- *who* sequences (decentralization)
- *how* they sequence (MEV!)  
<iframe src=""https://www.youtube.com/embed/aKxS16TG2jk?list=PLXzKMXK2aHh4vbe7GLQfOnL-QJ1O5EqMv"" title=""Modular sequencing - Norswap Laurent"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
360,What are the two main topics covered in the video about sequencing?,The two main topics covered in the video are who sequences (decentralization) and how they sequence (MEV!).,"In this video you learn the design space around two design choices related to sequencing:  
- *who* sequences (decentralization)
- *how* they sequence (MEV!)  
<iframe src=""https://www.youtube.com/embed/aKxS16TG2jk?list=PLXzKMXK2aHh4vbe7GLQfOnL-QJ1O5EqMv"" title=""Modular sequencing - Norswap Laurent"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
361,How does the next OP Mainnet upgrade improve the rollup?,"The next OP Mainnet upgrade improves the rollup with a modular design, which allows for quick adoption of future scaling improvements like EIP-4844, also known as proto-danksharding.","In this talk protolambda explains how the next OP Mainnet upgrade improves the rollup with modular design, and how this can be utilized to quickly adopt future scaling improvements like EIP-4844 (a.k.a. proto-danksharding).
OP Labs is contributing to L1 research and development to increase the data availability used for securing all L2s.  
<iframe src=""https://www.youtube.com/embed/-xWpalvZeEU?list=PLXzKMXK2aHh4vbe7GLQfOnL-QJ1O5EqMv"" title=""Pluggable data availability - Protolambda"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
361,What is OP Labs contributing to in terms of research and development?,OP Labs is contributing to L1 research and development to increase the data availability used for securing all L2s.,"In this talk protolambda explains how the next OP Mainnet upgrade improves the rollup with modular design, and how this can be utilized to quickly adopt future scaling improvements like EIP-4844 (a.k.a. proto-danksharding).
OP Labs is contributing to L1 research and development to increase the data availability used for securing all L2s.  
<iframe src=""https://www.youtube.com/embed/-xWpalvZeEU?list=PLXzKMXK2aHh4vbe7GLQfOnL-QJ1O5EqMv"" title=""Pluggable data availability - Protolambda"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
362,How does EIP-4844 contribute to the goal of full sharding on Ethereum?,"EIP-4844 is a step towards achieving full sharding on Ethereum by improving data availability. It introduces the concept of a Data Availability Layer, which helps manage how data, specifically blobs, fits into the Ethereum ecosystem.","The end game for data availability on Ethereum - Full Sharding - and how EIP-4844 gets us closer to that goal. This video discusses:  
- Where we are with the implementation of EIP-4844 and what else was needed to be done before CFI.
- How the community could help us ship EIP-4844.
- Data Availability and the concept of a Data Availability Layer; analogous to the CL and EL. This concept helps reason about how data, i.e. the blobs, fits in Ethereum.  
<iframe src=""https://www.youtube.com/embed/uxYkGdCFsjI?list=PLXzKMXK2aHh4vbe7GLQfOnL-QJ1O5EqMv"" title=""Panel: State of 4844"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
362,What is the current status of EIP-4844 implementation?,"The current status of EIP-4844 implementation involves ongoing work, and there are still tasks that need to be completed before it can be fully integrated. The community's involvement is crucial in helping to ship EIP-4844.","The end game for data availability on Ethereum - Full Sharding - and how EIP-4844 gets us closer to that goal. This video discusses:  
- Where we are with the implementation of EIP-4844 and what else was needed to be done before CFI.
- How the community could help us ship EIP-4844.
- Data Availability and the concept of a Data Availability Layer; analogous to the CL and EL. This concept helps reason about how data, i.e. the blobs, fits in Ethereum.  
<iframe src=""https://www.youtube.com/embed/uxYkGdCFsjI?list=PLXzKMXK2aHh4vbe7GLQfOnL-QJ1O5EqMv"" title=""Panel: State of 4844"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
362,What role can the community play in the implementation of EIP-4844?,"The community can help by contributing to the development and testing of EIP-4844, providing feedback, and supporting the efforts to finalize and ship the proposal.","The end game for data availability on Ethereum - Full Sharding - and how EIP-4844 gets us closer to that goal. This video discusses:  
- Where we are with the implementation of EIP-4844 and what else was needed to be done before CFI.
- How the community could help us ship EIP-4844.
- Data Availability and the concept of a Data Availability Layer; analogous to the CL and EL. This concept helps reason about how data, i.e. the blobs, fits in Ethereum.  
<iframe src=""https://www.youtube.com/embed/uxYkGdCFsjI?list=PLXzKMXK2aHh4vbe7GLQfOnL-QJ1O5EqMv"" title=""Panel: State of 4844"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
363,Who is Mark Dawson?,"Mark Dawson is the co-founder of Quix, the largest NFT marketplace on OP Mainnet.","The NFT ecosystem on OP Mainnet is an exciting, growing space.
Mark Dawson is the co-founder of Quix, the largest NFT marketplace on OP Mainnet.
He discusses early NFT communities on OP Mainnet, the upcoming NFT bridge, composable NFTs, and how to get started in the OP NFT ecosystem.  
<iframe src=""https://www.youtube.com/embed/Z8L8vNDgJjY?list=PLXzKMXK2aHh4vbe7GLQfOnL-QJ1O5EqMv"" title=""Intro to Quix - Mark Dawson"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
363,What topics does Mark Dawson discuss regarding the OP NFT ecosystem?,"Mark Dawson discusses early NFT communities on OP Mainnet, the upcoming NFT bridge, composable NFTs, and how to get started in the OP NFT ecosystem.","The NFT ecosystem on OP Mainnet is an exciting, growing space.
Mark Dawson is the co-founder of Quix, the largest NFT marketplace on OP Mainnet.
He discusses early NFT communities on OP Mainnet, the upcoming NFT bridge, composable NFTs, and how to get started in the OP NFT ecosystem.  
<iframe src=""https://www.youtube.com/embed/Z8L8vNDgJjY?list=PLXzKMXK2aHh4vbe7GLQfOnL-QJ1O5EqMv"" title=""Intro to Quix - Mark Dawson"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
363,What is Quix?,Quix is the largest NFT marketplace on OP Mainnet.,"The NFT ecosystem on OP Mainnet is an exciting, growing space.
Mark Dawson is the co-founder of Quix, the largest NFT marketplace on OP Mainnet.
He discusses early NFT communities on OP Mainnet, the upcoming NFT bridge, composable NFTs, and how to get started in the OP NFT ecosystem.  
<iframe src=""https://www.youtube.com/embed/Z8L8vNDgJjY?list=PLXzKMXK2aHh4vbe7GLQfOnL-QJ1O5EqMv"" title=""Intro to Quix - Mark Dawson"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>"
364,How can I build my own node for Optimism without using pre-built images?,"You can build your own node by following the instructions provided in the Optimism Governance Documentation. These instructions were generated on an Ubuntu 20.04 LTS system, but they should work with other systems as well.","---
title: Building a Node from Source
lang: en-US
---  
Here are the instructions if you want to build you own node without relying on our images. These instructions were generated on an Ubuntu 20.04 LTS box, but they should work with other systems too.  
# Prerequisites"
364,Do I need a specific operating system to build an Optimism node from source?,"The instructions for building an Optimism node from source were generated on an Ubuntu 20.04 LTS system, but they should be compatible with other operating systems too.","---
title: Building a Node from Source
lang: en-US
---  
Here are the instructions if you want to build you own node without relying on our images. These instructions were generated on an Ubuntu 20.04 LTS box, but they should work with other systems too.  
# Prerequisites"
365,How much RAM is recommended for running a node on OP Mainnet or OP Sepolia?,We recommend at least 16 GB of RAM for running a node on either OP Mainnet or OP Sepolia.,"Nodes need to process and store the transaction history of OP Mainnet or OP Sepolia. They need to be relatively powerful machines (real or virtual). We recommend at least 16 GB RAM. We recommend a 2TB SSD for OP Mainnet, our current archive node usage is ~1TB. We recommend a 256GB SSD for OP Sepolia, or current full node usage is ~1.6GB and archive node usage is ~5.6GB."
365,What storage capacity is needed for running a node on OP Mainnet?,"For OP Mainnet, we recommend a 2TB SSD. The current archive node usage is approximately 1TB.","Nodes need to process and store the transaction history of OP Mainnet or OP Sepolia. They need to be relatively powerful machines (real or virtual). We recommend at least 16 GB RAM. We recommend a 2TB SSD for OP Mainnet, our current archive node usage is ~1TB. We recommend a 256GB SSD for OP Sepolia, or current full node usage is ~1.6GB and archive node usage is ~5.6GB."
365,What storage capacity is needed for running a node on OP Sepolia?,"For OP Sepolia, we recommend a 256GB SSD. The current full node usage is around 1.6GB, and the archive node usage is about 5.6GB.","Nodes need to process and store the transaction history of OP Mainnet or OP Sepolia. They need to be relatively powerful machines (real or virtual). We recommend at least 16 GB RAM. We recommend a 2TB SSD for OP Mainnet, our current archive node usage is ~1TB. We recommend a 256GB SSD for OP Sepolia, or current full node usage is ~1.6GB and archive node usage is ~5.6GB."
366,Which software do I need to install to follow the Optimism Governance tutorial?,"You need to install Git, Go, nvm, Node, Pnpm, Foundry, Make, jq, direnv, and zstd.","You‚Äôll need the following software installed to follow this tutorial:  
- [Git](https://git-scm.com/)  
- [Go](https://go.dev/)  
- [nvm](https://github.com/nvm-sh/nvm)  
- [Node](https://nodejs.org/en)  
- [Pnpm](https://pnpm.io/)  
- [Foundry](https://github.com/foundry-rs/foundry#installation)  
- [Make](https://linux.die.net/man/1/make)  
- [jq](https://github.com/jqlang/jq)  
- [direnv](https://direnv.net/)  
- [zstd](https://facebook.github.io/zstd/)  
This tutorial was checked on:
| Software                        | Version         | Installation command(s) |
| ------------------------------- | --------------- | ----------------------- |
| Ubuntu                          | 20.04 LTS       |
| git, curl, jq, make, and zstd   | OS default      | `sudo apt update`, <br/>`sudo apt install -y git curl make jq zstd`
| Go                              | 1.20            | `wget https://go.dev/dl/go1.20.linux-amd64.tar.gz`, <br/> `tar xvzf go1.20.linux-amd64.tar.gz`, <br/> `sudo cp go/bin/go /usr/bin/go`, <br/>`sudo mv go /usr/lib`, <br/>`echo export GOROOT=/usr/lib/go >> ~/.bashrc` |
| Node                            | 18.17.1        | `nvm install 18.17.1`, <br/> `nvm use 18.17.1`
| pnpm                            | 8.6.12           | `sudo npm install -g pnpm` |
| Foundry                         | 0.2.0           | `curl -L https://foundry.paradigm.xyz | bash`, <br/> `. ~/.bashrc`, <br/> `foundryup` |"
366,How do I install Go for the Optimism Governance tutorial?,"To install Go, you can use the following commands: `wget https://go.dev/dl/go1.20.linux-amd64.tar.gz`, `tar xvzf go1.20.linux-amd64.tar.gz`, `sudo cp go/bin/go /usr/bin/go`, `sudo mv go /usr/lib`, and `echo export GOROOT=/usr/lib/go >> ~/.bashrc`.","You‚Äôll need the following software installed to follow this tutorial:  
- [Git](https://git-scm.com/)  
- [Go](https://go.dev/)  
- [nvm](https://github.com/nvm-sh/nvm)  
- [Node](https://nodejs.org/en)  
- [Pnpm](https://pnpm.io/)  
- [Foundry](https://github.com/foundry-rs/foundry#installation)  
- [Make](https://linux.die.net/man/1/make)  
- [jq](https://github.com/jqlang/jq)  
- [direnv](https://direnv.net/)  
- [zstd](https://facebook.github.io/zstd/)  
This tutorial was checked on:
| Software                        | Version         | Installation command(s) |
| ------------------------------- | --------------- | ----------------------- |
| Ubuntu                          | 20.04 LTS       |
| git, curl, jq, make, and zstd   | OS default      | `sudo apt update`, <br/>`sudo apt install -y git curl make jq zstd`
| Go                              | 1.20            | `wget https://go.dev/dl/go1.20.linux-amd64.tar.gz`, <br/> `tar xvzf go1.20.linux-amd64.tar.gz`, <br/> `sudo cp go/bin/go /usr/bin/go`, <br/>`sudo mv go /usr/lib`, <br/>`echo export GOROOT=/usr/lib/go >> ~/.bashrc` |
| Node                            | 18.17.1        | `nvm install 18.17.1`, <br/> `nvm use 18.17.1`
| pnpm                            | 8.6.12           | `sudo npm install -g pnpm` |
| Foundry                         | 0.2.0           | `curl -L https://foundry.paradigm.xyz | bash`, <br/> `. ~/.bashrc`, <br/> `foundryup` |"
366,What version of Node is required for the Optimism Governance tutorial?,"The tutorial requires Node version 18.17.1, which you can install using `nvm install 18.17.1` and `nvm use 18.17.1`.","You‚Äôll need the following software installed to follow this tutorial:  
- [Git](https://git-scm.com/)  
- [Go](https://go.dev/)  
- [nvm](https://github.com/nvm-sh/nvm)  
- [Node](https://nodejs.org/en)  
- [Pnpm](https://pnpm.io/)  
- [Foundry](https://github.com/foundry-rs/foundry#installation)  
- [Make](https://linux.die.net/man/1/make)  
- [jq](https://github.com/jqlang/jq)  
- [direnv](https://direnv.net/)  
- [zstd](https://facebook.github.io/zstd/)  
This tutorial was checked on:
| Software                        | Version         | Installation command(s) |
| ------------------------------- | --------------- | ----------------------- |
| Ubuntu                          | 20.04 LTS       |
| git, curl, jq, make, and zstd   | OS default      | `sudo apt update`, <br/>`sudo apt install -y git curl make jq zstd`
| Go                              | 1.20            | `wget https://go.dev/dl/go1.20.linux-amd64.tar.gz`, <br/> `tar xvzf go1.20.linux-amd64.tar.gz`, <br/> `sudo cp go/bin/go /usr/bin/go`, <br/>`sudo mv go /usr/lib`, <br/>`echo export GOROOT=/usr/lib/go >> ~/.bashrc` |
| Node                            | 18.17.1        | `nvm install 18.17.1`, <br/> `nvm use 18.17.1`
| pnpm                            | 8.6.12           | `sudo npm install -g pnpm` |
| Foundry                         | 0.2.0           | `curl -L https://foundry.paradigm.xyz | bash`, <br/> `. ~/.bashrc`, <br/> `foundryup` |"
367,How do I clone the Optimism Monorepo?,You can clone the Optimism Monorepo by running the command `git clone https://github.com/ethereum-optimism/optimism.git` in your working directory.,"1. Navigate to your working directory.  
1. Clone the [Optimism Monorepo](https://github.com/ethereum-optimism/optimism).  
```bash
git clone https://github.com/ethereum-optimism/optimism.git
```  
1. Install required modules.  
```bash
cd optimism
pnpm install
```  
1. Build the various packages inside of the Optimism Monorepo.  
```bash
make op-node
pnpm build
```  
This process will take some time, so you can move onto the next section while the build completes."
367,How do I install the required modules for the Optimism Monorepo?,"After cloning the repository, navigate to the 'optimism' directory and run the command `pnpm install` to install the required modules.","1. Navigate to your working directory.  
1. Clone the [Optimism Monorepo](https://github.com/ethereum-optimism/optimism).  
```bash
git clone https://github.com/ethereum-optimism/optimism.git
```  
1. Install required modules.  
```bash
cd optimism
pnpm install
```  
1. Build the various packages inside of the Optimism Monorepo.  
```bash
make op-node
pnpm build
```  
This process will take some time, so you can move onto the next section while the build completes."
367,What should I do to build the packages inside the Optimism Monorepo?,"To build the various packages inside the Optimism Monorepo, you need to run the commands `make op-node` and `pnpm build` in the 'optimism' directory. This process will take some time to complete.","1. Navigate to your working directory.  
1. Clone the [Optimism Monorepo](https://github.com/ethereum-optimism/optimism).  
```bash
git clone https://github.com/ethereum-optimism/optimism.git
```  
1. Install required modules.  
```bash
cd optimism
pnpm install
```  
1. Build the various packages inside of the Optimism Monorepo.  
```bash
make op-node
pnpm build
```  
This process will take some time, so you can move onto the next section while the build completes."
368,How do I clone the `op-geth` repository?,You can clone the `op-geth` repository by running the following command in your terminal: `git clone https://github.com/ethereum-optimism/op-geth.git`.,"1. Navigate to your working directory.  
1. Clone [`op-geth`](https://github.com/ethereum-optimism/op-geth):  
```bash
git clone https://github.com/ethereum-optimism/op-geth.git
```  
1. Build `op-geth`:  
```bash
cd op-geth
make geth
```"
368,How do I build `op-geth` after cloning it?,"After cloning the `op-geth` repository, navigate into the `op-geth` directory by running `cd op-geth` and then build it by running the command `make geth`.","1. Navigate to your working directory.  
1. Clone [`op-geth`](https://github.com/ethereum-optimism/op-geth):  
```bash
git clone https://github.com/ethereum-optimism/op-geth.git
```  
1. Build `op-geth`:  
```bash
cd op-geth
make geth
```"
369,Do I need to follow these steps if I'm setting up an OP Testnet archive node?,"No, these steps are only necessary for OP Mainnet archive nodes. If you're building an OP Testnet archive node, you do not need to follow this step.","::: info OP Mainnet Archive Node  
This step is only necessary for OP Mainnet archive nodes. If you're building a OP Testnet archive node, you do not need to do this step.  
:::  
1. Navigate to your working directory  
2. Clone [`l2geth`](https://github.com/ethereum-optimism/optimism-legacy)  
```bash
git clone https://github.com/ethereum-optimism/optimism-legacy.git
```  
3. Build `l2geth`:  
```bash
cd optimism-legacy/l2geth
make
```  
<br/>  
The rest of the steps depend on whether you want to run an OP Mainnet or OP Sepolia node.  
[Click here to continue building on OP Mainnet](./mainnet.md)  
[Click here to continue building on OP Testnet](./testnet.md)"
369,How do I clone the l2geth repository for setting up an OP Mainnet archive node?,You can clone the l2geth repository by navigating to your working directory and running the command: `git clone https://github.com/ethereum-optimism/optimism-legacy.git`.,"::: info OP Mainnet Archive Node  
This step is only necessary for OP Mainnet archive nodes. If you're building a OP Testnet archive node, you do not need to do this step.  
:::  
1. Navigate to your working directory  
2. Clone [`l2geth`](https://github.com/ethereum-optimism/optimism-legacy)  
```bash
git clone https://github.com/ethereum-optimism/optimism-legacy.git
```  
3. Build `l2geth`:  
```bash
cd optimism-legacy/l2geth
make
```  
<br/>  
The rest of the steps depend on whether you want to run an OP Mainnet or OP Sepolia node.  
[Click here to continue building on OP Mainnet](./mainnet.md)  
[Click here to continue building on OP Testnet](./testnet.md)"
369,What should I do after cloning the l2geth repository?,"After cloning the l2geth repository, you need to navigate to the `optimism-legacy/l2geth` directory and build it by running the command: `make`.","::: info OP Mainnet Archive Node  
This step is only necessary for OP Mainnet archive nodes. If you're building a OP Testnet archive node, you do not need to do this step.  
:::  
1. Navigate to your working directory  
2. Clone [`l2geth`](https://github.com/ethereum-optimism/optimism-legacy)  
```bash
git clone https://github.com/ethereum-optimism/optimism-legacy.git
```  
3. Build `l2geth`:  
```bash
cd optimism-legacy/l2geth
make
```  
<br/>  
The rest of the steps depend on whether you want to run an OP Mainnet or OP Sepolia node.  
[Click here to continue building on OP Mainnet](./mainnet.md)  
[Click here to continue building on OP Testnet](./testnet.md)"
370,How can I run the OP Mainnet from source?,"To run the OP Mainnet from source, you would need to follow the specific instructions provided in the Optimism Governance Documentation under the section titled 'Running OP Mainnet from Source'. This section will guide you through the necessary steps and requirements to set up and run the OP Mainnet directly from the source code.","---
title: Running OP Mainnet from Source
lang: en-US
---"
371,How much storage space do I need to download the data directory for `op-geth`?,You will need 500+ GB of storage space to download the data directory for `op-geth`.,"The next step is to download the data directory for `op-geth`.
You will need 500+ GB for this part alone.  
1. Download the data directory snapshot. This is a large file so expect it to take some time. [Bedrock Data Directory (303GB)](https://datadirs.optimism.io/mainnet-bedrock.tar.zst)  
::: tip Protip
Use a tool like [aria2](https://aria2.github.io/) to reduce the chance of your data directory being corrupted.
:::  
2. Check the validity of your download. This is an important step. Corrupted data directories will make your node fail. So ensure your checksum matches.  
```bash
sha256sum mainnet-bedrock.tar.zst
# expected output
ec4baf47e309a14ffbd586dc85376833de640c0f2a8d7355cb8a9e64c38bfcd1  mainnet-bedrock.tar.zst
```  
OR  
```bash
sha512sum mainnet-bedrock.tar.zst
# expected output
c17067b7bc39a6daa14f71d448c6fa0477834c3e68a25e96f26fe849c12a09bffe510e96f7eacdef19e93e3167d15250f807d252dd6f6f9053d0e4457c73d5fb mainnet-bedrock.tar.zst
```  
3. Create the data directory in `op-geth` and fill it. This will take time.  
Navigate into your `op-geth` directory and run these commands:
```sh
mkdir datadir
cd datadir
tar xvf <<PATH_TO_DATA_DIR>>
```"
371,What should I do if I want to reduce the chance of my data directory being corrupted during the download?,You can use a tool like [aria2](https://aria2.github.io/) to reduce the chance of your data directory being corrupted during the download.,"The next step is to download the data directory for `op-geth`.
You will need 500+ GB for this part alone.  
1. Download the data directory snapshot. This is a large file so expect it to take some time. [Bedrock Data Directory (303GB)](https://datadirs.optimism.io/mainnet-bedrock.tar.zst)  
::: tip Protip
Use a tool like [aria2](https://aria2.github.io/) to reduce the chance of your data directory being corrupted.
:::  
2. Check the validity of your download. This is an important step. Corrupted data directories will make your node fail. So ensure your checksum matches.  
```bash
sha256sum mainnet-bedrock.tar.zst
# expected output
ec4baf47e309a14ffbd586dc85376833de640c0f2a8d7355cb8a9e64c38bfcd1  mainnet-bedrock.tar.zst
```  
OR  
```bash
sha512sum mainnet-bedrock.tar.zst
# expected output
c17067b7bc39a6daa14f71d448c6fa0477834c3e68a25e96f26fe849c12a09bffe510e96f7eacdef19e93e3167d15250f807d252dd6f6f9053d0e4457c73d5fb mainnet-bedrock.tar.zst
```  
3. Create the data directory in `op-geth` and fill it. This will take time.  
Navigate into your `op-geth` directory and run these commands:
```sh
mkdir datadir
cd datadir
tar xvf <<PATH_TO_DATA_DIR>>
```"
371,How can I check if my downloaded data directory is valid?,"You can check the validity of your downloaded data directory by using the `sha256sum` or `sha512sum` commands to ensure your checksum matches the expected output. For `sha256sum`, the expected output is `ec4baf47e309a14ffbd586dc85376833de640c0f2a8d7355cb8a9e64c38bfcd1  mainnet-bedrock.tar.zst`. For `sha512sum`, the expected output is `c17067b7bc39a6daa14f71d448c6fa0477834c3e68a25e96f26fe849c12a09bffe510e96f7eacdef19e93e3167d15250f807d252dd6f6f9053d0e4457c73d5fb mainnet-bedrock.tar.zst`.","The next step is to download the data directory for `op-geth`.
You will need 500+ GB for this part alone.  
1. Download the data directory snapshot. This is a large file so expect it to take some time. [Bedrock Data Directory (303GB)](https://datadirs.optimism.io/mainnet-bedrock.tar.zst)  
::: tip Protip
Use a tool like [aria2](https://aria2.github.io/) to reduce the chance of your data directory being corrupted.
:::  
2. Check the validity of your download. This is an important step. Corrupted data directories will make your node fail. So ensure your checksum matches.  
```bash
sha256sum mainnet-bedrock.tar.zst
# expected output
ec4baf47e309a14ffbd586dc85376833de640c0f2a8d7355cb8a9e64c38bfcd1  mainnet-bedrock.tar.zst
```  
OR  
```bash
sha512sum mainnet-bedrock.tar.zst
# expected output
c17067b7bc39a6daa14f71d448c6fa0477834c3e68a25e96f26fe849c12a09bffe510e96f7eacdef19e93e3167d15250f807d252dd6f6f9053d0e4457c73d5fb mainnet-bedrock.tar.zst
```  
3. Create the data directory in `op-geth` and fill it. This will take time.  
Navigate into your `op-geth` directory and run these commands:
```sh
mkdir datadir
cd datadir
tar xvf <<PATH_TO_DATA_DIR>>
```"
372,How can I ensure that my downloaded data directory for Optimism is not corrupted?,You can check the validity of your download by using checksum verification. Run the command `sha256sum mainnet-legacy-archival.tar.zst` or `sha512sum mainnet-legacy-archival.tar.zst` and compare the output with the expected checksum values provided in the documentation.,"1. Download the data directory snapshot. This is a large file so expect it to take some time. [Legacy Geth Data Directory (2.9TB)](https://datadirs.optimism.io/mainnet-legacy-archival.tar.zst)  
::: tip Protip
Use a tool like [aria2](https://aria2.github.io/) to reduce the chance of your data directory being corrupted.
:::  
2. Check the validity of your download. This is an important step. Corrupted data directories will make your node fail. So ensure your checksum matches.  
```sh
sha256sum mainnet-legacy-archival.tar.zst
# expected output
4adedb61125b81b55f9bdccc2e85092050c65ef2253c86e2b79569732b772829  mainnet-legacy-archival.tar.zst
```  
OR  
```sh
sha512sum mainnet-legacy-archival.tar.zst
# expected output
e348488c458baa755510f23bbc8601619bc66bea78a89354c949ba7be3c6b39ed7dd2c50516621e38df6120299407da0d24445b96bf94a50364ed07bb8234b26 mainnet-legacy-archival.tar.zst
```  
3. Create the data directory in `l2geth` and fill it. This will take time.  
Navigate into your `l2geth` directory and run these commands:
```sh
mkdir datadir
cd datadir
tar xvf <<PATH_TO_DATA_DIR>>
```"
372,What tool can I use to reduce the chance of my data directory being corrupted during download?,You can use a tool like aria2 to reduce the chance of your data directory being corrupted during the download process.,"1. Download the data directory snapshot. This is a large file so expect it to take some time. [Legacy Geth Data Directory (2.9TB)](https://datadirs.optimism.io/mainnet-legacy-archival.tar.zst)  
::: tip Protip
Use a tool like [aria2](https://aria2.github.io/) to reduce the chance of your data directory being corrupted.
:::  
2. Check the validity of your download. This is an important step. Corrupted data directories will make your node fail. So ensure your checksum matches.  
```sh
sha256sum mainnet-legacy-archival.tar.zst
# expected output
4adedb61125b81b55f9bdccc2e85092050c65ef2253c86e2b79569732b772829  mainnet-legacy-archival.tar.zst
```  
OR  
```sh
sha512sum mainnet-legacy-archival.tar.zst
# expected output
e348488c458baa755510f23bbc8601619bc66bea78a89354c949ba7be3c6b39ed7dd2c50516621e38df6120299407da0d24445b96bf94a50364ed07bb8234b26 mainnet-legacy-archival.tar.zst
```  
3. Create the data directory in `l2geth` and fill it. This will take time.  
Navigate into your `l2geth` directory and run these commands:
```sh
mkdir datadir
cd datadir
tar xvf <<PATH_TO_DATA_DIR>>
```"
372,What are the steps to create and fill the data directory in l2geth?,"First, navigate into your `l2geth` directory. Then, create a new directory by running `mkdir datadir`. Change into this new directory with `cd datadir`, and finally, extract the downloaded data directory using the command `tar xvf <<PATH_TO_DATA_DIR>>`.","1. Download the data directory snapshot. This is a large file so expect it to take some time. [Legacy Geth Data Directory (2.9TB)](https://datadirs.optimism.io/mainnet-legacy-archival.tar.zst)  
::: tip Protip
Use a tool like [aria2](https://aria2.github.io/) to reduce the chance of your data directory being corrupted.
:::  
2. Check the validity of your download. This is an important step. Corrupted data directories will make your node fail. So ensure your checksum matches.  
```sh
sha256sum mainnet-legacy-archival.tar.zst
# expected output
4adedb61125b81b55f9bdccc2e85092050c65ef2253c86e2b79569732b772829  mainnet-legacy-archival.tar.zst
```  
OR  
```sh
sha512sum mainnet-legacy-archival.tar.zst
# expected output
e348488c458baa755510f23bbc8601619bc66bea78a89354c949ba7be3c6b39ed7dd2c50516621e38df6120299407da0d24445b96bf94a50364ed07bb8234b26 mainnet-legacy-archival.tar.zst
```  
3. Create the data directory in `l2geth` and fill it. This will take time.  
Navigate into your `l2geth` directory and run these commands:
```sh
mkdir datadir
cd datadir
tar xvf <<PATH_TO_DATA_DIR>>
```"
373,How do I generate a JWT token for my Optimism setup?,"To generate a JWT token for your Optimism setup, navigate into your `op-geth` directory and run the following commands: `openssl rand -hex 32 > jwt.txt` and then `cp jwt.txt ../optimism/op-node`.","1. Navigate into your `op-geth` directory and run these commands:  
```sh
openssl rand -hex 32 > jwt.txt
cp jwt.txt ../optimism/op-node
```"
374,Where should I create the new directory for my scripts?,"In the root of your working directory, you should create a new directory named `scripts`.",In the root of your working directory create a new directory: `scripts`.
375,How do I create a new script file in the `scripts` directory?,"You can create a new script file by navigating into your `scripts` directory and using the `touch` command followed by the name of the file you want to create. For example, `touch run-l2geth.sh`.","1. Navigate into your `scripts` directory:  
2. Create a new file:
```sh
touch run-l2geth.sh
```  
3. Make it executable:
```sh
chmod +x run-l2geth.sh
```  
4. Insert this snippet of code into `run-l2geth.sh` and modify the path to the `l2geth` directory.  
```sh
#!/usr/bin/bash

cd ../optimism-legacy/l2geth

USING_OVM=true \
ETH1_SYNC_SERVICE_ENABLE=false \
RPC_API=eth,rollup,net,web3,debug \
RPC_ENABLE=true \
RPC_PORT=8546 \ # need to rebind port because op-geth uses the same default port
./build/bin/geth --datadir ./datadir
```  
5. Run the following command to start `l2geth`:  
```sh
./run-l2geth.sh
```"
375,How do I make a script file executable?,"You can make a script file executable by using the `chmod +x` command followed by the name of the file. For example, `chmod +x run-l2geth.sh`.","1. Navigate into your `scripts` directory:  
2. Create a new file:
```sh
touch run-l2geth.sh
```  
3. Make it executable:
```sh
chmod +x run-l2geth.sh
```  
4. Insert this snippet of code into `run-l2geth.sh` and modify the path to the `l2geth` directory.  
```sh
#!/usr/bin/bash

cd ../optimism-legacy/l2geth

USING_OVM=true \
ETH1_SYNC_SERVICE_ENABLE=false \
RPC_API=eth,rollup,net,web3,debug \
RPC_ENABLE=true \
RPC_PORT=8546 \ # need to rebind port because op-geth uses the same default port
./build/bin/geth --datadir ./datadir
```  
5. Run the following command to start `l2geth`:  
```sh
./run-l2geth.sh
```"
375,What should I do to start `l2geth` after creating the script?,"After creating and making the script executable, you can start `l2geth` by running the script with the command `./run-l2geth.sh`.","1. Navigate into your `scripts` directory:  
2. Create a new file:
```sh
touch run-l2geth.sh
```  
3. Make it executable:
```sh
chmod +x run-l2geth.sh
```  
4. Insert this snippet of code into `run-l2geth.sh` and modify the path to the `l2geth` directory.  
```sh
#!/usr/bin/bash

cd ../optimism-legacy/l2geth

USING_OVM=true \
ETH1_SYNC_SERVICE_ENABLE=false \
RPC_API=eth,rollup,net,web3,debug \
RPC_ENABLE=true \
RPC_PORT=8546 \ # need to rebind port because op-geth uses the same default port
./build/bin/geth --datadir ./datadir
```  
5. Run the following command to start `l2geth`:  
```sh
./run-l2geth.sh
```"
376,How do I create a new script file in the `scripts` directory?,You can create a new script file by navigating into your `scripts` directory and using the command `touch run-op-geth.sh`.,"1. Navigate into your `scripts` directory:  
2. Create a new file:
```sh
touch run-op-geth.sh
```  
3. Make it executable:
```sh
chmod +x run-op-geth.sh
```  
4. Insert this snippet of code into `run-op-geth.sh` and modify the path to the `op-geth` directory.  
```sh
#! /usr/bin/bash

SEQUENCER_URL=https://mainnet-sequencer.optimism.io/

cd <<Path to op-geth directory>>

./build/bin/geth \
--datadir=./datadir \
--http \
--http.port=8545 \
--http.addr=0.0.0.0 \
--authrpc.addr=localhost \
--authrpc.jwtsecret=./jwt.txt \
--verbosity=3 \
--rollup.sequencerhttp=$SEQUENCER_URL \
--nodiscover \
--syncmode=full \
--maxpeers=0
```  
::: info Archive Nodes
You will need to point `op-geth` at `l2geth` with `--rollup.historicalrpc`: Enables the historical RPC endpoint. This endpoint is used to fetch historical execution data from Legacy Geth from before the [Bedrock upgrade](https://twitter.com/optimismFND/status/1666850591669202965). This flag is only necessary for OP Mainnet.  
You will also need to add `--gcmode archive`.
:::  
1. Run the following command to start `op-geth`:  
```bash
./run-op-geth.sh
```"
376,How do I make a script file executable?,You can make a script file executable by using the command `chmod +x run-op-geth.sh`.,"1. Navigate into your `scripts` directory:  
2. Create a new file:
```sh
touch run-op-geth.sh
```  
3. Make it executable:
```sh
chmod +x run-op-geth.sh
```  
4. Insert this snippet of code into `run-op-geth.sh` and modify the path to the `op-geth` directory.  
```sh
#! /usr/bin/bash

SEQUENCER_URL=https://mainnet-sequencer.optimism.io/

cd <<Path to op-geth directory>>

./build/bin/geth \
--datadir=./datadir \
--http \
--http.port=8545 \
--http.addr=0.0.0.0 \
--authrpc.addr=localhost \
--authrpc.jwtsecret=./jwt.txt \
--verbosity=3 \
--rollup.sequencerhttp=$SEQUENCER_URL \
--nodiscover \
--syncmode=full \
--maxpeers=0
```  
::: info Archive Nodes
You will need to point `op-geth` at `l2geth` with `--rollup.historicalrpc`: Enables the historical RPC endpoint. This endpoint is used to fetch historical execution data from Legacy Geth from before the [Bedrock upgrade](https://twitter.com/optimismFND/status/1666850591669202965). This flag is only necessary for OP Mainnet.  
You will also need to add `--gcmode archive`.
:::  
1. Run the following command to start `op-geth`:  
```bash
./run-op-geth.sh
```"
376,What is the purpose of the `--rollup.historicalrpc` flag in the `op-geth` command?,"The `--rollup.historicalrpc` flag enables the historical RPC endpoint, which is used to fetch historical execution data from Legacy Geth from before the Bedrock upgrade. This flag is only necessary for OP Mainnet.","1. Navigate into your `scripts` directory:  
2. Create a new file:
```sh
touch run-op-geth.sh
```  
3. Make it executable:
```sh
chmod +x run-op-geth.sh
```  
4. Insert this snippet of code into `run-op-geth.sh` and modify the path to the `op-geth` directory.  
```sh
#! /usr/bin/bash

SEQUENCER_URL=https://mainnet-sequencer.optimism.io/

cd <<Path to op-geth directory>>

./build/bin/geth \
--datadir=./datadir \
--http \
--http.port=8545 \
--http.addr=0.0.0.0 \
--authrpc.addr=localhost \
--authrpc.jwtsecret=./jwt.txt \
--verbosity=3 \
--rollup.sequencerhttp=$SEQUENCER_URL \
--nodiscover \
--syncmode=full \
--maxpeers=0
```  
::: info Archive Nodes
You will need to point `op-geth` at `l2geth` with `--rollup.historicalrpc`: Enables the historical RPC endpoint. This endpoint is used to fetch historical execution data from Legacy Geth from before the [Bedrock upgrade](https://twitter.com/optimismFND/status/1666850591669202965). This flag is only necessary for OP Mainnet.  
You will also need to add `--gcmode archive`.
:::  
1. Run the following command to start `op-geth`:  
```bash
./run-op-geth.sh
```"
377,How do I create a new script file in the `scripts` directory?,"You can create a new script file by navigating to the `scripts` directory and using the `touch` command followed by the file name. For example, `touch run-op-node.sh` will create a new file named `run-op-node.sh`.","1. Navigate to the `scripts` directory you created.  
2. Create a new file:
```sh
touch run-op-node.sh
```
3. Make it executable:
```sh
chmod +x run-op-node.sh
```
4. Insert this snippet of code into `run-op-node.sh`:  
```sh
#!/usr/bin/bash

L1URL=<< L1 RPC URL >>
L1KIND=basic
NET=mainnet

cd <<Path to op-node directory>>


./bin/op-node \
--l1=$L1URL  \
--l1.rpckind=$L1KIND \
--l2=ws://localhost:8551 \
--l2.jwt-secret=./jwt.txt \
--network=$NET \
--rpc.addr=0.0.0.0 \
--rpc.port=8547

```  
- Change `<< L1 RPC URL >>` to your local L1 node or a service provider's URL for the L1 node (L1 Ethereum). E.g. for Infura, `https://mainnet.infura.io/v3/API_KEY`.
- Set `L1KIND` to the network provider you are using (options: alchemy, quicknode, infura, parity, nethermind, debug_geth, erigon, basic, any).  
5. Run the following command to start `op-node`:  
```bash
./run-op-node.sh
```"
377,How do I make a script file executable?,"You can make a script file executable by using the `chmod +x` command followed by the file name. For example, `chmod +x run-op-node.sh` will make the `run-op-node.sh` file executable.","1. Navigate to the `scripts` directory you created.  
2. Create a new file:
```sh
touch run-op-node.sh
```
3. Make it executable:
```sh
chmod +x run-op-node.sh
```
4. Insert this snippet of code into `run-op-node.sh`:  
```sh
#!/usr/bin/bash

L1URL=<< L1 RPC URL >>
L1KIND=basic
NET=mainnet

cd <<Path to op-node directory>>


./bin/op-node \
--l1=$L1URL  \
--l1.rpckind=$L1KIND \
--l2=ws://localhost:8551 \
--l2.jwt-secret=./jwt.txt \
--network=$NET \
--rpc.addr=0.0.0.0 \
--rpc.port=8547

```  
- Change `<< L1 RPC URL >>` to your local L1 node or a service provider's URL for the L1 node (L1 Ethereum). E.g. for Infura, `https://mainnet.infura.io/v3/API_KEY`.
- Set `L1KIND` to the network provider you are using (options: alchemy, quicknode, infura, parity, nethermind, debug_geth, erigon, basic, any).  
5. Run the following command to start `op-node`:  
```bash
./run-op-node.sh
```"
377,What should I do if I want to use a specific L1 node service provider like Infura?,"You need to replace `<< L1 RPC URL >>` in the script with the URL provided by your service provider. For example, for Infura, you would use `https://mainnet.infura.io/v3/API_KEY` where `API_KEY` is your specific API key from Infura.","1. Navigate to the `scripts` directory you created.  
2. Create a new file:
```sh
touch run-op-node.sh
```
3. Make it executable:
```sh
chmod +x run-op-node.sh
```
4. Insert this snippet of code into `run-op-node.sh`:  
```sh
#!/usr/bin/bash

L1URL=<< L1 RPC URL >>
L1KIND=basic
NET=mainnet

cd <<Path to op-node directory>>


./bin/op-node \
--l1=$L1URL  \
--l1.rpckind=$L1KIND \
--l2=ws://localhost:8551 \
--l2.jwt-secret=./jwt.txt \
--network=$NET \
--rpc.addr=0.0.0.0 \
--rpc.port=8547

```  
- Change `<< L1 RPC URL >>` to your local L1 node or a service provider's URL for the L1 node (L1 Ethereum). E.g. for Infura, `https://mainnet.infura.io/v3/API_KEY`.
- Set `L1KIND` to the network provider you are using (options: alchemy, quicknode, infura, parity, nethermind, debug_geth, erigon, basic, any).  
5. Run the following command to start `op-node`:  
```bash
./run-op-node.sh
```"
378,Why do I need to synchronize my Optimism node before using it?,"The datadir provided by Optimism is not updated continuously, so you need to synchronize your node to ensure it has the latest data before you can use it.","The datadir provided by Optimism is not updated continuously, so before you can use the node you need a to synchronize it.  
During that process you get log messages from `op-node`, and nothing else appears to happen.  
```
INFO [06-26|13:31:20.389] Advancing bq origin                      origin=17171d..1bc69b:8300332 originBehind=false
```  
That is normal - it means that `op-node` is looking for a location in the batch queue.
After a few minutes it finds it, and then it can start synchronizing.  
While it is synchronizing, you can expect log messages such as these from `op-node`:  
```
INFO [06-26|14:00:59.460] Sync progress                            reason=""processed safe block derived from L1"" l2_finalized=ef93e6..e0f367:4067805 l2_safe=7fe3f6..900127:4068014 l2_unsafe=7fe3f6..900127:4068014 l2_time=1,673,564,096 l1_derived=6079cd..be4231:8301091
INFO [06-26|14:00:59.460] Found next batch                         epoch=8e8a03..11a6de:8301087 batch_epoch=8301087 batch_timestamp=1,673,564,098
INFO [06-26|14:00:59.461] generated attributes in payload queue    txs=1  timestamp=1,673,564,098
INFO [06-26|14:00:59.463] inserted block                           hash=e80dc4..72a759 number=4,068,015 state_root=660ced..043025 timestamp=1,673,564,098 parent=7fe3f6..900127 prev_randao=78e43d..36f07a fee_recipient=0x4200000000000000000000000000000000000011 txs=1  update_safe=true
```  
And log messages such as these from `op-geth`:  
```
INFO [06-26|14:02:12.974] Imported new potential chain segment     number=4,068,194 hash=a334a0..609a83 blocks=1         txs=1         mgas=0.000  elapsed=1.482ms     mgasps=0.000   age=5mo2w20h dirty=2.31MiB
INFO [06-26|14:02:12.976] Chain head was updated                   number=4,068,194 hash=a334a0..609a83 root=e80f5e..dd06f9 elapsed=""188.373¬µs"" age=5mo2w20h
INFO [06-26|14:02:12.982] Starting work on payload                 id=0x5542117d680dbd4e
```"
378,What should I expect to see in the logs while my Optimism node is synchronizing?,"During synchronization, you will see log messages from `op-node` indicating progress, such as finding a location in the batch queue and processing safe blocks derived from L1. You will also see log messages from `op-geth` about importing new chain segments and updating the chain head.","The datadir provided by Optimism is not updated continuously, so before you can use the node you need a to synchronize it.  
During that process you get log messages from `op-node`, and nothing else appears to happen.  
```
INFO [06-26|13:31:20.389] Advancing bq origin                      origin=17171d..1bc69b:8300332 originBehind=false
```  
That is normal - it means that `op-node` is looking for a location in the batch queue.
After a few minutes it finds it, and then it can start synchronizing.  
While it is synchronizing, you can expect log messages such as these from `op-node`:  
```
INFO [06-26|14:00:59.460] Sync progress                            reason=""processed safe block derived from L1"" l2_finalized=ef93e6..e0f367:4067805 l2_safe=7fe3f6..900127:4068014 l2_unsafe=7fe3f6..900127:4068014 l2_time=1,673,564,096 l1_derived=6079cd..be4231:8301091
INFO [06-26|14:00:59.460] Found next batch                         epoch=8e8a03..11a6de:8301087 batch_epoch=8301087 batch_timestamp=1,673,564,098
INFO [06-26|14:00:59.461] generated attributes in payload queue    txs=1  timestamp=1,673,564,098
INFO [06-26|14:00:59.463] inserted block                           hash=e80dc4..72a759 number=4,068,015 state_root=660ced..043025 timestamp=1,673,564,098 parent=7fe3f6..900127 prev_randao=78e43d..36f07a fee_recipient=0x4200000000000000000000000000000000000011 txs=1  update_safe=true
```  
And log messages such as these from `op-geth`:  
```
INFO [06-26|14:02:12.974] Imported new potential chain segment     number=4,068,194 hash=a334a0..609a83 blocks=1         txs=1         mgas=0.000  elapsed=1.482ms     mgasps=0.000   age=5mo2w20h dirty=2.31MiB
INFO [06-26|14:02:12.976] Chain head was updated                   number=4,068,194 hash=a334a0..609a83 root=e80f5e..dd06f9 elapsed=""188.373¬µs"" age=5mo2w20h
INFO [06-26|14:02:12.982] Starting work on payload                 id=0x5542117d680dbd4e
```"
378,Is it normal for nothing to appear to happen initially when I start synchronizing my Optimism node?,"Yes, it is normal. Initially, `op-node` is looking for a location in the batch queue, and it may take a few minutes before it starts synchronizing and you see more log messages.","The datadir provided by Optimism is not updated continuously, so before you can use the node you need a to synchronize it.  
During that process you get log messages from `op-node`, and nothing else appears to happen.  
```
INFO [06-26|13:31:20.389] Advancing bq origin                      origin=17171d..1bc69b:8300332 originBehind=false
```  
That is normal - it means that `op-node` is looking for a location in the batch queue.
After a few minutes it finds it, and then it can start synchronizing.  
While it is synchronizing, you can expect log messages such as these from `op-node`:  
```
INFO [06-26|14:00:59.460] Sync progress                            reason=""processed safe block derived from L1"" l2_finalized=ef93e6..e0f367:4067805 l2_safe=7fe3f6..900127:4068014 l2_unsafe=7fe3f6..900127:4068014 l2_time=1,673,564,096 l1_derived=6079cd..be4231:8301091
INFO [06-26|14:00:59.460] Found next batch                         epoch=8e8a03..11a6de:8301087 batch_epoch=8301087 batch_timestamp=1,673,564,098
INFO [06-26|14:00:59.461] generated attributes in payload queue    txs=1  timestamp=1,673,564,098
INFO [06-26|14:00:59.463] inserted block                           hash=e80dc4..72a759 number=4,068,015 state_root=660ced..043025 timestamp=1,673,564,098 parent=7fe3f6..900127 prev_randao=78e43d..36f07a fee_recipient=0x4200000000000000000000000000000000000011 txs=1  update_safe=true
```  
And log messages such as these from `op-geth`:  
```
INFO [06-26|14:02:12.974] Imported new potential chain segment     number=4,068,194 hash=a334a0..609a83 blocks=1         txs=1         mgas=0.000  elapsed=1.482ms     mgasps=0.000   age=5mo2w20h dirty=2.31MiB
INFO [06-26|14:02:12.976] Chain head was updated                   number=4,068,194 hash=a334a0..609a83 root=e80f5e..dd06f9 elapsed=""188.373¬µs"" age=5mo2w20h
INFO [06-26|14:02:12.982] Starting work on payload                 id=0x5542117d680dbd4e
```"
379,How can I estimate the synchronization time for my Optimism node?,"You can estimate the synchronization time by using a script provided in the Foundry documentation. First, navigate to your `scripts` directory and create a new file called `run-estimate.sh`. Make the file executable and insert the provided snippet of code into it. Then, run the script using the command `./run-estimate.sh` to get an estimate of the synchronization time.","To estimate how long the synchronization will take, you need to first find out how many blocks you synchronize in a minute. You can use this [Foundry](https://book.getfoundry.sh/) script to get an estimated sync time.  
1. Navigate to your `scripts` directory
2. Create a new file:
```sh
touch run-estimate.sh
```
3. Make it executable:
```sh
chmod +x run-estimate.sh
```
4. Insert this snippet of code into `run-estimate.sh`:  
```sh
#!/usr/bin/bash

export ETH_RPC_URL=http://localhost:8545
CHAIN_ID=`cast chain-id`
echo Chain ID: $CHAIN_ID
echo Please wait

if [ $CHAIN_ID -eq 10 ]; then
L2_URL=https://mainnet.optimism.io
fi


if [ $CHAIN_ID -eq 420 ]; then
L2_URL=https://goerli.optimism.io
fi


if [ $CHAIN_ID -eq 11155420 ]; then
L2_URL=https://sepolia.optimism.io
fi

T0=`cast block-number --rpc-url $ETH_RPC_URL` ; sleep 60 ; T1=`cast block-number --rpc-url $ETH_RPC_URL`
PER_MIN=`expr $T1 - $T0`
echo Blocks per minute: $PER_MIN


if [ $PER_MIN -eq 0 ]; then
echo Not synching
exit;
fi

# During that minute the head of the chain progressed by thirty blocks
PROGRESS_PER_MIN=`expr $PER_MIN - 30`
echo Progress per minute: $PROGRESS_PER_MIN


# How many more blocks do we need?
HEAD=`cast block-number --rpc-url $L2_URL`
BEHIND=`expr $HEAD - $T1`
MINUTES=`expr $BEHIND / $PROGRESS_PER_MIN`
HOURS=`expr $MINUTES / 60`
echo Hours until sync completed: $HOURS

if [ $HOURS -gt 24 ] ; then
DAYS=`expr $HOURS / 24`
echo Days until sync complete: $DAYS
fi
```  
5. Run the following command to get an estimate:
```sh
./run-estimate.sh
```"
379,What does the script `run-estimate.sh` do?,"The script `run-estimate.sh` calculates the number of blocks your node synchronizes in a minute and uses this information to estimate the total time required to complete the synchronization. It checks the chain ID to determine the appropriate URL for the Optimism network (mainnet, Goerli, or Sepolia), measures the blocks synchronized in a minute, and then calculates the remaining time based on the current block number and the head of the chain.","To estimate how long the synchronization will take, you need to first find out how many blocks you synchronize in a minute. You can use this [Foundry](https://book.getfoundry.sh/) script to get an estimated sync time.  
1. Navigate to your `scripts` directory
2. Create a new file:
```sh
touch run-estimate.sh
```
3. Make it executable:
```sh
chmod +x run-estimate.sh
```
4. Insert this snippet of code into `run-estimate.sh`:  
```sh
#!/usr/bin/bash

export ETH_RPC_URL=http://localhost:8545
CHAIN_ID=`cast chain-id`
echo Chain ID: $CHAIN_ID
echo Please wait

if [ $CHAIN_ID -eq 10 ]; then
L2_URL=https://mainnet.optimism.io
fi


if [ $CHAIN_ID -eq 420 ]; then
L2_URL=https://goerli.optimism.io
fi


if [ $CHAIN_ID -eq 11155420 ]; then
L2_URL=https://sepolia.optimism.io
fi

T0=`cast block-number --rpc-url $ETH_RPC_URL` ; sleep 60 ; T1=`cast block-number --rpc-url $ETH_RPC_URL`
PER_MIN=`expr $T1 - $T0`
echo Blocks per minute: $PER_MIN


if [ $PER_MIN -eq 0 ]; then
echo Not synching
exit;
fi

# During that minute the head of the chain progressed by thirty blocks
PROGRESS_PER_MIN=`expr $PER_MIN - 30`
echo Progress per minute: $PROGRESS_PER_MIN


# How many more blocks do we need?
HEAD=`cast block-number --rpc-url $L2_URL`
BEHIND=`expr $HEAD - $T1`
MINUTES=`expr $BEHIND / $PROGRESS_PER_MIN`
HOURS=`expr $MINUTES / 60`
echo Hours until sync completed: $HOURS

if [ $HOURS -gt 24 ] ; then
DAYS=`expr $HOURS / 24`
echo Days until sync complete: $DAYS
fi
```  
5. Run the following command to get an estimate:
```sh
./run-estimate.sh
```"
379,What are the different chain IDs used in the script for?,"The script uses different chain IDs to identify which Optimism network you are connected to. Chain ID 10 corresponds to the Optimism mainnet, chain ID 420 corresponds to the Goerli testnet, and chain ID 11155420 corresponds to the Sepolia testnet. The script uses these IDs to set the appropriate URL for fetching the head of the chain.","To estimate how long the synchronization will take, you need to first find out how many blocks you synchronize in a minute. You can use this [Foundry](https://book.getfoundry.sh/) script to get an estimated sync time.  
1. Navigate to your `scripts` directory
2. Create a new file:
```sh
touch run-estimate.sh
```
3. Make it executable:
```sh
chmod +x run-estimate.sh
```
4. Insert this snippet of code into `run-estimate.sh`:  
```sh
#!/usr/bin/bash

export ETH_RPC_URL=http://localhost:8545
CHAIN_ID=`cast chain-id`
echo Chain ID: $CHAIN_ID
echo Please wait

if [ $CHAIN_ID -eq 10 ]; then
L2_URL=https://mainnet.optimism.io
fi


if [ $CHAIN_ID -eq 420 ]; then
L2_URL=https://goerli.optimism.io
fi


if [ $CHAIN_ID -eq 11155420 ]; then
L2_URL=https://sepolia.optimism.io
fi

T0=`cast block-number --rpc-url $ETH_RPC_URL` ; sleep 60 ; T1=`cast block-number --rpc-url $ETH_RPC_URL`
PER_MIN=`expr $T1 - $T0`
echo Blocks per minute: $PER_MIN


if [ $PER_MIN -eq 0 ]; then
echo Not synching
exit;
fi

# During that minute the head of the chain progressed by thirty blocks
PROGRESS_PER_MIN=`expr $PER_MIN - 30`
echo Progress per minute: $PROGRESS_PER_MIN


# How many more blocks do we need?
HEAD=`cast block-number --rpc-url $L2_URL`
BEHIND=`expr $HEAD - $T1`
MINUTES=`expr $BEHIND / $PROGRESS_PER_MIN`
HOURS=`expr $MINUTES / 60`
echo Hours until sync completed: $HOURS

if [ $HOURS -gt 24 ] ; then
DAYS=`expr $HOURS / 24`
echo Days until sync complete: $DAYS
fi
```  
5. Run the following command to get an estimate:
```sh
./run-estimate.sh
```"
380,Why should I start `op-geth` first and shut it down last?,Starting `op-geth` first and shutting it down last ensures that the system operates smoothly and avoids potential issues that could arise from improper startup or shutdown sequences.,It is best to start `op-geth` first and shut it down last.
381,How can I run the OP Testnet from the source code?,"To run the OP Testnet from the source code, you would need to follow the specific instructions provided in the Optimism Governance Documentation under the section titled 'Running OP Testnet from Source'. This section will guide you through the necessary steps and requirements to set up and run the testnet using the source code.","---
title: Running OP Testnet from Source
lang: en-US
---"
382,What's the difference between Migrated and Non-Migrated Networks in Optimism?,"Migrated Networks, like OP Mainnet and OP Goerli, were operational before the Bedrock upgrade and require initializing their nodes with a data directory. Non-Migrated Networks, such as OP Sepolia, have only existed after the Bedrock upgrade and can be initialized from a genesis file.","::: info Migrated vs Non-Migrated Networks
Migrated Networks, *OP Mainnet* and *OP Goerli*, were running before the Bedrock upgrade. Non-Migrated Networks, *OP Sepolia*, have only existed in a post Bedrock world. The way transaction execution is handled is funadmentally different pre- vs post-bedrock. Migrated networks are required to initialize their nodes with a data directory and non-migrated networks can simply initialize from a genesis file.
:::"
382,How is transaction execution different in Optimism's networks before and after the Bedrock upgrade?,"The way transaction execution is handled is fundamentally different pre- vs post-Bedrock. Migrated networks, which existed before the Bedrock upgrade, have a different transaction execution process compared to non-migrated networks that were created after the upgrade.","::: info Migrated vs Non-Migrated Networks
Migrated Networks, *OP Mainnet* and *OP Goerli*, were running before the Bedrock upgrade. Non-Migrated Networks, *OP Sepolia*, have only existed in a post Bedrock world. The way transaction execution is handled is funadmentally different pre- vs post-bedrock. Migrated networks are required to initialize their nodes with a data directory and non-migrated networks can simply initialize from a genesis file.
:::"
382,How do you initialize nodes in Optimism's Migrated and Non-Migrated Networks?,"For Migrated Networks like OP Mainnet and OP Goerli, you need to initialize nodes with a data directory. For Non-Migrated Networks like OP Sepolia, you can initialize nodes from a genesis file.","::: info Migrated vs Non-Migrated Networks
Migrated Networks, *OP Mainnet* and *OP Goerli*, were running before the Bedrock upgrade. Non-Migrated Networks, *OP Sepolia*, have only existed in a post Bedrock world. The way transaction execution is handled is funadmentally different pre- vs post-bedrock. Migrated networks are required to initialize their nodes with a data directory and non-migrated networks can simply initialize from a genesis file.
:::"
383,What is the purpose of the genesis JSON file in OP Sepolia?,"The genesis JSON file encodes the network's genesis information, which is necessary for initializing the OP Sepolia network. It contains the initial state and configuration of the blockchain network.","OP Sepolia is non-migrated network so it requires [initialization via genesis file](../bedrock/node-operator-guide/#initialization-via-genesis-file). `op-geth` uses JSON files to encode a network's genesis information. You'll need to download the genesis JSON, then run the following command to initialize the data directory:  
```bash
curl -o <path to genesis JSON> -sL https://networks.optimism.io/op-sepolia/genesis.json

geth init \
--datadir=""<your data directory>"" \
""<path to genesis JSON>""
```"
383,Which tool is used to initialize the OP Sepolia network?,"The tool used to initialize the OP Sepolia network is `op-geth`, which utilizes JSON files to encode the network's genesis information.","OP Sepolia is non-migrated network so it requires [initialization via genesis file](../bedrock/node-operator-guide/#initialization-via-genesis-file). `op-geth` uses JSON files to encode a network's genesis information. You'll need to download the genesis JSON, then run the following command to initialize the data directory:  
```bash
curl -o <path to genesis JSON> -sL https://networks.optimism.io/op-sepolia/genesis.json

geth init \
--datadir=""<your data directory>"" \
""<path to genesis JSON>""
```"
384,How do I generate a JWT token for my Optimism setup?,"To generate a JWT token for your Optimism setup, navigate into your `op-geth` directory and run the following commands: `openssl rand -hex 32 > jwt.txt` and then `cp jwt.txt ../optimism/op-node`.","1. Navigate into your `op-geth` directory and run these commands:  
```sh
openssl rand -hex 32 > jwt.txt
cp jwt.txt ../optimism/op-node
```"
385,Why do I need to create a new directory called `scripts` in the root of my working directory?,Creating a `scripts` directory in the root of your working directory is likely a step in organizing your project files. This directory will typically be used to store various scripts that are essential for the project's operation or deployment.,In the root of your working directory create a new directory: `scripts`.
386,How do I create a new script file in the terminal?,"You can create a new script file by using the `touch` command followed by the name of the file. For example, `touch run-op-geth.sh` will create a new file named `run-op-geth.sh`.","2. Create a new file:
```sh
touch run-op-geth.sh
```  
3. Make it executable:
```sh
chmod +x run-op-geth.sh
```  
4. Insert this snippet of code into `run-op-geth.sh` and modify the path to the `op-geth` directory.  
```sh
#! /usr/bin/bash

SEQUENCER_URL=https://sepolia-sequencer.optimism.io/

cd <<Path to op-geth directory>>

./build/bin/geth \
--datadir=./datadir \
--http \
--http.port=8545 \
--http.addr=0.0.0.0 \
--authrpc.addr=localhost \
--authrpc.jwtsecret=./jwt.txt \
--verbosity=3 \
--rollup.sequencerhttp=$SEQUENCER_URL \
--nodiscover \
--syncmode=full \
--maxpeers=0 \
--beta.op-network=op-sepolia
```  
Other Sequencer URLs can be found here: [Networks, Public RPC Endpoints, & APIs](../../useful-tools/networks.md).  
1. Run the following command to start `op-geth`:  
```bash
./run-op-geth.sh
```"
386,How do I make a script file executable?,"You can make a script file executable by using the `chmod +x` command followed by the name of the file. For example, `chmod +x run-op-geth.sh` will make the `run-op-geth.sh` file executable.","2. Create a new file:
```sh
touch run-op-geth.sh
```  
3. Make it executable:
```sh
chmod +x run-op-geth.sh
```  
4. Insert this snippet of code into `run-op-geth.sh` and modify the path to the `op-geth` directory.  
```sh
#! /usr/bin/bash

SEQUENCER_URL=https://sepolia-sequencer.optimism.io/

cd <<Path to op-geth directory>>

./build/bin/geth \
--datadir=./datadir \
--http \
--http.port=8545 \
--http.addr=0.0.0.0 \
--authrpc.addr=localhost \
--authrpc.jwtsecret=./jwt.txt \
--verbosity=3 \
--rollup.sequencerhttp=$SEQUENCER_URL \
--nodiscover \
--syncmode=full \
--maxpeers=0 \
--beta.op-network=op-sepolia
```  
Other Sequencer URLs can be found here: [Networks, Public RPC Endpoints, & APIs](../../useful-tools/networks.md).  
1. Run the following command to start `op-geth`:  
```bash
./run-op-geth.sh
```"
386,Where can I find other Sequencer URLs for Optimism?,"You can find other Sequencer URLs for Optimism in the 'Networks, Public RPC Endpoints, & APIs' section of the documentation, which is linked in the fragment.","2. Create a new file:
```sh
touch run-op-geth.sh
```  
3. Make it executable:
```sh
chmod +x run-op-geth.sh
```  
4. Insert this snippet of code into `run-op-geth.sh` and modify the path to the `op-geth` directory.  
```sh
#! /usr/bin/bash

SEQUENCER_URL=https://sepolia-sequencer.optimism.io/

cd <<Path to op-geth directory>>

./build/bin/geth \
--datadir=./datadir \
--http \
--http.port=8545 \
--http.addr=0.0.0.0 \
--authrpc.addr=localhost \
--authrpc.jwtsecret=./jwt.txt \
--verbosity=3 \
--rollup.sequencerhttp=$SEQUENCER_URL \
--nodiscover \
--syncmode=full \
--maxpeers=0 \
--beta.op-network=op-sepolia
```  
Other Sequencer URLs can be found here: [Networks, Public RPC Endpoints, & APIs](../../useful-tools/networks.md).  
1. Run the following command to start `op-geth`:  
```bash
./run-op-geth.sh
```"
387,How do I create a new script file in the `scripts` directory?,"You can create a new script file by navigating to the `scripts` directory and using the `touch` command followed by the file name. For example, `touch run-op-node.sh` will create a new file named `run-op-node.sh`.","1. Navigate to the `scripts` directory you created.  
2. Create a new file:
```sh
touch run-op-node.sh
```
3. Make it executable:
```sh
chmod +x run-op-node.sh
```
4. Insert this snippet of code into `run-op-node.sh`:  
```sh
#!/usr/bin/bash

L1URL=<< L1 RPC URL >>
L1KIND=basic
NET=<< goerli OR sepolia >>

cd <<Path to op-node directory>>


./bin/op-node \
--l1=$L1URL  \
--l1.rpckind=$L1KIND \
--l2=ws://localhost:8551 \
--l2.jwt-secret=./jwt.txt \
--network=$NET \
--rpc.addr=0.0.0.0 \
--rpc.port=8547 \
--network=op-sepolia
```  
- Change `<< L1 RPC URL >>` to your local L1 node or a service provider's URL for the L1 node (L1 Ethereum). E.g. for Infura, `https://sepolia.infura.io/v3/API_KEY`.
- Set `L1KIND` to the network provider you are using (options: alchemy, quicknode, infura, parity, nethermind, debug_geth, erigon, basic, any).  
5. Run the following command to start `op-node`:  
```bash
./run-op-node.sh
```"
387,How do I make a script file executable?,"You can make a script file executable by using the `chmod +x` command followed by the file name. For example, `chmod +x run-op-node.sh` will make the `run-op-node.sh` file executable.","1. Navigate to the `scripts` directory you created.  
2. Create a new file:
```sh
touch run-op-node.sh
```
3. Make it executable:
```sh
chmod +x run-op-node.sh
```
4. Insert this snippet of code into `run-op-node.sh`:  
```sh
#!/usr/bin/bash

L1URL=<< L1 RPC URL >>
L1KIND=basic
NET=<< goerli OR sepolia >>

cd <<Path to op-node directory>>


./bin/op-node \
--l1=$L1URL  \
--l1.rpckind=$L1KIND \
--l2=ws://localhost:8551 \
--l2.jwt-secret=./jwt.txt \
--network=$NET \
--rpc.addr=0.0.0.0 \
--rpc.port=8547 \
--network=op-sepolia
```  
- Change `<< L1 RPC URL >>` to your local L1 node or a service provider's URL for the L1 node (L1 Ethereum). E.g. for Infura, `https://sepolia.infura.io/v3/API_KEY`.
- Set `L1KIND` to the network provider you are using (options: alchemy, quicknode, infura, parity, nethermind, debug_geth, erigon, basic, any).  
5. Run the following command to start `op-node`:  
```bash
./run-op-node.sh
```"
387,What should I replace `<< L1 RPC URL >>` with in the script?,"You should replace `<< L1 RPC URL >>` with the URL of your local L1 node or a service provider's URL for the L1 node. For example, if you are using Infura, you might use `https://sepolia.infura.io/v3/API_KEY`.","1. Navigate to the `scripts` directory you created.  
2. Create a new file:
```sh
touch run-op-node.sh
```
3. Make it executable:
```sh
chmod +x run-op-node.sh
```
4. Insert this snippet of code into `run-op-node.sh`:  
```sh
#!/usr/bin/bash

L1URL=<< L1 RPC URL >>
L1KIND=basic
NET=<< goerli OR sepolia >>

cd <<Path to op-node directory>>


./bin/op-node \
--l1=$L1URL  \
--l1.rpckind=$L1KIND \
--l2=ws://localhost:8551 \
--l2.jwt-secret=./jwt.txt \
--network=$NET \
--rpc.addr=0.0.0.0 \
--rpc.port=8547 \
--network=op-sepolia
```  
- Change `<< L1 RPC URL >>` to your local L1 node or a service provider's URL for the L1 node (L1 Ethereum). E.g. for Infura, `https://sepolia.infura.io/v3/API_KEY`.
- Set `L1KIND` to the network provider you are using (options: alchemy, quicknode, infura, parity, nethermind, debug_geth, erigon, basic, any).  
5. Run the following command to start `op-node`:  
```bash
./run-op-node.sh
```"
388,Why do I need to synchronize my Optimism node before using it?,"The datadir provided by Optimism is not updated continuously, so you need to synchronize your node to ensure it has the latest data before you can use it.","The datadir provided by Optimism is not updated continuously, so before you can use the node you need a to synchronize it.  
During that process you get log messages from `op-node`, and nothing else appears to happen.  
```
INFO [06-26|13:31:20.389] Advancing bq origin                      origin=17171d..1bc69b:8300332 originBehind=false
```  
That is normal - it means that `op-node` is looking for a location in the batch queue.
After a few minutes it finds it, and then it can start synchronizing.  
While it is synchronizing, you can expect log messages such as these from `op-node`:  
```
INFO [06-26|14:00:59.460] Sync progress                            reason=""processed safe block derived from L1"" l2_finalized=ef93e6..e0f367:4067805 l2_safe=7fe3f6..900127:4068014 l2_unsafe=7fe3f6..900127:4068014 l2_time=1,673,564,096 l1_derived=6079cd..be4231:8301091
INFO [06-26|14:00:59.460] Found next batch                         epoch=8e8a03..11a6de:8301087 batch_epoch=8301087 batch_timestamp=1,673,564,098
INFO [06-26|14:00:59.461] generated attributes in payload queue    txs=1  timestamp=1,673,564,098
INFO [06-26|14:00:59.463] inserted block                           hash=e80dc4..72a759 number=4,068,015 state_root=660ced..043025 timestamp=1,673,564,098 parent=7fe3f6..900127 prev_randao=78e43d..36f07a fee_recipient=0x4200000000000000000000000000000000000011 txs=1  update_safe=true
```  
And log messages such as these from `op-geth`:  
```
INFO [06-26|14:02:12.974] Imported new potential chain segment     number=4,068,194 hash=a334a0..609a83 blocks=1         txs=1         mgas=0.000  elapsed=1.482ms     mgasps=0.000   age=5mo2w20h dirty=2.31MiB
INFO [06-26|14:02:12.976] Chain head was updated                   number=4,068,194 hash=a334a0..609a83 root=e80f5e..dd06f9 elapsed=""188.373¬µs"" age=5mo2w20h
INFO [06-26|14:02:12.982] Starting work on payload                 id=0x5542117d680dbd4e
```"
388,What should I expect to see in the logs while my Optimism node is synchronizing?,"During synchronization, you will see log messages from `op-node` indicating progress, such as 'Sync progress' and 'Found next batch'. You will also see messages from `op-geth` like 'Imported new potential chain segment' and 'Chain head was updated'. These logs show that the node is processing and updating its data.","The datadir provided by Optimism is not updated continuously, so before you can use the node you need a to synchronize it.  
During that process you get log messages from `op-node`, and nothing else appears to happen.  
```
INFO [06-26|13:31:20.389] Advancing bq origin                      origin=17171d..1bc69b:8300332 originBehind=false
```  
That is normal - it means that `op-node` is looking for a location in the batch queue.
After a few minutes it finds it, and then it can start synchronizing.  
While it is synchronizing, you can expect log messages such as these from `op-node`:  
```
INFO [06-26|14:00:59.460] Sync progress                            reason=""processed safe block derived from L1"" l2_finalized=ef93e6..e0f367:4067805 l2_safe=7fe3f6..900127:4068014 l2_unsafe=7fe3f6..900127:4068014 l2_time=1,673,564,096 l1_derived=6079cd..be4231:8301091
INFO [06-26|14:00:59.460] Found next batch                         epoch=8e8a03..11a6de:8301087 batch_epoch=8301087 batch_timestamp=1,673,564,098
INFO [06-26|14:00:59.461] generated attributes in payload queue    txs=1  timestamp=1,673,564,098
INFO [06-26|14:00:59.463] inserted block                           hash=e80dc4..72a759 number=4,068,015 state_root=660ced..043025 timestamp=1,673,564,098 parent=7fe3f6..900127 prev_randao=78e43d..36f07a fee_recipient=0x4200000000000000000000000000000000000011 txs=1  update_safe=true
```  
And log messages such as these from `op-geth`:  
```
INFO [06-26|14:02:12.974] Imported new potential chain segment     number=4,068,194 hash=a334a0..609a83 blocks=1         txs=1         mgas=0.000  elapsed=1.482ms     mgasps=0.000   age=5mo2w20h dirty=2.31MiB
INFO [06-26|14:02:12.976] Chain head was updated                   number=4,068,194 hash=a334a0..609a83 root=e80f5e..dd06f9 elapsed=""188.373¬µs"" age=5mo2w20h
INFO [06-26|14:02:12.982] Starting work on payload                 id=0x5542117d680dbd4e
```"
388,Is it normal for nothing to appear to happen initially when I start synchronizing my Optimism node?,"Yes, it is normal. Initially, `op-node` is looking for a location in the batch queue, and you will see log messages indicating this. After a few minutes, it will find the location and start the synchronization process.","The datadir provided by Optimism is not updated continuously, so before you can use the node you need a to synchronize it.  
During that process you get log messages from `op-node`, and nothing else appears to happen.  
```
INFO [06-26|13:31:20.389] Advancing bq origin                      origin=17171d..1bc69b:8300332 originBehind=false
```  
That is normal - it means that `op-node` is looking for a location in the batch queue.
After a few minutes it finds it, and then it can start synchronizing.  
While it is synchronizing, you can expect log messages such as these from `op-node`:  
```
INFO [06-26|14:00:59.460] Sync progress                            reason=""processed safe block derived from L1"" l2_finalized=ef93e6..e0f367:4067805 l2_safe=7fe3f6..900127:4068014 l2_unsafe=7fe3f6..900127:4068014 l2_time=1,673,564,096 l1_derived=6079cd..be4231:8301091
INFO [06-26|14:00:59.460] Found next batch                         epoch=8e8a03..11a6de:8301087 batch_epoch=8301087 batch_timestamp=1,673,564,098
INFO [06-26|14:00:59.461] generated attributes in payload queue    txs=1  timestamp=1,673,564,098
INFO [06-26|14:00:59.463] inserted block                           hash=e80dc4..72a759 number=4,068,015 state_root=660ced..043025 timestamp=1,673,564,098 parent=7fe3f6..900127 prev_randao=78e43d..36f07a fee_recipient=0x4200000000000000000000000000000000000011 txs=1  update_safe=true
```  
And log messages such as these from `op-geth`:  
```
INFO [06-26|14:02:12.974] Imported new potential chain segment     number=4,068,194 hash=a334a0..609a83 blocks=1         txs=1         mgas=0.000  elapsed=1.482ms     mgasps=0.000   age=5mo2w20h dirty=2.31MiB
INFO [06-26|14:02:12.976] Chain head was updated                   number=4,068,194 hash=a334a0..609a83 root=e80f5e..dd06f9 elapsed=""188.373¬µs"" age=5mo2w20h
INFO [06-26|14:02:12.982] Starting work on payload                 id=0x5542117d680dbd4e
```"
389,How can I estimate the time it will take to synchronize my Optimism node?,"You can estimate the synchronization time by using a script provided in the Foundry documentation. First, navigate to your `scripts` directory and create a new file called `run-estimate.sh`. Make it executable and insert the provided code snippet into the file. Then, run the script using the command `./run-estimate.sh` to get an estimate of the synchronization time.","To estimate how long the synchronization will take, you need to first find out how many blocks you synchronize in a minute. You can use this [Foundry](https://book.getfoundry.sh/) script to get an estimated sync time.  
1. Navigate to your `scripts` directory
2. Create a new file:
```sh
touch run-estimate.sh
```
3. Make it executable:
```sh
chmod +x run-estimate.sh
```
4. Insert this snippet of code into `run-estimate.sh`:  
```sh
#!/usr/bin/bash

export ETH_RPC_URL=http://localhost:8545
CHAIN_ID=`cast chain-id`
echo Chain ID: $CHAIN_ID
echo Please wait

if [ $CHAIN_ID -eq 10 ]; then
L2_URL=https://mainnet.optimism.io
fi


if [ $CHAIN_ID -eq 420 ]; then
L2_URL=https://goerli.optimism.io
fi


if [ $CHAIN_ID -eq 11155420 ]; then
L2_URL=https://sepolia.optimism.io
fi

T0=`cast block-number --rpc-url $ETH_RPC_URL` ; sleep 60 ; T1=`cast block-number --rpc-url $ETH_RPC_URL`
PER_MIN=`expr $T1 - $T0`
echo Blocks per minute: $PER_MIN


if [ $PER_MIN -eq 0 ]; then
echo Not synching
exit;
fi

# During that minute the head of the chain progressed by thirty blocks
PROGRESS_PER_MIN=`expr $PER_MIN - 30`
echo Progress per minute: $PROGRESS_PER_MIN


# How many more blocks do we need?
HEAD=`cast block-number --rpc-url $L2_URL`
BEHIND=`expr $HEAD - $T1`
MINUTES=`expr $BEHIND / $PROGRESS_PER_MIN`
HOURS=`expr $MINUTES / 60`
echo Hours until sync completed: $HOURS

if [ $HOURS -gt 24 ] ; then
DAYS=`expr $HOURS / 24`
echo Days until sync complete: $DAYS
fi
```  
5. Run the following command to get an estimate:
```sh
./run-estimate.sh
```"
389,What does the script do to estimate the synchronization time?,"The script calculates the number of blocks synchronized in a minute and uses this information to estimate the total time required to complete the synchronization. It checks the chain ID to determine the appropriate URL for the Optimism network (mainnet, Goerli, or Sepolia), measures the block progress per minute, and then calculates the remaining time based on the current block number and the head of the chain.","To estimate how long the synchronization will take, you need to first find out how many blocks you synchronize in a minute. You can use this [Foundry](https://book.getfoundry.sh/) script to get an estimated sync time.  
1. Navigate to your `scripts` directory
2. Create a new file:
```sh
touch run-estimate.sh
```
3. Make it executable:
```sh
chmod +x run-estimate.sh
```
4. Insert this snippet of code into `run-estimate.sh`:  
```sh
#!/usr/bin/bash

export ETH_RPC_URL=http://localhost:8545
CHAIN_ID=`cast chain-id`
echo Chain ID: $CHAIN_ID
echo Please wait

if [ $CHAIN_ID -eq 10 ]; then
L2_URL=https://mainnet.optimism.io
fi


if [ $CHAIN_ID -eq 420 ]; then
L2_URL=https://goerli.optimism.io
fi


if [ $CHAIN_ID -eq 11155420 ]; then
L2_URL=https://sepolia.optimism.io
fi

T0=`cast block-number --rpc-url $ETH_RPC_URL` ; sleep 60 ; T1=`cast block-number --rpc-url $ETH_RPC_URL`
PER_MIN=`expr $T1 - $T0`
echo Blocks per minute: $PER_MIN


if [ $PER_MIN -eq 0 ]; then
echo Not synching
exit;
fi

# During that minute the head of the chain progressed by thirty blocks
PROGRESS_PER_MIN=`expr $PER_MIN - 30`
echo Progress per minute: $PROGRESS_PER_MIN


# How many more blocks do we need?
HEAD=`cast block-number --rpc-url $L2_URL`
BEHIND=`expr $HEAD - $T1`
MINUTES=`expr $BEHIND / $PROGRESS_PER_MIN`
HOURS=`expr $MINUTES / 60`
echo Hours until sync completed: $HOURS

if [ $HOURS -gt 24 ] ; then
DAYS=`expr $HOURS / 24`
echo Days until sync complete: $DAYS
fi
```  
5. Run the following command to get an estimate:
```sh
./run-estimate.sh
```"
389,What should I do if the script shows 'Not synching'?,"If the script shows 'Not synching', it means that no blocks were synchronized in the measured minute. This could indicate an issue with your node or network connection. You should check your node setup and ensure that it is properly connected to the network.","To estimate how long the synchronization will take, you need to first find out how many blocks you synchronize in a minute. You can use this [Foundry](https://book.getfoundry.sh/) script to get an estimated sync time.  
1. Navigate to your `scripts` directory
2. Create a new file:
```sh
touch run-estimate.sh
```
3. Make it executable:
```sh
chmod +x run-estimate.sh
```
4. Insert this snippet of code into `run-estimate.sh`:  
```sh
#!/usr/bin/bash

export ETH_RPC_URL=http://localhost:8545
CHAIN_ID=`cast chain-id`
echo Chain ID: $CHAIN_ID
echo Please wait

if [ $CHAIN_ID -eq 10 ]; then
L2_URL=https://mainnet.optimism.io
fi


if [ $CHAIN_ID -eq 420 ]; then
L2_URL=https://goerli.optimism.io
fi


if [ $CHAIN_ID -eq 11155420 ]; then
L2_URL=https://sepolia.optimism.io
fi

T0=`cast block-number --rpc-url $ETH_RPC_URL` ; sleep 60 ; T1=`cast block-number --rpc-url $ETH_RPC_URL`
PER_MIN=`expr $T1 - $T0`
echo Blocks per minute: $PER_MIN


if [ $PER_MIN -eq 0 ]; then
echo Not synching
exit;
fi

# During that minute the head of the chain progressed by thirty blocks
PROGRESS_PER_MIN=`expr $PER_MIN - 30`
echo Progress per minute: $PROGRESS_PER_MIN


# How many more blocks do we need?
HEAD=`cast block-number --rpc-url $L2_URL`
BEHIND=`expr $HEAD - $T1`
MINUTES=`expr $BEHIND / $PROGRESS_PER_MIN`
HOURS=`expr $MINUTES / 60`
echo Hours until sync completed: $HOURS

if [ $HOURS -gt 24 ] ; then
DAYS=`expr $HOURS / 24`
echo Days until sync complete: $DAYS
fi
```  
5. Run the following command to get an estimate:
```sh
./run-estimate.sh
```"
390,Why is it recommended to start `op-geth` first and shut it down last?,"Starting `op-geth` first ensures that the Ethereum client is up and running before other components that depend on it. Shutting it down last ensures that all dependent components have completed their tasks and are safely disconnected, preventing potential data loss or corruption.",It is best to start `op-geth` first and shut it down last.
391,Where can I find the latest releases for Optimism?,You can find the latest releases for Optimism on their GitHub page at https://github.com/ethereum-optimism/optimism/releases.,"<script>
export default {
mounted () {
window.location.href=""https://github.com/ethereum-optimism/optimism/releases""
}
}
</script>"
392,Who are the members of the Optimism Collective?,"The Optimism Collective is made up of companies, communities, and citizens who work together to reward public goods and build a sustainable future for Ethereum.","---
title: What is the Optimism Collective?
lang: en-US
---  
The [Optimism Collective](https://app.optimism.io/announcement) is a band of companies, communities, and citizens working together to reward public goods and build a sustainable future for Ethereum.  
Together we will dispel the myth thatpublic goods cannot beprofitable.
Public goods (including public goods for Optimism and Ethereum) often go underfunded when incentives aren't properly aligned, forcing many to make trade-offs between earning a profit and building for the common good.
The Optimism Collective is bound by a mutually beneficial pact, [a vision](https://www.optimism.io/vision) that can be summed up with the equation **[Impact = Profit](https://www.notion.so/Impact-Profit-Framework-f71c54fc0c3242d190eb7ab06807712c)**."
392,What is the main goal of the Optimism Collective?,The main goal of the Optimism Collective is to dispel the myth that public goods cannot be profitable and to align incentives so that building for the common good can also be financially rewarding.,"---
title: What is the Optimism Collective?
lang: en-US
---  
The [Optimism Collective](https://app.optimism.io/announcement) is a band of companies, communities, and citizens working together to reward public goods and build a sustainable future for Ethereum.  
Together we will dispel the myth thatpublic goods cannot beprofitable.
Public goods (including public goods for Optimism and Ethereum) often go underfunded when incentives aren't properly aligned, forcing many to make trade-offs between earning a profit and building for the common good.
The Optimism Collective is bound by a mutually beneficial pact, [a vision](https://www.optimism.io/vision) that can be summed up with the equation **[Impact = Profit](https://www.notion.so/Impact-Profit-Framework-f71c54fc0c3242d190eb7ab06807712c)**."
392,What is the vision or guiding principle of the Optimism Collective?,"The vision of the Optimism Collective can be summed up with the equation 'Impact = Profit,' which means that creating a positive impact should also lead to financial profit.","---
title: What is the Optimism Collective?
lang: en-US
---  
The [Optimism Collective](https://app.optimism.io/announcement) is a band of companies, communities, and citizens working together to reward public goods and build a sustainable future for Ethereum.  
Together we will dispel the myth thatpublic goods cannot beprofitable.
Public goods (including public goods for Optimism and Ethereum) often go underfunded when incentives aren't properly aligned, forcing many to make trade-offs between earning a profit and building for the common good.
The Optimism Collective is bound by a mutually beneficial pact, [a vision](https://www.optimism.io/vision) that can be summed up with the equation **[Impact = Profit](https://www.notion.so/Impact-Profit-Framework-f71c54fc0c3242d190eb7ab06807712c)**."
393,How does Optimism plan to reward those who create or sustain public goods?,Optimism plans to reward those who create or sustain public goods through a model called retroactive public goods funding. This model supports projects and communities that build for the common good by providing funding after the usefulness of their work has been demonstrated.,"The Optimism Collective will deploy a new model for rewarding those who create or sustain public goods - [retroactive public goods funding](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c), to support projects and communities building for the common good.  
Retroactive public goods funding is advantageous because it is relatively easy to agree on what *is* useful, and see who built it.
It is a lot harder to identify in advance what *will be* useful, and which team will do the best job of building it.
The possibility of an eventual exit payment can also encourage investors to fund initial public good development efforts until the usefulness is obvious, in the same way that the possibility of an eventual IPO or buy out encourages investors to fund startups today."
393,Why is retroactive public goods funding considered advantageous?,"Retroactive public goods funding is considered advantageous because it is easier to agree on what has been useful and see who built it, rather than trying to predict in advance what will be useful and which team will do the best job. This approach also encourages initial investment in public good development by offering the possibility of an eventual exit payment, similar to how investors fund startups with the hope of an IPO or buyout.","The Optimism Collective will deploy a new model for rewarding those who create or sustain public goods - [retroactive public goods funding](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c), to support projects and communities building for the common good.  
Retroactive public goods funding is advantageous because it is relatively easy to agree on what *is* useful, and see who built it.
It is a lot harder to identify in advance what *will be* useful, and which team will do the best job of building it.
The possibility of an eventual exit payment can also encourage investors to fund initial public good development efforts until the usefulness is obvious, in the same way that the possibility of an eventual IPO or buy out encourages investors to fund startups today."
393,How does retroactive public goods funding encourage initial investment?,Retroactive public goods funding encourages initial investment by offering the possibility of an eventual exit payment. This is similar to how the potential for an IPO or buyout encourages investors to fund startups. Investors are more likely to fund initial development efforts if they know there is a chance of being rewarded once the usefulness of the project is proven.,"The Optimism Collective will deploy a new model for rewarding those who create or sustain public goods - [retroactive public goods funding](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c), to support projects and communities building for the common good.  
Retroactive public goods funding is advantageous because it is relatively easy to agree on what *is* useful, and see who built it.
It is a lot harder to identify in advance what *will be* useful, and which team will do the best job of building it.
The possibility of an eventual exit payment can also encourage investors to fund initial public good development efforts until the usefulness is obvious, in the same way that the possibility of an eventual IPO or buy out encourages investors to fund startups today."
394,How does the Optimism Collective approach governance?,"The Optimism Collective takes an experimental and agile approach to governance, relentlessly iterating towards a system which stands the test of time.","The Optimism Collective takes [an experimental and agile approach to governance](https://optimism.mirror.xyz/r888e4B5iiNQi-3_mO26ixgv-plQ099XWgqEOv9iWKA) relentlessly iterating towards a system which stands the test of time.
Initially, the Collective's model ofdigital democratic governance will consist of two houses: the *Token House* and the *Citizens' House*."
394,What are the components of the Optimism Collective's initial governance model?,The initial governance model of the Optimism Collective consists of two houses: the Token House and the Citizens' House.,"The Optimism Collective takes [an experimental and agile approach to governance](https://optimism.mirror.xyz/r888e4B5iiNQi-3_mO26ixgv-plQ099XWgqEOv9iWKA) relentlessly iterating towards a system which stands the test of time.
Initially, the Collective's model ofdigital democratic governance will consist of two houses: the *Token House* and the *Citizens' House*."
396,How did the governance of the Optimism Collective start?,The governance of the Optimism Collective began with the launch of the OP token and the Token House.,"Governance of the Optimism Collective began with the launch of the OP token and the Token House.
OP is being distributed to hundreds of thousands of addresses that engage in positive-sum, community-oriented behavior via a series of airdrops.  
As Token House members, OP holders are responsible for submitting, deliberating, and voting on various types of governance proposals.
In carrying out these functions, OP holders may either [vote directly, or delegate their OP voting power to an eligible third party](delegate.md).  
The Token House votes on on the proposal types outlined in the [Operating Manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#valid-proposal-types).  
You can learn more in the [Token House Onboarding Hub](https://plaid-cement-e44.notion.site/Token-House-Governance-Hub-decae75a0fa248e38f969abe8edef565?pvs=4)."
396,What responsibilities do OP holders have in the Token House?,"OP holders are responsible for submitting, deliberating, and voting on various types of governance proposals. They can either vote directly or delegate their OP voting power to an eligible third party.","Governance of the Optimism Collective began with the launch of the OP token and the Token House.
OP is being distributed to hundreds of thousands of addresses that engage in positive-sum, community-oriented behavior via a series of airdrops.  
As Token House members, OP holders are responsible for submitting, deliberating, and voting on various types of governance proposals.
In carrying out these functions, OP holders may either [vote directly, or delegate their OP voting power to an eligible third party](delegate.md).  
The Token House votes on on the proposal types outlined in the [Operating Manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#valid-proposal-types).  
You can learn more in the [Token House Onboarding Hub](https://plaid-cement-e44.notion.site/Token-House-Governance-Hub-decae75a0fa248e38f969abe8edef565?pvs=4)."
396,How is OP being distributed to the community?,"OP is being distributed to hundreds of thousands of addresses that engage in positive-sum, community-oriented behavior via a series of airdrops.","Governance of the Optimism Collective began with the launch of the OP token and the Token House.
OP is being distributed to hundreds of thousands of addresses that engage in positive-sum, community-oriented behavior via a series of airdrops.  
As Token House members, OP holders are responsible for submitting, deliberating, and voting on various types of governance proposals.
In carrying out these functions, OP holders may either [vote directly, or delegate their OP voting power to an eligible third party](delegate.md).  
The Token House votes on on the proposal types outlined in the [Operating Manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#valid-proposal-types).  
You can learn more in the [Token House Onboarding Hub](https://plaid-cement-e44.notion.site/Token-House-Governance-Hub-decae75a0fa248e38f969abe8edef565?pvs=4)."
397,What's the Citizens' House in Optimism Governance?,The Citizens' House is a large-scale experiment in non-plutocratic governance and retroactive funding of public goods. It is responsible for Retroactive Public Goods Funding (Retro Funding).,"The Citizens' House is a large-scale experiment in [non-plutocratic governance](https://vitalik.ca/general/2021/08/16/voting3.html) and retroactive funding of public goods.  
The Citizens' House is responsible for [Retroactive Public Goods Funding (Retro Funding)](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c).
For more information about the Citizens' House, read [the Overview](./citizens-house.md).
For details about Retro Funding 3, visit [the Retro Funding 3 program details](./retropgf-3.md).
For plans around identity and governance, see [the Citizenship page](./citizenship.md).  
**What is described here is an initial experiment**.
The specifics of this system will evolve as the [Collective](token-house.md) grows."
397,What is Retroactive Public Goods Funding?,Retroactive Public Goods Funding (Retro Funding) is a system managed by the Citizens' House that provides funding for public goods after they have been created and their impact has been assessed.,"The Citizens' House is a large-scale experiment in [non-plutocratic governance](https://vitalik.ca/general/2021/08/16/voting3.html) and retroactive funding of public goods.  
The Citizens' House is responsible for [Retroactive Public Goods Funding (Retro Funding)](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c).
For more information about the Citizens' House, read [the Overview](./citizens-house.md).
For details about Retro Funding 3, visit [the Retro Funding 3 program details](./retropgf-3.md).
For plans around identity and governance, see [the Citizenship page](./citizenship.md).  
**What is described here is an initial experiment**.
The specifics of this system will evolve as the [Collective](token-house.md) grows."
397,Will the governance system of the Citizens' House remain the same?,"No, the specifics of the Citizens' House governance system will evolve as the Collective grows.","The Citizens' House is a large-scale experiment in [non-plutocratic governance](https://vitalik.ca/general/2021/08/16/voting3.html) and retroactive funding of public goods.  
The Citizens' House is responsible for [Retroactive Public Goods Funding (Retro Funding)](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c).
For more information about the Citizens' House, read [the Overview](./citizens-house.md).
For details about Retro Funding 3, visit [the Retro Funding 3 program details](./retropgf-3.md).
For plans around identity and governance, see [the Citizenship page](./citizenship.md).  
**What is described here is an initial experiment**.
The specifics of this system will evolve as the [Collective](token-house.md) grows."
398,Has Airdrop 1 been fully distributed?,"Yes, as of September 15, 2023, all OP from Airdrop 1 has been distributed to eligible addresses, including any unclaimed OP which was sent directly to those addresses.","---
title: Airdrop 1
lang: en-US
---  
::: info Airdrop 1 has been distributed to all eligible addresses  
On September 15, 2023, any unclaimed OP from Airdrop 1 was sent directly to addresses eligible to claim. This means all OP from Airdrop 1 has been distributed.  
:::"
398,What happened to the unclaimed OP from Airdrop 1?,"Any unclaimed OP from Airdrop 1 was sent directly to the addresses that were eligible to claim it on September 15, 2023.","---
title: Airdrop 1
lang: en-US
---  
::: info Airdrop 1 has been distributed to all eligible addresses  
On September 15, 2023, any unclaimed OP from Airdrop 1 was sent directly to addresses eligible to claim. This means all OP from Airdrop 1 has been distributed.  
:::"
398,When was the distribution of Airdrop 1 completed?,"The distribution of Airdrop 1 was completed on September 15, 2023.","---
title: Airdrop 1
lang: en-US
---  
::: info Airdrop 1 has been distributed to all eligible addresses  
On September 15, 2023, any unclaimed OP from Airdrop 1 was sent directly to addresses eligible to claim. This means all OP from Airdrop 1 has been distributed.  
:::"
399,Who is eligible for the Optimism Foundation‚Äôs Airdrop #1?,"The Optimism Foundation‚Äôs Airdrop #1 rewards early adopters and active users of projects in the Optimism ecosystem, as well as active L1 Ethereum participants who can help scale Ethereum‚Äôs innovations, culture, and values to Layer 2. In total, 248,699 addresses are eligible to claim OP in this initial airdrop.","The Optimism Foundation‚Äôs Airdrop #1 rewards those who have been instrumental as early adopters and active users of projects in the Optimism ecosystem.
To celebrate our Ethereum roots, The Optimism Foundation also wants to welcome active L1 participants who can help scale Ethereum‚Äôs innovations, culture, and values to Layer 2.
In total, **248,699** addresses are eligible to claim OP in this *initial* airdrop.  
Our airdrop has six sets of criteria.
Two for OP Mainnet users that target early adopters and active project users, and four for L1 Ethereum, which target active contribution, positive-sum behaviors, and active participation.
Each set is distinct, meaning that an address can be eligible for multiple and allocated a sum of tokens accordingly.
A snapshot of addresses was taken on 03-25-2022 0:00 UTC.
The allocations and criteria break down as follows:"
399,What criteria are used to determine eligibility for the airdrop?,"The airdrop has six sets of criteria: two for OP Mainnet users targeting early adopters and active project users, and four for L1 Ethereum participants targeting active contribution, positive-sum behaviors, and active participation. Each set is distinct, so an address can be eligible for multiple criteria and receive a sum of tokens accordingly.","The Optimism Foundation‚Äôs Airdrop #1 rewards those who have been instrumental as early adopters and active users of projects in the Optimism ecosystem.
To celebrate our Ethereum roots, The Optimism Foundation also wants to welcome active L1 participants who can help scale Ethereum‚Äôs innovations, culture, and values to Layer 2.
In total, **248,699** addresses are eligible to claim OP in this *initial* airdrop.  
Our airdrop has six sets of criteria.
Two for OP Mainnet users that target early adopters and active project users, and four for L1 Ethereum, which target active contribution, positive-sum behaviors, and active participation.
Each set is distinct, meaning that an address can be eligible for multiple and allocated a sum of tokens accordingly.
A snapshot of addresses was taken on 03-25-2022 0:00 UTC.
The allocations and criteria break down as follows:"
399,When was the snapshot of eligible addresses taken?,"The snapshot of eligible addresses was taken on March 25, 2022, at 0:00 UTC.","The Optimism Foundation‚Äôs Airdrop #1 rewards those who have been instrumental as early adopters and active users of projects in the Optimism ecosystem.
To celebrate our Ethereum roots, The Optimism Foundation also wants to welcome active L1 participants who can help scale Ethereum‚Äôs innovations, culture, and values to Layer 2.
In total, **248,699** addresses are eligible to claim OP in this *initial* airdrop.  
Our airdrop has six sets of criteria.
Two for OP Mainnet users that target early adopters and active project users, and four for L1 Ethereum, which target active contribution, positive-sum behaviors, and active participation.
Each set is distinct, meaning that an address can be eligible for multiple and allocated a sum of tokens accordingly.
A snapshot of addresses was taken on 03-25-2022 0:00 UTC.
The allocations and criteria break down as follows:"
400,How many OP tokens does a Repeat OP Mainnet User receive?,"A Repeat OP Mainnet User receives a total of 2,469.35 OP tokens, which is the sum of 776.86 OP for being an OP Mainnet User and an additional 1,692.49 OP for being a repeat user.","| Name | # of Addresses Eligible | OP Allocated per Address |
| -------- | ----------------------: | -----------------------: |
| OP Mainnet Users | 92,157 | 776.86
| Repeat OP Mainnet Users* | 19,174 | 1,692.49
| DAO Voters | 84,015 | 271.83
| Multisig Signers | 19,542 | 1,190.26
| Gitcoin Donors (on L1) | 23,925 | 555.92
| Users Priced Out of Ethereum | 74,272 | 409.42  
\* *Note that Repeat OP Mainnet Users Receive 776.86 + 1,692.49 = 2,469.35 OP*  
| Overlap Bonuses | # of Addresses Eligible | OP Allocated per Address
| - | -: | -:
| 4 Categories & OP Mainnet User | 2,707 |  4,180.54
| 5 Categories & OP Mainnet User |   627 | 13,330.16
| 6 Categories & OP Mainnet User |    45 | 27,534.98  
The amount of OP tokens that an address receives is cumulative, meaning that the sum of OP tokens allocated for each matching criteria set is the amount that an address is eligible to claim (overlap bonuses are not cumulative)."
400,Are the OP tokens cumulative for different categories?,"Yes, the OP tokens are cumulative for different categories. This means that the sum of OP tokens allocated for each matching criteria set is the amount that an address is eligible to claim. However, overlap bonuses are not cumulative.","| Name | # of Addresses Eligible | OP Allocated per Address |
| -------- | ----------------------: | -----------------------: |
| OP Mainnet Users | 92,157 | 776.86
| Repeat OP Mainnet Users* | 19,174 | 1,692.49
| DAO Voters | 84,015 | 271.83
| Multisig Signers | 19,542 | 1,190.26
| Gitcoin Donors (on L1) | 23,925 | 555.92
| Users Priced Out of Ethereum | 74,272 | 409.42  
\* *Note that Repeat OP Mainnet Users Receive 776.86 + 1,692.49 = 2,469.35 OP*  
| Overlap Bonuses | # of Addresses Eligible | OP Allocated per Address
| - | -: | -:
| 4 Categories & OP Mainnet User | 2,707 |  4,180.54
| 5 Categories & OP Mainnet User |   627 | 13,330.16
| 6 Categories & OP Mainnet User |    45 | 27,534.98  
The amount of OP tokens that an address receives is cumulative, meaning that the sum of OP tokens allocated for each matching criteria set is the amount that an address is eligible to claim (overlap bonuses are not cumulative)."
400,What is the OP token allocation for users who fall into 5 categories and are also OP Mainnet Users?,"Users who fall into 5 categories and are also OP Mainnet Users receive 13,330.16 OP tokens.","| Name | # of Addresses Eligible | OP Allocated per Address |
| -------- | ----------------------: | -----------------------: |
| OP Mainnet Users | 92,157 | 776.86
| Repeat OP Mainnet Users* | 19,174 | 1,692.49
| DAO Voters | 84,015 | 271.83
| Multisig Signers | 19,542 | 1,190.26
| Gitcoin Donors (on L1) | 23,925 | 555.92
| Users Priced Out of Ethereum | 74,272 | 409.42  
\* *Note that Repeat OP Mainnet Users Receive 776.86 + 1,692.49 = 2,469.35 OP*  
| Overlap Bonuses | # of Addresses Eligible | OP Allocated per Address
| - | -: | -:
| 4 Categories & OP Mainnet User | 2,707 |  4,180.54
| 5 Categories & OP Mainnet User |   627 | 13,330.16
| 6 Categories & OP Mainnet User |    45 | 27,534.98  
The amount of OP tokens that an address receives is cumulative, meaning that the sum of OP tokens allocated for each matching criteria set is the amount that an address is eligible to claim (overlap bonuses are not cumulative)."
401,Who did the Foundation aim to identify on OP Mainnet?,The Foundation aimed to identify OP Mainnet users who had actively used applications on OP Mainnet as a part of their crypto experience.,The Foundation sought to identify OP Mainnet users who had actively used applications on OP Mainnet as a part of their crypto experience.
402,Who is included in the group selected by the criteria mentioned?,"The group includes addresses that have used OP Mainnet multiple times, specifically those who either bridged to OP Mainnet from L1 before June 23, 2021, or used OP Mainnet for more than one day and made a transaction using an app after June 23, 2021.","This group selects for addresses that have used OP Mainnet, including both early adopters and newer users, but narrows down to a group that has used OP Mainnet multiple times.  
*Criterion: Address bridged to OP Mainnet from L1 during the early phases of mainnet (prior to Jun 23, 2021), or used OP Mainnet for more than 1 day (at least 24 hours between their first and last transaction) and made a transaction using an app (after to Jun 23, 2021).*
- *These rules are only based on usage on OP Mainnet. It does not matter which bridge, exchange, fiat on-ramp, etc you used in order to come to OP Mainnet.*"
402,Does it matter which bridge or exchange I used to come to OP Mainnet?,"No, the rules are only based on usage on OP Mainnet and do not depend on which bridge, exchange, or fiat on-ramp you used to come to OP Mainnet.","This group selects for addresses that have used OP Mainnet, including both early adopters and newer users, but narrows down to a group that has used OP Mainnet multiple times.  
*Criterion: Address bridged to OP Mainnet from L1 during the early phases of mainnet (prior to Jun 23, 2021), or used OP Mainnet for more than 1 day (at least 24 hours between their first and last transaction) and made a transaction using an app (after to Jun 23, 2021).*
- *These rules are only based on usage on OP Mainnet. It does not matter which bridge, exchange, fiat on-ramp, etc you used in order to come to OP Mainnet.*"
403,How does Optimism determine the most active OP Mainnet users?,Optimism selects the most active OP Mainnet users based on whether they have made at least one transaction with an OP Mainnet application across four or more distinct weeks. This criterion targets the top 20% of OP Mainnet users.,"This tier selects for the most active OP Mainnet users, who repeatedly come back to use applications in the Optimism ecosystem.  
*Criterion: Address is an ‚ÄòOP Mainnet User‚Äô and made at least 1 transaction with an OP Mainnet application across four or more distinct weeks. This selects for the top 20% of ‚ÄòOP Mainnet Users‚Äô.*
- *""Distinct weeks"" are counted based on the time of an addresses' first transaction (i.e. days 1 - 7 are considered Week 1, not the calendar week). This makes sure that there is no skew by which day of the week an address joined OP Mainnet.*"
403,What does 'distinct weeks' mean in the context of Optimism's user activity?,"In Optimism's context, 'distinct weeks' are counted based on the time of an address's first transaction. For example, days 1 to 7 are considered Week 1, regardless of the calendar week. This method ensures that the measurement is not skewed by the specific day of the week an address joined OP Mainnet.","This tier selects for the most active OP Mainnet users, who repeatedly come back to use applications in the Optimism ecosystem.  
*Criterion: Address is an ‚ÄòOP Mainnet User‚Äô and made at least 1 transaction with an OP Mainnet application across four or more distinct weeks. This selects for the top 20% of ‚ÄòOP Mainnet Users‚Äô.*
- *""Distinct weeks"" are counted based on the time of an addresses' first transaction (i.e. days 1 - 7 are considered Week 1, not the calendar week). This makes sure that there is no skew by which day of the week an address joined OP Mainnet.*"
403,Why does Optimism use the concept of 'distinct weeks' instead of calendar weeks?,Optimism uses 'distinct weeks' to ensure that the measurement of user activity is not skewed by the specific day of the week an address joined OP Mainnet. This approach provides a fairer assessment of user engagement over time.,"This tier selects for the most active OP Mainnet users, who repeatedly come back to use applications in the Optimism ecosystem.  
*Criterion: Address is an ‚ÄòOP Mainnet User‚Äô and made at least 1 transaction with an OP Mainnet application across four or more distinct weeks. This selects for the top 20% of ‚ÄòOP Mainnet Users‚Äô.*
- *""Distinct weeks"" are counted based on the time of an addresses' first transaction (i.e. days 1 - 7 are considered Week 1, not the calendar week). This makes sure that there is no skew by which day of the week an address joined OP Mainnet.*"
404,How do the rules of Optimism align with its values?,"The rules of Optimism are designed to promote behaviors that align with Ethereum and Optimism's values, which include active contribution, positive-sum behavior, and scaling decentralized applications to the world.","These rules aim to target behaviors that match Ethereum and Optimism‚Äôs values of active contribution, positive-sum behavior, and scaling decentralized applications to the world."
404,What are some of the key values that Optimism promotes?,"Optimism promotes values such as active contribution, positive-sum behavior, and the scaling of decentralized applications to a global audience.","These rules aim to target behaviors that match Ethereum and Optimism‚Äôs values of active contribution, positive-sum behavior, and scaling decentralized applications to the world."
405,How does the Foundation determine if an address is actively engaged in governance?,"The Foundation considers an address actively engaged in governance if it has either voted on or authored at least one proposal onchain, or at least two proposals on Snapshot (offchain).","The Foundation believes that active and engaged governance is crucial to scaling decentralized systems.
Addresses who match this criterion have actively chosen to actively contribute by participating in governance.  
*Criterion: Address has either voted on or authored at least one proposal onchain, or at least two on Snapshot (offchain).*
- *We filtered to ‚Äúactive DAOs‚Äù who have had at least 5 proposals with at least 5 votes.*
- *Onchain governance contracts included: Governor Alpha and Bravo, Aave, Curve, Maker, Aragon, DAOHaus, DAOStack, and forks.*
- *Since Snapshot votes were offchain, the Foundation recognized that these were more susceptible to spam/farming behavior, often driven by voters with nominal voting power.
To mitigate this, we filtered Snapshot votes to voters who made up the top 99.9% of total voting power in each DAO (i.e. >= 0.1% of voting power was made up by the sum of all smaller voters).*"
405,What measures does the Foundation take to ensure the quality of Snapshot votes?,"To ensure the quality of Snapshot votes, the Foundation filters out votes that are more susceptible to spam or farming behavior. They only consider votes from those who make up the top 99.9% of total voting power in each DAO, meaning voters who collectively hold at least 0.1% of the voting power.","The Foundation believes that active and engaged governance is crucial to scaling decentralized systems.
Addresses who match this criterion have actively chosen to actively contribute by participating in governance.  
*Criterion: Address has either voted on or authored at least one proposal onchain, or at least two on Snapshot (offchain).*
- *We filtered to ‚Äúactive DAOs‚Äù who have had at least 5 proposals with at least 5 votes.*
- *Onchain governance contracts included: Governor Alpha and Bravo, Aave, Curve, Maker, Aragon, DAOHaus, DAOStack, and forks.*
- *Since Snapshot votes were offchain, the Foundation recognized that these were more susceptible to spam/farming behavior, often driven by voters with nominal voting power.
To mitigate this, we filtered Snapshot votes to voters who made up the top 99.9% of total voting power in each DAO (i.e. >= 0.1% of voting power was made up by the sum of all smaller voters).*"
405,What types of onchain governance contracts are included in the Foundation's criteria?,"The onchain governance contracts included in the Foundation's criteria are Governor Alpha and Bravo, Aave, Curve, Maker, Aragon, DAOHaus, DAOStack, and their forks.","The Foundation believes that active and engaged governance is crucial to scaling decentralized systems.
Addresses who match this criterion have actively chosen to actively contribute by participating in governance.  
*Criterion: Address has either voted on or authored at least one proposal onchain, or at least two on Snapshot (offchain).*
- *We filtered to ‚Äúactive DAOs‚Äù who have had at least 5 proposals with at least 5 votes.*
- *Onchain governance contracts included: Governor Alpha and Bravo, Aave, Curve, Maker, Aragon, DAOHaus, DAOStack, and forks.*
- *Since Snapshot votes were offchain, the Foundation recognized that these were more susceptible to spam/farming behavior, often driven by voters with nominal voting power.
To mitigate this, we filtered Snapshot votes to voters who made up the top 99.9% of total voting power in each DAO (i.e. >= 0.1% of voting power was made up by the sum of all smaller voters).*"
406,Who are the multi-sig signers in the Optimism governance system?,Multi-sig signers are individuals entrusted with larger pools of capital or control over key protocol functions. They are often the present and future DAO leaders and builders.,"Multi-sig signers are entrusted with larger pools of capital or control over key protocol functions.
They are often the present (and future) DAO leaders and builders.  
*Criterion: Address is a current signer on a Multi-Sig which has executed at least 10 transactions all-time (this cohort includes 95% of all multisig transactions).*
- *Multisig Wallets Include: Gnosis Safe v0.1.0-1.3.0, MultiSigWithDailyLimit, MultiSigWalletWithTimeLock, and addresses in Etherscan‚Äôs ‚ÄòMultisig‚Äô label which had a function to get owner addresses.*"
406,What is the criterion for an address to be considered a multi-sig signer?,An address is considered a multi-sig signer if it is a current signer on a Multi-Sig which has executed at least 10 transactions all-time. This criterion includes 95% of all multisig transactions.,"Multi-sig signers are entrusted with larger pools of capital or control over key protocol functions.
They are often the present (and future) DAO leaders and builders.  
*Criterion: Address is a current signer on a Multi-Sig which has executed at least 10 transactions all-time (this cohort includes 95% of all multisig transactions).*
- *Multisig Wallets Include: Gnosis Safe v0.1.0-1.3.0, MultiSigWithDailyLimit, MultiSigWalletWithTimeLock, and addresses in Etherscan‚Äôs ‚ÄòMultisig‚Äô label which had a function to get owner addresses.*"
406,What types of multisig wallets are included in the Optimism governance system?,"The multisig wallets included are Gnosis Safe versions 0.1.0 to 1.3.0, MultiSigWithDailyLimit, MultiSigWalletWithTimeLock, and addresses in Etherscan‚Äôs ‚ÄòMultisig‚Äô label which had a function to get owner addresses.","Multi-sig signers are entrusted with larger pools of capital or control over key protocol functions.
They are often the present (and future) DAO leaders and builders.  
*Criterion: Address is a current signer on a Multi-Sig which has executed at least 10 transactions all-time (this cohort includes 95% of all multisig transactions).*
- *Multisig Wallets Include: Gnosis Safe v0.1.0-1.3.0, MultiSigWithDailyLimit, MultiSigWalletWithTimeLock, and addresses in Etherscan‚Äôs ‚ÄòMultisig‚Äô label which had a function to get owner addresses.*"
407,How does Optimism plan to fund public goods?,Optimism aims to build a sustainable funding source for public goods through retroactive funding (RetroPGF). This involves rewarding projects and individuals who have already provided significant value to the community.,"Gitcoin donors have chosen to behave in positive-sum ways by funding public goods.
These addresses may also align with Optimism‚Äôs goal to build sustainable funding source for public goods through [retroactive funding (RetroPGF](https://medium.com/ethereum-optimism/retropgf-experiment-1-1-million-dollars-for-public-goods-f7e455cbdca)).  
*Criterion: Address has made an onchain donation through Gitcoin on L1. This includes any donation, regardless of if it was during a matching round.*
- *For the time period between rounds 1 - 5, we included addresses who interacted with Gitcoin contracts, sent legacy `ExecuteSubscription` calls, or appeared in [Gitcoin‚Äôs donor API](https://docs.gitcoin.co/mk_rest_api/).*
- *For the period between rounds 6 - 13 (present), we included donor addresses in the Gitcoin ‚ÄòBulkCheckout‚Äô contract transaction logs.*"
407,Who is eligible for retroactive funding from Optimism?,"Addresses that have made onchain donations through Gitcoin on L1 are eligible. This includes any donation, regardless of whether it was during a matching round. Specifically, for rounds 1-5, addresses that interacted with Gitcoin contracts, sent legacy `ExecuteSubscription` calls, or appeared in Gitcoin‚Äôs donor API are included. For rounds 6-13, donor addresses in the Gitcoin ‚ÄòBulkCheckout‚Äô contract transaction logs are included.","Gitcoin donors have chosen to behave in positive-sum ways by funding public goods.
These addresses may also align with Optimism‚Äôs goal to build sustainable funding source for public goods through [retroactive funding (RetroPGF](https://medium.com/ethereum-optimism/retropgf-experiment-1-1-million-dollars-for-public-goods-f7e455cbdca)).  
*Criterion: Address has made an onchain donation through Gitcoin on L1. This includes any donation, regardless of if it was during a matching round.*
- *For the time period between rounds 1 - 5, we included addresses who interacted with Gitcoin contracts, sent legacy `ExecuteSubscription` calls, or appeared in [Gitcoin‚Äôs donor API](https://docs.gitcoin.co/mk_rest_api/).*
- *For the period between rounds 6 - 13 (present), we included donor addresses in the Gitcoin ‚ÄòBulkCheckout‚Äô contract transaction logs.*"
407,What is the criterion for an address to be considered for retroactive funding?,"The criterion is that the address must have made an onchain donation through Gitcoin on L1. This includes any donation, regardless of if it was during a matching round.","Gitcoin donors have chosen to behave in positive-sum ways by funding public goods.
These addresses may also align with Optimism‚Äôs goal to build sustainable funding source for public goods through [retroactive funding (RetroPGF](https://medium.com/ethereum-optimism/retropgf-experiment-1-1-million-dollars-for-public-goods-f7e455cbdca)).  
*Criterion: Address has made an onchain donation through Gitcoin on L1. This includes any donation, regardless of if it was during a matching round.*
- *For the time period between rounds 1 - 5, we included addresses who interacted with Gitcoin contracts, sent legacy `ExecuteSubscription` calls, or appeared in [Gitcoin‚Äôs donor API](https://docs.gitcoin.co/mk_rest_api/).*
- *For the period between rounds 6 - 13 (present), we included donor addresses in the Gitcoin ‚ÄòBulkCheckout‚Äô contract transaction logs.*"
408,How does Optimism's airdrop reward users who have bridged to other chains?,"Optimism's airdrop is designed to reward users who have bridged to other chains but still remain active on Ethereum. Specifically, it targets users who have made at least one app transaction on Ethereum each month after bridging and have transacted at an average rate of at least 2 times per week. This ensures that loyal Ethereum users who explore other chains are still recognized and rewarded.","Active users of dapps on Ethereum are critical to ecosystem growth. Many of these addresses have started bridging to other chains due to high fees, and we want to help retain them in the Ethereum ecosystem while rewarding their curiosity and exploration. Optimism‚Äôs airdrop is also calibrated to reward loyalty to Ethereum, so users who have abandoned Ethereum entirely would not receive an airdrop.  
*Criterion: Address bridged to another chain, but still made an app transaction on Ethereum in each month after they bridged, and transacted at an average rate of at least 2 per week since then (top 60% of matching addresses).*  
- *Bridges included top L1s by TVL: Terra, BSC, Fantom, Avalanche, Solana, Polygon; and general-purpose L2s: Arbtirum, OP Mainnet, Metis, Boba.*
- *To ensure that we gave a long enough period to sample activity, addresses had to have bridged away from Ethereum at least 90 days before the snapshot.*"
408,Which chains are considered for the Optimism airdrop criteria?,"The chains considered for the Optimism airdrop criteria include top Layer 1s by Total Value Locked (TVL) such as Terra, BSC, Fantom, Avalanche, Solana, and Polygon, as well as general-purpose Layer 2s like Arbitrum, OP Mainnet, Metis, and Boba.","Active users of dapps on Ethereum are critical to ecosystem growth. Many of these addresses have started bridging to other chains due to high fees, and we want to help retain them in the Ethereum ecosystem while rewarding their curiosity and exploration. Optimism‚Äôs airdrop is also calibrated to reward loyalty to Ethereum, so users who have abandoned Ethereum entirely would not receive an airdrop.  
*Criterion: Address bridged to another chain, but still made an app transaction on Ethereum in each month after they bridged, and transacted at an average rate of at least 2 per week since then (top 60% of matching addresses).*  
- *Bridges included top L1s by TVL: Terra, BSC, Fantom, Avalanche, Solana, Polygon; and general-purpose L2s: Arbtirum, OP Mainnet, Metis, Boba.*
- *To ensure that we gave a long enough period to sample activity, addresses had to have bridged away from Ethereum at least 90 days before the snapshot.*"
408,What is the minimum period an address must have bridged away from Ethereum to be eligible for the airdrop?,"To be eligible for the airdrop, an address must have bridged away from Ethereum at least 90 days before the snapshot. This ensures there is a sufficient period to sample the user's activity on Ethereum after bridging.","Active users of dapps on Ethereum are critical to ecosystem growth. Many of these addresses have started bridging to other chains due to high fees, and we want to help retain them in the Ethereum ecosystem while rewarding their curiosity and exploration. Optimism‚Äôs airdrop is also calibrated to reward loyalty to Ethereum, so users who have abandoned Ethereum entirely would not receive an airdrop.  
*Criterion: Address bridged to another chain, but still made an app transaction on Ethereum in each month after they bridged, and transacted at an average rate of at least 2 per week since then (top 60% of matching addresses).*  
- *Bridges included top L1s by TVL: Terra, BSC, Fantom, Avalanche, Solana, Polygon; and general-purpose L2s: Arbtirum, OP Mainnet, Metis, Boba.*
- *To ensure that we gave a long enough period to sample activity, addresses had to have bridged away from Ethereum at least 90 days before the snapshot.*"
409,Who are considered important participants in the OP Mainnet ecosystem?,Early OP Mainnet users who also match multiple Ethereum criteria are considered important participants in the OP Mainnet ecosystem.,"Early OP Mainnet users who also match multiple Ethereum criteria may be most likely to become important participants in the OP Mainnet ecosystem, so these addresses were rewarded with an extra overlap bonus.  
*Criterion: Address matches an ‚ÄòOP Mainnet Early Adopter‚Äô criterion, and matches at least 4 criteria sets in total (including OP Mainnet criteria).*  
- *The overlap bonus increases as more criteria are matched (i.e. the bonus for 5 criteria is greater than the bonus for 4 criteria)*"
409,What is the overlap bonus in the OP Mainnet ecosystem?,The overlap bonus is an additional reward given to addresses that match the 'OP Mainnet Early Adopter' criterion and at least 4 criteria sets in total. The bonus increases as more criteria are matched.,"Early OP Mainnet users who also match multiple Ethereum criteria may be most likely to become important participants in the OP Mainnet ecosystem, so these addresses were rewarded with an extra overlap bonus.  
*Criterion: Address matches an ‚ÄòOP Mainnet Early Adopter‚Äô criterion, and matches at least 4 criteria sets in total (including OP Mainnet criteria).*  
- *The overlap bonus increases as more criteria are matched (i.e. the bonus for 5 criteria is greater than the bonus for 4 criteria)*"
409,How does the overlap bonus increase?,"The overlap bonus increases as more criteria are matched. For example, the bonus for matching 5 criteria is greater than the bonus for matching 4 criteria.","Early OP Mainnet users who also match multiple Ethereum criteria may be most likely to become important participants in the OP Mainnet ecosystem, so these addresses were rewarded with an extra overlap bonus.  
*Criterion: Address matches an ‚ÄòOP Mainnet Early Adopter‚Äô criterion, and matches at least 4 criteria sets in total (including OP Mainnet criteria).*  
- *The overlap bonus increases as more criteria are matched (i.e. the bonus for 5 criteria is greater than the bonus for 4 criteria)*"
410,How does Optimism ensure that only real users and honest actors receive the airdrop?,"Optimism applies several filters to ensure that only real users and honest actors receive the airdrop. These filters include checking address activity to ensure users have been active on Ethereum for more than one day, identifying and filtering out likely Sybil attackers who create multiple duplicate addresses, using bot-catching proposals to filter out spam and compromised addresses, excluding known centralized exchange and fiat on-ramp addresses, filtering out known exploit addresses, and ensuring addresses have made a transaction after January 1, 2019.","We believe that it‚Äôs best for the community for our airdrop list narrows as well as possible to real users and honest actors.
So we applied some basic filters to various criteria:  
- **Address Activity:** Addresses needed to have used Ethereum for more than 1 day (24 hours between their first and last transaction) in order to qualify for ‚ÄòActive Ethereum Participants‚Äô criteria.
This applied to all Ethereum criteria except for multisig signers, since it‚Äôs common for signers to have ‚Äúsigning-only‚Äù addresses.
- **Sybil Farmers:** We identified a few patterns of likely sybil attackers, who often created tens, hundreds, or more duplicate addresses.
We required stronger activity criteria for these addresses, which helped filter out these attackers, but also preserved many real users.
It‚Äôs impossible to catch everything, but removing as many sybillors as we can help get more OP in the hands of true positive-sum participants.
- **Snapshot Bots and Spam:** We used [ENS‚Äô bot-catching proposal](https://snapshot.org/#/ens.eth/proposal/QmfLwPbo5UwnyvkXo7emsSMDMFCr8UtJ76n87v9Rf7gEuH) to filter out addresses that spam Snapshot votes. Snapshot spaces that appeared to be either compromised or falsified were also excluded.
- **Exchanges and On-Ramps:** We filtered our known centralized exchange and fiat on-ramp addresses.
- **Exploiters:** Known exploit addresses were filtered out.
- **Recency Filter:** Addresses needed to have made a transaction after Jan 1, 2019.
For multisig signers, only the multisig needed to have executed a transaction after Jan 1, 2019.
We chose this cutoff date to narrow in on active addresses, while also providing a window before [L1 gas prices](https://etherscan.io/chart/gasprice) consistently rose and potentially priced some users out of Ethereum."
410,What criteria are used to identify and filter out Sybil attackers?,"To identify and filter out Sybil attackers, Optimism looks for patterns of behavior where individuals create tens, hundreds, or more duplicate addresses. These addresses are then subjected to stronger activity criteria to help filter out the attackers while preserving many real users.","We believe that it‚Äôs best for the community for our airdrop list narrows as well as possible to real users and honest actors.
So we applied some basic filters to various criteria:  
- **Address Activity:** Addresses needed to have used Ethereum for more than 1 day (24 hours between their first and last transaction) in order to qualify for ‚ÄòActive Ethereum Participants‚Äô criteria.
This applied to all Ethereum criteria except for multisig signers, since it‚Äôs common for signers to have ‚Äúsigning-only‚Äù addresses.
- **Sybil Farmers:** We identified a few patterns of likely sybil attackers, who often created tens, hundreds, or more duplicate addresses.
We required stronger activity criteria for these addresses, which helped filter out these attackers, but also preserved many real users.
It‚Äôs impossible to catch everything, but removing as many sybillors as we can help get more OP in the hands of true positive-sum participants.
- **Snapshot Bots and Spam:** We used [ENS‚Äô bot-catching proposal](https://snapshot.org/#/ens.eth/proposal/QmfLwPbo5UwnyvkXo7emsSMDMFCr8UtJ76n87v9Rf7gEuH) to filter out addresses that spam Snapshot votes. Snapshot spaces that appeared to be either compromised or falsified were also excluded.
- **Exchanges and On-Ramps:** We filtered our known centralized exchange and fiat on-ramp addresses.
- **Exploiters:** Known exploit addresses were filtered out.
- **Recency Filter:** Addresses needed to have made a transaction after Jan 1, 2019.
For multisig signers, only the multisig needed to have executed a transaction after Jan 1, 2019.
We chose this cutoff date to narrow in on active addresses, while also providing a window before [L1 gas prices](https://etherscan.io/chart/gasprice) consistently rose and potentially priced some users out of Ethereum."
410,"Why is there a recency filter for transactions after January 1, 2019?","The recency filter requiring transactions after January 1, 2019, is used to narrow down active addresses. This date was chosen to ensure that the addresses are still active while also providing a window before L1 gas prices consistently rose, which could have priced some users out of using Ethereum.","We believe that it‚Äôs best for the community for our airdrop list narrows as well as possible to real users and honest actors.
So we applied some basic filters to various criteria:  
- **Address Activity:** Addresses needed to have used Ethereum for more than 1 day (24 hours between their first and last transaction) in order to qualify for ‚ÄòActive Ethereum Participants‚Äô criteria.
This applied to all Ethereum criteria except for multisig signers, since it‚Äôs common for signers to have ‚Äúsigning-only‚Äù addresses.
- **Sybil Farmers:** We identified a few patterns of likely sybil attackers, who often created tens, hundreds, or more duplicate addresses.
We required stronger activity criteria for these addresses, which helped filter out these attackers, but also preserved many real users.
It‚Äôs impossible to catch everything, but removing as many sybillors as we can help get more OP in the hands of true positive-sum participants.
- **Snapshot Bots and Spam:** We used [ENS‚Äô bot-catching proposal](https://snapshot.org/#/ens.eth/proposal/QmfLwPbo5UwnyvkXo7emsSMDMFCr8UtJ76n87v9Rf7gEuH) to filter out addresses that spam Snapshot votes. Snapshot spaces that appeared to be either compromised or falsified were also excluded.
- **Exchanges and On-Ramps:** We filtered our known centralized exchange and fiat on-ramp addresses.
- **Exploiters:** Known exploit addresses were filtered out.
- **Recency Filter:** Addresses needed to have made a transaction after Jan 1, 2019.
For multisig signers, only the multisig needed to have executed a transaction after Jan 1, 2019.
We chose this cutoff date to narrow in on active addresses, while also providing a window before [L1 gas prices](https://etherscan.io/chart/gasprice) consistently rose and potentially priced some users out of Ethereum."
411,How did Optimism handle sybil activity in Airdrop #1?,"After the announcement of Airdrop #1, Optimism received reports of sybil activity that was not excluded by their initial filtering. They applied additional filtering to exclude 17,000 addresses and recovered 14 million OP, which will be redistributed proportionally to the remaining addresses already included in Airdrop #1.","Optimism is for the people, not the sybils.
After the announcement of Airdrop #1, we received limited reports of sybil activity that was not excluded by our initial filtering.
We have since applied additional filtering to Airdrop #1 that excludes 17k addresses and recovers 14m OP.
Recovered OP will be redistributed proportionally to remaining addresses already included in Airdrop #1.
The [Airdrop #1 Allocations](#airdrop-1-allocations) table above has been updated accordingly to reflect this.
For a list of excluded sybil addresses, [see this spreadsheet](https://docs.google.com/spreadsheets/d/1kUAt-vrkID0yBkic72djWRxdliK8W_5rBGxq6-Iv3cg).  
In the interest of maintaining the integrity of future OP Airdrops, we will not be publishing the additional filters used to remove these addresses."
411,Where can I find the list of excluded sybil addresses from Airdrop #1?,You can find the list of excluded sybil addresses in a spreadsheet linked in the Optimism Governance Documentation.,"Optimism is for the people, not the sybils.
After the announcement of Airdrop #1, we received limited reports of sybil activity that was not excluded by our initial filtering.
We have since applied additional filtering to Airdrop #1 that excludes 17k addresses and recovers 14m OP.
Recovered OP will be redistributed proportionally to remaining addresses already included in Airdrop #1.
The [Airdrop #1 Allocations](#airdrop-1-allocations) table above has been updated accordingly to reflect this.
For a list of excluded sybil addresses, [see this spreadsheet](https://docs.google.com/spreadsheets/d/1kUAt-vrkID0yBkic72djWRxdliK8W_5rBGxq6-Iv3cg).  
In the interest of maintaining the integrity of future OP Airdrops, we will not be publishing the additional filters used to remove these addresses."
411,Will Optimism publish the additional filters used to remove sybil addresses?,"No, in the interest of maintaining the integrity of future OP Airdrops, Optimism will not be publishing the additional filters used to remove these addresses.","Optimism is for the people, not the sybils.
After the announcement of Airdrop #1, we received limited reports of sybil activity that was not excluded by our initial filtering.
We have since applied additional filtering to Airdrop #1 that excludes 17k addresses and recovers 14m OP.
Recovered OP will be redistributed proportionally to remaining addresses already included in Airdrop #1.
The [Airdrop #1 Allocations](#airdrop-1-allocations) table above has been updated accordingly to reflect this.
For a list of excluded sybil addresses, [see this spreadsheet](https://docs.google.com/spreadsheets/d/1kUAt-vrkID0yBkic72djWRxdliK8W_5rBGxq6-Iv3cg).  
In the interest of maintaining the integrity of future OP Airdrops, we will not be publishing the additional filters used to remove these addresses."
412,How can I check if I'm eligible for Airdrop #1 on Optimism?,You can check your eligibility for Airdrop #1 and claim your tokens by visiting the airdrop app at https://app.optimism.io/airdrop/check.,"To check your eligibility for Airdrop #1 and claim your tokens visit [the airdrop app](https://app.optimism.io/airdrop/check).  
We made our best effort to make Airdrop #1 as fair as possible.
However, there‚Äôs always a chance some great community members may have slipped through the cracks.
Don‚Äôt worry!
This is Airdrop #1, and 14% of the total initial token supply is reserved for future airdrops.
The best way to earn OP is to get involved in the Optimism Collective:  
- If you want to build on Optimism, visit our [developer documentation](../developers/README.md) or jump in to [Discord](https://discord-gateway.optimism.io).
- If your talents are non-technical, jump in to [Discord](https://discord-gateway.optimism.io) to find other builders, apply to be a Support NERD, or just make some memes üçâ
- [Bridge your assets to OP Mainnet here](https://app.optimism.io/bridge) and explore projects on OP  
As always: stay safe and stay Optimistic."
412,What should I do if I missed Airdrop #1?,"Don't worry if you missed Airdrop #1. There are future opportunities as 14% of the total initial token supply is reserved for future airdrops. The best way to earn OP tokens is to get involved in the Optimism Collective by building on Optimism, joining the Discord community, or exploring projects on OP.","To check your eligibility for Airdrop #1 and claim your tokens visit [the airdrop app](https://app.optimism.io/airdrop/check).  
We made our best effort to make Airdrop #1 as fair as possible.
However, there‚Äôs always a chance some great community members may have slipped through the cracks.
Don‚Äôt worry!
This is Airdrop #1, and 14% of the total initial token supply is reserved for future airdrops.
The best way to earn OP is to get involved in the Optimism Collective:  
- If you want to build on Optimism, visit our [developer documentation](../developers/README.md) or jump in to [Discord](https://discord-gateway.optimism.io).
- If your talents are non-technical, jump in to [Discord](https://discord-gateway.optimism.io) to find other builders, apply to be a Support NERD, or just make some memes üçâ
- [Bridge your assets to OP Mainnet here](https://app.optimism.io/bridge) and explore projects on OP  
As always: stay safe and stay Optimistic."
412,How can I get involved in the Optimism community if I'm not a developer?,"If you're not a developer, you can still get involved in the Optimism community by joining their Discord to find other builders, applying to be a Support NERD, or even just making some memes. There are many ways to contribute and be part of the community.","To check your eligibility for Airdrop #1 and claim your tokens visit [the airdrop app](https://app.optimism.io/airdrop/check).  
We made our best effort to make Airdrop #1 as fair as possible.
However, there‚Äôs always a chance some great community members may have slipped through the cracks.
Don‚Äôt worry!
This is Airdrop #1, and 14% of the total initial token supply is reserved for future airdrops.
The best way to earn OP is to get involved in the Optimism Collective:  
- If you want to build on Optimism, visit our [developer documentation](../developers/README.md) or jump in to [Discord](https://discord-gateway.optimism.io).
- If your talents are non-technical, jump in to [Discord](https://discord-gateway.optimism.io) to find other builders, apply to be a Support NERD, or just make some memes üçâ
- [Bridge your assets to OP Mainnet here](https://app.optimism.io/bridge) and explore projects on OP  
As always: stay safe and stay Optimistic."
413,Where can I find detailed metrics about the Optimism protocol?,You can find detailed protocol metrics on the Dune Analytics dashboard at this link: [https://dune.com/optimismfnd/Optimism](https://dune.com/optimismfnd/Optimism).,"- **Application Transaction:** Any transaction, excluding token transfer and approval transactions.
- **Airdrop #1 Dashboard:** [https://dune.com/optimismfnd/optimism-airdrop-1](https://dune.com/optimismfnd/optimism-airdrop-1)
- **Detailed Protocol Metrics:** [https://dune.com/optimismfnd/Optimism](https://dune.com/optimismfnd/Optimism)
- **OP Token Address:** [0x4200000000000000000000000000000000000042](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000042)
- **Optimism on Twitter:** [https://twitter.com/optimismFND](https://twitter.com/optimismFND)
- **Join the Optimism Discord:** [https://discord-gateway.optimism.io/](https://discord-gateway.optimism.io/)
- **CSV with the list of airdropped addresses:** [op_airdrop1_addresses_detailed_list.csv](https://github.com/ethereum-optimism/op-analytics/blob/main/reference_data/address_lists/op_airdrop1_addresses_detailed_list.csv)"
413,How can I join the Optimism community on Discord?,You can join the Optimism community on Discord by following this link: [https://discord-gateway.optimism.io/](https://discord-gateway.optimism.io/).,"- **Application Transaction:** Any transaction, excluding token transfer and approval transactions.
- **Airdrop #1 Dashboard:** [https://dune.com/optimismfnd/optimism-airdrop-1](https://dune.com/optimismfnd/optimism-airdrop-1)
- **Detailed Protocol Metrics:** [https://dune.com/optimismfnd/Optimism](https://dune.com/optimismfnd/Optimism)
- **OP Token Address:** [0x4200000000000000000000000000000000000042](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000042)
- **Optimism on Twitter:** [https://twitter.com/optimismFND](https://twitter.com/optimismFND)
- **Join the Optimism Discord:** [https://discord-gateway.optimism.io/](https://discord-gateway.optimism.io/)
- **CSV with the list of airdropped addresses:** [op_airdrop1_addresses_detailed_list.csv](https://github.com/ethereum-optimism/op-analytics/blob/main/reference_data/address_lists/op_airdrop1_addresses_detailed_list.csv)"
413,Where can I see the list of addresses that received the first Optimism airdrop?,You can view the list of addresses that received the first Optimism airdrop by downloading the CSV file from this link: [op_airdrop1_addresses_detailed_list.csv](https://github.com/ethereum-optimism/op-analytics/blob/main/reference_data/address_lists/op_airdrop1_addresses_detailed_list.csv).,"- **Application Transaction:** Any transaction, excluding token transfer and approval transactions.
- **Airdrop #1 Dashboard:** [https://dune.com/optimismfnd/optimism-airdrop-1](https://dune.com/optimismfnd/optimism-airdrop-1)
- **Detailed Protocol Metrics:** [https://dune.com/optimismfnd/Optimism](https://dune.com/optimismfnd/Optimism)
- **OP Token Address:** [0x4200000000000000000000000000000000000042](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000042)
- **Optimism on Twitter:** [https://twitter.com/optimismFND](https://twitter.com/optimismFND)
- **Join the Optimism Discord:** [https://discord-gateway.optimism.io/](https://discord-gateway.optimism.io/)
- **CSV with the list of airdropped addresses:** [op_airdrop1_addresses_detailed_list.csv](https://github.com/ethereum-optimism/op-analytics/blob/main/reference_data/address_lists/op_airdrop1_addresses_detailed_list.csv)"
414,Is there an Airdrop 2 for Optimism?,"Yes, according to the Optimism Governance Documentation, there is an Airdrop 2.","---
title: Airdrop 2
lang: en-US
---"
415,How many OP tokens were distributed in Optimism‚Äôs Airdrop #1 and to how many users?,"Optimism‚Äôs Airdrop #1 distributed over 200 million OP tokens to 250,000 early adopters and engaged users in May 2022.","Optimism‚Äôs Airdrop #1 distributed over 200m OP tokens to 250,000 early adopters and engaged users in May 2022.
With the introduction of OP, the Collective set out to establish a bicameral governance system that provides the foundation for our growing digital city.  
Since then, the Token House has matured as the first piece of Optimism governance.
As of today (February 9th, 2023) 88k addresses have voted on over 90 proposals to distribute more than 55m OP tokens across the ecosystem, and Optimism‚Äôs first protocol upgrade is headed to vote in February. A total of 293k addresses are **delegating their voting power** ‚Äî a positive-sum activity that helps strengthen the fabric of Optimism‚Äôs governance system.
At the same time, OP Mainnet is developing into a booming economy.
Over 1.5 million addresses have sent 64 million transactions since our first Airdrop, spending nearly $15 million in fees on the network.
Participation in governance and in the Optimism economy is what helps our Collective grow and thrive.  
Optimism‚Äôs Airdrop #2 distributes 11,742,277.10 OP to 307,965 unique addresses to reward **positive-sum governance participation** and **power users of OP Mainnet**.
A snapshot of addresses was taken on 01-20-2023 0:00 UTC.  
Read on for more detail about eligibility criteria and distribution.  
::: tip Airdrop #2 does not need to be claimed  
Airdrop #2 is distributed directly to eligible wallets.
There is no need to claim tokens by interacting with any website.
Do not trust any website pretending to help you claim your tokens for Airdrop #2.
If an address is eligible, it will have tokens sent directly to it on February 9th, 2023 by 8pm ET.  
:::  
Airdrop #2 rewards users for their involvement in Optimism governance and covers a portion of their network usage costs:  
- Governance delegation rewards based on the amount of OP delegated and the length of time it was delegated.
- Partial gas rebates for active Optimism users who have spent over a certain amount on gas fees.
- Multiplier bonuses determined by additional attributes related to governance and usage."
415,What is the purpose of Optimism‚Äôs bicameral governance system?,"The bicameral governance system was established to provide the foundation for Optimism's growing digital city, with the Token House being the first piece of this governance system.","Optimism‚Äôs Airdrop #1 distributed over 200m OP tokens to 250,000 early adopters and engaged users in May 2022.
With the introduction of OP, the Collective set out to establish a bicameral governance system that provides the foundation for our growing digital city.  
Since then, the Token House has matured as the first piece of Optimism governance.
As of today (February 9th, 2023) 88k addresses have voted on over 90 proposals to distribute more than 55m OP tokens across the ecosystem, and Optimism‚Äôs first protocol upgrade is headed to vote in February. A total of 293k addresses are **delegating their voting power** ‚Äî a positive-sum activity that helps strengthen the fabric of Optimism‚Äôs governance system.
At the same time, OP Mainnet is developing into a booming economy.
Over 1.5 million addresses have sent 64 million transactions since our first Airdrop, spending nearly $15 million in fees on the network.
Participation in governance and in the Optimism economy is what helps our Collective grow and thrive.  
Optimism‚Äôs Airdrop #2 distributes 11,742,277.10 OP to 307,965 unique addresses to reward **positive-sum governance participation** and **power users of OP Mainnet**.
A snapshot of addresses was taken on 01-20-2023 0:00 UTC.  
Read on for more detail about eligibility criteria and distribution.  
::: tip Airdrop #2 does not need to be claimed  
Airdrop #2 is distributed directly to eligible wallets.
There is no need to claim tokens by interacting with any website.
Do not trust any website pretending to help you claim your tokens for Airdrop #2.
If an address is eligible, it will have tokens sent directly to it on February 9th, 2023 by 8pm ET.  
:::  
Airdrop #2 rewards users for their involvement in Optimism governance and covers a portion of their network usage costs:  
- Governance delegation rewards based on the amount of OP delegated and the length of time it was delegated.
- Partial gas rebates for active Optimism users who have spent over a certain amount on gas fees.
- Multiplier bonuses determined by additional attributes related to governance and usage."
415,Do I need to claim my tokens for Optimism‚Äôs Airdrop #2?,"No, you do not need to claim your tokens for Airdrop #2. The tokens are distributed directly to eligible wallets, and there is no need to interact with any website to claim them. If an address is eligible, it will have tokens sent directly to it on February 9th, 2023, by 8pm ET.","Optimism‚Äôs Airdrop #1 distributed over 200m OP tokens to 250,000 early adopters and engaged users in May 2022.
With the introduction of OP, the Collective set out to establish a bicameral governance system that provides the foundation for our growing digital city.  
Since then, the Token House has matured as the first piece of Optimism governance.
As of today (February 9th, 2023) 88k addresses have voted on over 90 proposals to distribute more than 55m OP tokens across the ecosystem, and Optimism‚Äôs first protocol upgrade is headed to vote in February. A total of 293k addresses are **delegating their voting power** ‚Äî a positive-sum activity that helps strengthen the fabric of Optimism‚Äôs governance system.
At the same time, OP Mainnet is developing into a booming economy.
Over 1.5 million addresses have sent 64 million transactions since our first Airdrop, spending nearly $15 million in fees on the network.
Participation in governance and in the Optimism economy is what helps our Collective grow and thrive.  
Optimism‚Äôs Airdrop #2 distributes 11,742,277.10 OP to 307,965 unique addresses to reward **positive-sum governance participation** and **power users of OP Mainnet**.
A snapshot of addresses was taken on 01-20-2023 0:00 UTC.  
Read on for more detail about eligibility criteria and distribution.  
::: tip Airdrop #2 does not need to be claimed  
Airdrop #2 is distributed directly to eligible wallets.
There is no need to claim tokens by interacting with any website.
Do not trust any website pretending to help you claim your tokens for Airdrop #2.
If an address is eligible, it will have tokens sent directly to it on February 9th, 2023 by 8pm ET.  
:::  
Airdrop #2 rewards users for their involvement in Optimism governance and covers a portion of their network usage costs:  
- Governance delegation rewards based on the amount of OP delegated and the length of time it was delegated.
- Partial gas rebates for active Optimism users who have spent over a certain amount on gas fees.
- Multiplier bonuses determined by additional attributes related to governance and usage."
416,How can I qualify for the Governance Delegation Reward on Optimism?,"To qualify for the Governance Delegation Reward, you need to have at least 2,000 total 'OP Delegated x Days'. This means if you delegate 20 OP for 100 days, you would meet the criteria (20 OP * 100 days = 2,000 OP Delegated x Days).","| Reward Type                      | Criteria | Number of qualifying addresses | Reward allocation |
| -------------------------------- | -------- | -----------------------------: | ----------------- |
| **Governance Delegation Reward** | Has had ‚â• 2,000 total `OP Delegated x Days`<sup>(1)</sup> | 57,204 | <sup>0.42</sup> &#8260; <sub>365</sub> OP per `OP Delegated x Day`, max 5,000 OP per address<sup>(2)</sup> |
| **Gas Usage Reward** | Spent ‚â• the average cost of one L1 transaction ($6.10)<sup>(3)</sup> on Optimism | 280,057 | 80% of gas fees rebated in OP, up to $500 of gas fees rebated per address<sup>(4)</sup> |  
(1) `OP Delegated x Days` = Cumulative Sum of OP Delegated per Day (i.e. 20 OP delegated for 100 days: 20 * 100 = 2,000 OP Delegated x Days).  
(2) Addresses which received OP from Token House Governance are not eligible for the reward.  
(3) The average cost of one L1 transaction on Ethereum was measured during the period between the airdrop #1 snapshot and airdrop #2 snapshot.  
(4) Gas Fees USD conversion was made at the time of the transaction.
OP rebated conversion was made using the trailing 7-day average market price at the time of the snapshot."
416,What is the Gas Usage Reward on Optimism and how can I qualify for it?,"The Gas Usage Reward on Optimism is given to users who have spent at least the average cost of one L1 transaction ($6.10) on Optimism. If you qualify, you can get 80% of your gas fees rebated in OP, up to a maximum of $500 of gas fees rebated per address.","| Reward Type                      | Criteria | Number of qualifying addresses | Reward allocation |
| -------------------------------- | -------- | -----------------------------: | ----------------- |
| **Governance Delegation Reward** | Has had ‚â• 2,000 total `OP Delegated x Days`<sup>(1)</sup> | 57,204 | <sup>0.42</sup> &#8260; <sub>365</sub> OP per `OP Delegated x Day`, max 5,000 OP per address<sup>(2)</sup> |
| **Gas Usage Reward** | Spent ‚â• the average cost of one L1 transaction ($6.10)<sup>(3)</sup> on Optimism | 280,057 | 80% of gas fees rebated in OP, up to $500 of gas fees rebated per address<sup>(4)</sup> |  
(1) `OP Delegated x Days` = Cumulative Sum of OP Delegated per Day (i.e. 20 OP delegated for 100 days: 20 * 100 = 2,000 OP Delegated x Days).  
(2) Addresses which received OP from Token House Governance are not eligible for the reward.  
(3) The average cost of one L1 transaction on Ethereum was measured during the period between the airdrop #1 snapshot and airdrop #2 snapshot.  
(4) Gas Fees USD conversion was made at the time of the transaction.
OP rebated conversion was made using the trailing 7-day average market price at the time of the snapshot."
416,Are there any limitations on the rewards for addresses that received OP from Token House Governance?,"Yes, addresses that received OP from Token House Governance are not eligible for the Governance Delegation Reward.","| Reward Type                      | Criteria | Number of qualifying addresses | Reward allocation |
| -------------------------------- | -------- | -----------------------------: | ----------------- |
| **Governance Delegation Reward** | Has had ‚â• 2,000 total `OP Delegated x Days`<sup>(1)</sup> | 57,204 | <sup>0.42</sup> &#8260; <sub>365</sub> OP per `OP Delegated x Day`, max 5,000 OP per address<sup>(2)</sup> |
| **Gas Usage Reward** | Spent ‚â• the average cost of one L1 transaction ($6.10)<sup>(3)</sup> on Optimism | 280,057 | 80% of gas fees rebated in OP, up to $500 of gas fees rebated per address<sup>(4)</sup> |  
(1) `OP Delegated x Days` = Cumulative Sum of OP Delegated per Day (i.e. 20 OP delegated for 100 days: 20 * 100 = 2,000 OP Delegated x Days).  
(2) Addresses which received OP from Token House Governance are not eligible for the reward.  
(3) The average cost of one L1 transaction on Ethereum was measured during the period between the airdrop #1 snapshot and airdrop #2 snapshot.  
(4) Gas Fees USD conversion was made at the time of the transaction.
OP rebated conversion was made using the trailing 7-day average market price at the time of the snapshot."
417,How many addresses qualify for the highest multiplier bonus?,"2,552 addresses qualify for the highest multiplier bonus, which is a 2.00x (100%) bonus.","There are 4 additional attributes that addresses can earn multiplier bonuses for:  
| Attributes | Qualifying addresses | Multiplier (bonus) |
| --- | --: | --- |
| 0 | 206,033 | 1.00x (No Bonus) |
| 1 | 53,529 | 1.05x (5% Bonus)  |
| 2 | 39,531 | 1.10x (10% Bonus) |
| 3 | 6,320 | 1.50x (50% Bonus)  |
| 4 | 2,552 | 2.00x (100% Bonus) |"
417,What is the multiplier bonus for addresses with 3 attributes?,Addresses with 3 attributes receive a 1.50x (50%) bonus.,"There are 4 additional attributes that addresses can earn multiplier bonuses for:  
| Attributes | Qualifying addresses | Multiplier (bonus) |
| --- | --: | --- |
| 0 | 206,033 | 1.00x (No Bonus) |
| 1 | 53,529 | 1.05x (5% Bonus)  |
| 2 | 39,531 | 1.10x (10% Bonus) |
| 3 | 6,320 | 1.50x (50% Bonus)  |
| 4 | 2,552 | 2.00x (100% Bonus) |"
417,Do all addresses receive a multiplier bonus?,"No, not all addresses receive a multiplier bonus. 206,033 addresses receive no bonus, which is a 1.00x multiplier.","There are 4 additional attributes that addresses can earn multiplier bonuses for:  
| Attributes | Qualifying addresses | Multiplier (bonus) |
| --- | --: | --- |
| 0 | 206,033 | 1.00x (No Bonus) |
| 1 | 53,529 | 1.05x (5% Bonus)  |
| 2 | 39,531 | 1.10x (10% Bonus) |
| 3 | 6,320 | 1.50x (50% Bonus)  |
| 4 | 2,552 | 2.00x (100% Bonus) |"
418,How many addresses had an active delegation of at least 20 OP at the snapshot?,"30,762 addresses had an active delegation of at least 20 OP at the snapshot.","| Attribute criteria | Description | Qualifying addresses |
| --- | --- | ---: |
| Governance: Had an Active Delegation ‚â• 20 OP at Snapshot | Addresses that remained delegating to Optimism Governance | 30,762 |
| Governance: Had 54,367 total ‚ÄòOP Delegated x Days‚Äô<sup>(5)</sup> | Addresses that had a larger Governance commitment | 23,089 |
| Usage: Had made App transactions<sup>(6)</sup> on Optimism across 6 distinct months | Addresses that remained active on Optimism for a longer period of time | 52,438 |
| Usage: Spent ‚â• $20 on Gas Fees | Addresses that have done a larger sum of activity on Optimism | 55,470 |  
(5) 54,367 `OP Delegated x Days` is the equivalent of delegating the smallest reward from Airdrop #1 (271.83 OP) for 200 days (Since July 4, 2022).  
(6) App transactions were counted as any transaction excluding token approvals, token transfers, and ETH wrapping/unwrappping transactions. ""Distinct months"" measured as trailing 30 day periods from the snapshot date."
418,"What does '54,367 total OP Delegated x Days' mean?","'54,367 total OP Delegated x Days' is the equivalent of delegating the smallest reward from Airdrop #1 (271.83 OP) for 200 days since July 4, 2022.","| Attribute criteria | Description | Qualifying addresses |
| --- | --- | ---: |
| Governance: Had an Active Delegation ‚â• 20 OP at Snapshot | Addresses that remained delegating to Optimism Governance | 30,762 |
| Governance: Had 54,367 total ‚ÄòOP Delegated x Days‚Äô<sup>(5)</sup> | Addresses that had a larger Governance commitment | 23,089 |
| Usage: Had made App transactions<sup>(6)</sup> on Optimism across 6 distinct months | Addresses that remained active on Optimism for a longer period of time | 52,438 |
| Usage: Spent ‚â• $20 on Gas Fees | Addresses that have done a larger sum of activity on Optimism | 55,470 |  
(5) 54,367 `OP Delegated x Days` is the equivalent of delegating the smallest reward from Airdrop #1 (271.83 OP) for 200 days (Since July 4, 2022).  
(6) App transactions were counted as any transaction excluding token approvals, token transfers, and ETH wrapping/unwrappping transactions. ""Distinct months"" measured as trailing 30 day periods from the snapshot date."
418,What kind of transactions are counted as App transactions on Optimism?,"App transactions on Optimism are counted as any transaction excluding token approvals, token transfers, and ETH wrapping/unwrapping transactions.","| Attribute criteria | Description | Qualifying addresses |
| --- | --- | ---: |
| Governance: Had an Active Delegation ‚â• 20 OP at Snapshot | Addresses that remained delegating to Optimism Governance | 30,762 |
| Governance: Had 54,367 total ‚ÄòOP Delegated x Days‚Äô<sup>(5)</sup> | Addresses that had a larger Governance commitment | 23,089 |
| Usage: Had made App transactions<sup>(6)</sup> on Optimism across 6 distinct months | Addresses that remained active on Optimism for a longer period of time | 52,438 |
| Usage: Spent ‚â• $20 on Gas Fees | Addresses that have done a larger sum of activity on Optimism | 55,470 |  
(5) 54,367 `OP Delegated x Days` is the equivalent of delegating the smallest reward from Airdrop #1 (271.83 OP) for 200 days (Since July 4, 2022).  
(6) App transactions were counted as any transaction excluding token approvals, token transfers, and ETH wrapping/unwrappping transactions. ""Distinct months"" measured as trailing 30 day periods from the snapshot date."
419,Where can I find the address list for Optimism?,The address list for Optimism is available on Github at this link: https://github.com/ethereum-optimism/op-analytics/tree/main/reference_data/address_lists.,"The address list is available [on Github](https://github.com/ethereum-optimism/op-analytics/tree/main/reference_data/address_lists) and is shared with Dune and Flipside.
Please use the #analytics channel in [the Optimism Discord](https://discord-gateway.optimism.io/) for any additional sharing requests or schema questions"
419,Who should I contact if I have questions about the schema or need to share additional data?,You should use the #analytics channel in the Optimism Discord for any additional sharing requests or schema questions. You can join the Discord through this link: https://discord-gateway.optimism.io/.,"The address list is available [on Github](https://github.com/ethereum-optimism/op-analytics/tree/main/reference_data/address_lists) and is shared with Dune and Flipside.
Please use the #analytics channel in [the Optimism Discord](https://discord-gateway.optimism.io/) for any additional sharing requests or schema questions"
419,Is the address list shared with any other platforms?,"Yes, the address list is shared with Dune and Flipside.","The address list is available [on Github](https://github.com/ethereum-optimism/op-analytics/tree/main/reference_data/address_lists) and is shared with Dune and Flipside.
Please use the #analytics channel in [the Optimism Discord](https://discord-gateway.optimism.io/) for any additional sharing requests or schema questions"
420,How many tokens were allocated in Airdrop 3?,"Airdrop 3 allocated 19,411,313 OP tokens.","---
title: Airdrop 3
lang: en-US
---  
Airdrop 3 took place on Monday, September 18. The airdrop allocated 19,411,313 OP to 31,870 unique addresses.  
Similar to Airdrop 2, this drop rewards positive sum governance participation. Users who have delegated tokens between 2023-01-20 at 0:00 UTC and 2023-07-20 0:00 UTC received tokens in this airdrop. A bonus is given to addresses who delegated to a delegate who voted in Optimism Governance.  
Read on for more detail about eligibility criteria and allocations.  
::: info Airdrop #3 does not need to be claimed  
Airdrop #3 is disbursed directly to eligible wallets. There is no need to claim tokens by interacting with any website. Do not trust any website pretending to help you claim your tokens for Airdrop #3. If an address is eligible, it will have tokens sent directly to it on or shortly after Sep 15, 2023.  
:::"
420,Who was eligible to receive tokens in Airdrop 3?,"Users who delegated tokens between January 20, 2023, and July 20, 2023, were eligible to receive tokens in Airdrop 3. Additionally, a bonus was given to addresses that delegated to a delegate who voted in Optimism Governance.","---
title: Airdrop 3
lang: en-US
---  
Airdrop 3 took place on Monday, September 18. The airdrop allocated 19,411,313 OP to 31,870 unique addresses.  
Similar to Airdrop 2, this drop rewards positive sum governance participation. Users who have delegated tokens between 2023-01-20 at 0:00 UTC and 2023-07-20 0:00 UTC received tokens in this airdrop. A bonus is given to addresses who delegated to a delegate who voted in Optimism Governance.  
Read on for more detail about eligibility criteria and allocations.  
::: info Airdrop #3 does not need to be claimed  
Airdrop #3 is disbursed directly to eligible wallets. There is no need to claim tokens by interacting with any website. Do not trust any website pretending to help you claim your tokens for Airdrop #3. If an address is eligible, it will have tokens sent directly to it on or shortly after Sep 15, 2023.  
:::"
420,Do I need to claim my tokens for Airdrop 3?,"No, Airdrop 3 tokens are disbursed directly to eligible wallets. There is no need to claim tokens by interacting with any website. If an address is eligible, it will have tokens sent directly to it on or shortly after September 15, 2023.","---
title: Airdrop 3
lang: en-US
---  
Airdrop 3 took place on Monday, September 18. The airdrop allocated 19,411,313 OP to 31,870 unique addresses.  
Similar to Airdrop 2, this drop rewards positive sum governance participation. Users who have delegated tokens between 2023-01-20 at 0:00 UTC and 2023-07-20 0:00 UTC received tokens in this airdrop. A bonus is given to addresses who delegated to a delegate who voted in Optimism Governance.  
Read on for more detail about eligibility criteria and allocations.  
::: info Airdrop #3 does not need to be claimed  
Airdrop #3 is disbursed directly to eligible wallets. There is no need to claim tokens by interacting with any website. Do not trust any website pretending to help you claim your tokens for Airdrop #3. If an address is eligible, it will have tokens sent directly to it on or shortly after Sep 15, 2023.  
:::"
421,How can I earn a Governance Delegation Reward in Optimism?,"You can earn a Governance Delegation Reward by delegating OP tokens above a certain minimum threshold. The reward is calculated as 0.67/365 OP per OP Delegated per Day, with a maximum of 10,000 OP per address.","| Reward Type | Criteria | Number of qualifying addresses | Reward allocation
| - | -: | -: | -:
| Governance Delegation Reward | Delegated OP above the minimum threshold | 31,529 | 0.67‚ÅÑ365OP per`OP Delegated x Day`(1), max 10,000 OP per address
| Voting Delegate Bonus | Delegated to an address that voted onchain at least once (2) | 25,561 | (0.67‚ÅÑ365)*2OP per`OP Delegated x Day to a voting delegate`, max 10,000 OP per address"
421,What is the Voting Delegate Bonus in Optimism?,"The Voting Delegate Bonus is a reward given to addresses that delegate OP tokens to another address that has voted onchain at least once. The reward is calculated as (0.67/365)*2 OP per OP Delegated per Day to a voting delegate, with a maximum of 10,000 OP per address.","| Reward Type | Criteria | Number of qualifying addresses | Reward allocation
| - | -: | -: | -:
| Governance Delegation Reward | Delegated OP above the minimum threshold | 31,529 | 0.67‚ÅÑ365OP per`OP Delegated x Day`(1), max 10,000 OP per address
| Voting Delegate Bonus | Delegated to an address that voted onchain at least once (2) | 25,561 | (0.67‚ÅÑ365)*2OP per`OP Delegated x Day to a voting delegate`, max 10,000 OP per address"
421,How many addresses qualify for the Governance Delegation Reward and the Voting Delegate Bonus?,"There are 31,529 addresses that qualify for the Governance Delegation Reward and 25,561 addresses that qualify for the Voting Delegate Bonus.","| Reward Type | Criteria | Number of qualifying addresses | Reward allocation
| - | -: | -: | -:
| Governance Delegation Reward | Delegated OP above the minimum threshold | 31,529 | 0.67‚ÅÑ365OP per`OP Delegated x Day`(1), max 10,000 OP per address
| Voting Delegate Bonus | Delegated to an address that voted onchain at least once (2) | 25,561 | (0.67‚ÅÑ365)*2OP per`OP Delegated x Day to a voting delegate`, max 10,000 OP per address"
422,How is 'OP Delegated x Days' calculated?,"'OP Delegated x Days' is calculated as the cumulative sum of OP tokens delegated per day. For example, if 20 OP tokens are delegated for 100 days, the calculation would be 20 * 100 = 2,000 OP Delegated x Days.","(1)`OP Delegated x Days`= Cumulative Sum of OP Delegated per Day (i.e. 20 OP delegated for 100 days: 20 * 100 = 2,000 OP Delegated x Days).  
(2) Delegate must have voted onchain in OP Governance during the snapshot period (01-20-2023 at 0:00 UTC and 07-20-2023 0:00 UTC )  
- See the list of addresses and allocation amounts [here](https://github.com/ethereum-optimism/op-analytics/blob/main/reference_data/address_lists/op_airdrop_3_simple_list.csv)"
422,What is the snapshot period for voting onchain in OP Governance?,"The snapshot period for voting onchain in OP Governance is from January 20, 2023, at 0:00 UTC to July 20, 2023, at 0:00 UTC.","(1)`OP Delegated x Days`= Cumulative Sum of OP Delegated per Day (i.e. 20 OP delegated for 100 days: 20 * 100 = 2,000 OP Delegated x Days).  
(2) Delegate must have voted onchain in OP Governance during the snapshot period (01-20-2023 at 0:00 UTC and 07-20-2023 0:00 UTC )  
- See the list of addresses and allocation amounts [here](https://github.com/ethereum-optimism/op-analytics/blob/main/reference_data/address_lists/op_airdrop_3_simple_list.csv)"
422,Where can I find the list of addresses and allocation amounts for OP Governance?,You can find the list of addresses and allocation amounts for OP Governance [here](https://github.com/ethereum-optimism/op-analytics/blob/main/reference_data/address_lists/op_airdrop_3_simple_list.csv).,"(1)`OP Delegated x Days`= Cumulative Sum of OP Delegated per Day (i.e. 20 OP delegated for 100 days: 20 * 100 = 2,000 OP Delegated x Days).  
(2) Delegate must have voted onchain in OP Governance during the snapshot period (01-20-2023 at 0:00 UTC and 07-20-2023 0:00 UTC )  
- See the list of addresses and allocation amounts [here](https://github.com/ethereum-optimism/op-analytics/blob/main/reference_data/address_lists/op_airdrop_3_simple_list.csv)"
423,Who was eligible for the Optimism airdrop?,"Addresses with at least 18,000 `OP Delegated x Days` (or 9,000 if delegated to a voting delegate) and who were delegated for at least 7 days were eligible for the airdrop. Known delegation program wallets were not eligible.","- Addresses with fewer than 18,000 `OP Delegated x Days` (or 9,000 if delegated to a voting delegate) were not eligible for this airdrop.
- Addresses who were delegated for < 7 days were not eligible for this airdrop
- Known delegation program wallets were not eligible for this airdrop.
- Each reward type had a maximum reward of 10,000 OP per address.  
*Note: A small set of delegation activity was not included in Airdrop #2. The eligible amounts were added to this allocation, resulting in 341 additional addresses.*"
423,Was there a limit to the amount of OP one could receive in the airdrop?,"Yes, each reward type had a maximum reward of 10,000 OP per address.","- Addresses with fewer than 18,000 `OP Delegated x Days` (or 9,000 if delegated to a voting delegate) were not eligible for this airdrop.
- Addresses who were delegated for < 7 days were not eligible for this airdrop
- Known delegation program wallets were not eligible for this airdrop.
- Each reward type had a maximum reward of 10,000 OP per address.  
*Note: A small set of delegation activity was not included in Airdrop #2. The eligible amounts were added to this allocation, resulting in 341 additional addresses.*"
423,Were there any exceptions or additional addresses included in the airdrop?,"Yes, a small set of delegation activity was not included in Airdrop #2 initially. The eligible amounts were added to this allocation, resulting in 341 additional addresses being included.","- Addresses with fewer than 18,000 `OP Delegated x Days` (or 9,000 if delegated to a voting delegate) were not eligible for this airdrop.
- Addresses who were delegated for < 7 days were not eligible for this airdrop
- Known delegation program wallets were not eligible for this airdrop.
- Each reward type had a maximum reward of 10,000 OP per address.  
*Note: A small set of delegation activity was not included in Airdrop #2. The eligible amounts were added to this allocation, resulting in 341 additional addresses.*"
424,How do I calculate my Cumulative Delegated OP for the airdrop?,"To calculate your Cumulative Delegated OP, you need to multiply the amount of OP tokens you delegated by the number of days you delegated them. The formula is: OP delegated x Days = Cumulative Delegated OP.","- To work out your `Cummultive Delegated OP`, multiply your OP delegated by the time delegated: `OP delegated x Days` = `Cummultive Delegated OP`. To qualify for the airdrop your `Cummultive Delegated OP` needs to be larger than 18,000. If you delegated to a ‚ÄúVoting Delegate‚Äù the `Cummultive Delegated OP` only needs to be above 9,000. For example, if you delegated 80 OP tokens for 180 days that would make a `Cummultive Delegated OP` of 14,400 which would NOT qualify for the airdrop. However, if the delegate you delegated to was active, then your 14,400 is above the 9,000 required for a voting delegate and you WOULD receive the airdrop.
- Addresses who delegated for less than 7 days are not eligible.
- Known delegation program wallets were not eligible for this airdrop.
- Each reward type had a maximum reward of 10,000 OP per address.
- For the Voting Delegate Bonus the address you have delegated to MUST have voted onchain in OP Governance during the snapshot period (2023-01-20 at 0:00 UTC and 2023-07-20 0:00 UTC)"
424,What is the minimum Cumulative Delegated OP required to qualify for the airdrop?,"To qualify for the airdrop, your Cumulative Delegated OP needs to be larger than 18,000. However, if you delegated to a Voting Delegate, the required Cumulative Delegated OP is only above 9,000.","- To work out your `Cummultive Delegated OP`, multiply your OP delegated by the time delegated: `OP delegated x Days` = `Cummultive Delegated OP`. To qualify for the airdrop your `Cummultive Delegated OP` needs to be larger than 18,000. If you delegated to a ‚ÄúVoting Delegate‚Äù the `Cummultive Delegated OP` only needs to be above 9,000. For example, if you delegated 80 OP tokens for 180 days that would make a `Cummultive Delegated OP` of 14,400 which would NOT qualify for the airdrop. However, if the delegate you delegated to was active, then your 14,400 is above the 9,000 required for a voting delegate and you WOULD receive the airdrop.
- Addresses who delegated for less than 7 days are not eligible.
- Known delegation program wallets were not eligible for this airdrop.
- Each reward type had a maximum reward of 10,000 OP per address.
- For the Voting Delegate Bonus the address you have delegated to MUST have voted onchain in OP Governance during the snapshot period (2023-01-20 at 0:00 UTC and 2023-07-20 0:00 UTC)"
424,Are there any specific conditions for the Voting Delegate Bonus?,"Yes, for the Voting Delegate Bonus, the address you delegated to must have voted onchain in OP Governance during the snapshot period from January 20, 2023, at 0:00 UTC to July 20, 2023, at 0:00 UTC.","- To work out your `Cummultive Delegated OP`, multiply your OP delegated by the time delegated: `OP delegated x Days` = `Cummultive Delegated OP`. To qualify for the airdrop your `Cummultive Delegated OP` needs to be larger than 18,000. If you delegated to a ‚ÄúVoting Delegate‚Äù the `Cummultive Delegated OP` only needs to be above 9,000. For example, if you delegated 80 OP tokens for 180 days that would make a `Cummultive Delegated OP` of 14,400 which would NOT qualify for the airdrop. However, if the delegate you delegated to was active, then your 14,400 is above the 9,000 required for a voting delegate and you WOULD receive the airdrop.
- Addresses who delegated for less than 7 days are not eligible.
- Known delegation program wallets were not eligible for this airdrop.
- Each reward type had a maximum reward of 10,000 OP per address.
- For the Voting Delegate Bonus the address you have delegated to MUST have voted onchain in OP Governance during the snapshot period (2023-01-20 at 0:00 UTC and 2023-07-20 0:00 UTC)"
425,Who is eligible for Airdrop #4?,"Creators with addresses that deployed NFT contracts on Ethereum L1, Base, OP Mainnet, and Zora before January 10, 2024, 00:00:00 UTC are eligible for Airdrop #4.","---
title: Airdrop 4
lang: en-US
---  
Airdrop #4 celebrates the vibrant creative energy that artists introduce to the Superchain, and highlights the essential role creators fulfill within the Optimism Collective and the broader Ethereum ecosystem. Creators with addresses that deployed NFT contracts on Ethereum L1, Base, OP Mainnet and Zora before 2024-01-10 00:00:00 UTC were considered in this airdrop.  
Read on for more detail about eligibility criteria and allocations.  
::: info Airdrop #4 does need to be claimed
Go to [https://app.optimism.io/airdrops](https://app.optimism.io/airdrops) to claim.  
:::"
425,How can I claim Airdrop #4?,You can claim Airdrop #4 by going to [https://app.optimism.io/airdrops](https://app.optimism.io/airdrops).,"---
title: Airdrop 4
lang: en-US
---  
Airdrop #4 celebrates the vibrant creative energy that artists introduce to the Superchain, and highlights the essential role creators fulfill within the Optimism Collective and the broader Ethereum ecosystem. Creators with addresses that deployed NFT contracts on Ethereum L1, Base, OP Mainnet and Zora before 2024-01-10 00:00:00 UTC were considered in this airdrop.  
Read on for more detail about eligibility criteria and allocations.  
::: info Airdrop #4 does need to be claimed
Go to [https://app.optimism.io/airdrops](https://app.optimism.io/airdrops) to claim.  
:::"
425,What is the purpose of Airdrop #4?,Airdrop #4 celebrates the vibrant creative energy that artists bring to the Superchain and highlights the essential role creators play within the Optimism Collective and the broader Ethereum ecosystem.,"---
title: Airdrop 4
lang: en-US
---  
Airdrop #4 celebrates the vibrant creative energy that artists introduce to the Superchain, and highlights the essential role creators fulfill within the Optimism Collective and the broader Ethereum ecosystem. Creators with addresses that deployed NFT contracts on Ethereum L1, Base, OP Mainnet and Zora before 2024-01-10 00:00:00 UTC were considered in this airdrop.  
Read on for more detail about eligibility criteria and allocations.  
::: info Airdrop #4 does need to be claimed
Go to [https://app.optimism.io/airdrops](https://app.optimism.io/airdrops) to claim.  
:::"
426,How are rewards calculated for creating engaging NFTs on the Superchain?,"Rewards are calculated based on the total gas used in transactions involving transfers of NFTs created by your address on OP Chains (OP Mainnet, Base, Zora) during the trailing 365 days before the airdrop cutoff (Jan 10, 2023 - Jan 10, 2024). The reward allocation is 5,000 OP per 1 ETH of gas on the Superchain.","| Reward Type | Criteria | Number of qualifying addresses | Reward allocation
| - | :-: | -: | :-:
| You created engaging NFTs on the Superchain | Total gas on OP Chains (OP Mainnet, Base, Zora) in transactions involving transfers<sup>2</sup> of NFTs created by your address<sup>1</sup>. Measured during the trailing 365 days before the airdrop cutoff (Jan 10, 2023 - Jan 10, 2024) | 9,294 | 5,000 OP per 1 ETH of gas on the Superchain (i.e. 0.002 ETH of gas fees = 10 OP)
| You created engaging NFTs on Ethereum Mainnet | Total gas on Ethereum L1 in transactions involving transfers<sup>2</sup> of NFTs created by your address<sup>1</sup>. Measured during the trailing 365 days before the airdrop cutoff (Jan 10, 2023 - Jan 10, 2024) | 15,073 | 50 OP per 1 ETH of gas on Ethereum L1 (i.e. 0.2 ETH of gas fees = 10 OP)  
1. ‚ÄúCreator addresses‚Äù were identified as the transaction sender (`from` address) in the transaction where the NFT (ERC721 & ERC1155) contract was created.
1. ‚ÄúTransactions with NFT transfers‚Äù excluded transfers to the creators' address (i.e. mint to themselves) and transfers to a burn address. While transfers were measured over the 365 days before cutoff, the NFT contract could‚Äôve been created at any time.  
See the list of addresses and allocation amounts [here](https://github.com/ethereum-optimism/op-analytics/blob/main/reference_data/address_lists/op_airdrop_4_simple_list.csv)"
426,How are rewards calculated for creating engaging NFTs on Ethereum Mainnet?,"Rewards are calculated based on the total gas used in transactions involving transfers of NFTs created by your address on Ethereum L1 during the trailing 365 days before the airdrop cutoff (Jan 10, 2023 - Jan 10, 2024). The reward allocation is 50 OP per 1 ETH of gas on Ethereum L1.","| Reward Type | Criteria | Number of qualifying addresses | Reward allocation
| - | :-: | -: | :-:
| You created engaging NFTs on the Superchain | Total gas on OP Chains (OP Mainnet, Base, Zora) in transactions involving transfers<sup>2</sup> of NFTs created by your address<sup>1</sup>. Measured during the trailing 365 days before the airdrop cutoff (Jan 10, 2023 - Jan 10, 2024) | 9,294 | 5,000 OP per 1 ETH of gas on the Superchain (i.e. 0.002 ETH of gas fees = 10 OP)
| You created engaging NFTs on Ethereum Mainnet | Total gas on Ethereum L1 in transactions involving transfers<sup>2</sup> of NFTs created by your address<sup>1</sup>. Measured during the trailing 365 days before the airdrop cutoff (Jan 10, 2023 - Jan 10, 2024) | 15,073 | 50 OP per 1 ETH of gas on Ethereum L1 (i.e. 0.2 ETH of gas fees = 10 OP)  
1. ‚ÄúCreator addresses‚Äù were identified as the transaction sender (`from` address) in the transaction where the NFT (ERC721 & ERC1155) contract was created.
1. ‚ÄúTransactions with NFT transfers‚Äù excluded transfers to the creators' address (i.e. mint to themselves) and transfers to a burn address. While transfers were measured over the 365 days before cutoff, the NFT contract could‚Äôve been created at any time.  
See the list of addresses and allocation amounts [here](https://github.com/ethereum-optimism/op-analytics/blob/main/reference_data/address_lists/op_airdrop_4_simple_list.csv)"
426,Are transfers to the creator's own address or to a burn address included in the reward calculation?,"No, transactions involving transfers to the creator's own address or to a burn address are excluded from the reward calculation.","| Reward Type | Criteria | Number of qualifying addresses | Reward allocation
| - | :-: | -: | :-:
| You created engaging NFTs on the Superchain | Total gas on OP Chains (OP Mainnet, Base, Zora) in transactions involving transfers<sup>2</sup> of NFTs created by your address<sup>1</sup>. Measured during the trailing 365 days before the airdrop cutoff (Jan 10, 2023 - Jan 10, 2024) | 9,294 | 5,000 OP per 1 ETH of gas on the Superchain (i.e. 0.002 ETH of gas fees = 10 OP)
| You created engaging NFTs on Ethereum Mainnet | Total gas on Ethereum L1 in transactions involving transfers<sup>2</sup> of NFTs created by your address<sup>1</sup>. Measured during the trailing 365 days before the airdrop cutoff (Jan 10, 2023 - Jan 10, 2024) | 15,073 | 50 OP per 1 ETH of gas on Ethereum L1 (i.e. 0.2 ETH of gas fees = 10 OP)  
1. ‚ÄúCreator addresses‚Äù were identified as the transaction sender (`from` address) in the transaction where the NFT (ERC721 & ERC1155) contract was created.
1. ‚ÄúTransactions with NFT transfers‚Äù excluded transfers to the creators' address (i.e. mint to themselves) and transfers to a burn address. While transfers were measured over the 365 days before cutoff, the NFT contract could‚Äôve been created at any time.  
See the list of addresses and allocation amounts [here](https://github.com/ethereum-optimism/op-analytics/blob/main/reference_data/address_lists/op_airdrop_4_simple_list.csv)"
427,How many attributes do addresses need to earn the highest multiplier bonus?,"Addresses need to have 4 or more attributes to earn the highest multiplier bonus, which is 1.50x or a 50% bonus.","There were 5 attributes that addresses could earn multiplier bonuses for:  
| Amount of Attributes | Qualifying addresses | Multiplier (bonus)
| - | -: | -: |
| 0 | 2,969 | (No Bonus)
| 1 | 3,628 | 1.05x (5% Bonus)
| 2 | 4,566 | 1.10x (10% Bonus)
| 3 | 8,305 | 1.25x (25% Bonus)
| 4+ | 3,530 | 1.50x (50% Bonus)"
427,What is the multiplier bonus for addresses with 3 attributes?,"Addresses with 3 attributes receive a 1.25x multiplier, which is a 25% bonus.","There were 5 attributes that addresses could earn multiplier bonuses for:  
| Amount of Attributes | Qualifying addresses | Multiplier (bonus)
| - | -: | -: |
| 0 | 2,969 | (No Bonus)
| 1 | 3,628 | 1.05x (5% Bonus)
| 2 | 4,566 | 1.10x (10% Bonus)
| 3 | 8,305 | 1.25x (25% Bonus)
| 4+ | 3,530 | 1.50x (50% Bonus)"
427,How many addresses qualify for a 10% bonus?,"4,566 addresses qualify for a 10% bonus, which corresponds to having 2 attributes.","There were 5 attributes that addresses could earn multiplier bonuses for:  
| Amount of Attributes | Qualifying addresses | Multiplier (bonus)
| - | -: | -: |
| 0 | 2,969 | (No Bonus)
| 1 | 3,628 | 1.05x (5% Bonus)
| 2 | 4,566 | 1.10x (10% Bonus)
| 3 | 8,305 | 1.25x (25% Bonus)
| 4+ | 3,530 | 1.50x (50% Bonus)"
428,Who qualifies as an 'Early creator' in the Optimism Governance criteria?,"An 'Early creator' is someone who created their first NFT contract before January 1, 2023.","| Criteria name | Attribute Criteria | Qualifying addresses
| - | -: | -: |
| Early creator | You created your first NFT contract before Jan 1, 2023 | 7,443
| Rising creator | An NFT you created was transferred after Nov 11, 2023 | 14,927
| Active onchain | You‚Äôve been active on the Superchain or L1 since Nov 11, 2023 | 12,316
| Popular creator | Total gas fees spent in transactions involving transfers of NFTs you created was >= 0.005 ETH in the 180 days prior to cutoff | 16,941
| We <3 the Art creators that qualified for the airdrop | In addition to qualifying for the drop, you participated in WLTA | 338"
428,What does it mean to be an 'Active onchain' user according to the Optimism Governance criteria?,"An 'Active onchain' user is someone who has been active on the Superchain or Layer 1 (L1) since November 11, 2023.","| Criteria name | Attribute Criteria | Qualifying addresses
| - | -: | -: |
| Early creator | You created your first NFT contract before Jan 1, 2023 | 7,443
| Rising creator | An NFT you created was transferred after Nov 11, 2023 | 14,927
| Active onchain | You‚Äôve been active on the Superchain or L1 since Nov 11, 2023 | 12,316
| Popular creator | Total gas fees spent in transactions involving transfers of NFTs you created was >= 0.005 ETH in the 180 days prior to cutoff | 16,941
| We <3 the Art creators that qualified for the airdrop | In addition to qualifying for the drop, you participated in WLTA | 338"
428,What is required to be considered a 'Popular creator' in the Optimism Governance criteria?,"To be considered a 'Popular creator,' the total gas fees spent in transactions involving transfers of NFTs you created must be at least 0.005 ETH in the 180 days prior to the cutoff date.","| Criteria name | Attribute Criteria | Qualifying addresses
| - | -: | -: |
| Early creator | You created your first NFT contract before Jan 1, 2023 | 7,443
| Rising creator | An NFT you created was transferred after Nov 11, 2023 | 14,927
| Active onchain | You‚Äôve been active on the Superchain or L1 since Nov 11, 2023 | 12,316
| Popular creator | Total gas fees spent in transactions involving transfers of NFTs you created was >= 0.005 ETH in the 180 days prior to cutoff | 16,941
| We <3 the Art creators that qualified for the airdrop | In addition to qualifying for the drop, you participated in WLTA | 338"
429,Are there any minimum or maximum limits on the rewards in the Optimism Governance system?,"Yes, addresses with final rewards lower than 20 OP were not eligible, and the final reward was capped at 6,000 OP per address.","* Addresses with final rewards lower than 20 OP were not eligible.
* The final reward was capped at 6,000 OP per address."
430,What's the title of the section that talks about OP allocations?,The title of the section is 'OP Allocations'.,"---
title: OP Allocations
lang: en-US
---"
431,How is the funding allocated within the Optimism Collective?,"The funding within the Optimism Collective is allocated into five main categories: Ecosystem Fund (25%), Retroactive Public Goods Funding (RetroPGF) (20%), User airdrops (19%), Core contributors (19%), and Sugar xaddies (17%).","![](../../assets/docs/governance/allocations/pie2.jpeg)  
| Category | Percentage | Description |
| --- | --- | --- |
| Ecosystem Fund | 25% | The Ecosystem Fund is a proactive program meant to stimulate development in the Collective ecosystem by providing funding to projects and communities |
| Retroactive Public Goods Funding (RetroPGF) | 20% | RetroPGF is the Optimism Collective‚Äôs primary mechanism to adequately and reliably **reward** public goods for the impact they provide |
| User airdrops | 19% | A series of airdrops to reward users for specific helpful behaviors, beginning with Airdrop #1 |
| Core contributors | 19% | The people who‚Äôve been working tirelessly to bring the Optimism Collective into existence |
| Sugar xaddies | 17% | Investors |"
431,What is the purpose of the Ecosystem Fund in the Optimism Collective?,"The Ecosystem Fund, which makes up 25% of the allocation, is a proactive program designed to stimulate development in the Collective ecosystem by providing funding to projects and communities.","![](../../assets/docs/governance/allocations/pie2.jpeg)  
| Category | Percentage | Description |
| --- | --- | --- |
| Ecosystem Fund | 25% | The Ecosystem Fund is a proactive program meant to stimulate development in the Collective ecosystem by providing funding to projects and communities |
| Retroactive Public Goods Funding (RetroPGF) | 20% | RetroPGF is the Optimism Collective‚Äôs primary mechanism to adequately and reliably **reward** public goods for the impact they provide |
| User airdrops | 19% | A series of airdrops to reward users for specific helpful behaviors, beginning with Airdrop #1 |
| Core contributors | 19% | The people who‚Äôve been working tirelessly to bring the Optimism Collective into existence |
| Sugar xaddies | 17% | Investors |"
431,What are User airdrops in the context of the Optimism Collective?,"User airdrops, which account for 19% of the allocation, are a series of airdrops intended to reward users for specific helpful behaviors, starting with Airdrop #1.","![](../../assets/docs/governance/allocations/pie2.jpeg)  
| Category | Percentage | Description |
| --- | --- | --- |
| Ecosystem Fund | 25% | The Ecosystem Fund is a proactive program meant to stimulate development in the Collective ecosystem by providing funding to projects and communities |
| Retroactive Public Goods Funding (RetroPGF) | 20% | RetroPGF is the Optimism Collective‚Äôs primary mechanism to adequately and reliably **reward** public goods for the impact they provide |
| User airdrops | 19% | A series of airdrops to reward users for specific helpful behaviors, beginning with Airdrop #1 |
| Core contributors | 19% | The people who‚Äôve been working tirelessly to bring the Optimism Collective into existence |
| Sugar xaddies | 17% | Investors |"
432,How much of the OP allocation will the Optimism Foundation distribute?,The Optimism Foundation will distribute 19% of the OP allocation.,"***Allocation: 19%***  
The Optimism Foundation will distribute a portion of the OP allocation to members of the Optimism and Ethereum communities in multiple waves."
432,Who will receive the OP allocation from the Optimism Foundation?,Members of the Optimism and Ethereum communities will receive the OP allocation.,"***Allocation: 19%***  
The Optimism Foundation will distribute a portion of the OP allocation to members of the Optimism and Ethereum communities in multiple waves."
432,In how many waves will the OP allocation be distributed?,The OP allocation will be distributed in multiple waves.,"***Allocation: 19%***  
The Optimism Foundation will distribute a portion of the OP allocation to members of the Optimism and Ethereum communities in multiple waves."
433,Who received the first user airdrop of OP tokens?,"The first user airdrop distributed 5% of the OP token supply to 248,699 unique addresses. These addresses were chosen to reward Optimism users, attract core Ethereum users, and include people who behave in positive-sum ways, contribute actively to their communities, or have been priced out of Ethereum.","The first user airdrop distributed **5%** of the OP token supply to **248,699 unique addresses.**
This airdrop was targeted towards people who:  
- Behave in positive-sum ways.
- Contribute actively to their communities.
- Have been priced out of Ethereum.  
The addresses and amounts were chosen to reward Optimism users, as well as attract core Ethereum users to the OP family.
Airdrop #1 cast a wide net to distribute OP to more than 250k addresses.  
See the [Airdrop #1 documentation](airdrop-1.md) for a detailed breakdown of eligibility criteria."
433,What was the purpose of the first OP token airdrop?,"The purpose of the first OP token airdrop was to reward Optimism users, attract core Ethereum users to the OP family, and include people who behave in positive-sum ways, contribute actively to their communities, or have been priced out of Ethereum.","The first user airdrop distributed **5%** of the OP token supply to **248,699 unique addresses.**
This airdrop was targeted towards people who:  
- Behave in positive-sum ways.
- Contribute actively to their communities.
- Have been priced out of Ethereum.  
The addresses and amounts were chosen to reward Optimism users, as well as attract core Ethereum users to the OP family.
Airdrop #1 cast a wide net to distribute OP to more than 250k addresses.  
See the [Airdrop #1 documentation](airdrop-1.md) for a detailed breakdown of eligibility criteria."
433,How many addresses received the first OP token airdrop?,"The first OP token airdrop was distributed to 248,699 unique addresses.","The first user airdrop distributed **5%** of the OP token supply to **248,699 unique addresses.**
This airdrop was targeted towards people who:  
- Behave in positive-sum ways.
- Contribute actively to their communities.
- Have been priced out of Ethereum.  
The addresses and amounts were chosen to reward Optimism users, as well as attract core Ethereum users to the OP family.
Airdrop #1 cast a wide net to distribute OP to more than 250k addresses.  
See the [Airdrop #1 documentation](airdrop-1.md) for a detailed breakdown of eligibility criteria."
434,How many OP tokens were distributed in Optimism‚Äôs Airdrop #2?,"Optimism‚Äôs Airdrop #2 distributed 11,742,277.10 OP tokens.","Optimism‚Äôs Airdrop #2 distributes **11,742,277.10 OP to 307,965 unique addresses** to reward **positive-sum governance participation** and **power users of OP Mainnet**.
A snapshot of addresses was taken on 01-20-2023 0:00 UTC.  
See the [Airdrop #2 documentation](airdrop-2.md) for a detailed breakdown of eligibility criteria."
434,How many unique addresses received tokens in Optimism‚Äôs Airdrop #2?,"307,965 unique addresses received tokens in Optimism‚Äôs Airdrop #2.","Optimism‚Äôs Airdrop #2 distributes **11,742,277.10 OP to 307,965 unique addresses** to reward **positive-sum governance participation** and **power users of OP Mainnet**.
A snapshot of addresses was taken on 01-20-2023 0:00 UTC.  
See the [Airdrop #2 documentation](airdrop-2.md) for a detailed breakdown of eligibility criteria."
434,When was the snapshot of addresses taken for Optimism‚Äôs Airdrop #2?,"The snapshot of addresses was taken on January 20, 2023, at 0:00 UTC.","Optimism‚Äôs Airdrop #2 distributes **11,742,277.10 OP to 307,965 unique addresses** to reward **positive-sum governance participation** and **power users of OP Mainnet**.
A snapshot of addresses was taken on 01-20-2023 0:00 UTC.  
See the [Airdrop #2 documentation](airdrop-2.md) for a detailed breakdown of eligibility criteria."
435,Who received tokens in Airdrop 3?,"Users who delegated tokens between January 20, 2023, and July 20, 2023, received tokens in Airdrop 3. Additionally, a bonus was given to addresses that delegated to a delegate who voted in Optimism Governance.","Airdrop 3 took place on Monday, September 18. The airdrop allocated **19,411,313 OP to 31,870 unique addresses.** Similar to Airdrop 2, this drop rewards **positive sum governance participation.** Users who have delegated tokens between 2023-01-20 at 0:00 UTC and 2023-07-20 0:00 UTC received tokens in this airdrop. A bonus is given to addresses who delegated to a delegate who voted in Optimism Governance.  
See the [Airdrop #3 documentation](airdrop-3.md) for a detailed breakdown of eligibility criteria."
435,When did Airdrop 3 take place?,"Airdrop 3 took place on Monday, September 18.","Airdrop 3 took place on Monday, September 18. The airdrop allocated **19,411,313 OP to 31,870 unique addresses.** Similar to Airdrop 2, this drop rewards **positive sum governance participation.** Users who have delegated tokens between 2023-01-20 at 0:00 UTC and 2023-07-20 0:00 UTC received tokens in this airdrop. A bonus is given to addresses who delegated to a delegate who voted in Optimism Governance.  
See the [Airdrop #3 documentation](airdrop-3.md) for a detailed breakdown of eligibility criteria."
435,How many unique addresses received tokens in Airdrop 3?,"A total of 31,870 unique addresses received tokens in Airdrop 3.","Airdrop 3 took place on Monday, September 18. The airdrop allocated **19,411,313 OP to 31,870 unique addresses.** Similar to Airdrop 2, this drop rewards **positive sum governance participation.** Users who have delegated tokens between 2023-01-20 at 0:00 UTC and 2023-07-20 0:00 UTC received tokens in this airdrop. A bonus is given to addresses who delegated to a delegate who voted in Optimism Governance.  
See the [Airdrop #3 documentation](airdrop-3.md) for a detailed breakdown of eligibility criteria."
436,Who received tokens in Airdrop 4?,"Airdrop 4 distributed 10,343,757.81 OP tokens to 22,998 unique addresses. The recipients were artists, creators, and pioneers who have contributed to the culture across the Superchain and the broader crypto ecosystem.","Airdrop 4 took place on Feb 20, 2024, and distributed **10,343,757.81 OP to 22,998 unique addresses.** This Airdrop was a **‚Äòthank you‚Äô to the artists, creators, and pioneers who have played a role in creating culture across the Superchain** and across the crypto ecosystem as a whole. This was also Optimism‚Äôs first Airdrop across the Superchain, celebrating the growing network of OP Chains who are choosing to build together.  
See the[Airdrop #4 documentation](airdrop-4.md) for a detailed breakdown of eligibility criteria."
436,When did Airdrop 4 take place?,"Airdrop 4 took place on February 20, 2024.","Airdrop 4 took place on Feb 20, 2024, and distributed **10,343,757.81 OP to 22,998 unique addresses.** This Airdrop was a **‚Äòthank you‚Äô to the artists, creators, and pioneers who have played a role in creating culture across the Superchain** and across the crypto ecosystem as a whole. This was also Optimism‚Äôs first Airdrop across the Superchain, celebrating the growing network of OP Chains who are choosing to build together.  
See the[Airdrop #4 documentation](airdrop-4.md) for a detailed breakdown of eligibility criteria."
436,What was special about Airdrop 4?,"Airdrop 4 was Optimism's first Airdrop across the Superchain, celebrating the growing network of OP Chains that are building together.","Airdrop 4 took place on Feb 20, 2024, and distributed **10,343,757.81 OP to 22,998 unique addresses.** This Airdrop was a **‚Äòthank you‚Äô to the artists, creators, and pioneers who have played a role in creating culture across the Superchain** and across the crypto ecosystem as a whole. This was also Optimism‚Äôs first Airdrop across the Superchain, celebrating the growing network of OP Chains who are choosing to build together.  
See the[Airdrop #4 documentation](airdrop-4.md) for a detailed breakdown of eligibility criteria."
437,How much of the OP token supply is reserved for future user airdrops?,An allocation of 14% of the OP token supply will be held in reserve for future user airdrops.,"An allocation of **14%** of the OP token supply will be held in reserve for future user airdrops.
As a result of the game-able nature of airdrops, the Optimism Foundation will be responsible for determining airdrop metrics as fairly as possible.
The intent behind airdrops is to distribute them to addresses which positively impact the Optimism community. Participation on governance forums will not be used as a criteria for future airdrops. The best way to improve your odds of receiving future airdrops is to get meaningfully involved!"
437,Who is responsible for determining the metrics for airdrops?,The Optimism Foundation will be responsible for determining airdrop metrics as fairly as possible.,"An allocation of **14%** of the OP token supply will be held in reserve for future user airdrops.
As a result of the game-able nature of airdrops, the Optimism Foundation will be responsible for determining airdrop metrics as fairly as possible.
The intent behind airdrops is to distribute them to addresses which positively impact the Optimism community. Participation on governance forums will not be used as a criteria for future airdrops. The best way to improve your odds of receiving future airdrops is to get meaningfully involved!"
437,What is the best way to improve my odds of receiving future airdrops?,The best way to improve your odds of receiving future airdrops is to get meaningfully involved in the Optimism community.,"An allocation of **14%** of the OP token supply will be held in reserve for future user airdrops.
As a result of the game-able nature of airdrops, the Optimism Foundation will be responsible for determining airdrop metrics as fairly as possible.
The intent behind airdrops is to distribute them to addresses which positively impact the Optimism community. Participation on governance forums will not be used as a criteria for future airdrops. The best way to improve your odds of receiving future airdrops is to get meaningfully involved!"
438,How is the Ecosystem Fund allocated within the Optimism Collective ecosystem?,"The Ecosystem Fund is allocated into four categories: Governance Fund (5.4%), Partner Fund (5.4%), Seed Fund (5.4%), and Unallocated (8.8%). This fund is designed to stimulate development and will be phased out once depleted, with its function expected to be replaced by private third-party investors.","***Allocation: 25%***  
The Ecosystem Fund is an incentive program designed to stimulate development of the Collective ecosystem.
The Ecosystem Fund will be used to directly fund the communities and companies that drive the expansion of the Collective ecosystem (OPCOs).  
The allocation dedicated to the Ecosystem Fund is to be further split into the following categories:  
1. Governance Fund **(5.4%)**
2. Partner Fund **(5.4%)**
3. Seed Fund **(5.4%)**
4. Unallocated **(8.8%)**  
The Ecosystem Fund is intended to be a kick-starting mechanism that will be phased out entirely once the OP in the fund has been depleted.
The Optimism Foundation expects the function served by the Ecosystem Fund (proactive funding) to eventually be replaced by private third-party investors who can expect to be paid out by the [Retroactive Public Goods Funding](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c) mechanism.  
![](../../assets/docs/governance/allocations/ecosystem_fund_process.jpeg)  
The wide variety of funding mechanisms ensures that airdrops constantly flow to users who make valuable contributions to the ecosystem.
These contributions result in ecosystem growth,  ecosystem growth results in demand for block space, demand for block space results in revenues, and these revenues are then productively re-deployed into the ecosystem as additional airdrops.  
Each fund can be thought of as a parallel experiment in OP allocation, enabling rapid iteration and doubling down on what works to further grow the ecosystem."
438,What is the purpose of the Ecosystem Fund in the Optimism Collective?,"The Ecosystem Fund is an incentive program aimed at directly funding communities and companies that drive the expansion of the Collective ecosystem. It serves as a kick-starting mechanism to promote ecosystem growth, which in turn generates demand for block space and revenues that are reinvested into the ecosystem.","***Allocation: 25%***  
The Ecosystem Fund is an incentive program designed to stimulate development of the Collective ecosystem.
The Ecosystem Fund will be used to directly fund the communities and companies that drive the expansion of the Collective ecosystem (OPCOs).  
The allocation dedicated to the Ecosystem Fund is to be further split into the following categories:  
1. Governance Fund **(5.4%)**
2. Partner Fund **(5.4%)**
3. Seed Fund **(5.4%)**
4. Unallocated **(8.8%)**  
The Ecosystem Fund is intended to be a kick-starting mechanism that will be phased out entirely once the OP in the fund has been depleted.
The Optimism Foundation expects the function served by the Ecosystem Fund (proactive funding) to eventually be replaced by private third-party investors who can expect to be paid out by the [Retroactive Public Goods Funding](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c) mechanism.  
![](../../assets/docs/governance/allocations/ecosystem_fund_process.jpeg)  
The wide variety of funding mechanisms ensures that airdrops constantly flow to users who make valuable contributions to the ecosystem.
These contributions result in ecosystem growth,  ecosystem growth results in demand for block space, demand for block space results in revenues, and these revenues are then productively re-deployed into the ecosystem as additional airdrops.  
Each fund can be thought of as a parallel experiment in OP allocation, enabling rapid iteration and doubling down on what works to further grow the ecosystem."
438,What happens when the Ecosystem Fund is depleted?,"Once the Ecosystem Fund is depleted, its proactive funding function is expected to be replaced by private third-party investors. These investors can expect to be compensated through the Retroactive Public Goods Funding mechanism.","***Allocation: 25%***  
The Ecosystem Fund is an incentive program designed to stimulate development of the Collective ecosystem.
The Ecosystem Fund will be used to directly fund the communities and companies that drive the expansion of the Collective ecosystem (OPCOs).  
The allocation dedicated to the Ecosystem Fund is to be further split into the following categories:  
1. Governance Fund **(5.4%)**
2. Partner Fund **(5.4%)**
3. Seed Fund **(5.4%)**
4. Unallocated **(8.8%)**  
The Ecosystem Fund is intended to be a kick-starting mechanism that will be phased out entirely once the OP in the fund has been depleted.
The Optimism Foundation expects the function served by the Ecosystem Fund (proactive funding) to eventually be replaced by private third-party investors who can expect to be paid out by the [Retroactive Public Goods Funding](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c) mechanism.  
![](../../assets/docs/governance/allocations/ecosystem_fund_process.jpeg)  
The wide variety of funding mechanisms ensures that airdrops constantly flow to users who make valuable contributions to the ecosystem.
These contributions result in ecosystem growth,  ecosystem growth results in demand for block space, demand for block space results in revenues, and these revenues are then productively re-deployed into the ecosystem as additional airdrops.  
Each fund can be thought of as a parallel experiment in OP allocation, enabling rapid iteration and doubling down on what works to further grow the ecosystem."
439,How much of the OP token supply is dedicated to the first Governance Fund?,An allocation of 5.4% of the OP token supply is dedicated to the first Governance Fund.,"An allocation of **5.4%** of the OP token supply will be dedicated to the first Governance Fund.
All projects demonstrating usage on Optimism can request tokens from this fund via the [Optimism Grants Council](https://foul-porch-0eb.notion.site/Optimism-Grants-Council-090bb648d1854136b9630c608da7a8bc)"
439,How can projects demonstrating usage on Optimism request tokens from the Governance Fund?,Projects demonstrating usage on Optimism can request tokens from the Governance Fund via the Optimism Grants Council.,"An allocation of **5.4%** of the OP token supply will be dedicated to the first Governance Fund.
All projects demonstrating usage on Optimism can request tokens from this fund via the [Optimism Grants Council](https://foul-porch-0eb.notion.site/Optimism-Grants-Council-090bb648d1854136b9630c608da7a8bc)"
439,What is the purpose of the Optimism Grants Council?,The Optimism Grants Council is responsible for managing requests for tokens from the Governance Fund for projects demonstrating usage on Optimism.,"An allocation of **5.4%** of the OP token supply will be dedicated to the first Governance Fund.
All projects demonstrating usage on Optimism can request tokens from this fund via the [Optimism Grants Council](https://foul-porch-0eb.notion.site/Optimism-Grants-Council-090bb648d1854136b9630c608da7a8bc)"
440,How much of the OP token supply is allocated to the Partner Fund?,An allocation of 5.4% of the OP token supply is dedicated to the Partner Fund.,"An allocation of **5.4%** of the OP token supply will be dedicated to the Partner Fund.
These funds will be distributed strategically by the Optimism Foundation to grow the Optimism ecosystem for the benefit of the entire Collective."
440,What is the purpose of the Partner Fund in the Optimism ecosystem?,The Partner Fund is used to strategically distribute funds to grow the Optimism ecosystem for the benefit of the entire Collective.,"An allocation of **5.4%** of the OP token supply will be dedicated to the Partner Fund.
These funds will be distributed strategically by the Optimism Foundation to grow the Optimism ecosystem for the benefit of the entire Collective."
441,How much of the OP token supply is dedicated to the Seed Fund?,An allocation of 5.4% of the OP token supply is dedicated to the Seed Fund.,"An allocation of **5.4%** of the OP token supply will be dedicated to the Seed Fund, which is focused on supporting projects & teams from 0 ‚Üí 1, particularly projects that are entirely focused on building Optimism."
441,What is the purpose of the Seed Fund in the Optimism ecosystem?,"The Seed Fund is focused on supporting projects and teams from the initial stages (0 ‚Üí 1), particularly those that are entirely focused on building on Optimism.","An allocation of **5.4%** of the OP token supply will be dedicated to the Seed Fund, which is focused on supporting projects & teams from 0 ‚Üí 1, particularly projects that are entirely focused on building Optimism."
442,How much of the OP token supply is reserved for future programs and operational services?,"8.8% of the OP token supply is reserved for future programs and operational services, as determined by the Foundation and/or the governance community.","An allocation of **8.8%** of the OP token supply will be held in reserve for future programs and/or operational services to the Collective, to be determined by the Foundation and/or the governance community as appropriate."
443,How often are Retroactive Public Goods Funding (RetroPGF) rounds expected to occur?,RetroPGF rounds are expected to occur on a quarterly basis.,"***Allocation: 20%***  
[Retroactive Public Goods Funding (RetroPGF)](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c) will initially be distributed by the [Citizens' House](citizens-house.md).
RetroPGF rounds are expected to occur on a quarterly basis with the objective of ensuring that all OPCOs are rewarded adequately, appropriately, and reliably based on their impact to the Collective‚Äîkey to our [vision](https://optimism.io/vision).  
RetroPGF will be funded by several revenue sources:  
1. 20% of the initial OP token supply held as the ‚ÄúRetroPGF Reserve‚Äù.
1. Optimism network transaction fees and sequencer revenue.  
The Optimism Foundation may choose to increase the total OP payout of any given period by tapping into the 20% RetroPGF Reserve."
443,What is the purpose of RetroPGF rounds?,"The objective of RetroPGF rounds is to ensure that all OPCOs are rewarded adequately, appropriately, and reliably based on their impact to the Collective.","***Allocation: 20%***  
[Retroactive Public Goods Funding (RetroPGF)](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c) will initially be distributed by the [Citizens' House](citizens-house.md).
RetroPGF rounds are expected to occur on a quarterly basis with the objective of ensuring that all OPCOs are rewarded adequately, appropriately, and reliably based on their impact to the Collective‚Äîkey to our [vision](https://optimism.io/vision).  
RetroPGF will be funded by several revenue sources:  
1. 20% of the initial OP token supply held as the ‚ÄúRetroPGF Reserve‚Äù.
1. Optimism network transaction fees and sequencer revenue.  
The Optimism Foundation may choose to increase the total OP payout of any given period by tapping into the 20% RetroPGF Reserve."
443,What are the funding sources for RetroPGF?,RetroPGF will be funded by 20% of the initial OP token supply held as the 'RetroPGF Reserve' and by Optimism network transaction fees and sequencer revenue.,"***Allocation: 20%***  
[Retroactive Public Goods Funding (RetroPGF)](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c) will initially be distributed by the [Citizens' House](citizens-house.md).
RetroPGF rounds are expected to occur on a quarterly basis with the objective of ensuring that all OPCOs are rewarded adequately, appropriately, and reliably based on their impact to the Collective‚Äîkey to our [vision](https://optimism.io/vision).  
RetroPGF will be funded by several revenue sources:  
1. 20% of the initial OP token supply held as the ‚ÄúRetroPGF Reserve‚Äù.
1. Optimism network transaction fees and sequencer revenue.  
The Optimism Foundation may choose to increase the total OP payout of any given period by tapping into the 20% RetroPGF Reserve."
444,Who will receive the Core Contributors allocation in Optimism?,"The Core Contributors allocation will be distributed to the people who helped bring Optimism and the Optimism Collective from concept to reality, and will continue to pay for the development of the protocol.","***Allocation: 19%***  
The Core Contributors allocation will be distributed to the people who helped bring Optimism and the Optimism Collective from concept to reality, and will continue to pay for development of the protocol.
All tokens distributed as part of the Core Contributors allocation will be subject to a lockup period."
444,Is there any lockup period for the tokens distributed to Core Contributors in Optimism?,"Yes, all tokens distributed as part of the Core Contributors allocation will be subject to a lockup period.","***Allocation: 19%***  
The Core Contributors allocation will be distributed to the people who helped bring Optimism and the Optimism Collective from concept to reality, and will continue to pay for development of the protocol.
All tokens distributed as part of the Core Contributors allocation will be subject to a lockup period."
445,Who are the investors in Optimism?,The investors are those who funded Optimism and its vision for the future.,"***Allocation: 17%***  
Investors.
They funded us and our crazy vision for the future.
Couldn‚Äôt-a done it without ya.
All tokens distributed as part of the Sugar Xaddies allocation will be subject to a lockup period."
445,What is the lockup period mentioned in the allocation?,"All tokens distributed as part of the Sugar Xaddies allocation will be subject to a lockup period, meaning they cannot be immediately sold or transferred.","***Allocation: 17%***  
Investors.
They funded us and our crazy vision for the future.
Couldn‚Äôt-a done it without ya.
All tokens distributed as part of the Sugar Xaddies allocation will be subject to a lockup period."
446,How many OP tokens will be available at the start?,"At genesis, there will be an initial total supply of 4,294,967,296 OP tokens.","At genesis there will be an initial total supply of 4,294,967,296 OP tokens. The token supply will inflate at the latest rate approved by governance.  
64% of the initial token supply (i.e., the aggregate amount of OP **not** reserved for core contributors or sugar xaddies) will be distributed to the community as described above.
These distributions will be administered over time by the Optimism Foundation in its role as steward of the Optimism Collective.  
In Year 1, 30% of the initial token supply will be made available to the Foundation for distribution.
After the first year, token holders will vote to determine the Foundation‚Äôs annual OP distribution budget.  
If the Foundation‚Äôs authorized OP expenditures ever reaches below 10% of the initial token supply, it is expected to request an additional allocation.  
Taken together, the Foundation estimates the total supply of circulating OP tokens to increase as detailed in [this sheet](https://docs.google.com/spreadsheets/d/1qVMhLmmch3s6XSbiBe8hgD4ntMkPIOhc1WrhsYsQc7M/).  
**Circulating supply** is defined as the amount of OP tokens in general circulation that have no known restrictions on transfer.  
**Available supply** is the amount of OP tokens that are (a) part of the circulating supply, or (b) are subject to some governing body to determine the pace at which they are distributed. This includes all Ecosystem Funding indicated in the pie chart above."
446,What percentage of the initial token supply will be distributed to the community?,64% of the initial token supply will be distributed to the community.,"At genesis there will be an initial total supply of 4,294,967,296 OP tokens. The token supply will inflate at the latest rate approved by governance.  
64% of the initial token supply (i.e., the aggregate amount of OP **not** reserved for core contributors or sugar xaddies) will be distributed to the community as described above.
These distributions will be administered over time by the Optimism Foundation in its role as steward of the Optimism Collective.  
In Year 1, 30% of the initial token supply will be made available to the Foundation for distribution.
After the first year, token holders will vote to determine the Foundation‚Äôs annual OP distribution budget.  
If the Foundation‚Äôs authorized OP expenditures ever reaches below 10% of the initial token supply, it is expected to request an additional allocation.  
Taken together, the Foundation estimates the total supply of circulating OP tokens to increase as detailed in [this sheet](https://docs.google.com/spreadsheets/d/1qVMhLmmch3s6XSbiBe8hgD4ntMkPIOhc1WrhsYsQc7M/).  
**Circulating supply** is defined as the amount of OP tokens in general circulation that have no known restrictions on transfer.  
**Available supply** is the amount of OP tokens that are (a) part of the circulating supply, or (b) are subject to some governing body to determine the pace at which they are distributed. This includes all Ecosystem Funding indicated in the pie chart above."
446,Who is responsible for administering the distribution of OP tokens?,The Optimism Foundation is responsible for administering the distribution of OP tokens in its role as steward of the Optimism Collective.,"At genesis there will be an initial total supply of 4,294,967,296 OP tokens. The token supply will inflate at the latest rate approved by governance.  
64% of the initial token supply (i.e., the aggregate amount of OP **not** reserved for core contributors or sugar xaddies) will be distributed to the community as described above.
These distributions will be administered over time by the Optimism Foundation in its role as steward of the Optimism Collective.  
In Year 1, 30% of the initial token supply will be made available to the Foundation for distribution.
After the first year, token holders will vote to determine the Foundation‚Äôs annual OP distribution budget.  
If the Foundation‚Äôs authorized OP expenditures ever reaches below 10% of the initial token supply, it is expected to request an additional allocation.  
Taken together, the Foundation estimates the total supply of circulating OP tokens to increase as detailed in [this sheet](https://docs.google.com/spreadsheets/d/1qVMhLmmch3s6XSbiBe8hgD4ntMkPIOhc1WrhsYsQc7M/).  
**Circulating supply** is defined as the amount of OP tokens in general circulation that have no known restrictions on transfer.  
**Available supply** is the amount of OP tokens that are (a) part of the circulating supply, or (b) are subject to some governing body to determine the pace at which they are distributed. This includes all Ecosystem Funding indicated in the pie chart above."
447,How does the Citizens' House contribute to the governance of the Optimism Collective?,"The Citizens' House is responsible for voting on the allocation of Retroactive Public Goods Funding (Retro Funding) during its first stage. In future stages, its role will expand to include governing the allocation of surplus protocol revenue, collaborating on criteria for participation, and engaging in a system of checks and balances to enforce the Collective‚Äôs Codes of Conduct.","---
title: Overview
lang: en-US
---  
The Citizens' House is a large-scale experiment in[non-plutocratic governance](https://vitalik.ca/general/2021/08/16/voting3.html) and retroactive funding of public goods.
The Citizens‚Äô House will work alongside the Token House to govern the Optimism Collective.  
**In its first stage, the Citizens‚Äô House is solely responsible for voting on the allocation of Retroactive Public Goods Funding (Retro Funding)**.
During this bootstrapping phase, the Optimism Foundation will determine the scope and amount of each funding round, as well as administer the voting process. Holding a [voting badge](./citizenship.md) in this initial stage does not guarantee permanent participation in the Citizens‚Äô House and future iterations of Retro Funding.  
Funding for Retro Funding can come from:
- Retro Funding token allocation [(20% of the initial OP supply)](./allocations.md#retroactive-public-goods-funding)
- Allocation of surplus protocol revenue  
In future stages, the Citizens‚Äô House role will expand beyond Retro Funding.
For example, in addition to voting on Retro Funding, the Citizens‚Äô House will work alongside the Token House to govern allocation of surplus protocol revenue, collaborate on criteria for participation in the Citizens‚Äô House, and engage in a system of checks and balances to enforce the Collective‚Äôs Codes of Conduct. You can read more about this transition [here](https://optimism.mirror.xyz/PLrAQgE1EGRo7GRrFoztplFChnUZda4DFGW3dkQayxY)"
447,What is Retroactive Public Goods Funding (Retro Funding) and who decides on its allocation?,"Retroactive Public Goods Funding (Retro Funding) is a mechanism for funding public goods retroactively. During the initial stage, the Optimism Foundation determines the scope and amount of each funding round and administers the voting process. The Citizens' House votes on the allocation of these funds.","---
title: Overview
lang: en-US
---  
The Citizens' House is a large-scale experiment in[non-plutocratic governance](https://vitalik.ca/general/2021/08/16/voting3.html) and retroactive funding of public goods.
The Citizens‚Äô House will work alongside the Token House to govern the Optimism Collective.  
**In its first stage, the Citizens‚Äô House is solely responsible for voting on the allocation of Retroactive Public Goods Funding (Retro Funding)**.
During this bootstrapping phase, the Optimism Foundation will determine the scope and amount of each funding round, as well as administer the voting process. Holding a [voting badge](./citizenship.md) in this initial stage does not guarantee permanent participation in the Citizens‚Äô House and future iterations of Retro Funding.  
Funding for Retro Funding can come from:
- Retro Funding token allocation [(20% of the initial OP supply)](./allocations.md#retroactive-public-goods-funding)
- Allocation of surplus protocol revenue  
In future stages, the Citizens‚Äô House role will expand beyond Retro Funding.
For example, in addition to voting on Retro Funding, the Citizens‚Äô House will work alongside the Token House to govern allocation of surplus protocol revenue, collaborate on criteria for participation in the Citizens‚Äô House, and engage in a system of checks and balances to enforce the Collective‚Äôs Codes of Conduct. You can read more about this transition [here](https://optimism.mirror.xyz/PLrAQgE1EGRo7GRrFoztplFChnUZda4DFGW3dkQayxY)"
447,Where does the funding for Retro Funding come from?,"Funding for Retro Funding can come from the Retro Funding token allocation, which is 20% of the initial OP supply, and the allocation of surplus protocol revenue.","---
title: Overview
lang: en-US
---  
The Citizens' House is a large-scale experiment in[non-plutocratic governance](https://vitalik.ca/general/2021/08/16/voting3.html) and retroactive funding of public goods.
The Citizens‚Äô House will work alongside the Token House to govern the Optimism Collective.  
**In its first stage, the Citizens‚Äô House is solely responsible for voting on the allocation of Retroactive Public Goods Funding (Retro Funding)**.
During this bootstrapping phase, the Optimism Foundation will determine the scope and amount of each funding round, as well as administer the voting process. Holding a [voting badge](./citizenship.md) in this initial stage does not guarantee permanent participation in the Citizens‚Äô House and future iterations of Retro Funding.  
Funding for Retro Funding can come from:
- Retro Funding token allocation [(20% of the initial OP supply)](./allocations.md#retroactive-public-goods-funding)
- Allocation of surplus protocol revenue  
In future stages, the Citizens‚Äô House role will expand beyond Retro Funding.
For example, in addition to voting on Retro Funding, the Citizens‚Äô House will work alongside the Token House to govern allocation of surplus protocol revenue, collaborate on criteria for participation in the Citizens‚Äô House, and engage in a system of checks and balances to enforce the Collective‚Äôs Codes of Conduct. You can read more about this transition [here](https://optimism.mirror.xyz/PLrAQgE1EGRo7GRrFoztplFChnUZda4DFGW3dkQayxY)"
448,How does Retroactive Public Goods Funding (Retro Funding) work in the Optimism ecosystem?,Retroactive Public Goods Funding (Retro Funding) is a system where members of the Citizens‚Äô House allocate surplus protocol revenue or portions of the Retro Funding token allocation to projects that have provided a positive impact to the Optimism Collective. This approach is based on the idea that it‚Äôs easier to agree on what was useful in the past than what might be useful in the future.,"Retroactive Public Goods Funding (Retro Funding) is based on the idea that it‚Äôs easier to agree on what *was* useful in the past than what *might* be useful in the future.
This is a series of experiments where members of the Citizens‚Äô House allocate surplus protocol revenue or portions of the Retro Funding token allocation to projects they deem have provided positive impact to the Optimism Collective. This is core to Optimism‚Äôs value of `impact = profit`:  the idea that that positive impact to the collective should be rewarded proportionally with profit to the individual.  
These rewards create strong incentives for people to build public goods that benefit the Optimism Collective.
The aggregate effect is an ecosystem that is easier to build on, learn about, and connect to, in turn driving application usage and generating more demand for blockspace. By funding public goods sustainably, the Collective can create a rich ecosystem and a better economy.  
<p align=""center"">
<img width=""50%"" height=""50%"" src=""https://github.com/ethereum-optimism/community-hub/assets/43515441/ca5c58de-58bb-43ca-bbd4-99c7f1c26534"">
</p>  
Retro Funding also provides possible exit liquidity for public goods projects, which opens up a market for early investment in those projects.
This means builders can:  
- Be rewarded for their positive contributions without generating direct revenue
- Raise capital to bootstrap based on the early potential and promise of their project"
448,What is the main value behind Optimism's Retro Funding?,"The main value behind Optimism's Retro Funding is 'impact = profit,' which means that positive impact to the collective should be rewarded proportionally with profit to the individual. This creates strong incentives for people to build public goods that benefit the Optimism Collective.","Retroactive Public Goods Funding (Retro Funding) is based on the idea that it‚Äôs easier to agree on what *was* useful in the past than what *might* be useful in the future.
This is a series of experiments where members of the Citizens‚Äô House allocate surplus protocol revenue or portions of the Retro Funding token allocation to projects they deem have provided positive impact to the Optimism Collective. This is core to Optimism‚Äôs value of `impact = profit`:  the idea that that positive impact to the collective should be rewarded proportionally with profit to the individual.  
These rewards create strong incentives for people to build public goods that benefit the Optimism Collective.
The aggregate effect is an ecosystem that is easier to build on, learn about, and connect to, in turn driving application usage and generating more demand for blockspace. By funding public goods sustainably, the Collective can create a rich ecosystem and a better economy.  
<p align=""center"">
<img width=""50%"" height=""50%"" src=""https://github.com/ethereum-optimism/community-hub/assets/43515441/ca5c58de-58bb-43ca-bbd4-99c7f1c26534"">
</p>  
Retro Funding also provides possible exit liquidity for public goods projects, which opens up a market for early investment in those projects.
This means builders can:  
- Be rewarded for their positive contributions without generating direct revenue
- Raise capital to bootstrap based on the early potential and promise of their project"
448,How does Retro Funding benefit builders in the Optimism ecosystem?,"Retro Funding benefits builders by allowing them to be rewarded for their positive contributions without generating direct revenue. It also provides possible exit liquidity for public goods projects, opening up a market for early investment in those projects, and enabling builders to raise capital to bootstrap based on the early potential and promise of their project.","Retroactive Public Goods Funding (Retro Funding) is based on the idea that it‚Äôs easier to agree on what *was* useful in the past than what *might* be useful in the future.
This is a series of experiments where members of the Citizens‚Äô House allocate surplus protocol revenue or portions of the Retro Funding token allocation to projects they deem have provided positive impact to the Optimism Collective. This is core to Optimism‚Äôs value of `impact = profit`:  the idea that that positive impact to the collective should be rewarded proportionally with profit to the individual.  
These rewards create strong incentives for people to build public goods that benefit the Optimism Collective.
The aggregate effect is an ecosystem that is easier to build on, learn about, and connect to, in turn driving application usage and generating more demand for blockspace. By funding public goods sustainably, the Collective can create a rich ecosystem and a better economy.  
<p align=""center"">
<img width=""50%"" height=""50%"" src=""https://github.com/ethereum-optimism/community-hub/assets/43515441/ca5c58de-58bb-43ca-bbd4-99c7f1c26534"">
</p>  
Retro Funding also provides possible exit liquidity for public goods projects, which opens up a market for early investment in those projects.
This means builders can:  
- Be rewarded for their positive contributions without generating direct revenue
- Raise capital to bootstrap based on the early potential and promise of their project"
449,How often does the Optimism Collective conduct Retro Funding rounds?,"The Optimism Collective conducts regular rounds of Retro Funding, with each round being different from the last. The process is emergent and relies on community participation to evolve.","<p align=""center"">
<img width=""70%"" src=""https://github.com/ethereum-optimism/community-hub/assets/43515441/4a4ea307-dbe9-4034-89fb-53d320ad740c"">
</p>  
Retro Funding is a longterm bet to build the future Optimists want to see.
The Collective will conduct regular rounds of Retro Funding, each different from the last.
This is an emergent process that will take community participation to grow and prune.
1. [Retro Funding round 1](./retropgf-1.md) took place at the end of 2021 and allocated $1 million across 58 projects.
2. [Retro Funding round 2](./retropgf-2.md) took place in Q1 2023 and allocated 10m OP tokens across 195 projects.
3. [Retro Funding round 3](./retropgf-3.md) took place in Q4 2023 and allocated 30m OP tokens across 501 projects.
4. Retro Funding round 4 will take place in Q2/3 2024 and will reward onchain builders who contribute to the success of Optimism."
449,What was the outcome of the first Retro Funding round?,The first Retro Funding round took place at the end of 2021 and allocated $1 million across 58 projects.,"<p align=""center"">
<img width=""70%"" src=""https://github.com/ethereum-optimism/community-hub/assets/43515441/4a4ea307-dbe9-4034-89fb-53d320ad740c"">
</p>  
Retro Funding is a longterm bet to build the future Optimists want to see.
The Collective will conduct regular rounds of Retro Funding, each different from the last.
This is an emergent process that will take community participation to grow and prune.
1. [Retro Funding round 1](./retropgf-1.md) took place at the end of 2021 and allocated $1 million across 58 projects.
2. [Retro Funding round 2](./retropgf-2.md) took place in Q1 2023 and allocated 10m OP tokens across 195 projects.
3. [Retro Funding round 3](./retropgf-3.md) took place in Q4 2023 and allocated 30m OP tokens across 501 projects.
4. Retro Funding round 4 will take place in Q2/3 2024 and will reward onchain builders who contribute to the success of Optimism."
449,When is the next Retro Funding round scheduled to take place?,"The next Retro Funding round, which is the fourth round, is scheduled to take place in Q2/3 2024 and will reward onchain builders who contribute to the success of Optimism.","<p align=""center"">
<img width=""70%"" src=""https://github.com/ethereum-optimism/community-hub/assets/43515441/4a4ea307-dbe9-4034-89fb-53d320ad740c"">
</p>  
Retro Funding is a longterm bet to build the future Optimists want to see.
The Collective will conduct regular rounds of Retro Funding, each different from the last.
This is an emergent process that will take community participation to grow and prune.
1. [Retro Funding round 1](./retropgf-1.md) took place at the end of 2021 and allocated $1 million across 58 projects.
2. [Retro Funding round 2](./retropgf-2.md) took place in Q1 2023 and allocated 10m OP tokens across 195 projects.
3. [Retro Funding round 3](./retropgf-3.md) took place in Q4 2023 and allocated 30m OP tokens across 501 projects.
4. Retro Funding round 4 will take place in Q2/3 2024 and will reward onchain builders who contribute to the success of Optimism."
450,How does the Optimism Collective decide what to fund?,"The Optimism Collective decides what to fund through a process called 'Impact Scoping.' Initially, the Optimism Foundation will determine the scope with community input, but eventually, the Citizens‚Äô House will take over this responsibility with oversight from the Token House.","Retro Funding has three core components, each with substantial surface area for experimentation.  
1. **Impact scoping**: what should the Collective fund?
How is it defined and decided on?
1. **Impact scoring:** how does the Citizens‚Äô House evaluate impact?
What units, process, or tools do we use?
1. **Impact settlement:** how does voting work?  
For the first several rounds of Retro Funding, the Optimism Foundation will decide on scope and voting mechanics with input from the community.
Eventually the set of variables around what to fund, how much to fund, and how to vote will be up to the Citizens‚Äô House, with checks and balances from the Token House.  
Over time, the Collective aims to expand the scope of Retro Funding to support the production of public goods beyond the immediate Optimism ecosystem.
To get there, we must refine the tools and processes used for Retro Funding based on regular experimentation."
450,Who evaluates the impact of the projects funded by the Optimism Collective?,"The impact of the projects is evaluated by the Citizens‚Äô House through a process called 'Impact Scoring.' This involves using specific units, processes, and tools to assess the impact.","Retro Funding has three core components, each with substantial surface area for experimentation.  
1. **Impact scoping**: what should the Collective fund?
How is it defined and decided on?
1. **Impact scoring:** how does the Citizens‚Äô House evaluate impact?
What units, process, or tools do we use?
1. **Impact settlement:** how does voting work?  
For the first several rounds of Retro Funding, the Optimism Foundation will decide on scope and voting mechanics with input from the community.
Eventually the set of variables around what to fund, how much to fund, and how to vote will be up to the Citizens‚Äô House, with checks and balances from the Token House.  
Over time, the Collective aims to expand the scope of Retro Funding to support the production of public goods beyond the immediate Optimism ecosystem.
To get there, we must refine the tools and processes used for Retro Funding based on regular experimentation."
450,How is voting conducted for Retro Funding in the Optimism Collective?,"For the initial rounds of Retro Funding, the Optimism Foundation will decide on the voting mechanics with input from the community. Over time, the Citizens‚Äô House will take over the voting process, with checks and balances provided by the Token House.","Retro Funding has three core components, each with substantial surface area for experimentation.  
1. **Impact scoping**: what should the Collective fund?
How is it defined and decided on?
1. **Impact scoring:** how does the Citizens‚Äô House evaluate impact?
What units, process, or tools do we use?
1. **Impact settlement:** how does voting work?  
For the first several rounds of Retro Funding, the Optimism Foundation will decide on scope and voting mechanics with input from the community.
Eventually the set of variables around what to fund, how much to fund, and how to vote will be up to the Citizens‚Äô House, with checks and balances from the Token House.  
Over time, the Collective aims to expand the scope of Retro Funding to support the production of public goods beyond the immediate Optimism ecosystem.
To get there, we must refine the tools and processes used for Retro Funding based on regular experimentation."
451,How does the Citizens' House in Optimism differ from the Token House?,"The Citizens' House relies on identity-based governance, where citizens represent individual human stakeholders like builders, users, and community members aligned with the project's values. In contrast, the Token House uses a more common pattern of token-voting governance.","---
title: Citizenship
lang: en-US
---  
The Citizens‚Äô House relies on the concept of identity-based governance. Citizens are meant to represent individual human stakeholders of the Collective: builders, users, and community members who are aligned with the project‚Äôs values and are interested in the long-term benefit of the Collective.
This is distinct from the more common pattern of token-voting governance (as used in [Optimism‚Äôs Token House](./token-house.md)).  
<img width=""auto"" alt=""Optimism Identity"" src=""https://user-images.githubusercontent.com/27849965/219097012-a21ebb1f-66dc-47a8-8b3f-6382774ad5d6.png"">  
In the initial stage of bootstrapping the Citizens' House, participants receive temporary badges to vote in Retro Funding rounds.
In future stages, the Token House and Citizens‚Äô House together will collaborate on ongoing criteria for participation in the Citizens‚Äô House.
This means the criteria for Citizenship will evolve over time. Holding a voting badge does not guarantee voting rights in future rounds of Retro Funding, as eventually membership will be determined by governance and may change.  
**How will Citizenship Selection work?**  
- Optimism has a neutral, permissionless attestation contract called the [`AttestationStation`](../identity/)
- Optimism Governance (Token + Citizens‚Äô House) has authority over a function that takes the AttestationStation as an argument and uses any data included to determine the set of Citizens.  
Optimism governance can use any reputation data written to the AttestationStation contract to determine Citizenship in future iterations of the Citizens‚Äô House.
This system is designed to be flexible and future-proof; rather than prescribe citizenship criteria at the outset, the Collective is keeping true to its principle of iterative governance.  
For more information on Optimism's identity layer, visit the [AttestationStation documentation](../identity/)."
451,What is the purpose of the temporary badges in the Citizens' House?,"In the initial stage of bootstrapping the Citizens' House, participants receive temporary badges to vote in Retro Funding rounds. However, holding a voting badge does not guarantee voting rights in future rounds, as membership criteria will evolve over time.","---
title: Citizenship
lang: en-US
---  
The Citizens‚Äô House relies on the concept of identity-based governance. Citizens are meant to represent individual human stakeholders of the Collective: builders, users, and community members who are aligned with the project‚Äôs values and are interested in the long-term benefit of the Collective.
This is distinct from the more common pattern of token-voting governance (as used in [Optimism‚Äôs Token House](./token-house.md)).  
<img width=""auto"" alt=""Optimism Identity"" src=""https://user-images.githubusercontent.com/27849965/219097012-a21ebb1f-66dc-47a8-8b3f-6382774ad5d6.png"">  
In the initial stage of bootstrapping the Citizens' House, participants receive temporary badges to vote in Retro Funding rounds.
In future stages, the Token House and Citizens‚Äô House together will collaborate on ongoing criteria for participation in the Citizens‚Äô House.
This means the criteria for Citizenship will evolve over time. Holding a voting badge does not guarantee voting rights in future rounds of Retro Funding, as eventually membership will be determined by governance and may change.  
**How will Citizenship Selection work?**  
- Optimism has a neutral, permissionless attestation contract called the [`AttestationStation`](../identity/)
- Optimism Governance (Token + Citizens‚Äô House) has authority over a function that takes the AttestationStation as an argument and uses any data included to determine the set of Citizens.  
Optimism governance can use any reputation data written to the AttestationStation contract to determine Citizenship in future iterations of the Citizens‚Äô House.
This system is designed to be flexible and future-proof; rather than prescribe citizenship criteria at the outset, the Collective is keeping true to its principle of iterative governance.  
For more information on Optimism's identity layer, visit the [AttestationStation documentation](../identity/)."
451,How will the selection of citizens be determined in the future?,"Optimism has a neutral, permissionless attestation contract called the AttestationStation. Optimism Governance, which includes both the Token House and Citizens' House, will use data from the AttestationStation to determine the set of Citizens. This system is designed to be flexible and iterative, allowing the criteria for citizenship to evolve over time.","---
title: Citizenship
lang: en-US
---  
The Citizens‚Äô House relies on the concept of identity-based governance. Citizens are meant to represent individual human stakeholders of the Collective: builders, users, and community members who are aligned with the project‚Äôs values and are interested in the long-term benefit of the Collective.
This is distinct from the more common pattern of token-voting governance (as used in [Optimism‚Äôs Token House](./token-house.md)).  
<img width=""auto"" alt=""Optimism Identity"" src=""https://user-images.githubusercontent.com/27849965/219097012-a21ebb1f-66dc-47a8-8b3f-6382774ad5d6.png"">  
In the initial stage of bootstrapping the Citizens' House, participants receive temporary badges to vote in Retro Funding rounds.
In future stages, the Token House and Citizens‚Äô House together will collaborate on ongoing criteria for participation in the Citizens‚Äô House.
This means the criteria for Citizenship will evolve over time. Holding a voting badge does not guarantee voting rights in future rounds of Retro Funding, as eventually membership will be determined by governance and may change.  
**How will Citizenship Selection work?**  
- Optimism has a neutral, permissionless attestation contract called the [`AttestationStation`](../identity/)
- Optimism Governance (Token + Citizens‚Äô House) has authority over a function that takes the AttestationStation as an argument and uses any data included to determine the set of Citizens.  
Optimism governance can use any reputation data written to the AttestationStation contract to determine Citizenship in future iterations of the Citizens‚Äô House.
This system is designed to be flexible and future-proof; rather than prescribe citizenship criteria at the outset, the Collective is keeping true to its principle of iterative governance.  
For more information on Optimism's identity layer, visit the [AttestationStation documentation](../identity/)."
452,How many badgeholders participated in the first round of Retro Funding?,"In the first round of Retro Funding, 24 badgeholders participated.","In the current phase of Citizens' House governance the number of voting badges is growing with each round of Retro Funding:
Retro Funding [round 1](./retropgf-1.md) had 24 badgeholders participate, [round 2](./retropgf-2.md) saw 71 badgeholders participate, and in [round 3](./retropgf-3.md) voting badges will be offered to 208 community members.
Eventually, Citizenship is intended to be widely distributed to a large group of humans across the Optimism ecosystem with expertise in many different subcultures and industries. Optimism governance will have the power to set criteria for Citizenship.  
This means voting eligibility may someday be subject to rules and restrictions unknown today. Voting in Retro Funding 3 does not guarantee permanent participation in the Citizens‚Äô House and future iterations of Retro Funding."
452,Will voting in Retro Funding 3 guarantee permanent participation in the Citizens‚Äô House?,"No, voting in Retro Funding 3 does not guarantee permanent participation in the Citizens‚Äô House and future iterations of Retro Funding.","In the current phase of Citizens' House governance the number of voting badges is growing with each round of Retro Funding:
Retro Funding [round 1](./retropgf-1.md) had 24 badgeholders participate, [round 2](./retropgf-2.md) saw 71 badgeholders participate, and in [round 3](./retropgf-3.md) voting badges will be offered to 208 community members.
Eventually, Citizenship is intended to be widely distributed to a large group of humans across the Optimism ecosystem with expertise in many different subcultures and industries. Optimism governance will have the power to set criteria for Citizenship.  
This means voting eligibility may someday be subject to rules and restrictions unknown today. Voting in Retro Funding 3 does not guarantee permanent participation in the Citizens‚Äô House and future iterations of Retro Funding."
452,How is the number of voting badges changing with each round of Retro Funding?,"The number of voting badges is growing with each round of Retro Funding. For example, round 1 had 24 badgeholders, round 2 had 71 badgeholders, and round 3 will offer voting badges to 208 community members.","In the current phase of Citizens' House governance the number of voting badges is growing with each round of Retro Funding:
Retro Funding [round 1](./retropgf-1.md) had 24 badgeholders participate, [round 2](./retropgf-2.md) saw 71 badgeholders participate, and in [round 3](./retropgf-3.md) voting badges will be offered to 208 community members.
Eventually, Citizenship is intended to be widely distributed to a large group of humans across the Optimism ecosystem with expertise in many different subcultures and industries. Optimism governance will have the power to set criteria for Citizenship.  
This means voting eligibility may someday be subject to rules and restrictions unknown today. Voting in Retro Funding 3 does not guarantee permanent participation in the Citizens‚Äô House and future iterations of Retro Funding."
453,How can I find out who my current delegate is and see their voting record?,You can identify your current delegate and view their voting record by visiting this [link](https://help.optimism.io/hc/en-us/articles/6389519530779-How-do-I-see-how-my-delegate-voted-).,"---
title: Find and Track Your Delegate
lang: en-US
---  
- [Identify your current delegate and view the delegate's voting record](https://help.optimism.io/hc/en-us/articles/6389519530779-How-do-I-see-how-my-delegate-voted-)  
- [View information about specific delegates (their share of the votes, etc.)](https://dune.com/optimismfnd/optimism-op-token-house)  
<!--  
- [Delegate aggregate information (GINI coefficient, etc.)](https://app.flipsidecrypto.com/dashboard/optimism-governance-l5WXpo)  
-->"
453,"Where can I find information about specific delegates, such as their share of the votes?","You can view information about specific delegates, including their share of the votes, by visiting this [link](https://dune.com/optimismfnd/optimism-op-token-house).","---
title: Find and Track Your Delegate
lang: en-US
---  
- [Identify your current delegate and view the delegate's voting record](https://help.optimism.io/hc/en-us/articles/6389519530779-How-do-I-see-how-my-delegate-voted-)  
- [View information about specific delegates (their share of the votes, etc.)](https://dune.com/optimismfnd/optimism-op-token-house)  
<!--  
- [Delegate aggregate information (GINI coefficient, etc.)](https://app.flipsidecrypto.com/dashboard/optimism-governance-l5WXpo)  
-->"
454,How can I participate in Token House governance without a significant time commitment?,You can delegate your OP tokens to community members who have volunteered to play an active role in Token House governance. This allows you to participate without needing to commit a lot of time.,"---
title: How to be a delegate
lang: en-US
---  
Participating in Token House governance can require a serious time commitment.
For this reason, people are able to delegate their OP to community members who have explicitly volunteered to play an active role in Token House governance.  
Being a delegate is an important job that comes with a lot of responsibility. Therefore, before deciding to become a delegate, you should be familiar with:  
* The [Working Constitution](https://gov.optimism.io/t/working-constitution-of-the-optimism-collective/55).
* The [Operating Manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md).
* The [Code of Conduct](https://gov.optimism.io/t/code-of-conduct/5751/13)"
454,What should I know before deciding to become a delegate in Token House governance?,"Before becoming a delegate, you should be familiar with the Working Constitution, the Operating Manual, and the Code of Conduct. These documents outline the responsibilities and guidelines for delegates.","---
title: How to be a delegate
lang: en-US
---  
Participating in Token House governance can require a serious time commitment.
For this reason, people are able to delegate their OP to community members who have explicitly volunteered to play an active role in Token House governance.  
Being a delegate is an important job that comes with a lot of responsibility. Therefore, before deciding to become a delegate, you should be familiar with:  
* The [Working Constitution](https://gov.optimism.io/t/working-constitution-of-the-optimism-collective/55).
* The [Operating Manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md).
* The [Code of Conduct](https://gov.optimism.io/t/code-of-conduct/5751/13)"
454,What is the role of a delegate in Token House governance?,A delegate plays an important role in Token House governance by actively participating in decision-making processes on behalf of the community members who have delegated their OP tokens to them. It is a role that comes with significant responsibility.,"---
title: How to be a delegate
lang: en-US
---  
Participating in Token House governance can require a serious time commitment.
For this reason, people are able to delegate their OP to community members who have explicitly volunteered to play an active role in Token House governance.  
Being a delegate is an important job that comes with a lot of responsibility. Therefore, before deciding to become a delegate, you should be familiar with:  
* The [Working Constitution](https://gov.optimism.io/t/working-constitution-of-the-optimism-collective/55).
* The [Operating Manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md).
* The [Code of Conduct](https://gov.optimism.io/t/code-of-conduct/5751/13)"
455,How can I become a delegate in Optimism Governance?,"To become a delegate in Optimism Governance, you need to follow a specific process outlined in their documentation. This process will guide you through the necessary steps to become a recognized delegate.",This is the process to become a delegate:
456,Where can I find the delegate responsibilities for Optimism Governance?,You can find the delegate responsibilities on the Optimism Governance forum at this link: https://gov.optimism.io/t/delegate-commitments/235. Make sure to read and understand the responsibilities outlined there.,* Read the delegate responsibilities on the [forum](https://gov.optimism.io/t/delegate-commitments/235) and make sure you understand the responsibilities.
457,How can I register to be a delegate for Optimism Governance?,You can register to be a delegate by visiting the Optimism Governance Portal (Optimism Agora) and following the delegate commitment form.,"* Register to be a delegate on the [Optimism Governance Portal (Optimism Agora)](https://vote.optimism.io/) following the [delegate commitment form](https://gov.optimism.io/t/delegate-commitments/235).
* It is not required, but you probably also want to [delegate your OP tokens' voting power to yourself](https://vote.optimism.io/). Please note self-delegation of growth experiments grants is a violation of the https://gov.optimism.io/t/collective-grant-policies/5833."
457,Is it necessary to delegate my OP tokens' voting power to myself?,"It is not required to delegate your OP tokens' voting power to yourself, but it is recommended. However, self-delegation of growth experiments grants is a violation of the collective grant policies.","* Register to be a delegate on the [Optimism Governance Portal (Optimism Agora)](https://vote.optimism.io/) following the [delegate commitment form](https://gov.optimism.io/t/delegate-commitments/235).
* It is not required, but you probably also want to [delegate your OP tokens' voting power to yourself](https://vote.optimism.io/). Please note self-delegation of growth experiments grants is a violation of the https://gov.optimism.io/t/collective-grant-policies/5833."
458,How does the Optimism Collective generate value for tokenholders?,"Value accrues to tokenholders through the productive re-deployment of sequencer revenue, which is primarily directed to fund public goods. This creates ecosystem value and drives demand for blockspace.","---
title: OP Economics
lang: en-US
---  
The Optimism Collective is based on the idea that healthy public goods create a thriving and valuable ecosystem.
The economics of this ecosystem are designed to generate value for three constituencies:  
- Value accrues to **tokenholders** through the productive re-deployment of sequencer revenue.
Sequencer revenue is primarily directed to fund public goods, which creates ecosystem value and drives demand for blockspace.
- Value accrues to **contributors and builders** directly from retroactive public goods funding and the markets it enables.
Builders also benefit symbiotically: it‚Äôs better to build in an ecosystem with well-funded tools, education, apps, and infrastructure.
- Value accrues to **users and community members** from ongoing airdrops of OP, from project incentives made possible by OP ecosystem funding, and from the benefit public goods provide.  
Together, it looks like this:  
![](../../assets/docs/governance/economics/virt_cycle.png)  
Let‚Äôs break it down ‚§µÔ∏è"
458,How do contributors and builders benefit from the Optimism ecosystem?,"Contributors and builders benefit directly from retroactive public goods funding and the markets it enables. They also benefit from building in an ecosystem with well-funded tools, education, apps, and infrastructure.","---
title: OP Economics
lang: en-US
---  
The Optimism Collective is based on the idea that healthy public goods create a thriving and valuable ecosystem.
The economics of this ecosystem are designed to generate value for three constituencies:  
- Value accrues to **tokenholders** through the productive re-deployment of sequencer revenue.
Sequencer revenue is primarily directed to fund public goods, which creates ecosystem value and drives demand for blockspace.
- Value accrues to **contributors and builders** directly from retroactive public goods funding and the markets it enables.
Builders also benefit symbiotically: it‚Äôs better to build in an ecosystem with well-funded tools, education, apps, and infrastructure.
- Value accrues to **users and community members** from ongoing airdrops of OP, from project incentives made possible by OP ecosystem funding, and from the benefit public goods provide.  
Together, it looks like this:  
![](../../assets/docs/governance/economics/virt_cycle.png)  
Let‚Äôs break it down ‚§µÔ∏è"
458,What benefits do users and community members receive from the Optimism ecosystem?,"Users and community members benefit from ongoing airdrops of OP tokens, project incentives made possible by OP ecosystem funding, and the advantages provided by public goods.","---
title: OP Economics
lang: en-US
---  
The Optimism Collective is based on the idea that healthy public goods create a thriving and valuable ecosystem.
The economics of this ecosystem are designed to generate value for three constituencies:  
- Value accrues to **tokenholders** through the productive re-deployment of sequencer revenue.
Sequencer revenue is primarily directed to fund public goods, which creates ecosystem value and drives demand for blockspace.
- Value accrues to **contributors and builders** directly from retroactive public goods funding and the markets it enables.
Builders also benefit symbiotically: it‚Äôs better to build in an ecosystem with well-funded tools, education, apps, and infrastructure.
- Value accrues to **users and community members** from ongoing airdrops of OP, from project incentives made possible by OP ecosystem funding, and from the benefit public goods provide.  
Together, it looks like this:  
![](../../assets/docs/governance/economics/virt_cycle.png)  
Let‚Äôs break it down ‚§µÔ∏è"
459,How is the OP economy funded?,"The OP economy is funded through ownership of OP Mainnet and the value of its blockspace. Currently, funding comes from a centralized sequencer and is managed by The Optimism Foundation for redistribution. In the future, funding may come from selling the right to participate in Optimism‚Äôs decentralized sequencing network.","Funding for the OP economy comes from ownership of OP Mainnet and the value of its blockspace.
Today, funding comes directly from the centralized sequencer, accruing to The Optimism Foundation for redistribution.
In the future, funding can accrue directly to the protocol by selling the right to participate in Optimism‚Äôs decentralized sequencing network.  
Simply put: the right to blockspace is the sustainable source of revenue that drives OP‚Äôs economic model and grows with the network itself."
459,What is the role of The Optimism Foundation in the funding process?,The Optimism Foundation currently manages the funds that come from the centralized sequencer and redistributes them within the OP economy.,"Funding for the OP economy comes from ownership of OP Mainnet and the value of its blockspace.
Today, funding comes directly from the centralized sequencer, accruing to The Optimism Foundation for redistribution.
In the future, funding can accrue directly to the protocol by selling the right to participate in Optimism‚Äôs decentralized sequencing network.  
Simply put: the right to blockspace is the sustainable source of revenue that drives OP‚Äôs economic model and grows with the network itself."
459,What is the sustainable source of revenue for OP's economic model?,"The sustainable source of revenue for OP's economic model is the right to blockspace, which grows with the network itself.","Funding for the OP economy comes from ownership of OP Mainnet and the value of its blockspace.
Today, funding comes directly from the centralized sequencer, accruing to The Optimism Foundation for redistribution.
In the future, funding can accrue directly to the protocol by selling the right to participate in Optimism‚Äôs decentralized sequencing network.  
Simply put: the right to blockspace is the sustainable source of revenue that drives OP‚Äôs economic model and grows with the network itself."
460,How does Optimism support public goods?,"Optimism supports public goods by integrating a sustainable funding source into the network's mechanisms. This is primarily done through Retroactive Public Goods Funding (RetroPGF), where sequencer revenue is distributed back to the ecosystem. The Citizens' House votes quarterly on fund distributions to individuals, teams, projects, or communities that have provided subjective value.","Communities benefit from all sorts of public goods, from education to city infrastructure to open source software.
But many markets fail to provide adequate funding and support for those public goods.
It‚Äôs here that Optimism takes a step forward, by building a sustainable funding source into the mechanisms of the network itself.  
Direct or auctioned sequencer revenue is distributed back to the ecosystem primarily through Retroactive Public Goods Funding ([RetroPGF](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c)).
This creates strong incentives for individuals to build for the public good of the Optimism Collective.  
To start, the Citizens‚Äô House will vote quarterly on distributions of funds to individuals, teams, projects, or communities that have provided subjective value over a specified time period.
This directly rewards community members for the positive impact of their work.  
RetroPGF also provides possible exit liquidity for public goods projects, which opens up a market for early investment in those projects.
This means builders can:  
- Be compensated for their positive contributions without generating direct revenue.
- Raise capital to bootstrap based on the early potential and promise of their project.  
In the long-term, the Foundation expects this mechanism to drive a wide range of pro-social downstream effects, which the Collective can capture and expand upon through frequent experimentation and iteration."
460,What is Retroactive Public Goods Funding (RetroPGF)?,"Retroactive Public Goods Funding (RetroPGF) is a mechanism where revenue generated by the network, such as from sequencer fees, is distributed back to the ecosystem. This funding is allocated to individuals, teams, projects, or communities that have made positive contributions, as determined by a quarterly vote from the Citizens' House.","Communities benefit from all sorts of public goods, from education to city infrastructure to open source software.
But many markets fail to provide adequate funding and support for those public goods.
It‚Äôs here that Optimism takes a step forward, by building a sustainable funding source into the mechanisms of the network itself.  
Direct or auctioned sequencer revenue is distributed back to the ecosystem primarily through Retroactive Public Goods Funding ([RetroPGF](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c)).
This creates strong incentives for individuals to build for the public good of the Optimism Collective.  
To start, the Citizens‚Äô House will vote quarterly on distributions of funds to individuals, teams, projects, or communities that have provided subjective value over a specified time period.
This directly rewards community members for the positive impact of their work.  
RetroPGF also provides possible exit liquidity for public goods projects, which opens up a market for early investment in those projects.
This means builders can:  
- Be compensated for their positive contributions without generating direct revenue.
- Raise capital to bootstrap based on the early potential and promise of their project.  
In the long-term, the Foundation expects this mechanism to drive a wide range of pro-social downstream effects, which the Collective can capture and expand upon through frequent experimentation and iteration."
460,How can builders benefit from Optimism's funding mechanisms?,"Builders can benefit from Optimism's funding mechanisms in several ways. They can be compensated for their positive contributions without needing to generate direct revenue. Additionally, they can raise capital to bootstrap their projects based on their early potential and promise. This creates strong incentives for individuals to build for the public good of the Optimism Collective.","Communities benefit from all sorts of public goods, from education to city infrastructure to open source software.
But many markets fail to provide adequate funding and support for those public goods.
It‚Äôs here that Optimism takes a step forward, by building a sustainable funding source into the mechanisms of the network itself.  
Direct or auctioned sequencer revenue is distributed back to the ecosystem primarily through Retroactive Public Goods Funding ([RetroPGF](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c)).
This creates strong incentives for individuals to build for the public good of the Optimism Collective.  
To start, the Citizens‚Äô House will vote quarterly on distributions of funds to individuals, teams, projects, or communities that have provided subjective value over a specified time period.
This directly rewards community members for the positive impact of their work.  
RetroPGF also provides possible exit liquidity for public goods projects, which opens up a market for early investment in those projects.
This means builders can:  
- Be compensated for their positive contributions without generating direct revenue.
- Raise capital to bootstrap based on the early potential and promise of their project.  
In the long-term, the Foundation expects this mechanism to drive a wide range of pro-social downstream effects, which the Collective can capture and expand upon through frequent experimentation and iteration."
461,How does funding public goods benefit the Optimism network?,"Funding public goods drives growth and network revenues from the ground up by making the ecosystem easier to build on, learn about, and connect to. This, in turn, drives application usage and generates more demand for blockspace.","Funding public goods drives growth ‚Äî and therefore network revenues ‚Äî from the ground up.
In our [first round](https://vitalik.ca/general/2021/11/16/retro1.html) of RetroPGF, Optimism funded a set of hugely valuable developer tools and core infrastructure.
The aggregate effect is an ecosystem that is easier to build on, learn about, and connect to, in turn driving application usage and generating more demand for blockspace.  
But what value do these public goods provide, and for whom is it valuable?
This is a rich design space.
Optimism‚Äôs governance is designed to create conditions for experimentation around this question.
The Foundation draws heavily on the work of Ostrom, Vitalik, and others to make sure funding for public goods is maximally efficient, effective, and safe.  
To start, Foundation governance is shared and divided through a two-house system, where network parameters for the amount of funding are controlled by both houses, but the governance of RetroPGF allocation is determined by a set of Citizens with local knowledge and skin in the game.  
Thoughtful allocation of public goods funding will create longterm value for builders, users, tokenholders, citizens and the entire Optimism Collective."
461,What is RetroPGF and what was achieved in its first round?,"RetroPGF stands for Retroactive Public Goods Funding. In the first round, Optimism funded a set of valuable developer tools and core infrastructure, which contributed to making the ecosystem more accessible and functional.","Funding public goods drives growth ‚Äî and therefore network revenues ‚Äî from the ground up.
In our [first round](https://vitalik.ca/general/2021/11/16/retro1.html) of RetroPGF, Optimism funded a set of hugely valuable developer tools and core infrastructure.
The aggregate effect is an ecosystem that is easier to build on, learn about, and connect to, in turn driving application usage and generating more demand for blockspace.  
But what value do these public goods provide, and for whom is it valuable?
This is a rich design space.
Optimism‚Äôs governance is designed to create conditions for experimentation around this question.
The Foundation draws heavily on the work of Ostrom, Vitalik, and others to make sure funding for public goods is maximally efficient, effective, and safe.  
To start, Foundation governance is shared and divided through a two-house system, where network parameters for the amount of funding are controlled by both houses, but the governance of RetroPGF allocation is determined by a set of Citizens with local knowledge and skin in the game.  
Thoughtful allocation of public goods funding will create longterm value for builders, users, tokenholders, citizens and the entire Optimism Collective."
461,How is governance structured in the Optimism Foundation?,"The governance of the Optimism Foundation is shared and divided through a two-house system. Network parameters for the amount of funding are controlled by both houses, while the governance of RetroPGF allocation is determined by a set of Citizens with local knowledge and skin in the game.","Funding public goods drives growth ‚Äî and therefore network revenues ‚Äî from the ground up.
In our [first round](https://vitalik.ca/general/2021/11/16/retro1.html) of RetroPGF, Optimism funded a set of hugely valuable developer tools and core infrastructure.
The aggregate effect is an ecosystem that is easier to build on, learn about, and connect to, in turn driving application usage and generating more demand for blockspace.  
But what value do these public goods provide, and for whom is it valuable?
This is a rich design space.
Optimism‚Äôs governance is designed to create conditions for experimentation around this question.
The Foundation draws heavily on the work of Ostrom, Vitalik, and others to make sure funding for public goods is maximally efficient, effective, and safe.  
To start, Foundation governance is shared and divided through a two-house system, where network parameters for the amount of funding are controlled by both houses, but the governance of RetroPGF allocation is determined by a set of Citizens with local knowledge and skin in the game.  
Thoughtful allocation of public goods funding will create longterm value for builders, users, tokenholders, citizens and the entire Optimism Collective."
462,How can I participate in general governance discussions for Optimism?,You can join the #gov-general channel on the Optimism Discord server for general governance discussions.,"---
title: Existing Delegates
lang: en-US
---  
Thank you for being active in Optimism Token House Governance.  
As a delegate, you should:  
- Join the conversation in the below channels in our [Discord](https://discord-gateway.optimism.io/):
- [#gov-general](https://discord.com/channels/667044843901681675/968498307913637919): This channel is for general governance discussions.
- [#delegate-discussion](https://discord.com/channels/667044843901681675/989611992295813241): If you are a Top 100 delegate, join the conversation with other larger delegates to discuss proposals & the governance process. You can check your ranking [here](https://dune.com/optimismfnd/optimism-op-token-house)  
- Provide feedback on draft proposals in the [Proposals Discussion](https://gov.optimism.io/c/proposals/38) section of the Forum
- If you are a Top 100 delegate then you can also approve non-grant proposals. You can check your ranking [here](https://dune.com/optimismfnd/optimism-op-token-house).
Non-grant proposals need at least 4 approvals to move to a vote.
To approve a proposal post this phrase in a forum comment on Discourse:
> **I am an Optimism delegate with sufficient voting power and I believe this proposal is ready to move to a vote.**  
- Vote on non-grant proposals via the [Optimism Governance Portal](https://vote.optimism.io/).  
- Post your voting rationale in a [Delegate Communications Thread](https://gov.optimism.io/c/governance/41)  
- Join the community calls, which occur every other Tuesday at 1pm ET.
[The governance calendar](https://calendar.google.com/calendar/u/0/r?cid=Y180aHVpNzBpdG0wODllN3Q4cTUwaGVoMWtub0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t) shows which Tuesdays, and how to join the call. You can also check which Season and Cycle we're in on the calendar.  
- Stay up to date with voting cycles and general governance updates in the Governance section of the [Forum](https://gov.optimism.io/c/governance/41)."
462,What should I do if I am a Top 100 delegate and want to approve a non-grant proposal?,"If you are a Top 100 delegate, you can approve non-grant proposals by posting the phrase 'I am an Optimism delegate with sufficient voting power and I believe this proposal is ready to move to a vote' in a forum comment on Discourse. Non-grant proposals need at least 4 approvals to move to a vote.","---
title: Existing Delegates
lang: en-US
---  
Thank you for being active in Optimism Token House Governance.  
As a delegate, you should:  
- Join the conversation in the below channels in our [Discord](https://discord-gateway.optimism.io/):
- [#gov-general](https://discord.com/channels/667044843901681675/968498307913637919): This channel is for general governance discussions.
- [#delegate-discussion](https://discord.com/channels/667044843901681675/989611992295813241): If you are a Top 100 delegate, join the conversation with other larger delegates to discuss proposals & the governance process. You can check your ranking [here](https://dune.com/optimismfnd/optimism-op-token-house)  
- Provide feedback on draft proposals in the [Proposals Discussion](https://gov.optimism.io/c/proposals/38) section of the Forum
- If you are a Top 100 delegate then you can also approve non-grant proposals. You can check your ranking [here](https://dune.com/optimismfnd/optimism-op-token-house).
Non-grant proposals need at least 4 approvals to move to a vote.
To approve a proposal post this phrase in a forum comment on Discourse:
> **I am an Optimism delegate with sufficient voting power and I believe this proposal is ready to move to a vote.**  
- Vote on non-grant proposals via the [Optimism Governance Portal](https://vote.optimism.io/).  
- Post your voting rationale in a [Delegate Communications Thread](https://gov.optimism.io/c/governance/41)  
- Join the community calls, which occur every other Tuesday at 1pm ET.
[The governance calendar](https://calendar.google.com/calendar/u/0/r?cid=Y180aHVpNzBpdG0wODllN3Q4cTUwaGVoMWtub0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t) shows which Tuesdays, and how to join the call. You can also check which Season and Cycle we're in on the calendar.  
- Stay up to date with voting cycles and general governance updates in the Governance section of the [Forum](https://gov.optimism.io/c/governance/41)."
462,When and where do community calls for Optimism governance take place?,Community calls occur every other Tuesday at 1pm ET. You can check the governance calendar to see which Tuesdays the calls happen and how to join them.,"---
title: Existing Delegates
lang: en-US
---  
Thank you for being active in Optimism Token House Governance.  
As a delegate, you should:  
- Join the conversation in the below channels in our [Discord](https://discord-gateway.optimism.io/):
- [#gov-general](https://discord.com/channels/667044843901681675/968498307913637919): This channel is for general governance discussions.
- [#delegate-discussion](https://discord.com/channels/667044843901681675/989611992295813241): If you are a Top 100 delegate, join the conversation with other larger delegates to discuss proposals & the governance process. You can check your ranking [here](https://dune.com/optimismfnd/optimism-op-token-house)  
- Provide feedback on draft proposals in the [Proposals Discussion](https://gov.optimism.io/c/proposals/38) section of the Forum
- If you are a Top 100 delegate then you can also approve non-grant proposals. You can check your ranking [here](https://dune.com/optimismfnd/optimism-op-token-house).
Non-grant proposals need at least 4 approvals to move to a vote.
To approve a proposal post this phrase in a forum comment on Discourse:
> **I am an Optimism delegate with sufficient voting power and I believe this proposal is ready to move to a vote.**  
- Vote on non-grant proposals via the [Optimism Governance Portal](https://vote.optimism.io/).  
- Post your voting rationale in a [Delegate Communications Thread](https://gov.optimism.io/c/governance/41)  
- Join the community calls, which occur every other Tuesday at 1pm ET.
[The governance calendar](https://calendar.google.com/calendar/u/0/r?cid=Y180aHVpNzBpdG0wODllN3Q4cTUwaGVoMWtub0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t) shows which Tuesdays, and how to join the call. You can also check which Season and Cycle we're in on the calendar.  
- Stay up to date with voting cycles and general governance updates in the Governance section of the [Forum](https://gov.optimism.io/c/governance/41)."
463,How does the Optimism Collective support builders with grants?,"The Optimism Collective supports builders with two main types of grants: Collective grants, which are upfront grants for projects to be completed in the future, and Retro Funding, which are grants for projects that have already been completed based on their impact.","---
title: Get a Grant
lang: en-US
---  
There are several ways the Optimism Collective supports builders with grants. There are two main types of grants: Collective grants, which are upfront grants for projects to be completed in the future, and Retro Funding, which are grants for projects that have already been completed based on their impact.  
# Collective Grants  
Collective Grants are made in OP andsupport specific projects to be completed in the future. **All Mission Grants are locked for one year,** except growth experiments Grants which must pass OP directly through to the end-users.  
Grants will only be distributed upon completion of specified milestones. All Collective Grants are subject to the [Collective Grant Policies](https://gov.optimism.io/t/collective-grant-policies/5833).  
There are two main sources of Collective Grants."
463,What are Collective Grants?,"Collective Grants are made in OP (Optimism's token) and support specific projects to be completed in the future. These grants are distributed upon completion of specified milestones and are subject to the Collective Grant Policies. All Mission Grants are locked for one year, except for growth experiments Grants which must pass OP directly through to the end-users.","---
title: Get a Grant
lang: en-US
---  
There are several ways the Optimism Collective supports builders with grants. There are two main types of grants: Collective grants, which are upfront grants for projects to be completed in the future, and Retro Funding, which are grants for projects that have already been completed based on their impact.  
# Collective Grants  
Collective Grants are made in OP andsupport specific projects to be completed in the future. **All Mission Grants are locked for one year,** except growth experiments Grants which must pass OP directly through to the end-users.  
Grants will only be distributed upon completion of specified milestones. All Collective Grants are subject to the [Collective Grant Policies](https://gov.optimism.io/t/collective-grant-policies/5833).  
There are two main sources of Collective Grants."
463,What is Retro Funding?,"Retro Funding refers to grants given for projects that have already been completed, based on their impact.","---
title: Get a Grant
lang: en-US
---  
There are several ways the Optimism Collective supports builders with grants. There are two main types of grants: Collective grants, which are upfront grants for projects to be completed in the future, and Retro Funding, which are grants for projects that have already been completed based on their impact.  
# Collective Grants  
Collective Grants are made in OP andsupport specific projects to be completed in the future. **All Mission Grants are locked for one year,** except growth experiments Grants which must pass OP directly through to the end-users.  
Grants will only be distributed upon completion of specified milestones. All Collective Grants are subject to the [Collective Grant Policies](https://gov.optimism.io/t/collective-grant-policies/5833).  
There are two main sources of Collective Grants."
464,How can I find a list of available Mission Requests for Optimism?,You can view the full list of Mission Requests on the Optimism GitHub page. Just follow this [link](https://github.com/ethereum-optimism/ecosystem-contributions/issues?page=1&q=is%3Aissue+is%3Aopen+label%3A%22Delegate+Mission+Request%22) to see all open Mission Requests.,"[Missions](https://gov.optimism.io/t/token-house-missions/5881) are grants aligned with one of the[Collective Intents](https://gov.optimism.io/t/collective-intents-season-5/6883). Mission Requests are specified initiatives that can be completed start-to-finish (marked done within 12 months). Each Mission Request has a bounty of OP attached. The Foundation and the Top 100 Token House Delegates can issue Mission Requests. Any team can submit a Mission Application to fulfill a Request.  
- You can view the full list of Mission Requests**[here](https://github.com/ethereum-optimism/ecosystem-contributions/issues?page=1&q=is%3Aissue+is%3Aopen+label%3A%22Delegate+Mission+Request%22)**  
- Find an open Mission Request on the list that you‚Äôd like to work on.
- Submit your application via the application link or directly as a comment, as specified, on the**[Github Issue](https://github.com/ethereum-optimism/ecosystem-contributions/issues?page=1&q=is%3Aissue+is%3Aopen+label%3A%22Delegate+Mission+Request%22).** Each Mission Request will specify a submission and selection deadline.
- Delegate Mission Applications will be evaluated and selected by the Grants Council, with the help of the Developer Advisory Board. Foundation Mission Requests will be evaluated and selected by the Optimism Foundation.  
**How to apply**:  
- See the [Mission Application Guide](https://gov.optimism.io/t/mission-applicant-guide-how-to-submit-a-mission-application/6899) and visit the [Github](https://github.com/ethereum-optimism/ecosystem-contributions/issues?page=1&q=is%3Aissue+is%3Aopen+label%3A%22Delegate+Mission+Request%22)
- Ask any questions you have about Delegate Mission Requests in the # grants channel of our [Discord](https://discord-gateway.optimism.io/)"
464,Who evaluates and selects the Mission Applications for Optimism?,Delegate Mission Applications are evaluated and selected by the Grants Council with the help of the Developer Advisory Board. Foundation Mission Requests are evaluated and selected by the Optimism Foundation.,"[Missions](https://gov.optimism.io/t/token-house-missions/5881) are grants aligned with one of the[Collective Intents](https://gov.optimism.io/t/collective-intents-season-5/6883). Mission Requests are specified initiatives that can be completed start-to-finish (marked done within 12 months). Each Mission Request has a bounty of OP attached. The Foundation and the Top 100 Token House Delegates can issue Mission Requests. Any team can submit a Mission Application to fulfill a Request.  
- You can view the full list of Mission Requests**[here](https://github.com/ethereum-optimism/ecosystem-contributions/issues?page=1&q=is%3Aissue+is%3Aopen+label%3A%22Delegate+Mission+Request%22)**  
- Find an open Mission Request on the list that you‚Äôd like to work on.
- Submit your application via the application link or directly as a comment, as specified, on the**[Github Issue](https://github.com/ethereum-optimism/ecosystem-contributions/issues?page=1&q=is%3Aissue+is%3Aopen+label%3A%22Delegate+Mission+Request%22).** Each Mission Request will specify a submission and selection deadline.
- Delegate Mission Applications will be evaluated and selected by the Grants Council, with the help of the Developer Advisory Board. Foundation Mission Requests will be evaluated and selected by the Optimism Foundation.  
**How to apply**:  
- See the [Mission Application Guide](https://gov.optimism.io/t/mission-applicant-guide-how-to-submit-a-mission-application/6899) and visit the [Github](https://github.com/ethereum-optimism/ecosystem-contributions/issues?page=1&q=is%3Aissue+is%3Aopen+label%3A%22Delegate+Mission+Request%22)
- Ask any questions you have about Delegate Mission Requests in the # grants channel of our [Discord](https://discord-gateway.optimism.io/)"
464,Where can I ask questions if I have any doubts about Delegate Mission Requests?,You can ask any questions you have about Delegate Mission Requests in the #grants channel of the Optimism Discord. You can join the Discord through this [link](https://discord-gateway.optimism.io/).,"[Missions](https://gov.optimism.io/t/token-house-missions/5881) are grants aligned with one of the[Collective Intents](https://gov.optimism.io/t/collective-intents-season-5/6883). Mission Requests are specified initiatives that can be completed start-to-finish (marked done within 12 months). Each Mission Request has a bounty of OP attached. The Foundation and the Top 100 Token House Delegates can issue Mission Requests. Any team can submit a Mission Application to fulfill a Request.  
- You can view the full list of Mission Requests**[here](https://github.com/ethereum-optimism/ecosystem-contributions/issues?page=1&q=is%3Aissue+is%3Aopen+label%3A%22Delegate+Mission+Request%22)**  
- Find an open Mission Request on the list that you‚Äôd like to work on.
- Submit your application via the application link or directly as a comment, as specified, on the**[Github Issue](https://github.com/ethereum-optimism/ecosystem-contributions/issues?page=1&q=is%3Aissue+is%3Aopen+label%3A%22Delegate+Mission+Request%22).** Each Mission Request will specify a submission and selection deadline.
- Delegate Mission Applications will be evaluated and selected by the Grants Council, with the help of the Developer Advisory Board. Foundation Mission Requests will be evaluated and selected by the Optimism Foundation.  
**How to apply**:  
- See the [Mission Application Guide](https://gov.optimism.io/t/mission-applicant-guide-how-to-submit-a-mission-application/6899) and visit the [Github](https://github.com/ethereum-optimism/ecosystem-contributions/issues?page=1&q=is%3Aissue+is%3Aopen+label%3A%22Delegate+Mission+Request%22)
- Ask any questions you have about Delegate Mission Requests in the # grants channel of our [Discord](https://discord-gateway.optimism.io/)"
465,How can projects or teams get initial funding to start building on Optimism?,"Projects or teams can get initial funding through the Seed Fund, which is used to bring projects from 0 to 1, especially those focused entirely on building Optimism.","The Foundation may also make grants from the Partner or Seed Fund, on a case-by-case basis.  
The Seed Fund may be used to bring projects/teams from 0 ‚Üí 1, particularly for projects that are entirely focused on building Optimism.  
The Partner Fund may make grants used to provide tooling to the Optimism community, bring applications to OP Mainnet, promote education, experiment with liquidity mining programs, drive consumer usage, and/or support Optimism‚Äôs governance system.  
# Retroactive Grants (Retro Funding)  
Retro Funding stands for Retroactive Public Goods Funding. Retro Funding rewards are allocated by the Citizens‚Äô House to reward work that has already been completed for its impact.  
If you‚Äôre working on something you believe is aligned with the Collective and you don‚Äôt need as much upfront certainty around scope of work, reward amount, or timing of rewards, you could be a good candidate for Retro Funding rewards.  
- Decisions on which projects receive rewards are made by the Citizens‚Äô House based on their assessment of each projects‚Äô positive impact to the Collective.
- The last round of Retro Funding (RetroPGF Round 3) rewarded developer tooling, community programs, builders, educational work, client teams, and much more. For more detail on past recipients, see this**[post](https://optimism.mirror.xyz/37Bgum6MfTJWDuE41CH9RXSH5KBm_RCL5zsSFeRZl4E)**.  
**How to apply**:  
- Build something that provides positive impact to the Collective and stay tuned for more information about the next round of Retro Funding! It‚Äôs that simple.
- Visit [retrofunding.optimism.io](https://retrofunding.optimism.io/) to apply!"
465,What is Retro Funding and who decides which projects receive it?,"Retro Funding, or Retroactive Public Goods Funding, rewards work that has already been completed based on its impact. The Citizens‚Äô House decides which projects receive these rewards based on their positive impact on the Collective.","The Foundation may also make grants from the Partner or Seed Fund, on a case-by-case basis.  
The Seed Fund may be used to bring projects/teams from 0 ‚Üí 1, particularly for projects that are entirely focused on building Optimism.  
The Partner Fund may make grants used to provide tooling to the Optimism community, bring applications to OP Mainnet, promote education, experiment with liquidity mining programs, drive consumer usage, and/or support Optimism‚Äôs governance system.  
# Retroactive Grants (Retro Funding)  
Retro Funding stands for Retroactive Public Goods Funding. Retro Funding rewards are allocated by the Citizens‚Äô House to reward work that has already been completed for its impact.  
If you‚Äôre working on something you believe is aligned with the Collective and you don‚Äôt need as much upfront certainty around scope of work, reward amount, or timing of rewards, you could be a good candidate for Retro Funding rewards.  
- Decisions on which projects receive rewards are made by the Citizens‚Äô House based on their assessment of each projects‚Äô positive impact to the Collective.
- The last round of Retro Funding (RetroPGF Round 3) rewarded developer tooling, community programs, builders, educational work, client teams, and much more. For more detail on past recipients, see this**[post](https://optimism.mirror.xyz/37Bgum6MfTJWDuE41CH9RXSH5KBm_RCL5zsSFeRZl4E)**.  
**How to apply**:  
- Build something that provides positive impact to the Collective and stay tuned for more information about the next round of Retro Funding! It‚Äôs that simple.
- Visit [retrofunding.optimism.io](https://retrofunding.optimism.io/) to apply!"
465,What types of projects have been rewarded in past rounds of Retro Funding?,"Past rounds of Retro Funding have rewarded developer tooling, community programs, builders, educational work, client teams, and more. For more details on past recipients, you can visit the provided post on Optimism's Mirror page.","The Foundation may also make grants from the Partner or Seed Fund, on a case-by-case basis.  
The Seed Fund may be used to bring projects/teams from 0 ‚Üí 1, particularly for projects that are entirely focused on building Optimism.  
The Partner Fund may make grants used to provide tooling to the Optimism community, bring applications to OP Mainnet, promote education, experiment with liquidity mining programs, drive consumer usage, and/or support Optimism‚Äôs governance system.  
# Retroactive Grants (Retro Funding)  
Retro Funding stands for Retroactive Public Goods Funding. Retro Funding rewards are allocated by the Citizens‚Äô House to reward work that has already been completed for its impact.  
If you‚Äôre working on something you believe is aligned with the Collective and you don‚Äôt need as much upfront certainty around scope of work, reward amount, or timing of rewards, you could be a good candidate for Retro Funding rewards.  
- Decisions on which projects receive rewards are made by the Citizens‚Äô House based on their assessment of each projects‚Äô positive impact to the Collective.
- The last round of Retro Funding (RetroPGF Round 3) rewarded developer tooling, community programs, builders, educational work, client teams, and much more. For more detail on past recipients, see this**[post](https://optimism.mirror.xyz/37Bgum6MfTJWDuE41CH9RXSH5KBm_RCL5zsSFeRZl4E)**.  
**How to apply**:  
- Build something that provides positive impact to the Collective and stay tuned for more information about the next round of Retro Funding! It‚Äôs that simple.
- Visit [retrofunding.optimism.io](https://retrofunding.optimism.io/) to apply!"
466,Where can I discuss the Governance Fund for Optimism?,You can discuss the Governance Fund for Optimism on the Optimism governance forum. Here is the link to the discussion thread: https://gov.optimism.io/t/governance-fund-discussion-thread/213.,"---
title: Governance Fund Overview
lang: en-US
---  
*[To discuss the Governance Fund, head to the Optimism governance forum](https://gov.optimism.io/t/governance-fund-discussion-thread/213)*."
467,How much of the total initial token supply is allocated to Optimism projects and communities?,"5.4% of the total initial token supply, which amounts to 231,928,234 OP, is allocated to Optimism projects and communities via the Governance Fund.","5.4% of the total initial token supply (231,928,234 OP) will be distributed to Optimism projects and communities via the Governance Fund.
The goal of the Governance Fund is to empower the OP community to proactively incentivize future growth of projects and communities in the Optimism ecosystem.
You can read more about the total allocation of OP in the [Allocations section](./allocations.md) of our [Governance docs](./README.md).  
The learn more about the purpose of the Governance Fund please read the [Governance Fund Charter](https://gov.optimism.io/t/governance-fund-charter/3944)."
467,What is the purpose of the Governance Fund in the Optimism ecosystem?,The purpose of the Governance Fund is to empower the OP community to proactively incentivize future growth of projects and communities within the Optimism ecosystem.,"5.4% of the total initial token supply (231,928,234 OP) will be distributed to Optimism projects and communities via the Governance Fund.
The goal of the Governance Fund is to empower the OP community to proactively incentivize future growth of projects and communities in the Optimism ecosystem.
You can read more about the total allocation of OP in the [Allocations section](./allocations.md) of our [Governance docs](./README.md).  
The learn more about the purpose of the Governance Fund please read the [Governance Fund Charter](https://gov.optimism.io/t/governance-fund-charter/3944)."
467,Where can I find more information about the total allocation of OP tokens?,You can find more information about the total allocation of OP tokens in the Allocations section of the Governance documentation.,"5.4% of the total initial token supply (231,928,234 OP) will be distributed to Optimism projects and communities via the Governance Fund.
The goal of the Governance Fund is to empower the OP community to proactively incentivize future growth of projects and communities in the Optimism ecosystem.
You can read more about the total allocation of OP in the [Allocations section](./allocations.md) of our [Governance docs](./README.md).  
The learn more about the purpose of the Governance Fund please read the [Governance Fund Charter](https://gov.optimism.io/t/governance-fund-charter/3944)."
468,How can I get a grant from Optimism?,"Phase 2 of Optimism's grant distribution will provide grants that align with Mission Requests. For further details on how to get a grant, you can visit the [Get a Grant](https://community.optimism.io/docs/governance/get-a-grant/) page.",Phase 2 will distribute grants that align with Mission Requests. Please see [Get a Grant](https://community.optimism.io/docs/governance/get-a-grant/) for further details.
469,How were the grants distributed in Phase 1 of the Optimism ecosystem?,Phase 1 distributed grants to various projects within the Optimism ecosystem. You can see the detailed distribution in the Governance Tracker.,"Phase 1 distributed grants to projects in the Optimism ecosystem.
You can see how Phase 1 grants have been distributed to date in [the Governance Tracker](https://docs.google.com/spreadsheets/d/1eaHOlWB34ij1KGsXdaNyTQg4tt1Pu2JurJsElBb6a8k/edit#gid=0).  
When a project gets a proposal approved, they are still eligible to apply for further proposals.
Projects are also encouraged to reference data from the success of their initial distribution to strengthen their case in future proposals."
469,Can a project apply for more grants after getting an initial proposal approved?,"Yes, when a project gets a proposal approved, they are still eligible to apply for further proposals.","Phase 1 distributed grants to projects in the Optimism ecosystem.
You can see how Phase 1 grants have been distributed to date in [the Governance Tracker](https://docs.google.com/spreadsheets/d/1eaHOlWB34ij1KGsXdaNyTQg4tt1Pu2JurJsElBb6a8k/edit#gid=0).  
When a project gets a proposal approved, they are still eligible to apply for further proposals.
Projects are also encouraged to reference data from the success of their initial distribution to strengthen their case in future proposals."
469,How can projects strengthen their case for future proposals?,Projects are encouraged to reference data from the success of their initial distribution to strengthen their case in future proposals.,"Phase 1 distributed grants to projects in the Optimism ecosystem.
You can see how Phase 1 grants have been distributed to date in [the Governance Tracker](https://docs.google.com/spreadsheets/d/1eaHOlWB34ij1KGsXdaNyTQg4tt1Pu2JurJsElBb6a8k/edit#gid=0).  
When a project gets a proposal approved, they are still eligible to apply for further proposals.
Projects are also encouraged to reference data from the success of their initial distribution to strengthen their case in future proposals."
470,How were the projects rewarded in Phase 0 of Optimism Governance chosen?,"Projects were rewarded based on a set of onchain metrics that were calculated using a snapshot of the OP Mainnet chain taken on April 1, 2022, at 12:00am UTC.","Phase 0 was designed to reward existing projects that have driven growth of the Optimism ecosystem.  
The amount of funding for each project was determined by a set of onchain metrics, calculated via a snapshot of the OP Mainnet chain on April 1, 2022 at 12:00am UTC.
To see live tracking on Gov Fund allocations, please see the [Public Distribution Tracker](https://docs.google.com/spreadsheets/d/1eaHOlWB34ij1KGsXdaNyTQg4tt1Pu2JurJsElBb6a8k/edit#gid=0)."
470,Where can I find live tracking information on the Gov Fund allocations for Optimism?,You can find live tracking information on the Gov Fund allocations by visiting the Public Distribution Tracker available [here](https://docs.google.com/spreadsheets/d/1eaHOlWB34ij1KGsXdaNyTQg4tt1Pu2JurJsElBb6a8k/edit#gid=0).,"Phase 0 was designed to reward existing projects that have driven growth of the Optimism ecosystem.  
The amount of funding for each project was determined by a set of onchain metrics, calculated via a snapshot of the OP Mainnet chain on April 1, 2022 at 12:00am UTC.
To see live tracking on Gov Fund allocations, please see the [Public Distribution Tracker](https://docs.google.com/spreadsheets/d/1eaHOlWB34ij1KGsXdaNyTQg4tt1Pu2JurJsElBb6a8k/edit#gid=0)."
471,How can I delegate my tokens in Optimism?,"To delegate your tokens in Optimism, you would need to follow the specific instructions provided in the 'How to Delegate Your Tokens' section of the Optimism Governance Documentation. This section will guide you through the necessary steps to delegate your tokens effectively.","---
title: How to Delegate Your Tokens
lang: en-US
---"
472,Can I delegate my voting power in Optimism governance to someone else?,"Yes, you can delegate the voting power of your OP tokens to a community member who has volunteered to play an active role in Token House governance. These volunteers are called delegates.","Participating in governance of the Optimism Token House can require a serious time commitment.
For this reason, people are able to delegate the voting power of their OP tokens to a community member who has explicitly volunteered to play an active role in Token House governance.
These volunteers are called delegates.  
If you do not wish to delegate your voting power to a representative, you will still need to delegate *to yourself* in order to vote."
472,What if I don't want to delegate my voting power to someone else?,"If you do not wish to delegate your voting power to a representative, you will still need to delegate it to yourself in order to vote.","Participating in governance of the Optimism Token House can require a serious time commitment.
For this reason, people are able to delegate the voting power of their OP tokens to a community member who has explicitly volunteered to play an active role in Token House governance.
These volunteers are called delegates.  
If you do not wish to delegate your voting power to a representative, you will still need to delegate *to yourself* in order to vote."
472,Is participating in Optimism governance time-consuming?,"Yes, participating in the governance of the Optimism Token House can require a serious time commitment.","Participating in governance of the Optimism Token House can require a serious time commitment.
For this reason, people are able to delegate the voting power of their OP tokens to a community member who has explicitly volunteered to play an active role in Token House governance.
These volunteers are called delegates.  
If you do not wish to delegate your voting power to a representative, you will still need to delegate *to yourself* in order to vote."
473,How do I choose a delegate for my OP tokens?,You can choose a delegate by reading through delegate statements of interest on the Optimism voting site. It's important to choose a delegate carefully because they will vote on your behalf. You can view top delegates by voting weight on Dune.,"1. [Choose a delegate](https://vote.optimism.io/delegates).  
Take the time to read through delegate statements of interest, choosing your delegate is an important decision!
A healthy governance system is good for Optimism and for all OP holders. Choosing a good delegate is in each OP token holder's best interest.  
This delegate will vote on your behalf.
You will not hold any voting power or execute your own votes but you will retain 100% ownership of your tokens, and can use them however you want.  
View top delegates by voting weight on [Dune](https://dune.com/optimismfnd/optimism-op-token-house).  
2. [Go to the voting app](https://vote.optimism.io/) to see that you‚Äôve delegated your tokens as intended.  
Please note that delegate voting power is measured at the start of every voting period, which is every three weeks.  
3. Your delegate should write up the reasoning behind their votes in a [Delegate Communications Thread](https://gov.optimism.io/c/governance/41).  
Delegation is always in your control. You can return to the [voting app](https://vote.optimism.io/) at any time to change your delegate selection."
473,What happens to my voting power when I delegate my OP tokens?,"When you delegate your OP tokens, you will not hold any voting power or execute your own votes, but you will retain 100% ownership of your tokens and can use them however you want.","1. [Choose a delegate](https://vote.optimism.io/delegates).  
Take the time to read through delegate statements of interest, choosing your delegate is an important decision!
A healthy governance system is good for Optimism and for all OP holders. Choosing a good delegate is in each OP token holder's best interest.  
This delegate will vote on your behalf.
You will not hold any voting power or execute your own votes but you will retain 100% ownership of your tokens, and can use them however you want.  
View top delegates by voting weight on [Dune](https://dune.com/optimismfnd/optimism-op-token-house).  
2. [Go to the voting app](https://vote.optimism.io/) to see that you‚Äôve delegated your tokens as intended.  
Please note that delegate voting power is measured at the start of every voting period, which is every three weeks.  
3. Your delegate should write up the reasoning behind their votes in a [Delegate Communications Thread](https://gov.optimism.io/c/governance/41).  
Delegation is always in your control. You can return to the [voting app](https://vote.optimism.io/) at any time to change your delegate selection."
473,Can I change my delegate after I have chosen one?,"Yes, you can change your delegate at any time by returning to the voting app. Delegation is always in your control.","1. [Choose a delegate](https://vote.optimism.io/delegates).  
Take the time to read through delegate statements of interest, choosing your delegate is an important decision!
A healthy governance system is good for Optimism and for all OP holders. Choosing a good delegate is in each OP token holder's best interest.  
This delegate will vote on your behalf.
You will not hold any voting power or execute your own votes but you will retain 100% ownership of your tokens, and can use them however you want.  
View top delegates by voting weight on [Dune](https://dune.com/optimismfnd/optimism-op-token-house).  
2. [Go to the voting app](https://vote.optimism.io/) to see that you‚Äôve delegated your tokens as intended.  
Please note that delegate voting power is measured at the start of every voting period, which is every three weeks.  
3. Your delegate should write up the reasoning behind their votes in a [Delegate Communications Thread](https://gov.optimism.io/c/governance/41).  
Delegation is always in your control. You can return to the [voting app](https://vote.optimism.io/) at any time to change your delegate selection."
474,How can I vote with my OP tokens?,"To vote with your OP tokens, you need to delegate them first. You can delegate to yourself by registering via the Optimism Governance Portal, connecting your wallet, and creating your delegate statement. Once you've done this, you can go to the voting app to see that you've delegated your tokens to your own address. After being added as a delegate in the next voting cycle, you can start voting.","Would you rather vote yourself?
No problem, but you‚Äôll have to delegate to yourself first!
If you try to vote with your tokens but have not delegated to yourself, you will not be able to vote.  
1. Delegate to yourself by registering via the [Optimism Governance Portal](https://vote.optimism.io/) by connecting your wallet then creating your delegate statement.  
1. [Go to the voting app](https://vote.optimism.io/) to see that you‚Äôve delegated your tokens to your own address.  
Please note that delegate voting power is measured at the start of every voting period, which is every three weeks.  
1. Once you‚Äôve been added as a delegate in the next voting cycle, you can start [voting](https://vote.optimism.io/)!
Go to the [Optimism Governance Portal](https://vote.optimism.io/), connect your wallet, and vote.
There is no minimum OP holding voting requirement, but you will need to have the OP tokens you wish to delegate or vote with in your wallet when the voting measurement is taken. Tokens that are staked or LP‚Äôd at the time of measurement do not carry voting power."
474,Is there a minimum amount of OP tokens required to vote?,"No, there is no minimum OP holding voting requirement. However, you need to have the OP tokens you wish to delegate or vote with in your wallet when the voting measurement is taken. Tokens that are staked or LP‚Äôd at the time of measurement do not carry voting power.","Would you rather vote yourself?
No problem, but you‚Äôll have to delegate to yourself first!
If you try to vote with your tokens but have not delegated to yourself, you will not be able to vote.  
1. Delegate to yourself by registering via the [Optimism Governance Portal](https://vote.optimism.io/) by connecting your wallet then creating your delegate statement.  
1. [Go to the voting app](https://vote.optimism.io/) to see that you‚Äôve delegated your tokens to your own address.  
Please note that delegate voting power is measured at the start of every voting period, which is every three weeks.  
1. Once you‚Äôve been added as a delegate in the next voting cycle, you can start [voting](https://vote.optimism.io/)!
Go to the [Optimism Governance Portal](https://vote.optimism.io/), connect your wallet, and vote.
There is no minimum OP holding voting requirement, but you will need to have the OP tokens you wish to delegate or vote with in your wallet when the voting measurement is taken. Tokens that are staked or LP‚Äôd at the time of measurement do not carry voting power."
474,When is the delegate voting power measured?,"Delegate voting power is measured at the start of every voting period, which occurs every three weeks.","Would you rather vote yourself?
No problem, but you‚Äôll have to delegate to yourself first!
If you try to vote with your tokens but have not delegated to yourself, you will not be able to vote.  
1. Delegate to yourself by registering via the [Optimism Governance Portal](https://vote.optimism.io/) by connecting your wallet then creating your delegate statement.  
1. [Go to the voting app](https://vote.optimism.io/) to see that you‚Äôve delegated your tokens to your own address.  
Please note that delegate voting power is measured at the start of every voting period, which is every three weeks.  
1. Once you‚Äôve been added as a delegate in the next voting cycle, you can start [voting](https://vote.optimism.io/)!
Go to the [Optimism Governance Portal](https://vote.optimism.io/), connect your wallet, and vote.
There is no minimum OP holding voting requirement, but you will need to have the OP tokens you wish to delegate or vote with in your wallet when the voting measurement is taken. Tokens that are staked or LP‚Äôd at the time of measurement do not carry voting power."
475,Is the Law of Chains a legally binding contract?,"No, the Law of Chains is not a legally binding contract. It is a set of guidelines intended to guide Optimism Governance and participants in the Optimism Collective. It does not provide legally enforceable warranties, rights, or obligations.","---
title: Law of Chains Disclaimer
lang: en-US
---  
::: tip Important  
The [Law of Chains](https://gov.optimism.io/t/law-of-chains-v0-1-full-draft/6514) is fundamentally social in nature, intended to guide Optimism Governance and participants in the Optimism Collective. It is not a legal contract, and provides no legally enforceable warranties, representations, indemnities, rights, or obligations.  Participants commit to the Law of Chains independently.  No party acquires the ability to bind the other by virtue of their shared commitment to these guidelines.  
:::  
The Law of Chains is intended to provide guidance to ecosystem participants.  It does not establish any legally enforceable rights or obligations.  Its contents do not have the effect of law and are not meant to legally bind the public or any person in any way.  
For example, the Law of Chains presents a concept of ‚ÄúParticipant Protections.‚Äù  This framing is intended to reflect elevated importance; a matter of principle. But Participant Protections are not, and do not create, legal rights, or corresponding legal obligations. They are not absolutely guaranteed to any ecosystem participant.  
If Participant Protections are violated, one may appeal to Optimism Governance.  This is like saying: ‚Äúone may appeal to the democratic process.‚Äù  Optimism Governance is not a legal entity or a singular adjudicative body.  It is a collection of many unaffiliated, independent, and uncoordinated individual voters.  Its outcomes cannot be guaranteed.  
Relatedly, participants that subscribe to the Law of Chains do so independently, and they conduct themselves independently under it, bearing their own risks and rewards. No party acquires the ability to contractually bind the other by virtue of their shared commitment to these guidelines. The Law of Chains does not create a partnership, joint venture, employment, franchise, or agency relationship among anyone.  
The Law of Chains is a set of guidelines.  It is not a contract.  If you need legally enforceable guarantees from specific people or entities, you need some kind of specific contract with them. This document, standing alone, is not that.  For more information, see Law Chains, Section 8 (Enforcement).  
Last Updated:  July 25, 2023"
475,What should I do if I believe Participant Protections have been violated?,"If you believe Participant Protections have been violated, you can appeal to Optimism Governance. However, it's important to note that Optimism Governance is a collection of independent voters and not a legal entity, so its outcomes cannot be guaranteed.","---
title: Law of Chains Disclaimer
lang: en-US
---  
::: tip Important  
The [Law of Chains](https://gov.optimism.io/t/law-of-chains-v0-1-full-draft/6514) is fundamentally social in nature, intended to guide Optimism Governance and participants in the Optimism Collective. It is not a legal contract, and provides no legally enforceable warranties, representations, indemnities, rights, or obligations.  Participants commit to the Law of Chains independently.  No party acquires the ability to bind the other by virtue of their shared commitment to these guidelines.  
:::  
The Law of Chains is intended to provide guidance to ecosystem participants.  It does not establish any legally enforceable rights or obligations.  Its contents do not have the effect of law and are not meant to legally bind the public or any person in any way.  
For example, the Law of Chains presents a concept of ‚ÄúParticipant Protections.‚Äù  This framing is intended to reflect elevated importance; a matter of principle. But Participant Protections are not, and do not create, legal rights, or corresponding legal obligations. They are not absolutely guaranteed to any ecosystem participant.  
If Participant Protections are violated, one may appeal to Optimism Governance.  This is like saying: ‚Äúone may appeal to the democratic process.‚Äù  Optimism Governance is not a legal entity or a singular adjudicative body.  It is a collection of many unaffiliated, independent, and uncoordinated individual voters.  Its outcomes cannot be guaranteed.  
Relatedly, participants that subscribe to the Law of Chains do so independently, and they conduct themselves independently under it, bearing their own risks and rewards. No party acquires the ability to contractually bind the other by virtue of their shared commitment to these guidelines. The Law of Chains does not create a partnership, joint venture, employment, franchise, or agency relationship among anyone.  
The Law of Chains is a set of guidelines.  It is not a contract.  If you need legally enforceable guarantees from specific people or entities, you need some kind of specific contract with them. This document, standing alone, is not that.  For more information, see Law Chains, Section 8 (Enforcement).  
Last Updated:  July 25, 2023"
475,Does the Law of Chains create any formal relationships like partnerships or employment?,"No, the Law of Chains does not create any formal relationships such as partnerships, joint ventures, employment, franchises, or agency relationships among participants. Each participant conducts themselves independently and bears their own risks and rewards.","---
title: Law of Chains Disclaimer
lang: en-US
---  
::: tip Important  
The [Law of Chains](https://gov.optimism.io/t/law-of-chains-v0-1-full-draft/6514) is fundamentally social in nature, intended to guide Optimism Governance and participants in the Optimism Collective. It is not a legal contract, and provides no legally enforceable warranties, representations, indemnities, rights, or obligations.  Participants commit to the Law of Chains independently.  No party acquires the ability to bind the other by virtue of their shared commitment to these guidelines.  
:::  
The Law of Chains is intended to provide guidance to ecosystem participants.  It does not establish any legally enforceable rights or obligations.  Its contents do not have the effect of law and are not meant to legally bind the public or any person in any way.  
For example, the Law of Chains presents a concept of ‚ÄúParticipant Protections.‚Äù  This framing is intended to reflect elevated importance; a matter of principle. But Participant Protections are not, and do not create, legal rights, or corresponding legal obligations. They are not absolutely guaranteed to any ecosystem participant.  
If Participant Protections are violated, one may appeal to Optimism Governance.  This is like saying: ‚Äúone may appeal to the democratic process.‚Äù  Optimism Governance is not a legal entity or a singular adjudicative body.  It is a collection of many unaffiliated, independent, and uncoordinated individual voters.  Its outcomes cannot be guaranteed.  
Relatedly, participants that subscribe to the Law of Chains do so independently, and they conduct themselves independently under it, bearing their own risks and rewards. No party acquires the ability to contractually bind the other by virtue of their shared commitment to these guidelines. The Law of Chains does not create a partnership, joint venture, employment, franchise, or agency relationship among anyone.  
The Law of Chains is a set of guidelines.  It is not a contract.  If you need legally enforceable guarantees from specific people or entities, you need some kind of specific contract with them. This document, standing alone, is not that.  For more information, see Law Chains, Section 8 (Enforcement).  
Last Updated:  July 25, 2023"
476,Where can I find videos related to governance for Optimism?,You can find governance videos in the Governance Videos section of the Optimism Governance Documentation.,"---
title: Governance Videos
lang: en-US
---  
These are governance videos.
[See here for developer videos](../developers/media.md)."
476,Are there any videos available for developers?,"Yes, you can find developer videos by following the link provided in the Governance Videos section to the developers' media page.","---
title: Governance Videos
lang: en-US
---  
These are governance videos.
[See here for developer videos](../developers/media.md)."
477,Was there an event related to Optimism in early 2023?,"Yes, there was an event related to Optimism at ETHDenver 2023, which took place from February 24th to March 5th, 2023.","February 24th to Mar 5th, 2023  
<iframe width=""682"" height=""384"" src=""https://www.youtube.com/embed/Q5TL_AJhuro"" title=""Optimism at ETHDenver 2023"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
477,Is there a video available about Optimism at ETHDenver 2023?,"Yes, there is a video available about Optimism at ETHDenver 2023. You can watch it on YouTube.","February 24th to Mar 5th, 2023  
<iframe width=""682"" height=""384"" src=""https://www.youtube.com/embed/Q5TL_AJhuro"" title=""Optimism at ETHDenver 2023"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
477,When did the Optimism event at ETHDenver 2023 take place?,"The Optimism event at ETHDenver 2023 took place from February 24th to March 5th, 2023.","February 24th to Mar 5th, 2023  
<iframe width=""682"" height=""384"" src=""https://www.youtube.com/embed/Q5TL_AJhuro"" title=""Optimism at ETHDenver 2023"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
478,Who is featured in the video discussing Optimism governance?,Justine from the Optimism Foundation is featured in the video discussing Optimism governance.,"In this video Justine from the Optimism Foundation talks to delegates involved with Optimism governance about their experience thus far.
The talk touches on a few different Optimism governance initiatives including the Grants Council and Protocol Delegate Program, with the overall theme being the iterative nature of Optimism governance.  
<iframe width=""682"" height=""360"" src=""https://www.youtube.com/embed/I18fHyVpFg0"" title=""The Iterative Nature of Optimism Governance"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
478,What are some of the initiatives mentioned in the video related to Optimism governance?,The video mentions the Grants Council and the Protocol Delegate Program as part of the Optimism governance initiatives.,"In this video Justine from the Optimism Foundation talks to delegates involved with Optimism governance about their experience thus far.
The talk touches on a few different Optimism governance initiatives including the Grants Council and Protocol Delegate Program, with the overall theme being the iterative nature of Optimism governance.  
<iframe width=""682"" height=""360"" src=""https://www.youtube.com/embed/I18fHyVpFg0"" title=""The Iterative Nature of Optimism Governance"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
478,What is the main theme of the video about Optimism governance?,The main theme of the video is the iterative nature of Optimism governance.,"In this video Justine from the Optimism Foundation talks to delegates involved with Optimism governance about their experience thus far.
The talk touches on a few different Optimism governance initiatives including the Grants Council and Protocol Delegate Program, with the overall theme being the iterative nature of Optimism governance.  
<iframe width=""682"" height=""360"" src=""https://www.youtube.com/embed/I18fHyVpFg0"" title=""The Iterative Nature of Optimism Governance"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
479,Where can I find Justine's research on DAO governance and policy?,"You can find Justine's research on DAO governance and policy in The Collective DAO Archives, which is a searchable library of DAO policies, programs, and processes. The archives are available online and you can access them through this link: [The Collective DAO Archives](https://plaid-cement-e44.notion.site/The-Collective-DAO-Archives-Governance-Library-a58c6a2567c34636bc425ac97c7c9a79).","At both ETHDenver, and Schelling Point, Justine shared findings from her months long research into DAO governance and policy. Not only did she organize her research results into 10 categories and bless us with actionable takeaways for each, she also open sourced her work! Check out her presentation and dive into [The Collective DAO Archives](https://plaid-cement-e44.notion.site/The-Collective-DAO-Archives-Governance-Library-a58c6a2567c34636bc425ac97c7c9a79), a searchable library of DAO policies, programs, and processes.  
<iframe width=""720"" height=""407"" src=""https://www.youtube.com/embed/-szn6codPOk"" title=""The Collective DAO Archives by Justine Humenansky"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
479,What did Justine do with her research findings on DAO governance?,"Justine organized her research findings into 10 categories and provided actionable takeaways for each. She also open-sourced her work, making it accessible to the public.","At both ETHDenver, and Schelling Point, Justine shared findings from her months long research into DAO governance and policy. Not only did she organize her research results into 10 categories and bless us with actionable takeaways for each, she also open sourced her work! Check out her presentation and dive into [The Collective DAO Archives](https://plaid-cement-e44.notion.site/The-Collective-DAO-Archives-Governance-Library-a58c6a2567c34636bc425ac97c7c9a79), a searchable library of DAO policies, programs, and processes.  
<iframe width=""720"" height=""407"" src=""https://www.youtube.com/embed/-szn6codPOk"" title=""The Collective DAO Archives by Justine Humenansky"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
479,Is there a video presentation of Justine's findings on DAO governance?,"Yes, there is a video presentation of Justine's findings on DAO governance. You can watch it on YouTube through this link: [The Collective DAO Archives by Justine Humenansky](https://www.youtube.com/embed/-szn6codPOk).","At both ETHDenver, and Schelling Point, Justine shared findings from her months long research into DAO governance and policy. Not only did she organize her research results into 10 categories and bless us with actionable takeaways for each, she also open sourced her work! Check out her presentation and dive into [The Collective DAO Archives](https://plaid-cement-e44.notion.site/The-Collective-DAO-Archives-Governance-Library-a58c6a2567c34636bc425ac97c7c9a79), a searchable library of DAO policies, programs, and processes.  
<iframe width=""720"" height=""407"" src=""https://www.youtube.com/embed/-szn6codPOk"" title=""The Collective DAO Archives by Justine Humenansky"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
480,Who is Ben Jones and what is his role in the Optimism ecosystem?,"Ben Jones, also known as Weird ETH Yankovic, is a key figure who discusses all things related to RetroPGF and how the OP Stack fits into the broader Ethereum ecosystem.","The OP Stack, the codebase that powers Optimism, is the most overpowered public good in the game. But don‚Äôt take our word for it; you can take Ben Jones‚Äô - aka Weird ETH Yankovic - who covered all things RetroPGF and how the OP Stack fits into the broader Ethereum ecosystem.  
<iframe width=""720"" height=""407"" src=""https://www.youtube.com/embed/Ll-iAJeueG4"" title=""Playing the Cooperative Game, ‚ôªÔ∏èüî¥‚ú®Retroactively‚ú®üî¥‚ôªÔ∏è with Ben Jones"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
480,What is the OP Stack?,The OP Stack is the codebase that powers Optimism and is considered a highly valuable public good within the Ethereum ecosystem.,"The OP Stack, the codebase that powers Optimism, is the most overpowered public good in the game. But don‚Äôt take our word for it; you can take Ben Jones‚Äô - aka Weird ETH Yankovic - who covered all things RetroPGF and how the OP Stack fits into the broader Ethereum ecosystem.  
<iframe width=""720"" height=""407"" src=""https://www.youtube.com/embed/Ll-iAJeueG4"" title=""Playing the Cooperative Game, ‚ôªÔ∏èüî¥‚ú®Retroactively‚ú®üî¥‚ôªÔ∏è with Ben Jones"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
480,How can I learn more about the OP Stack and its role in the Ethereum ecosystem?,"You can watch a video featuring Ben Jones, where he covers all things RetroPGF and explains how the OP Stack fits into the broader Ethereum ecosystem. The video is available on YouTube.","The OP Stack, the codebase that powers Optimism, is the most overpowered public good in the game. But don‚Äôt take our word for it; you can take Ben Jones‚Äô - aka Weird ETH Yankovic - who covered all things RetroPGF and how the OP Stack fits into the broader Ethereum ecosystem.  
<iframe width=""720"" height=""407"" src=""https://www.youtube.com/embed/Ll-iAJeueG4"" title=""Playing the Cooperative Game, ‚ôªÔ∏èüî¥‚ú®Retroactively‚ú®üî¥‚ôªÔ∏è with Ben Jones"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"" allowfullscreen></iframe>"
482,Where can I find the official guidelines for submitting proposals in Optimism governance?,"The official guidelines for submitting proposals in Optimism governance can be found in the Operating Manual, which is available on GitHub at this link: https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#proposal-process--components-of-a-valid-proposal.","---
title: Submitting Proposals
lang: en-US
---  
::: tip This information is here for your convenience  
The source of truth for all governance related processes is the [Operating Manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#proposal-process--components-of-a-valid-proposal).  
:::"
482,Is the information in the documentation fragment the most reliable source for governance processes?,"No, the most reliable source for governance processes is the Operating Manual on GitHub. The information in the documentation fragment is provided for convenience, but the Operating Manual is the source of truth.","---
title: Submitting Proposals
lang: en-US
---  
::: tip This information is here for your convenience  
The source of truth for all governance related processes is the [Operating Manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#proposal-process--components-of-a-valid-proposal).  
:::"
483,How can I apply for grant funding from the Governance Fund?,You can apply for grant funding from the Governance Fund by submitting an application to a Mission Request. Your application will be evaluated by the Optimism Grants Council or Foundation.,You can apply for grant funding from the Governance Fund by submitting an [Application](https://gov.optimism.io/t/mission-applicant-guide-how-to-submit-a-mission-application/6899) to a Mission Request which will be evaluated by theOptimism Grants Council or Foundation.
483,Where can I find the application form for the Governance Fund?,You can find the application form for the Governance Fund by following the link provided in the documentation: [Application](https://gov.optimism.io/t/mission-applicant-guide-how-to-submit-a-mission-application/6899).,You can apply for grant funding from the Governance Fund by submitting an [Application](https://gov.optimism.io/t/mission-applicant-guide-how-to-submit-a-mission-application/6899) to a Mission Request which will be evaluated by theOptimism Grants Council or Foundation.
484,Do I need to hold a minimum amount of tokens to submit a proposal?,"No, there is no minimum holding requirement for submitting a proposal.","There are [other types of proposals](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#valid-proposal-types) that you can submit.  
There is no minimum holding requirement for submitting a proposal but all non-grant proposals must be approved by four delegates with sufficient voting power to move to a vote (as defined in [the operating manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#valid-proposal-types)).  
The process for submitting non-grant proposals is outlined in the [the operating manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#valid-proposal-types)"
484,What is required for a non-grant proposal to move to a vote?,All non-grant proposals must be approved by four delegates with sufficient voting power to move to a vote.,"There are [other types of proposals](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#valid-proposal-types) that you can submit.  
There is no minimum holding requirement for submitting a proposal but all non-grant proposals must be approved by four delegates with sufficient voting power to move to a vote (as defined in [the operating manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#valid-proposal-types)).  
The process for submitting non-grant proposals is outlined in the [the operating manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#valid-proposal-types)"
484,Where can I find the process for submitting non-grant proposals?,The process for submitting non-grant proposals is outlined in the operating manual.,"There are [other types of proposals](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#valid-proposal-types) that you can submit.  
There is no minimum holding requirement for submitting a proposal but all non-grant proposals must be approved by four delegates with sufficient voting power to move to a vote (as defined in [the operating manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#valid-proposal-types)).  
The process for submitting non-grant proposals is outlined in the [the operating manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md#valid-proposal-types)"
485,What's Retroactive Public Goods Funding (Retro Funding) in the context of Optimism?,Retroactive Public Goods Funding (Retro Funding) is a mechanism used by the Optimism Collective to allocate funds to projects that have already provided value to the Optimistic Ethereum ecosystem. The idea is to reward past contributions that have positively impacted the ecosystem.,"---
title: RetroPGF Round 1
lang: en-US
---  
The Optimism Collective‚Äôs first round of Retroactive Public Goods Funding (Retro Funding) took place in Q4 of 2021.
This round was the first Retro Funding  experiment of the collective and was [announced](https://medium.com/ethereum-optimism/retropgf-experiment-1-1-million-dollars-for-public-goods-f7e455cbdca) in the months following the [initial blog post on Retroactive Public Goods Funding](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c).
Retro Funding 1 allocated $1M to **fund projects that have provided value to the Optimistic Ethereum ecosystem.**"
485,When did the first round of Retro Funding take place?,The first round of Retro Funding took place in the fourth quarter (Q4) of 2021.,"---
title: RetroPGF Round 1
lang: en-US
---  
The Optimism Collective‚Äôs first round of Retroactive Public Goods Funding (Retro Funding) took place in Q4 of 2021.
This round was the first Retro Funding  experiment of the collective and was [announced](https://medium.com/ethereum-optimism/retropgf-experiment-1-1-million-dollars-for-public-goods-f7e455cbdca) in the months following the [initial blog post on Retroactive Public Goods Funding](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c).
Retro Funding 1 allocated $1M to **fund projects that have provided value to the Optimistic Ethereum ecosystem.**"
485,How much money was allocated in the first round of Retro Funding?,"In the first round of Retro Funding, $1 million was allocated to fund projects that have provided value to the Optimistic Ethereum ecosystem.","---
title: RetroPGF Round 1
lang: en-US
---  
The Optimism Collective‚Äôs first round of Retroactive Public Goods Funding (Retro Funding) took place in Q4 of 2021.
This round was the first Retro Funding  experiment of the collective and was [announced](https://medium.com/ethereum-optimism/retropgf-experiment-1-1-million-dollars-for-public-goods-f7e455cbdca) in the months following the [initial blog post on Retroactive Public Goods Funding](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c).
Retro Funding 1 allocated $1M to **fund projects that have provided value to the Optimistic Ethereum ecosystem.**"
486,How many projects were awarded funding in the first round of Retro Funding?,"In the first round of Retro Funding, 58 projects were awarded funding by the badgeholders.","In the first round of Retro Funding, 76 projects were nominated, and 58 were awarded funding by the badgeholders!
The median funding received by a project in Retro Funding 1 was $14,670, while the top 10% of projects received more than $36,919.  
- You can find a sheet with all projects and their funding allocations [**here**](https://docs.google.com/spreadsheets/d/1g4ilAByMNQsmlBC8cskQip7Ojd_qK6IhozJCyoVfU9k).
- You can find Vitalik's review of the round [**here**](https://vitalik.ca/general/2021/11/16/retro1.html)"
486,What was the median funding amount received by a project in Retro Funding 1?,"The median funding received by a project in Retro Funding 1 was $14,670.","In the first round of Retro Funding, 76 projects were nominated, and 58 were awarded funding by the badgeholders!
The median funding received by a project in Retro Funding 1 was $14,670, while the top 10% of projects received more than $36,919.  
- You can find a sheet with all projects and their funding allocations [**here**](https://docs.google.com/spreadsheets/d/1g4ilAByMNQsmlBC8cskQip7Ojd_qK6IhozJCyoVfU9k).
- You can find Vitalik's review of the round [**here**](https://vitalik.ca/general/2021/11/16/retro1.html)"
486,Where can I find a detailed list of all projects and their funding allocations for Retro Funding 1?,You can find a sheet with all projects and their funding allocations [here](https://docs.google.com/spreadsheets/d/1g4ilAByMNQsmlBC8cskQip7Ojd_qK6IhozJCyoVfU9k).,"In the first round of Retro Funding, 76 projects were nominated, and 58 were awarded funding by the badgeholders!
The median funding received by a project in Retro Funding 1 was $14,670, while the top 10% of projects received more than $36,919.  
- You can find a sheet with all projects and their funding allocations [**here**](https://docs.google.com/spreadsheets/d/1g4ilAByMNQsmlBC8cskQip7Ojd_qK6IhozJCyoVfU9k).
- You can find Vitalik's review of the round [**here**](https://vitalik.ca/general/2021/11/16/retro1.html)"
487,Who were the badgeholders in RetroPGF Round 1?,"In RetroPGF Round 1, there were 24 badgeholders, consisting of 8 Optimists and 16 Ethereum community members.","1. Badgeholder selection - In RetroPGF Round 1, 24 badgeholders, made up of 8 Optimists and 16 Ethereum community members, were selected to vote on distributing retrofunding to nominated projects.
2. Nominations (Oct 5th - Oct 21st) - anyone could [nominate a project via a form submission](https://docs.google.com/forms/d/e/1FAIpQLSdSF_Om4JfhQAjdDOHnjfbRJfJg1F-EY_I_IR0g-CDaa9FqyQ/viewform?vc=0&c=0&w=1&flr=0) by providing a project name, project lead name, project lead e-mail and impact description.
3. Voting (Oct 24th - Nov 1st) - Badgeholders were provided with a [badgeholder manual](https://www.notion.so/Public-Badge-Holder-Manual-d05c3695ef684d1fb62ef38690fb3ff7) and asked to evaluate and vote on nominated projects via [quadraticvote.co's interface](https://quadraticvote.co/event?id=2c357972-9b0d-4390-b738-32297b653cf1)."
487,How could someone nominate a project for RetroPGF Round 1?,"Anyone could nominate a project by submitting a form that included the project name, project lead name, project lead e-mail, and an impact description.","1. Badgeholder selection - In RetroPGF Round 1, 24 badgeholders, made up of 8 Optimists and 16 Ethereum community members, were selected to vote on distributing retrofunding to nominated projects.
2. Nominations (Oct 5th - Oct 21st) - anyone could [nominate a project via a form submission](https://docs.google.com/forms/d/e/1FAIpQLSdSF_Om4JfhQAjdDOHnjfbRJfJg1F-EY_I_IR0g-CDaa9FqyQ/viewform?vc=0&c=0&w=1&flr=0) by providing a project name, project lead name, project lead e-mail and impact description.
3. Voting (Oct 24th - Nov 1st) - Badgeholders were provided with a [badgeholder manual](https://www.notion.so/Public-Badge-Holder-Manual-d05c3695ef684d1fb62ef38690fb3ff7) and asked to evaluate and vote on nominated projects via [quadraticvote.co's interface](https://quadraticvote.co/event?id=2c357972-9b0d-4390-b738-32297b653cf1)."
487,When did the voting for RetroPGF Round 1 take place?,The voting for RetroPGF Round 1 took place from October 24th to November 1st.,"1. Badgeholder selection - In RetroPGF Round 1, 24 badgeholders, made up of 8 Optimists and 16 Ethereum community members, were selected to vote on distributing retrofunding to nominated projects.
2. Nominations (Oct 5th - Oct 21st) - anyone could [nominate a project via a form submission](https://docs.google.com/forms/d/e/1FAIpQLSdSF_Om4JfhQAjdDOHnjfbRJfJg1F-EY_I_IR0g-CDaa9FqyQ/viewform?vc=0&c=0&w=1&flr=0) by providing a project name, project lead name, project lead e-mail and impact description.
3. Voting (Oct 24th - Nov 1st) - Badgeholders were provided with a [badgeholder manual](https://www.notion.so/Public-Badge-Holder-Manual-d05c3695ef684d1fb62ef38690fb3ff7) and asked to evaluate and vote on nominated projects via [quadraticvote.co's interface](https://quadraticvote.co/event?id=2c357972-9b0d-4390-b738-32297b653cf1)."
488,What's the purpose of RetroPGF Round 2?,"RetroPGF Round 2 aims to fund public goods that support the development and usage of the OP Stack, aligning with Optimism's vision of rewarding positive impact to the collective with profit to the individual.","---
title: RetroPGF Round 2
lang: en-US
---  
The Optimism Collective‚Äôs second round of Retroactive Public Goods Funding (Retro Funding) took place in Q1 of 2023.
RetroPGF 2 allocated 10m OP tokens to **fund public goods that support development and usage of the OP Stack.**  
Optimism‚Äôs vision is to build a global system where positive impact to the collective is rewarded by profit to the individual.
Retro Funding is an experimental mechanism to realize this goal of **‚Äúimpact = profit‚Äù**.  
By funding public goods sustainably, the Collective can create a rich ecosystem and a better economy ‚ú®"
488,When did the second round of Retroactive Public Goods Funding take place?,The second round of Retroactive Public Goods Funding took place in the first quarter of 2023.,"---
title: RetroPGF Round 2
lang: en-US
---  
The Optimism Collective‚Äôs second round of Retroactive Public Goods Funding (Retro Funding) took place in Q1 of 2023.
RetroPGF 2 allocated 10m OP tokens to **fund public goods that support development and usage of the OP Stack.**  
Optimism‚Äôs vision is to build a global system where positive impact to the collective is rewarded by profit to the individual.
Retro Funding is an experimental mechanism to realize this goal of **‚Äúimpact = profit‚Äù**.  
By funding public goods sustainably, the Collective can create a rich ecosystem and a better economy ‚ú®"
488,How many OP tokens were allocated in RetroPGF Round 2?,RetroPGF Round 2 allocated 10 million OP tokens to fund public goods.,"---
title: RetroPGF Round 2
lang: en-US
---  
The Optimism Collective‚Äôs second round of Retroactive Public Goods Funding (Retro Funding) took place in Q1 of 2023.
RetroPGF 2 allocated 10m OP tokens to **fund public goods that support development and usage of the OP Stack.**  
Optimism‚Äôs vision is to build a global system where positive impact to the collective is rewarded by profit to the individual.
Retro Funding is an experimental mechanism to realize this goal of **‚Äúimpact = profit‚Äù**.  
By funding public goods sustainably, the Collective can create a rich ecosystem and a better economy ‚ú®"
489,How many people and projects were nominated in the second round of Retro Funding?,"In the second round of Retro Funding, 195 people and projects were nominated.","In this second round of Retro Funding, 195 people and projects were nominated, and all 195 were awarded funding by the badgeholders! While going above and beyond in assessing project impact badgeholders allocated their votes among 40 different projects on average. The median OP received by a project for RetroPGF 2 was 22,825, while the top 10% of projects received more than 140k OP.  
- You can find the write up on the results of round 2 [**here**](https://optimism.mirror.xyz/Upn_LtV2-3SviXgX_PE_LyA7YI00jQyoM1yf55ltvvI)
- You can find a sheet with all projects and their OP allocation [**here**](https://docs.google.com/spreadsheets/d/13QTVuv4HTTDBctRxuqngECUMc70QP4usbmcFT8XT-GI/edit?usp=sharing)."
489,How many projects were awarded funding in the second round of Retro Funding?,All 195 nominated people and projects were awarded funding by the badgeholders.,"In this second round of Retro Funding, 195 people and projects were nominated, and all 195 were awarded funding by the badgeholders! While going above and beyond in assessing project impact badgeholders allocated their votes among 40 different projects on average. The median OP received by a project for RetroPGF 2 was 22,825, while the top 10% of projects received more than 140k OP.  
- You can find the write up on the results of round 2 [**here**](https://optimism.mirror.xyz/Upn_LtV2-3SviXgX_PE_LyA7YI00jQyoM1yf55ltvvI)
- You can find a sheet with all projects and their OP allocation [**here**](https://docs.google.com/spreadsheets/d/13QTVuv4HTTDBctRxuqngECUMc70QP4usbmcFT8XT-GI/edit?usp=sharing)."
489,What was the median OP received by a project in RetroPGF 2?,"The median OP received by a project for RetroPGF 2 was 22,825.","In this second round of Retro Funding, 195 people and projects were nominated, and all 195 were awarded funding by the badgeholders! While going above and beyond in assessing project impact badgeholders allocated their votes among 40 different projects on average. The median OP received by a project for RetroPGF 2 was 22,825, while the top 10% of projects received more than 140k OP.  
- You can find the write up on the results of round 2 [**here**](https://optimism.mirror.xyz/Upn_LtV2-3SviXgX_PE_LyA7YI00jQyoM1yf55ltvvI)
- You can find a sheet with all projects and their OP allocation [**here**](https://docs.google.com/spreadsheets/d/13QTVuv4HTTDBctRxuqngECUMc70QP4usbmcFT8XT-GI/edit?usp=sharing)."
490,How are badgeholders selected for RetroPGF Round 2 in Optimism Governance?,"Badgeholders for RetroPGF Round 2 are selected through four different criteria: 14 were selected based on their participation in Round 1, 21 were selected by the Optimism Foundation, 10 were elected by Optimism‚Äôs Token House, and 29 were nominated by badgeholders from the previous three categories.","1. Badgeholder selection - badgeholders have the power to distribute OP tokens to projects. They‚Äôre instrumental in running an effective Retro Funding round. For RetroPGF Round 2, badgeholders were selected across four different criteria.
1. 14 badgeholders were selected based on their participation as badgeholders in [round one of RetroPGF](https://vitalik.ca/general/2021/11/16/retro1.html)
2. 21 badgeholders were selected by the Optimism Foundation
3. 10 badgeholders were [elected by Optimism‚Äôs Token House](https://snapshot.org/#/opcollective.eth/proposal/0x22d4c3ab56832de58c1774d1a0aeb61ba6dde8b16c0f8382f85d8935f3ee1f11)
4. 29 badge holders were nominated by badgeholders from the three categories above
2. Nominations (Jan 17 - Jan 31st) - anyone could [nominate a project on the forum](https://gov.optimism.io/t/nominations-for-retropgf2/4636) by providing a name, impact description and link to Github/Twitter
3. Project profile creation (Feb 7th - Feb 21st) - Projects had to [create a profile](https://app.optimism.io/retropgf-manager) where they were asked for general information, as well as a description of their project and its impact. Information provided by Projects can be viewed on the [Retro Funding discovery page](https://app.optimism.io/retropgf-discovery).
4. Voting (Mar 7th - Mar 21st) - Badgeholders were provided with a [badgeholder manual](https://www.notion.so/Optimism-RetroPGF-2-Badgeholder-Manual-11ef6cd63c254258a32246289f45925c) and asked to evaluate and vote on nominated projects via a voting form. (Mar 7th - Mar 21st)"
490,How can a project be nominated for RetroPGF Round 2?,"Anyone could nominate a project by providing a name, impact description, and a link to Github or Twitter on the Optimism forum between January 17th and January 31st.","1. Badgeholder selection - badgeholders have the power to distribute OP tokens to projects. They‚Äôre instrumental in running an effective Retro Funding round. For RetroPGF Round 2, badgeholders were selected across four different criteria.
1. 14 badgeholders were selected based on their participation as badgeholders in [round one of RetroPGF](https://vitalik.ca/general/2021/11/16/retro1.html)
2. 21 badgeholders were selected by the Optimism Foundation
3. 10 badgeholders were [elected by Optimism‚Äôs Token House](https://snapshot.org/#/opcollective.eth/proposal/0x22d4c3ab56832de58c1774d1a0aeb61ba6dde8b16c0f8382f85d8935f3ee1f11)
4. 29 badge holders were nominated by badgeholders from the three categories above
2. Nominations (Jan 17 - Jan 31st) - anyone could [nominate a project on the forum](https://gov.optimism.io/t/nominations-for-retropgf2/4636) by providing a name, impact description and link to Github/Twitter
3. Project profile creation (Feb 7th - Feb 21st) - Projects had to [create a profile](https://app.optimism.io/retropgf-manager) where they were asked for general information, as well as a description of their project and its impact. Information provided by Projects can be viewed on the [Retro Funding discovery page](https://app.optimism.io/retropgf-discovery).
4. Voting (Mar 7th - Mar 21st) - Badgeholders were provided with a [badgeholder manual](https://www.notion.so/Optimism-RetroPGF-2-Badgeholder-Manual-11ef6cd63c254258a32246289f45925c) and asked to evaluate and vote on nominated projects via a voting form. (Mar 7th - Mar 21st)"
490,What is the process for projects to participate in RetroPGF Round 2 after being nominated?,"Nominated projects need to create a profile on the Optimism platform between February 7th and February 21st, providing general information and a description of their project and its impact. This information can be viewed on the Retro Funding discovery page.","1. Badgeholder selection - badgeholders have the power to distribute OP tokens to projects. They‚Äôre instrumental in running an effective Retro Funding round. For RetroPGF Round 2, badgeholders were selected across four different criteria.
1. 14 badgeholders were selected based on their participation as badgeholders in [round one of RetroPGF](https://vitalik.ca/general/2021/11/16/retro1.html)
2. 21 badgeholders were selected by the Optimism Foundation
3. 10 badgeholders were [elected by Optimism‚Äôs Token House](https://snapshot.org/#/opcollective.eth/proposal/0x22d4c3ab56832de58c1774d1a0aeb61ba6dde8b16c0f8382f85d8935f3ee1f11)
4. 29 badge holders were nominated by badgeholders from the three categories above
2. Nominations (Jan 17 - Jan 31st) - anyone could [nominate a project on the forum](https://gov.optimism.io/t/nominations-for-retropgf2/4636) by providing a name, impact description and link to Github/Twitter
3. Project profile creation (Feb 7th - Feb 21st) - Projects had to [create a profile](https://app.optimism.io/retropgf-manager) where they were asked for general information, as well as a description of their project and its impact. Information provided by Projects can be viewed on the [Retro Funding discovery page](https://app.optimism.io/retropgf-discovery).
4. Voting (Mar 7th - Mar 21st) - Badgeholders were provided with a [badgeholder manual](https://www.notion.so/Optimism-RetroPGF-2-Badgeholder-Manual-11ef6cd63c254258a32246289f45925c) and asked to evaluate and vote on nominated projects via a voting form. (Mar 7th - Mar 21st)"
491,Where can I find information about the learnings and reflections from round 2 of Optimism Governance?,You can find an extensive write-up of the learnings and reflections of round 2 [here](https://optimism.mirror.xyz/7v1DehEY3dpRcYFhqWrVNc9Qj94H2L976LKlWH1FX-8).,You can find an extensive write-up of the learnings and reflections of round 2 [here](https://optimism.mirror.xyz/7v1DehEY3dpRcYFhqWrVNc9Qj94H2L976LKlWH1FX-8). These learnings will inform the design and execution of RetroPGF round 3.
491,How will the learnings from round 2 be used in Optimism Governance?,The learnings from round 2 will inform the design and execution of RetroPGF round 3.,You can find an extensive write-up of the learnings and reflections of round 2 [here](https://optimism.mirror.xyz/7v1DehEY3dpRcYFhqWrVNc9Qj94H2L976LKlWH1FX-8). These learnings will inform the design and execution of RetroPGF round 3.
492,What's RetroPGF Round 3?,"RetroPGF Round 3 is the third round of Retroactive Public Goods Funding by the Optimism Collective, which took place in the fall of 2023. It allocated 30 million OP tokens to reward contributions that have supported the development and adoption of Optimism.","---
title: RetroPGF Round 3
lang: en-US
---  
The Optimism Collective‚Äôs third round of Retroactive Public Goods Funding (Retro Funding) took place in the fall of 2023. RetroPGF 3 allocated 30m OP tokens to **reward contributions that have supported the development and adoption of Optimism.**"
492,When did RetroPGF Round 3 happen?,RetroPGF Round 3 took place in the fall of 2023.,"---
title: RetroPGF Round 3
lang: en-US
---  
The Optimism Collective‚Äôs third round of Retroactive Public Goods Funding (Retro Funding) took place in the fall of 2023. RetroPGF 3 allocated 30m OP tokens to **reward contributions that have supported the development and adoption of Optimism.**"
492,What was the purpose of RetroPGF Round 3?,The purpose of RetroPGF Round 3 was to allocate 30 million OP tokens to reward contributions that have supported the development and adoption of Optimism.,"---
title: RetroPGF Round 3
lang: en-US
---  
The Optimism Collective‚Äôs third round of Retroactive Public Goods Funding (Retro Funding) took place in the fall of 2023. RetroPGF 3 allocated 30m OP tokens to **reward contributions that have supported the development and adoption of Optimism.**"
493,How long is the project application period for Optimism Governance?,The project application period for Optimism Governance is from September 19th to October 23rd.,"1. Project Applications: September 19th - October 23rd
2. Voting: November 6th - December 7th
3. Results & Token Disbursement: January, 2024"
493,When does the voting period for Optimism Governance take place?,The voting period for Optimism Governance takes place from November 6th to December 7th.,"1. Project Applications: September 19th - October 23rd
2. Voting: November 6th - December 7th
3. Results & Token Disbursement: January, 2024"
493,When will the results and token disbursement be announced for Optimism Governance?,The results and token disbursement for Optimism Governance will be announced in January 2024.,"1. Project Applications: September 19th - October 23rd
2. Voting: November 6th - December 7th
3. Results & Token Disbursement: January, 2024"
494,Where can I find the announcement for the RetroPGF Round 3 recipients?,You can view the Mirror post announcing the RetroPGF Round 3 recipients [here](https://optimism.mirror.xyz/37Bgum6MfTJWDuE41CH9RXSH5KBm_RCL5zsSFeRZl4E).,"üëâ You can view the Mirror post announcing the RetroPGF Round 3 recipients [here](https://optimism.mirror.xyz/37Bgum6MfTJWDuE41CH9RXSH5KBm_RCL5zsSFeRZl4E) and the official results on [Agora](https://vote.optimism.io/retropgf/3).  
Retro Funding recipients must complete a KYC process with the Optimism Foundation. If you're a recipient, please direct questions or problems with the KYC & grant delivery process to compliance@optimism.io.  
You can view the written retrospective with the learnings & reflections on RetroPGF 3 [here](https://optimism.mirror.xyz/Bbu5M1mTNV2Z637QxOiF7Qt7R9hy6nxghbZiFbtZOBA)."
494,What should Retro Funding recipients do if they have questions or problems with the KYC & grant delivery process?,Retro Funding recipients should direct their questions or problems with the KYC & grant delivery process to compliance@optimism.io.,"üëâ You can view the Mirror post announcing the RetroPGF Round 3 recipients [here](https://optimism.mirror.xyz/37Bgum6MfTJWDuE41CH9RXSH5KBm_RCL5zsSFeRZl4E) and the official results on [Agora](https://vote.optimism.io/retropgf/3).  
Retro Funding recipients must complete a KYC process with the Optimism Foundation. If you're a recipient, please direct questions or problems with the KYC & grant delivery process to compliance@optimism.io.  
You can view the written retrospective with the learnings & reflections on RetroPGF 3 [here](https://optimism.mirror.xyz/Bbu5M1mTNV2Z637QxOiF7Qt7R9hy6nxghbZiFbtZOBA)."
494,Is there a place where I can read about the learnings and reflections on RetroPGF 3?,"Yes, you can view the written retrospective with the learnings & reflections on RetroPGF 3 [here](https://optimism.mirror.xyz/Bbu5M1mTNV2Z637QxOiF7Qt7R9hy6nxghbZiFbtZOBA).","üëâ You can view the Mirror post announcing the RetroPGF Round 3 recipients [here](https://optimism.mirror.xyz/37Bgum6MfTJWDuE41CH9RXSH5KBm_RCL5zsSFeRZl4E) and the official results on [Agora](https://vote.optimism.io/retropgf/3).  
Retro Funding recipients must complete a KYC process with the Optimism Foundation. If you're a recipient, please direct questions or problems with the KYC & grant delivery process to compliance@optimism.io.  
You can view the written retrospective with the learnings & reflections on RetroPGF 3 [here](https://optimism.mirror.xyz/Bbu5M1mTNV2Z637QxOiF7Qt7R9hy6nxghbZiFbtZOBA)."
495,How long was the voting period for RetroPGF 3?,The voting period for RetroPGF 3 was from November 6th to December 7th.,"üëâ Voting was live from November 6th - December 7th. There were two applications badgeholders could use to vote in RetroPGF 3:
- West - https://round3.optimism.io/
- Agora - https://vote.optimism.io/  
In addition, there's useful tooling that has been built to support badgeholders:
- [Pairwise](https://www.pairwise.vote/) - Gamifying list creation by categorizing applicants into small groups for experts' pairwise comparison.
- [OpenSource Observer](https://www.opensource.observer/) - An Analytics platform for impact metrics on Retro Funding applications  
Badgeholders can find all the information relevant for voting in the [Badgeholder Manual ](https://www.optimism.io/badgeholder-manual)"
495,What tools were available for badgeholders to vote in RetroPGF 3?,Badgeholders could use two applications to vote in RetroPGF 3: West (https://round3.optimism.io/) and Agora (https://vote.optimism.io/).,"üëâ Voting was live from November 6th - December 7th. There were two applications badgeholders could use to vote in RetroPGF 3:
- West - https://round3.optimism.io/
- Agora - https://vote.optimism.io/  
In addition, there's useful tooling that has been built to support badgeholders:
- [Pairwise](https://www.pairwise.vote/) - Gamifying list creation by categorizing applicants into small groups for experts' pairwise comparison.
- [OpenSource Observer](https://www.opensource.observer/) - An Analytics platform for impact metrics on Retro Funding applications  
Badgeholders can find all the information relevant for voting in the [Badgeholder Manual ](https://www.optimism.io/badgeholder-manual)"
495,Where can badgeholders find more information relevant to voting?,Badgeholders can find all the information relevant for voting in the Badgeholder Manual (https://www.optimism.io/badgeholder-manual).,"üëâ Voting was live from November 6th - December 7th. There were two applications badgeholders could use to vote in RetroPGF 3:
- West - https://round3.optimism.io/
- Agora - https://vote.optimism.io/  
In addition, there's useful tooling that has been built to support badgeholders:
- [Pairwise](https://www.pairwise.vote/) - Gamifying list creation by categorizing applicants into small groups for experts' pairwise comparison.
- [OpenSource Observer](https://www.opensource.observer/) - An Analytics platform for impact metrics on Retro Funding applications  
Badgeholders can find all the information relevant for voting in the [Badgeholder Manual ](https://www.optimism.io/badgeholder-manual)"
496,Who is eligible for Retro Funding in the Optimism ecosystem?,"Every type of contribution to the Optimism ecosystem is eligible for Retro Funding. This includes developers, educators, artists, creators, writers, builders, and evangelists who are providing impact.","üëâ **You can see applications on the voting applications from [Agora](https://vote.optimism.io/retropgf/3) and [West](https://round3.optimism.io/)**  
Every type of contribution to the Optimism ecosystem is eligible for Retro Funding. Whether you‚Äôre a developer working on an Ethereum execution client or an educator creating Optimism-inspired video content, if you‚Äôre providing impact, you‚Äôre eligible!  
Retro Funding is open to all Optimism artists, creators, writers, builders, and evangelists.
If you're looking for inspiration on what you could contribute to the Optimism Collective, check out the [Ecosystem Contributions Board](https://github.com/ethereum-optimism/ecosystem-contributions)"
496,Where can I see applications for voting on Retro Funding?,You can see applications on the voting applications from Agora and West. The links are [Agora](https://vote.optimism.io/retropgf/3) and [West](https://round3.optimism.io/).,"üëâ **You can see applications on the voting applications from [Agora](https://vote.optimism.io/retropgf/3) and [West](https://round3.optimism.io/)**  
Every type of contribution to the Optimism ecosystem is eligible for Retro Funding. Whether you‚Äôre a developer working on an Ethereum execution client or an educator creating Optimism-inspired video content, if you‚Äôre providing impact, you‚Äôre eligible!  
Retro Funding is open to all Optimism artists, creators, writers, builders, and evangelists.
If you're looking for inspiration on what you could contribute to the Optimism Collective, check out the [Ecosystem Contributions Board](https://github.com/ethereum-optimism/ecosystem-contributions)"
496,Where can I find inspiration for contributions to the Optimism Collective?,You can find inspiration on the [Ecosystem Contributions Board](https://github.com/ethereum-optimism/ecosystem-contributions).,"üëâ **You can see applications on the voting applications from [Agora](https://vote.optimism.io/retropgf/3) and [West](https://round3.optimism.io/)**  
Every type of contribution to the Optimism ecosystem is eligible for Retro Funding. Whether you‚Äôre a developer working on an Ethereum execution client or an educator creating Optimism-inspired video content, if you‚Äôre providing impact, you‚Äôre eligible!  
Retro Funding is open to all Optimism artists, creators, writers, builders, and evangelists.
If you're looking for inspiration on what you could contribute to the Optimism Collective, check out the [Ecosystem Contributions Board](https://github.com/ethereum-optimism/ecosystem-contributions)"
497,How were the badgeholders for RetroPGF 3 selected?,"In RetroPGF 3, there were 146 badgeholders who were selected via a multitude of methods. You can find more details about this process [here](https://gov.optimism.io/t/retropgf-3-voting-badge-distribution-results/7001).","- In RetroPGF 3, there were 146 badgeholders who were selected via a mulitude of methods. Find out more details about this process [here](https://gov.optimism.io/t/retropgf-3-voting-badge-distribution-results/7001)
- If you're a badgeholder, you can go to the [badgeholder hub](https://plaid-cement-e44.notion.site/Badgeholder-hub-6a35e12d876048868e4ae264dbadd076?pvs=4) to find relevant resources and stay up to date.
- If you want to find out more about how voting in RetroPGF 3 works, check out the [Round Design documentation](https://gov.optimism.io/t/retropgf-3-round-design/6802)"
497,Where can badgeholders find resources and stay updated?,"If you're a badgeholder, you can go to the [badgeholder hub](https://plaid-cement-e44.notion.site/Badgeholder-hub-6a35e12d876048868e4ae264dbadd076?pvs=4) to find relevant resources and stay up to date.","- In RetroPGF 3, there were 146 badgeholders who were selected via a mulitude of methods. Find out more details about this process [here](https://gov.optimism.io/t/retropgf-3-voting-badge-distribution-results/7001)
- If you're a badgeholder, you can go to the [badgeholder hub](https://plaid-cement-e44.notion.site/Badgeholder-hub-6a35e12d876048868e4ae264dbadd076?pvs=4) to find relevant resources and stay up to date.
- If you want to find out more about how voting in RetroPGF 3 works, check out the [Round Design documentation](https://gov.optimism.io/t/retropgf-3-round-design/6802)"
497,How does voting in RetroPGF 3 work?,"If you want to find out more about how voting in RetroPGF 3 works, check out the [Round Design documentation](https://gov.optimism.io/t/retropgf-3-round-design/6802).","- In RetroPGF 3, there were 146 badgeholders who were selected via a mulitude of methods. Find out more details about this process [here](https://gov.optimism.io/t/retropgf-3-voting-badge-distribution-results/7001)
- If you're a badgeholder, you can go to the [badgeholder hub](https://plaid-cement-e44.notion.site/Badgeholder-hub-6a35e12d876048868e4ae264dbadd076?pvs=4) to find relevant resources and stay up to date.
- If you want to find out more about how voting in RetroPGF 3 works, check out the [Round Design documentation](https://gov.optimism.io/t/retropgf-3-round-design/6802)"
498,Can I apply for RetroPGF 3 if my project received funding from venture capital or the Optimism Token House?,"Yes, both VC funded teams and teams that received a grant from the Token House are eligible. Badgeholders uphold the principle of 'impact = profit', where individuals should receive profit equal to the impact they provided to the Optimism Collective.","<details>
<summary> Q: Did my contribution need to have taken place between the end of round 2 and beginning of round 3?
</summary>
A: No, all contributions that have supported the development and adoption of Optimism are considered, no matter when they took place.
</details>  
<details>
<summary> Q: Were projects nominated?
</summary>
A: There was no nomination process, instead projects directly applied for RetroPGF 3.
</details>  
<details>
<summary>Q:Are VC funded teams or teams that received a grant from the Optimism Token House eligible for Retro Funding?
</summary>
Yes, both VC funded teams as well as teams that received a grant from the Token House are eligble. Badgeholders uphold the principle of ""impact = profit"", where individuals should receive profit equal to the impact they provided to the Optimism Collective.
</details>  
<details>
<summary>Q: If I received rewards in RetroPGF 2, was I able to sign up for Round 3 with the same contribution?
</summary>
Yes, you were able to apply again with the same contribution. We asked that you include the rewards you received in Round 2 in your ""Grants and Funding"" section of your application.
</details>  
<details>
<summary>Q: Are Retro Funding rewards subject to a 1 year lock-up?
</summary>
No, Retro Funding rewards are not subject to a 1 year lock-up. After the round concludes, projects will need to complete a KYC process with the Optimism Foundation and will then gradually receive their Retro Funding rewards over a 90 day period.
</details>  
<details>
<summary>Q: Are RetroPGF 3 rewards sourced from sequencer revenue or Retro Funding token allocation?
</summary>
Round 3 rewards are sourced from the [Retro Funding token allocation](https://community.optimism.io/docs/governance/allocations/). Future rounds of Retro Funding may allocate surplus protocol revenue.
</details>  
<details>
<summary>Q: Does my Project need to be on OP mainnet to be eligible?
</summary>
No, your project does not need to be on OP mainnet. As long as you‚Äôre providing impact to the Optimism Collective, you are eligible for Retro Funding!
</details>"
498,Do I need to have made my contribution between specific rounds to be considered for RetroPGF 3?,"No, all contributions that have supported the development and adoption of Optimism are considered, no matter when they took place.","<details>
<summary> Q: Did my contribution need to have taken place between the end of round 2 and beginning of round 3?
</summary>
A: No, all contributions that have supported the development and adoption of Optimism are considered, no matter when they took place.
</details>  
<details>
<summary> Q: Were projects nominated?
</summary>
A: There was no nomination process, instead projects directly applied for RetroPGF 3.
</details>  
<details>
<summary>Q:Are VC funded teams or teams that received a grant from the Optimism Token House eligible for Retro Funding?
</summary>
Yes, both VC funded teams as well as teams that received a grant from the Token House are eligble. Badgeholders uphold the principle of ""impact = profit"", where individuals should receive profit equal to the impact they provided to the Optimism Collective.
</details>  
<details>
<summary>Q: If I received rewards in RetroPGF 2, was I able to sign up for Round 3 with the same contribution?
</summary>
Yes, you were able to apply again with the same contribution. We asked that you include the rewards you received in Round 2 in your ""Grants and Funding"" section of your application.
</details>  
<details>
<summary>Q: Are Retro Funding rewards subject to a 1 year lock-up?
</summary>
No, Retro Funding rewards are not subject to a 1 year lock-up. After the round concludes, projects will need to complete a KYC process with the Optimism Foundation and will then gradually receive their Retro Funding rewards over a 90 day period.
</details>  
<details>
<summary>Q: Are RetroPGF 3 rewards sourced from sequencer revenue or Retro Funding token allocation?
</summary>
Round 3 rewards are sourced from the [Retro Funding token allocation](https://community.optimism.io/docs/governance/allocations/). Future rounds of Retro Funding may allocate surplus protocol revenue.
</details>  
<details>
<summary>Q: Does my Project need to be on OP mainnet to be eligible?
</summary>
No, your project does not need to be on OP mainnet. As long as you‚Äôre providing impact to the Optimism Collective, you are eligible for Retro Funding!
</details>"
498,Is there a nomination process for projects to be considered for RetroPGF 3?,"No, there was no nomination process. Instead, projects directly applied for RetroPGF 3.","<details>
<summary> Q: Did my contribution need to have taken place between the end of round 2 and beginning of round 3?
</summary>
A: No, all contributions that have supported the development and adoption of Optimism are considered, no matter when they took place.
</details>  
<details>
<summary> Q: Were projects nominated?
</summary>
A: There was no nomination process, instead projects directly applied for RetroPGF 3.
</details>  
<details>
<summary>Q:Are VC funded teams or teams that received a grant from the Optimism Token House eligible for Retro Funding?
</summary>
Yes, both VC funded teams as well as teams that received a grant from the Token House are eligble. Badgeholders uphold the principle of ""impact = profit"", where individuals should receive profit equal to the impact they provided to the Optimism Collective.
</details>  
<details>
<summary>Q: If I received rewards in RetroPGF 2, was I able to sign up for Round 3 with the same contribution?
</summary>
Yes, you were able to apply again with the same contribution. We asked that you include the rewards you received in Round 2 in your ""Grants and Funding"" section of your application.
</details>  
<details>
<summary>Q: Are Retro Funding rewards subject to a 1 year lock-up?
</summary>
No, Retro Funding rewards are not subject to a 1 year lock-up. After the round concludes, projects will need to complete a KYC process with the Optimism Foundation and will then gradually receive their Retro Funding rewards over a 90 day period.
</details>  
<details>
<summary>Q: Are RetroPGF 3 rewards sourced from sequencer revenue or Retro Funding token allocation?
</summary>
Round 3 rewards are sourced from the [Retro Funding token allocation](https://community.optimism.io/docs/governance/allocations/). Future rounds of Retro Funding may allocate surplus protocol revenue.
</details>  
<details>
<summary>Q: Does my Project need to be on OP mainnet to be eligible?
</summary>
No, your project does not need to be on OP mainnet. As long as you‚Äôre providing impact to the Optimism Collective, you are eligible for Retro Funding!
</details>"
499,What's the title of the section that talks about the history of the Token House?,The title of the section is 'Token House History'.,"---
title: Token House History
lang: en-US
---"
500,How often does Token House voting occur?,Token House voting occurs via three-week voting cycles during each Season.,"Token House governance operates on a seasonal schedule.
Seasons are separated with a Reflection Period. Reflection Periods may be followed by Special Voting Cycles to adopt proposals that come out of the previous Reflection Period.  
During each Season, Token House voting occurs via three-week voting cycles.
Voting Cycles begin on Thursday at 19:00p GMT (12p PST) and end on Wednesday at 19:00 GMT (12p PST).  
During Reflection Periods, the Optimism Foundation will publish a proposed changelog to the Operating Manual and a set of governance proposals aimed at addressing the feedback received in the previous season.
Reflection periods are coomprised of Special Voting Cycles during which we vote on proposals to modify the collective's structure.  
You can see up to date information about the seasons and voting cycles in [the governance calendar](https://calendar.google.com/calendar/u/0/r?cid=Y180aHVpNzBpdG0wODllN3Q4cTUwaGVoMWtub0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t).  
::: tip At the time of writing we're entering Season #5: January 4th - May 8th, 2024
:::"
500,What happens during Reflection Periods in Token House governance?,"During Reflection Periods, the Optimism Foundation publishes a proposed changelog to the Operating Manual and a set of governance proposals aimed at addressing feedback received in the previous season. These periods may also include Special Voting Cycles to adopt proposals.","Token House governance operates on a seasonal schedule.
Seasons are separated with a Reflection Period. Reflection Periods may be followed by Special Voting Cycles to adopt proposals that come out of the previous Reflection Period.  
During each Season, Token House voting occurs via three-week voting cycles.
Voting Cycles begin on Thursday at 19:00p GMT (12p PST) and end on Wednesday at 19:00 GMT (12p PST).  
During Reflection Periods, the Optimism Foundation will publish a proposed changelog to the Operating Manual and a set of governance proposals aimed at addressing the feedback received in the previous season.
Reflection periods are coomprised of Special Voting Cycles during which we vote on proposals to modify the collective's structure.  
You can see up to date information about the seasons and voting cycles in [the governance calendar](https://calendar.google.com/calendar/u/0/r?cid=Y180aHVpNzBpdG0wODllN3Q4cTUwaGVoMWtub0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t).  
::: tip At the time of writing we're entering Season #5: January 4th - May 8th, 2024
:::"
500,When do Voting Cycles begin and end?,Voting Cycles begin on Thursday at 19:00 GMT (12p PST) and end on Wednesday at 19:00 GMT (12p PST).,"Token House governance operates on a seasonal schedule.
Seasons are separated with a Reflection Period. Reflection Periods may be followed by Special Voting Cycles to adopt proposals that come out of the previous Reflection Period.  
During each Season, Token House voting occurs via three-week voting cycles.
Voting Cycles begin on Thursday at 19:00p GMT (12p PST) and end on Wednesday at 19:00 GMT (12p PST).  
During Reflection Periods, the Optimism Foundation will publish a proposed changelog to the Operating Manual and a set of governance proposals aimed at addressing the feedback received in the previous season.
Reflection periods are coomprised of Special Voting Cycles during which we vote on proposals to modify the collective's structure.  
You can see up to date information about the seasons and voting cycles in [the governance calendar](https://calendar.google.com/calendar/u/0/r?cid=Y180aHVpNzBpdG0wODllN3Q4cTUwaGVoMWtub0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t).  
::: tip At the time of writing we're entering Season #5: January 4th - May 8th, 2024
:::"
501,How does Optimism handle the budget for the Developer Advisory Board?,"Optimism has a specific proposal for the Developer Advisory Board Budget, which can be found [here](https://vote.optimism.io/proposals/67269789039629895178640755758170247888863792004069768037736283616310331965838). This proposal outlines the financial resources allocated to the board.","- [Developer Advisory Board Budget](https://vote.optimism.io/proposals/67269789039629895178640755758170247888863792004069768037736283616310331965838)
- [Developer Advisory Board Ratification](https://vote.optimism.io/proposals/95102633290576253416299445955061077431090693890673037767791097228222587378331)
- [Code of Conduct Council Budget](https://vote.optimism.io/proposals/26993004599223263087505603454119723751877285713239446072681254755783718227511)
- [Code of Conduct Elections](https://vote.optimism.io/proposals/102821998933460159156263544808281872605936639206851804749751748763651967264110)
- [Grants Council Operating Budget](https://vote.optimism.io/proposals/47864371633107534187617995773541299064963460661119440983190542488743950169122)
- [Grants Council Elections - Builders](https://vote.optimism.io/proposals/13644637236772462780287582686131348226526824657027343360896627559283471469688)
- [Grants Council Elections - Growth Experiments](https://vote.optimism.io/proposals/87355419461675705865096288750937924893466943101654806912041265394266455745819)
- [Grants Council Elections - Metrics and Milestones](https://vote.optimism.io/proposals/96868135958111078064987938855232246504506994378309573614627090826820561655088)
- [Intent Budgets](https://vote.optimism.io/proposals/11595556248137084019024264942104169821784001997050285438055123196153848845549)
- [Chain Delegation Program](https://vote.optimism.io/proposals/23645858735980247449510302520189443998369792603230659191221949690963680987113)
- [Ratification of the Law of Chains](https://vote.optimism.io/proposals/112047914448178129124907599845371359974256142096707624346739203514792263033877)
- [Anticapture Commission](https://vote.optimism.io/proposals/22387138384033903985192420283570655912990907953544385753324581204637906644383)
- [Security Council Vote #1](https://vote.optimism.io/proposals/27439950952007920118525230291344523079212068327713298769307857575418374325849)
- [Security Council Vote #2](https://vote.optimism.io/proposals/85591583404433237270543189567126336043697987369929953414380041066767718361144)
- [Upgrade #2: Canyon Protocol Upgrade](https://vote.optimism.io/proposals/20327152654308054166942093105443920402082671769027198649343468266910325783863)"
501,What is the purpose of the Code of Conduct Council in Optimism?,"The Code of Conduct Council in Optimism is responsible for maintaining ethical standards and behavior within the community. There are specific proposals related to its budget and elections, which can be found [here](https://vote.optimism.io/proposals/26993004599223263087505603454119723751877285713239446072681254755783718227511) and [here](https://vote.optimism.io/proposals/102821998933460159156263544808281872605936639206851804749751748763651967264110).","- [Developer Advisory Board Budget](https://vote.optimism.io/proposals/67269789039629895178640755758170247888863792004069768037736283616310331965838)
- [Developer Advisory Board Ratification](https://vote.optimism.io/proposals/95102633290576253416299445955061077431090693890673037767791097228222587378331)
- [Code of Conduct Council Budget](https://vote.optimism.io/proposals/26993004599223263087505603454119723751877285713239446072681254755783718227511)
- [Code of Conduct Elections](https://vote.optimism.io/proposals/102821998933460159156263544808281872605936639206851804749751748763651967264110)
- [Grants Council Operating Budget](https://vote.optimism.io/proposals/47864371633107534187617995773541299064963460661119440983190542488743950169122)
- [Grants Council Elections - Builders](https://vote.optimism.io/proposals/13644637236772462780287582686131348226526824657027343360896627559283471469688)
- [Grants Council Elections - Growth Experiments](https://vote.optimism.io/proposals/87355419461675705865096288750937924893466943101654806912041265394266455745819)
- [Grants Council Elections - Metrics and Milestones](https://vote.optimism.io/proposals/96868135958111078064987938855232246504506994378309573614627090826820561655088)
- [Intent Budgets](https://vote.optimism.io/proposals/11595556248137084019024264942104169821784001997050285438055123196153848845549)
- [Chain Delegation Program](https://vote.optimism.io/proposals/23645858735980247449510302520189443998369792603230659191221949690963680987113)
- [Ratification of the Law of Chains](https://vote.optimism.io/proposals/112047914448178129124907599845371359974256142096707624346739203514792263033877)
- [Anticapture Commission](https://vote.optimism.io/proposals/22387138384033903985192420283570655912990907953544385753324581204637906644383)
- [Security Council Vote #1](https://vote.optimism.io/proposals/27439950952007920118525230291344523079212068327713298769307857575418374325849)
- [Security Council Vote #2](https://vote.optimism.io/proposals/85591583404433237270543189567126336043697987369929953414380041066767718361144)
- [Upgrade #2: Canyon Protocol Upgrade](https://vote.optimism.io/proposals/20327152654308054166942093105443920402082671769027198649343468266910325783863)"
501,What is the Grants Council and what are its functions?,"The Grants Council in Optimism is responsible for overseeing the distribution of grants to support various projects and initiatives. There are several proposals related to its operating budget and elections for different roles within the council, such as Builders, Growth Experiments, and Metrics and Milestones. These can be found [here](https://vote.optimism.io/proposals/47864371633107534187617995773541299064963460661119440983190542488743950169122), [here](https://vote.optimism.io/proposals/13644637236772462780287582686131348226526824657027343360896627559283471469688), [here](https://vote.optimism.io/proposals/87355419461675705865096288750937924893466943101654806912041265394266455745819), and [here](https://vote.optimism.io/proposals/96868135958111078064987938855232246504506994378309573614627090826820561655088).","- [Developer Advisory Board Budget](https://vote.optimism.io/proposals/67269789039629895178640755758170247888863792004069768037736283616310331965838)
- [Developer Advisory Board Ratification](https://vote.optimism.io/proposals/95102633290576253416299445955061077431090693890673037767791097228222587378331)
- [Code of Conduct Council Budget](https://vote.optimism.io/proposals/26993004599223263087505603454119723751877285713239446072681254755783718227511)
- [Code of Conduct Elections](https://vote.optimism.io/proposals/102821998933460159156263544808281872605936639206851804749751748763651967264110)
- [Grants Council Operating Budget](https://vote.optimism.io/proposals/47864371633107534187617995773541299064963460661119440983190542488743950169122)
- [Grants Council Elections - Builders](https://vote.optimism.io/proposals/13644637236772462780287582686131348226526824657027343360896627559283471469688)
- [Grants Council Elections - Growth Experiments](https://vote.optimism.io/proposals/87355419461675705865096288750937924893466943101654806912041265394266455745819)
- [Grants Council Elections - Metrics and Milestones](https://vote.optimism.io/proposals/96868135958111078064987938855232246504506994378309573614627090826820561655088)
- [Intent Budgets](https://vote.optimism.io/proposals/11595556248137084019024264942104169821784001997050285438055123196153848845549)
- [Chain Delegation Program](https://vote.optimism.io/proposals/23645858735980247449510302520189443998369792603230659191221949690963680987113)
- [Ratification of the Law of Chains](https://vote.optimism.io/proposals/112047914448178129124907599845371359974256142096707624346739203514792263033877)
- [Anticapture Commission](https://vote.optimism.io/proposals/22387138384033903985192420283570655912990907953544385753324581204637906644383)
- [Security Council Vote #1](https://vote.optimism.io/proposals/27439950952007920118525230291344523079212068327713298769307857575418374325849)
- [Security Council Vote #2](https://vote.optimism.io/proposals/85591583404433237270543189567126336043697987369929953414380041066767718361144)
- [Upgrade #2: Canyon Protocol Upgrade](https://vote.optimism.io/proposals/20327152654308054166942093105443920402082671769027198649343468266910325783863)"
502,How often does Optimism have voting cycles?,"Optimism has voting cycles approximately every month. For example, Voting Cycle #13 was from June 8th, 2023 to July 12th, 2023, Voting Cycle #14 was from July 13th, 2023 to August 16th, 2023, and Voting Cycle #15 was from August 17th, 2023 to September 20th, 2023.","**Voting Cycle #13 (June 8th, 2023 - July 12th, 2023)**
- [Intent #1 Missions](https://vote.optimism.io/proposals/89065519272487155253137299698235721564519179632704918690534400514930936156393)
- [Intent #3 Missions](https://vote.optimism.io/proposals/76298930109016961673734608568752969826843280855214969572559472848313136347131)
- [Intent #4 Missions](https://vote.optimism.io/proposals/16633367863894036056841722161407059007904922838583677995599242776177398115322)
- [Grants Cycle Roundup](https://gov.optimism.io/t/cycle-13-final-grants-roundup/6454)  
**Voting Cycle #14 (July 13th, 2023 - August 16th, 2023)**
- [Intent #2 Budget Proposal #2](https://vote.optimism.io/proposals/46755965320953291432113738397437466520155684451527981335363452666080752126186)
- [Grants Cycle Roundup](https://gov.optimism.io/t/cycle-14-final-grants-roundup/6676)  
**Voting Cycle #15 (August 17th, 2023 - September 20th, 2023)**
- [Grants Cycle Roundup](https://gov.optimism.io/t/cycle-15-final-grants-roundup/6858)"
502,What kind of proposals are included in Optimism's voting cycles?,"Optimism's voting cycles include various types of proposals such as Intent Missions and Budget Proposals. For instance, Voting Cycle #13 included Intent #1, #3, and #4 Missions, while Voting Cycle #14 included Intent #2 Budget Proposal #2.","**Voting Cycle #13 (June 8th, 2023 - July 12th, 2023)**
- [Intent #1 Missions](https://vote.optimism.io/proposals/89065519272487155253137299698235721564519179632704918690534400514930936156393)
- [Intent #3 Missions](https://vote.optimism.io/proposals/76298930109016961673734608568752969826843280855214969572559472848313136347131)
- [Intent #4 Missions](https://vote.optimism.io/proposals/16633367863894036056841722161407059007904922838583677995599242776177398115322)
- [Grants Cycle Roundup](https://gov.optimism.io/t/cycle-13-final-grants-roundup/6454)  
**Voting Cycle #14 (July 13th, 2023 - August 16th, 2023)**
- [Intent #2 Budget Proposal #2](https://vote.optimism.io/proposals/46755965320953291432113738397437466520155684451527981335363452666080752126186)
- [Grants Cycle Roundup](https://gov.optimism.io/t/cycle-14-final-grants-roundup/6676)  
**Voting Cycle #15 (August 17th, 2023 - September 20th, 2023)**
- [Grants Cycle Roundup](https://gov.optimism.io/t/cycle-15-final-grants-roundup/6858)"
502,Where can I find the results or summaries of the grants given during each voting cycle?,"You can find the results or summaries of the grants given during each voting cycle in the Grants Cycle Roundup links provided for each cycle. For example, the Grants Cycle Roundup for Voting Cycle #13 can be found [here](https://gov.optimism.io/t/cycle-13-final-grants-roundup/6454).","**Voting Cycle #13 (June 8th, 2023 - July 12th, 2023)**
- [Intent #1 Missions](https://vote.optimism.io/proposals/89065519272487155253137299698235721564519179632704918690534400514930936156393)
- [Intent #3 Missions](https://vote.optimism.io/proposals/76298930109016961673734608568752969826843280855214969572559472848313136347131)
- [Intent #4 Missions](https://vote.optimism.io/proposals/16633367863894036056841722161407059007904922838583677995599242776177398115322)
- [Grants Cycle Roundup](https://gov.optimism.io/t/cycle-13-final-grants-roundup/6454)  
**Voting Cycle #14 (July 13th, 2023 - August 16th, 2023)**
- [Intent #2 Budget Proposal #2](https://vote.optimism.io/proposals/46755965320953291432113738397437466520155684451527981335363452666080752126186)
- [Grants Cycle Roundup](https://gov.optimism.io/t/cycle-14-final-grants-roundup/6676)  
**Voting Cycle #15 (August 17th, 2023 - September 20th, 2023)**
- [Grants Cycle Roundup](https://gov.optimism.io/t/cycle-15-final-grants-roundup/6858)"
503,Where can I find the budget proposals for different intents in Optimism Governance?,"You can find the budget proposals for different intents in Optimism Governance by visiting the following links: [Intent #1 Budget Proposal](https://vote.optimism.io/proposals/51738314696473345172141808043782330430064117614433447104828853768775712054864), [Intent #2 Budget Proposal](https://vote.optimism.io/proposals/32970701904870446614408373011942917680422376755229075190214017021915019093516), [Intent #3 Budget Proposal](https://vote.optimism.io/proposals/94365805422398770067924881378455503928423439630602149628781926844759467250082), and [Intent #4 Budget Proposal](https://vote.optimism.io/proposals/103695324913424597802389181312722993037601032681914451632412140667432224173014).","- [Intent #1 Budget Proposal](https://vote.optimism.io/proposals/51738314696473345172141808043782330430064117614433447104828853768775712054864)
- [Intent #2 Budget Proposal](https://vote.optimism.io/proposals/32970701904870446614408373011942917680422376755229075190214017021915019093516)
- [Intent #3 Budget Proposal](https://vote.optimism.io/proposals/94365805422398770067924881378455503928423439630602149628781926844759467250082)
- [Intent #4 Budget Proposal](https://vote.optimism.io/proposals/103695324913424597802389181312722993037601032681914451632412140667432224173014)
- [Protocol Delegation Program Renewal](https://vote.optimism.io/proposals/64930538748268257621925093712454552173772860987977453334165023026835711650357)
- [Grants Council Elections - Builders](https://vote.optimism.io/proposals/2808108363564117434228597137832979672586627356483314020876637262618986508713)
- [Grants Council Elections - Growth Experiments](https://vote.optimism.io/proposals/103713749716503028671815481721039004389156473487450783632177114353117435138377)
- [Inflation Adjustment Proposal](https://vote.optimism.io/proposals/80982553847843251343725022866904947381762263529096361834044805234222094077710)
- [Foundation Budget Year 2](https://vote.optimism.io/proposals/29831001453379581627736734765818959389842109811221412662144194715522205098015)"
503,How can I participate in the Grants Council Elections for Builders and Growth Experiments in Optimism?,You can participate in the Grants Council Elections for Builders and Growth Experiments in Optimism by visiting the following links: [Grants Council Elections - Builders](https://vote.optimism.io/proposals/2808108363564117434228597137832979672586627356483314020876637262618986508713) and [Grants Council Elections - Growth Experiments](https://vote.optimism.io/proposals/103713749716503028671815481721039004389156473487450783632177114353117435138377).,"- [Intent #1 Budget Proposal](https://vote.optimism.io/proposals/51738314696473345172141808043782330430064117614433447104828853768775712054864)
- [Intent #2 Budget Proposal](https://vote.optimism.io/proposals/32970701904870446614408373011942917680422376755229075190214017021915019093516)
- [Intent #3 Budget Proposal](https://vote.optimism.io/proposals/94365805422398770067924881378455503928423439630602149628781926844759467250082)
- [Intent #4 Budget Proposal](https://vote.optimism.io/proposals/103695324913424597802389181312722993037601032681914451632412140667432224173014)
- [Protocol Delegation Program Renewal](https://vote.optimism.io/proposals/64930538748268257621925093712454552173772860987977453334165023026835711650357)
- [Grants Council Elections - Builders](https://vote.optimism.io/proposals/2808108363564117434228597137832979672586627356483314020876637262618986508713)
- [Grants Council Elections - Growth Experiments](https://vote.optimism.io/proposals/103713749716503028671815481721039004389156473487450783632177114353117435138377)
- [Inflation Adjustment Proposal](https://vote.optimism.io/proposals/80982553847843251343725022866904947381762263529096361834044805234222094077710)
- [Foundation Budget Year 2](https://vote.optimism.io/proposals/29831001453379581627736734765818959389842109811221412662144194715522205098015)"
503,Is there a proposal for the renewal of the Protocol Delegation Program in Optimism?,"Yes, there is a proposal for the renewal of the Protocol Delegation Program in Optimism. You can find it [here](https://vote.optimism.io/proposals/64930538748268257621925093712454552173772860987977453334165023026835711650357).","- [Intent #1 Budget Proposal](https://vote.optimism.io/proposals/51738314696473345172141808043782330430064117614433447104828853768775712054864)
- [Intent #2 Budget Proposal](https://vote.optimism.io/proposals/32970701904870446614408373011942917680422376755229075190214017021915019093516)
- [Intent #3 Budget Proposal](https://vote.optimism.io/proposals/94365805422398770067924881378455503928423439630602149628781926844759467250082)
- [Intent #4 Budget Proposal](https://vote.optimism.io/proposals/103695324913424597802389181312722993037601032681914451632412140667432224173014)
- [Protocol Delegation Program Renewal](https://vote.optimism.io/proposals/64930538748268257621925093712454552173772860987977453334165023026835711650357)
- [Grants Council Elections - Builders](https://vote.optimism.io/proposals/2808108363564117434228597137832979672586627356483314020876637262618986508713)
- [Grants Council Elections - Growth Experiments](https://vote.optimism.io/proposals/103713749716503028671815481721039004389156473487450783632177114353117435138377)
- [Inflation Adjustment Proposal](https://vote.optimism.io/proposals/80982553847843251343725022866904947381762263529096361834044805234222094077710)
- [Foundation Budget Year 2](https://vote.optimism.io/proposals/29831001453379581627736734765818959389842109811221412662144194715522205098015)"
504,How often does Optimism have voting cycles?,"Based on the fragment, it appears that Optimism has voting cycles approximately every month. For example, Voting Cycle #11 runs from March 2nd to April 5th, and Voting Cycle #10 ran from January 26th to March 1st.","**Voting Cycle #11 (March 2nd - April 5th)**
- [Upgrade #1: Bedrock Upgrade Proposal](https://vote.optimism.io/proposals/114732572201709734114347859370226754519763657304898989580338326275038680037913)
- [Grants Cycle Roundup](https://gov.optimism.io/t/cycle-11-final-grants-roundup/5842)  
**Voting Cycle #10 (January 26th, 2023 - March 1st, 2023)**
- [Grants Cycle Roundup](https://gov.optimism.io/t/cycle-10-final-grants-roundup/5418)"
504,What is the Bedrock Upgrade Proposal?,The Bedrock Upgrade Proposal is one of the items listed for Voting Cycle #11. You can find more details about it by following the provided link to the proposal.,"**Voting Cycle #11 (March 2nd - April 5th)**
- [Upgrade #1: Bedrock Upgrade Proposal](https://vote.optimism.io/proposals/114732572201709734114347859370226754519763657304898989580338326275038680037913)
- [Grants Cycle Roundup](https://gov.optimism.io/t/cycle-11-final-grants-roundup/5842)  
**Voting Cycle #10 (January 26th, 2023 - March 1st, 2023)**
- [Grants Cycle Roundup](https://gov.optimism.io/t/cycle-10-final-grants-roundup/5418)"
504,What are Grants Cycle Roundups?,Grants Cycle Roundups are summaries or reports of the grants given out during a specific voting cycle. The fragment lists links to the final grants roundups for both Voting Cycle #11 and Voting Cycle #10.,"**Voting Cycle #11 (March 2nd - April 5th)**
- [Upgrade #1: Bedrock Upgrade Proposal](https://vote.optimism.io/proposals/114732572201709734114347859370226754519763657304898989580338326275038680037913)
- [Grants Cycle Roundup](https://gov.optimism.io/t/cycle-11-final-grants-roundup/5842)  
**Voting Cycle #10 (January 26th, 2023 - March 1st, 2023)**
- [Grants Cycle Roundup](https://gov.optimism.io/t/cycle-10-final-grants-roundup/5418)"
505,How can I participate in the Protocol Delegation Elections for Optimism?,You can participate in the Protocol Delegation Elections by visiting the specific proposal link on Snapshot: https://snapshot.org/#/opcollective.eth/proposal/0x88583c43b196ec86cee45345611b582108f1d6933ab688a7cae992a6baa552a6.,"* [Protocol Delegation Elections](https://snapshot.org/#/opcollective.eth/proposal/0x88583c43b196ec86cee45345611b582108f1d6933ab688a7cae992a6baa552a6)
* [Grants Council Elections - Growth Experiments](https://snapshot.org/#/opcollective.eth/proposal/0xa9457a5344747a6c272de786419fc7a4e83fcf0f927ef9b1ce767452faa9b453)
* [Grants Council Elections - Builders](https://snapshot.org/#/opcollective.eth/proposal/0xdcff47b93fb17a11411bda1809e22cba72e5131d31624e4c0f2b9dbee6811f5c)
* [Badgeholder Nomination Voting](https://snapshot.org/#/opcollective.eth/proposal/0x22d4c3ab56832de58c1774d1a0aeb61ba6dde8b16c0f8382f85d8935f3ee1f11)
* [Protocol Delegation Program](https://snapshot.org/#/opcollective.eth/proposal/0x3a1f9a30c47d6060f3b732404f3a6b2ceba3da07be0505ef0f93b6dab7fa3185)
* [Grants Council](https://snapshot.org/#/opcollective.eth/proposal/0x37fc8a6ae60cff2e4e72fe9c0567f739bb9a78262c2ada236892fcbc7af2c32d)"
505,What are the different types of Grants Council Elections available?,"There are two types of Grants Council Elections available: one for Growth Experiments and another for Builders. You can find more details and participate through the following links: Growth Experiments - https://snapshot.org/#/opcollective.eth/proposal/0xa9457a5344747a6c272de786419fc7a4e83fcf0f927ef9b1ce767452faa9b453, Builders - https://snapshot.org/#/opcollective.eth/proposal/0xdcff47b93fb17a11411bda1809e22cba72e5131d31624e4c0f2b9dbee6811f5c.","* [Protocol Delegation Elections](https://snapshot.org/#/opcollective.eth/proposal/0x88583c43b196ec86cee45345611b582108f1d6933ab688a7cae992a6baa552a6)
* [Grants Council Elections - Growth Experiments](https://snapshot.org/#/opcollective.eth/proposal/0xa9457a5344747a6c272de786419fc7a4e83fcf0f927ef9b1ce767452faa9b453)
* [Grants Council Elections - Builders](https://snapshot.org/#/opcollective.eth/proposal/0xdcff47b93fb17a11411bda1809e22cba72e5131d31624e4c0f2b9dbee6811f5c)
* [Badgeholder Nomination Voting](https://snapshot.org/#/opcollective.eth/proposal/0x22d4c3ab56832de58c1774d1a0aeb61ba6dde8b16c0f8382f85d8935f3ee1f11)
* [Protocol Delegation Program](https://snapshot.org/#/opcollective.eth/proposal/0x3a1f9a30c47d6060f3b732404f3a6b2ceba3da07be0505ef0f93b6dab7fa3185)
* [Grants Council](https://snapshot.org/#/opcollective.eth/proposal/0x37fc8a6ae60cff2e4e72fe9c0567f739bb9a78262c2ada236892fcbc7af2c32d)"
505,What is the Badgeholder Nomination Voting?,The Badgeholder Nomination Voting is a process where members can vote on nominees for badgeholder positions within the Optimism governance structure. You can participate in the voting through this link: https://snapshot.org/#/opcollective.eth/proposal/0x22d4c3ab56832de58c1774d1a0aeb61ba6dde8b16c0f8382f85d8935f3ee1f11.,"* [Protocol Delegation Elections](https://snapshot.org/#/opcollective.eth/proposal/0x88583c43b196ec86cee45345611b582108f1d6933ab688a7cae992a6baa552a6)
* [Grants Council Elections - Growth Experiments](https://snapshot.org/#/opcollective.eth/proposal/0xa9457a5344747a6c272de786419fc7a4e83fcf0f927ef9b1ce767452faa9b453)
* [Grants Council Elections - Builders](https://snapshot.org/#/opcollective.eth/proposal/0xdcff47b93fb17a11411bda1809e22cba72e5131d31624e4c0f2b9dbee6811f5c)
* [Badgeholder Nomination Voting](https://snapshot.org/#/opcollective.eth/proposal/0x22d4c3ab56832de58c1774d1a0aeb61ba6dde8b16c0f8382f85d8935f3ee1f11)
* [Protocol Delegation Program](https://snapshot.org/#/opcollective.eth/proposal/0x3a1f9a30c47d6060f3b732404f3a6b2ceba3da07be0505ef0f93b6dab7fa3185)
* [Grants Council](https://snapshot.org/#/opcollective.eth/proposal/0x37fc8a6ae60cff2e4e72fe9c0567f739bb9a78262c2ada236892fcbc7af2c32d)"
506,Where can I find information about the results of previous voting cycles for Optimism?,"You can find information about the results of previous voting cycles for Optimism by visiting the links provided in the governance documentation. For example, you can check the results for Voting Cycle #8, Voting Cycle #7, and Voting Cycle #6 through their respective links.","* [Voting cycle #8 (Oct 20th - Nov 9th](https://gov.optimism.io/t/voting-cycle-8-roundup/3742)
* [Voting cycle #7 (Sep 29th - Oct 19th)](https://gov.optimism.io/t/voting-cycle-7-roundup/3586)
* [Voting cycle #6 (Sep 8th - Sep 28th)](https://gov.optimism.io/t/voting-cycle-6-roundup/3481)"
506,When did Voting Cycle #8 for Optimism take place?,Voting Cycle #8 for Optimism took place from October 20th to November 9th.,"* [Voting cycle #8 (Oct 20th - Nov 9th](https://gov.optimism.io/t/voting-cycle-8-roundup/3742)
* [Voting cycle #7 (Sep 29th - Oct 19th)](https://gov.optimism.io/t/voting-cycle-7-roundup/3586)
* [Voting cycle #6 (Sep 8th - Sep 28th)](https://gov.optimism.io/t/voting-cycle-6-roundup/3481)"
506,How often do the voting cycles for Optimism occur?,"Based on the provided dates, it appears that the voting cycles for Optimism occur approximately every three weeks.","* [Voting cycle #8 (Oct 20th - Nov 9th](https://gov.optimism.io/t/voting-cycle-8-roundup/3742)
* [Voting cycle #7 (Sep 29th - Oct 19th)](https://gov.optimism.io/t/voting-cycle-7-roundup/3586)
* [Voting cycle #6 (Sep 8th - Sep 28th)](https://gov.optimism.io/t/voting-cycle-6-roundup/3481)"
507,What's the reflection period in Optimism governance?,"The reflection period was a break between season 1 and season 2 where the Optimism foundation, with the help of delegates and community members, updated and improved the governance process.","The reflection period was a break between season 1 and season 2 where the Optimism foundation, with the help of delegates and community members, updated and improved the governance process.  
- [Operating Manual v2](https://gov.optimism.io/t/operating-manual-of-the-optimism-collective-v0-2-0/3370/8)
- [Grant Proposal Template v2](https://gov.optimism.io/t/grant-proposal-template/3233/15)
- [Introducing Governance Committees](https://gov.optimism.io/t/introducing-governance-committees/3238/60)
- [Committee Formation Proposal Template](https://gov.optimism.io/t/phase-1-committee-formation-proposal-template/3281/9)"
507,Where can I find the updated operating manual for Optimism governance?,You can find the updated operating manual in the Operating Manual v2 document available at this [link](https://gov.optimism.io/t/operating-manual-of-the-optimism-collective-v0-2-0/3370/8).,"The reflection period was a break between season 1 and season 2 where the Optimism foundation, with the help of delegates and community members, updated and improved the governance process.  
- [Operating Manual v2](https://gov.optimism.io/t/operating-manual-of-the-optimism-collective-v0-2-0/3370/8)
- [Grant Proposal Template v2](https://gov.optimism.io/t/grant-proposal-template/3233/15)
- [Introducing Governance Committees](https://gov.optimism.io/t/introducing-governance-committees/3238/60)
- [Committee Formation Proposal Template](https://gov.optimism.io/t/phase-1-committee-formation-proposal-template/3281/9)"
507,What are governance committees in Optimism?,Governance committees are groups introduced to help manage and oversee the governance process in Optimism. More details can be found in the document 'Introducing Governance Committees' available at this [link](https://gov.optimism.io/t/introducing-governance-committees/3238/60).,"The reflection period was a break between season 1 and season 2 where the Optimism foundation, with the help of delegates and community members, updated and improved the governance process.  
- [Operating Manual v2](https://gov.optimism.io/t/operating-manual-of-the-optimism-collective-v0-2-0/3370/8)
- [Grant Proposal Template v2](https://gov.optimism.io/t/grant-proposal-template/3233/15)
- [Introducing Governance Committees](https://gov.optimism.io/t/introducing-governance-committees/3238/60)
- [Committee Formation Proposal Template](https://gov.optimism.io/t/phase-1-committee-formation-proposal-template/3281/9)"
508,Where can I find information about the different voting cycles for Optimism governance?,"You can find information about the different voting cycles for Optimism governance by visiting the specific links provided for each cycle. For example, you can check the roundups for Voting cycle #1, Voting cycle #2, Voting cycle #3, and Voting cycle #4 on the Optimism governance forum.","* [Voting cycle #4](https://gov.optimism.io/t/voting-cycle-4-roundup/3055)
* [Voting cycle #3](https://gov.optimism.io/t/voting-cycle-3-roundup/2923)
* [Voting cycle #2](https://gov.optimism.io/t/voting-cycle-2-roundup/2754)
* [Voting cycle #1](https://gov.optimism.io/t/voting-cycle-1-roundup/2619)"
508,How many voting cycles have been documented in the Optimism governance forum?,"There are four documented voting cycles in the Optimism governance forum. You can find detailed roundups for each cycle by following the respective links for Voting cycle #1, Voting cycle #2, Voting cycle #3, and Voting cycle #4.","* [Voting cycle #4](https://gov.optimism.io/t/voting-cycle-4-roundup/3055)
* [Voting cycle #3](https://gov.optimism.io/t/voting-cycle-3-roundup/2923)
* [Voting cycle #2](https://gov.optimism.io/t/voting-cycle-2-roundup/2754)
* [Voting cycle #1](https://gov.optimism.io/t/voting-cycle-1-roundup/2619)"
508,What is the purpose of the voting cycle roundups in the Optimism governance documentation?,"The purpose of the voting cycle roundups in the Optimism governance documentation is to provide a summary and detailed information about each voting cycle. These roundups help users understand the decisions made, the proposals discussed, and the outcomes of each voting cycle.","* [Voting cycle #4](https://gov.optimism.io/t/voting-cycle-4-roundup/3055)
* [Voting cycle #3](https://gov.optimism.io/t/voting-cycle-3-roundup/2923)
* [Voting cycle #2](https://gov.optimism.io/t/voting-cycle-2-roundup/2754)
* [Voting cycle #1](https://gov.optimism.io/t/voting-cycle-1-roundup/2619)"
509,How long will the Working Constitution of the Optimism Collective be in effect?,The Working Constitution will remain in effect for no more than four years from the date of its adoption.,"---
title: Governing Documents
lang: en-US
---  
[The Working Constitution](https://gov.optimism.io/t/working-constitution-of-the-optimism-collective/55) outlines governing provisions and principles for the Collective.
It will remain in effect no more than four years from the date of its adoption.
After that, authority over governance will be ceded to a permanent Bedrock Constitution that incorporates the lessons of the Collective‚Äôs prior governance experiments.  
The Collective‚Äôs [Operating Manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md) describes current governance processes for the Token House.
It will evolve, with the Collective, over time.
The version linked here, from [The Optimism Foundation's github repository](https://github.com/ethereum-optimism/OPerating-manual), is the authoritative one."
509,What will happen after the Working Constitution's period ends?,"After the Working Constitution's period ends, authority over governance will be ceded to a permanent Bedrock Constitution that incorporates the lessons of the Collective‚Äôs prior governance experiments.","---
title: Governing Documents
lang: en-US
---  
[The Working Constitution](https://gov.optimism.io/t/working-constitution-of-the-optimism-collective/55) outlines governing provisions and principles for the Collective.
It will remain in effect no more than four years from the date of its adoption.
After that, authority over governance will be ceded to a permanent Bedrock Constitution that incorporates the lessons of the Collective‚Äôs prior governance experiments.  
The Collective‚Äôs [Operating Manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md) describes current governance processes for the Token House.
It will evolve, with the Collective, over time.
The version linked here, from [The Optimism Foundation's github repository](https://github.com/ethereum-optimism/OPerating-manual), is the authoritative one."
509,Where can I find the current governance processes for the Token House?,"The current governance processes for the Token House are described in the Collective‚Äôs Operating Manual, which can be found in The Optimism Foundation's GitHub repository.","---
title: Governing Documents
lang: en-US
---  
[The Working Constitution](https://gov.optimism.io/t/working-constitution-of-the-optimism-collective/55) outlines governing provisions and principles for the Collective.
It will remain in effect no more than four years from the date of its adoption.
After that, authority over governance will be ceded to a permanent Bedrock Constitution that incorporates the lessons of the Collective‚Äôs prior governance experiments.  
The Collective‚Äôs [Operating Manual](https://github.com/ethereum-optimism/OPerating-manual/blob/main/manual.md) describes current governance processes for the Token House.
It will evolve, with the Collective, over time.
The version linked here, from [The Optimism Foundation's github repository](https://github.com/ethereum-optimism/OPerating-manual), is the authoritative one."
510,Who or what is the Optimism Foundation?,"The Optimism Foundation is a foundation company based in the Cayman Islands. It supports the establishment of the Optimism Collective, the development of the Optimism ecosystem, and the technology that powers it.","---
title: What is the Optimism Foundation?
lang: en-US
---
The Optimism Foundation is a Cayman Islands foundation company.  It operates to support the establishment of the [Optimism Collective](../governance/), the development of the Optimism ecosystem, and the technology that powers it.  
The Foundation is one component in a large, evolving and ever-growing web of companies, groups, and individuals driving towards actualization of the [Optimistic Vision](https://www.optimism.io/vision).  
Consistent with the Collective‚Äôs Working Constitution, the Foundation strives to:  
- Support the Collective with a formal legal entity.
- Steward the early evolution of Collective governance."
510,What is the role of the Optimism Foundation?,The role of the Optimism Foundation is to support the Optimism Collective with a formal legal entity and to steward the early evolution of Collective governance.,"---
title: What is the Optimism Foundation?
lang: en-US
---
The Optimism Foundation is a Cayman Islands foundation company.  It operates to support the establishment of the [Optimism Collective](../governance/), the development of the Optimism ecosystem, and the technology that powers it.  
The Foundation is one component in a large, evolving and ever-growing web of companies, groups, and individuals driving towards actualization of the [Optimistic Vision](https://www.optimism.io/vision).  
Consistent with the Collective‚Äôs Working Constitution, the Foundation strives to:  
- Support the Collective with a formal legal entity.
- Steward the early evolution of Collective governance."
510,What is the Optimism Collective?,"The Optimism Collective is a group of companies, groups, and individuals working together to achieve the Optimistic Vision, which is a broader goal for the development and success of the Optimism ecosystem.","---
title: What is the Optimism Foundation?
lang: en-US
---
The Optimism Foundation is a Cayman Islands foundation company.  It operates to support the establishment of the [Optimism Collective](../governance/), the development of the Optimism ecosystem, and the technology that powers it.  
The Foundation is one component in a large, evolving and ever-growing web of companies, groups, and individuals driving towards actualization of the [Optimistic Vision](https://www.optimism.io/vision).  
Consistent with the Collective‚Äôs Working Constitution, the Foundation strives to:  
- Support the Collective with a formal legal entity.
- Steward the early evolution of Collective governance."
511,Can the Optimism Foundation enter into legal contracts with other companies?,"Yes, the Optimism Foundation, as a Cayman foundation company, can enter into legally enforceable, binding commitments with third parties, such as service providers.","As an established entity (a Cayman foundation company), the Optimism Foundation can enter into legally enforceable, binding commitments with third parties in the ‚Äúreal‚Äù world on a limited liability basis. For example, the Foundation is able to:  
- Enter into contracts with third parties, such as service providers.
- Administer intellectual property rights.
- Make required governmental reports and filings.  
This status enables the Foundation to sometimes act more quickly, predictably, or safely ‚Äì and enables the Foundation to leverage those advantages to support the Collective in its early developmental stages."
511,What kind of activities can the Optimism Foundation perform due to its legal status?,"The Optimism Foundation can enter into contracts with third parties, administer intellectual property rights, and make required governmental reports and filings.","As an established entity (a Cayman foundation company), the Optimism Foundation can enter into legally enforceable, binding commitments with third parties in the ‚Äúreal‚Äù world on a limited liability basis. For example, the Foundation is able to:  
- Enter into contracts with third parties, such as service providers.
- Administer intellectual property rights.
- Make required governmental reports and filings.  
This status enables the Foundation to sometimes act more quickly, predictably, or safely ‚Äì and enables the Foundation to leverage those advantages to support the Collective in its early developmental stages."
511,Why is the legal status of the Optimism Foundation important for its operations?,"The legal status allows the Foundation to act more quickly, predictably, or safely, and leverage these advantages to support the Collective in its early developmental stages.","As an established entity (a Cayman foundation company), the Optimism Foundation can enter into legally enforceable, binding commitments with third parties in the ‚Äúreal‚Äù world on a limited liability basis. For example, the Foundation is able to:  
- Enter into contracts with third parties, such as service providers.
- Administer intellectual property rights.
- Make required governmental reports and filings.  
This status enables the Foundation to sometimes act more quickly, predictably, or safely ‚Äì and enables the Foundation to leverage those advantages to support the Collective in its early developmental stages."
512,How does Optimism governance approach its development?,"Optimism governance is committed to experimentation and takes an iterative approach. This allows the Collective to build a strong immune system, discover effective processes, and increase the chances of a successful journey.","Optimism governance is a commitment to experimentation. This iterative approach gives the Collective time to build a strong immune system, discover the processes that work best, and ultimately increase its chances of a successful journey.  
In its stewardship role, the Optimism Foundation currently facilitates a number of administrative aspects of Collective governance. For instance, it:  
- Monitors and moderates governance proposal processes.
- Implements approved governance proposals.
- Helps develop frameworks, such as the Working Constitution and the Operating Manual, to facilitate participation.  
The Foundation also supports the Optimism protocol as an open source project,  by encouraging and enabling the community to build out  its technical architecture and commissioning technical research on scalability, security, and decentralization.  
The Foundation will not provide these administrative services indefinitely; its ultimate aim is to coordinate contributors into creating the technical and governance foundations that allow the Foundation to decentralize its role over time."
512,What role does the Optimism Foundation play in governance?,"The Optimism Foundation facilitates several administrative aspects of governance. It monitors and moderates governance proposal processes, implements approved proposals, and helps develop frameworks like the Working Constitution and the Operating Manual to facilitate participation.","Optimism governance is a commitment to experimentation. This iterative approach gives the Collective time to build a strong immune system, discover the processes that work best, and ultimately increase its chances of a successful journey.  
In its stewardship role, the Optimism Foundation currently facilitates a number of administrative aspects of Collective governance. For instance, it:  
- Monitors and moderates governance proposal processes.
- Implements approved governance proposals.
- Helps develop frameworks, such as the Working Constitution and the Operating Manual, to facilitate participation.  
The Foundation also supports the Optimism protocol as an open source project,  by encouraging and enabling the community to build out  its technical architecture and commissioning technical research on scalability, security, and decentralization.  
The Foundation will not provide these administrative services indefinitely; its ultimate aim is to coordinate contributors into creating the technical and governance foundations that allow the Foundation to decentralize its role over time."
512,How does the Optimism Foundation support the technical development of the protocol?,"The Foundation supports the Optimism protocol as an open-source project by encouraging and enabling the community to build its technical architecture. It also commissions technical research on scalability, security, and decentralization.","Optimism governance is a commitment to experimentation. This iterative approach gives the Collective time to build a strong immune system, discover the processes that work best, and ultimately increase its chances of a successful journey.  
In its stewardship role, the Optimism Foundation currently facilitates a number of administrative aspects of Collective governance. For instance, it:  
- Monitors and moderates governance proposal processes.
- Implements approved governance proposals.
- Helps develop frameworks, such as the Working Constitution and the Operating Manual, to facilitate participation.  
The Foundation also supports the Optimism protocol as an open source project,  by encouraging and enabling the community to build out  its technical architecture and commissioning technical research on scalability, security, and decentralization.  
The Foundation will not provide these administrative services indefinitely; its ultimate aim is to coordinate contributors into creating the technical and governance foundations that allow the Foundation to decentralize its role over time."
513,Who governs the Optimism Foundation?,The Optimism Foundation is governed by a Board of Directors and a Supervisor.,"The Optimism Foundation is governed by a Board of Directors and a Supervisor.  
The Board of Directors currently consists of:  Abbey Titcomb, Ben Jones, Brian Avello, Eva Beylin, and Jing. The Board‚Äôs role is to manage the business and affairs of the Foundation.  
The Supervisor is the Cayman Islands firm, DS Limited. Its role is to oversee the Foundation‚Äôs directors and ensure the observance of their legal obligations.  
The Foundation also employs officers, contractors and service providers to execute on its operational and administrative aims."
513,Who are the current members of the Board of Directors for the Optimism Foundation?,"The current members of the Board of Directors are Abbey Titcomb, Ben Jones, Brian Avello, Eva Beylin, and Jing.","The Optimism Foundation is governed by a Board of Directors and a Supervisor.  
The Board of Directors currently consists of:  Abbey Titcomb, Ben Jones, Brian Avello, Eva Beylin, and Jing. The Board‚Äôs role is to manage the business and affairs of the Foundation.  
The Supervisor is the Cayman Islands firm, DS Limited. Its role is to oversee the Foundation‚Äôs directors and ensure the observance of their legal obligations.  
The Foundation also employs officers, contractors and service providers to execute on its operational and administrative aims."
513,What is the role of the Supervisor in the Optimism Foundation?,"The Supervisor, which is the Cayman Islands firm DS Limited, oversees the Foundation‚Äôs directors and ensures they observe their legal obligations.","The Optimism Foundation is governed by a Board of Directors and a Supervisor.  
The Board of Directors currently consists of:  Abbey Titcomb, Ben Jones, Brian Avello, Eva Beylin, and Jing. The Board‚Äôs role is to manage the business and affairs of the Foundation.  
The Supervisor is the Cayman Islands firm, DS Limited. Its role is to oversee the Foundation‚Äôs directors and ensure the observance of their legal obligations.  
The Foundation also employs officers, contractors and service providers to execute on its operational and administrative aims."
514,How is the Foundation legally accountable in its operations?,"The Foundation is legally accountable to its governing documentation, which requires it to follow the will of the Optimism Collective and its governance. It must observe and implement the outcome of valid governance votes in a diligent and commercially reasonable manner, except in cases where proposals are unsafe, insecure, inconsistent with purpose, legally non-compliant, or would prevent the Foundation from functioning.","As a Cayman Islands foundation company, the Foundation is legally accountable to its governing documentation, which sets up the Foundation to defer to the will of the Optimism Collective and its governance.  
Specifically, the Foundation is required to observe and implement the outcome of valid governance votes in a diligent and commercially reasonable manner. Its discretion in this regard is limited to proposals that are unsafe, insecure, inconsistent with purpose, incapable of being implemented in a legally compliant manner, or that would leave the Foundation unable to function.  
There are three governance proposal types specifically targeted towards ensuring that the Foundation and its personnel are accountable to the will of the Collective:  
- **Treasury appropriations** ‚Äì the amount of OP tokens available to the Foundation for disbursement is subject to an annual vote, beginning in 2023.  
- **Director removal** ‚Äì  the ability of governance to have a member of the Foundation‚Äôs Board of Directors removed from service.  
- **Rights protections** ‚Äì a blocking vote, which enables the Token House to veto any proposed change to the Foundation‚Äôs governing documents that would materially reduce the rights of OP token holders.  
More information on each of the above proposal types is contained in the [Operating Manual](https://github.com/ethereum-optimism/OPerating-manual)."
514,What types of governance proposals ensure the Foundation's accountability?,"There are three types of governance proposals that ensure the Foundation's accountability: Treasury appropriations, Director removal, and Rights protections. Treasury appropriations involve an annual vote on the amount of OP tokens available for disbursement. Director removal allows governance to remove a member of the Foundation‚Äôs Board of Directors. Rights protections enable the Token House to veto any proposed changes to the Foundation‚Äôs governing documents that would materially reduce the rights of OP token holders.","As a Cayman Islands foundation company, the Foundation is legally accountable to its governing documentation, which sets up the Foundation to defer to the will of the Optimism Collective and its governance.  
Specifically, the Foundation is required to observe and implement the outcome of valid governance votes in a diligent and commercially reasonable manner. Its discretion in this regard is limited to proposals that are unsafe, insecure, inconsistent with purpose, incapable of being implemented in a legally compliant manner, or that would leave the Foundation unable to function.  
There are three governance proposal types specifically targeted towards ensuring that the Foundation and its personnel are accountable to the will of the Collective:  
- **Treasury appropriations** ‚Äì the amount of OP tokens available to the Foundation for disbursement is subject to an annual vote, beginning in 2023.  
- **Director removal** ‚Äì  the ability of governance to have a member of the Foundation‚Äôs Board of Directors removed from service.  
- **Rights protections** ‚Äì a blocking vote, which enables the Token House to veto any proposed change to the Foundation‚Äôs governing documents that would materially reduce the rights of OP token holders.  
More information on each of the above proposal types is contained in the [Operating Manual](https://github.com/ethereum-optimism/OPerating-manual)."
514,What is the purpose of the 'Rights protections' proposal type?,"The 'Rights protections' proposal type allows the Token House to veto any proposed changes to the Foundation‚Äôs governing documents that would materially reduce the rights of OP token holders, ensuring that their rights are safeguarded.","As a Cayman Islands foundation company, the Foundation is legally accountable to its governing documentation, which sets up the Foundation to defer to the will of the Optimism Collective and its governance.  
Specifically, the Foundation is required to observe and implement the outcome of valid governance votes in a diligent and commercially reasonable manner. Its discretion in this regard is limited to proposals that are unsafe, insecure, inconsistent with purpose, incapable of being implemented in a legally compliant manner, or that would leave the Foundation unable to function.  
There are three governance proposal types specifically targeted towards ensuring that the Foundation and its personnel are accountable to the will of the Collective:  
- **Treasury appropriations** ‚Äì the amount of OP tokens available to the Foundation for disbursement is subject to an annual vote, beginning in 2023.  
- **Director removal** ‚Äì  the ability of governance to have a member of the Foundation‚Äôs Board of Directors removed from service.  
- **Rights protections** ‚Äì a blocking vote, which enables the Token House to veto any proposed change to the Foundation‚Äôs governing documents that would materially reduce the rights of OP token holders.  
More information on each of the above proposal types is contained in the [Operating Manual](https://github.com/ethereum-optimism/OPerating-manual)."
515,How long is the Collective‚Äôs Working Constitution intended to last?,The Collective‚Äôs Working Constitution is limited to a four-year period.,"While the Collective‚Äôs Working Constitution is limited to a four year period, the Foundation intends to continually transition responsibilities to the broader governance community well before that milestone.  
The Foundation‚Äôs role will evolve during this transition period, consistently trending towards its ‚Äì and the Collective‚Äôs ‚Äì commitment to sustained decentralization."
515,What is the Foundation's plan during the transition period of the Working Constitution?,The Foundation intends to continually transition responsibilities to the broader governance community well before the four-year milestone.,"While the Collective‚Äôs Working Constitution is limited to a four year period, the Foundation intends to continually transition responsibilities to the broader governance community well before that milestone.  
The Foundation‚Äôs role will evolve during this transition period, consistently trending towards its ‚Äì and the Collective‚Äôs ‚Äì commitment to sustained decentralization."
515,What is the ultimate goal of the Foundation and the Collective during the transition period?,The ultimate goal is to achieve sustained decentralization.,"While the Collective‚Äôs Working Constitution is limited to a four year period, the Foundation intends to continually transition responsibilities to the broader governance community well before that milestone.  
The Foundation‚Äôs role will evolve during this transition period, consistently trending towards its ‚Äì and the Collective‚Äôs ‚Äì commitment to sustained decentralization."
516,Where can I find guides for using the OP Mainnet?,You can find guides for using the OP Mainnet in the 'OP Mainnet Guides' section of the Optimism Governance Documentation.,"---
title: OP Mainnet Guides
lang: en-US
---"
517,How can I get started with deploying a contract on OP Mainnet?,"If you're brand new to OP Mainnet, you should check out the guide to deploying a basic contract. It will help you get familiar with the core steps required to get a contract deployed to the network.","If you're brand new to OP Mainnet, we recommend checking out the [guide to deploying a basic contract](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started)
It'll get you familiar with the core steps required to get a contract deployed to the network.
Luckily, OP Mainnet is [EVM equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), so it's 100% the same as deploying a contract to Ethereum.  
If you're a bit more familiar with OP  and Ethereum, you can try walking through one of the various [tutorials](https://github.com/ethereum-optimism/optimism-tutorial) put together by the Optimism community.
They'll help you get a headstart when building your first Optimistic project.  
If you need testnet ETH, you can use our [Superchain Faucet](https://app.optimism.io/faucet) or check out these other [network faucets](../useful-tools/faucets.md) options."
517,Is deploying a contract on OP Mainnet different from deploying on Ethereum?,"No, OP Mainnet is EVM equivalent, which means it's 100% the same as deploying a contract to Ethereum.","If you're brand new to OP Mainnet, we recommend checking out the [guide to deploying a basic contract](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started)
It'll get you familiar with the core steps required to get a contract deployed to the network.
Luckily, OP Mainnet is [EVM equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), so it's 100% the same as deploying a contract to Ethereum.  
If you're a bit more familiar with OP  and Ethereum, you can try walking through one of the various [tutorials](https://github.com/ethereum-optimism/optimism-tutorial) put together by the Optimism community.
They'll help you get a headstart when building your first Optimistic project.  
If you need testnet ETH, you can use our [Superchain Faucet](https://app.optimism.io/faucet) or check out these other [network faucets](../useful-tools/faucets.md) options."
517,Where can I get testnet ETH for OP Mainnet?,You can use the Superchain Faucet or check out other network faucet options to get testnet ETH for OP Mainnet.,"If you're brand new to OP Mainnet, we recommend checking out the [guide to deploying a basic contract](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/getting-started)
It'll get you familiar with the core steps required to get a contract deployed to the network.
Luckily, OP Mainnet is [EVM equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), so it's 100% the same as deploying a contract to Ethereum.  
If you're a bit more familiar with OP  and Ethereum, you can try walking through one of the various [tutorials](https://github.com/ethereum-optimism/optimism-tutorial) put together by the Optimism community.
They'll help you get a headstart when building your first Optimistic project.  
If you need testnet ETH, you can use our [Superchain Faucet](https://app.optimism.io/faucet) or check out these other [network faucets](../useful-tools/faucets.md) options."
518,Where can I find information on integrating OP Mainnet with my wallet?,"You can find a guide for adding OP Mainnet support to your wallet in the documentation. It provides all the relevant information, including network details and tutorials.","These guides provide integration guidelines for specific topics.
They are intended as one stop shops, and should have all the relevant information you need for completing a specific type of integration, from network information and tutorials to tips and tricks.  
We're aiming to maintain guides for many of the common interactions that developers might have with OP Mainnet.
For example, we have guides for adding OP Mainnet support to a [wallet](./wallet-dev.md) or a [CEX](./cex-dev.md).
We also have guides for getting your [token onto the standard bridge](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-standard-token) or even [writing your own custom bridge](./bridge-dev.md).  
Take a look at the list on the left for a complete list of the guides we've created so far."
518,Is there a guide for getting my token onto the standard bridge?,"Yes, there is a guide available for getting your token onto the standard bridge. You can find it on the GitHub repository for Ethereum Optimism under the standard bridge standard token tutorial.","These guides provide integration guidelines for specific topics.
They are intended as one stop shops, and should have all the relevant information you need for completing a specific type of integration, from network information and tutorials to tips and tricks.  
We're aiming to maintain guides for many of the common interactions that developers might have with OP Mainnet.
For example, we have guides for adding OP Mainnet support to a [wallet](./wallet-dev.md) or a [CEX](./cex-dev.md).
We also have guides for getting your [token onto the standard bridge](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-standard-token) or even [writing your own custom bridge](./bridge-dev.md).  
Take a look at the list on the left for a complete list of the guides we've created so far."
518,Are there resources for writing a custom bridge for OP Mainnet?,"Yes, the documentation includes a guide for writing your own custom bridge for OP Mainnet. This guide provides detailed instructions and tips for creating a custom bridge.","These guides provide integration guidelines for specific topics.
They are intended as one stop shops, and should have all the relevant information you need for completing a specific type of integration, from network information and tutorials to tips and tricks.  
We're aiming to maintain guides for many of the common interactions that developers might have with OP Mainnet.
For example, we have guides for adding OP Mainnet support to a [wallet](./wallet-dev.md) or a [CEX](./cex-dev.md).
We also have guides for getting your [token onto the standard bridge](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-standard-token) or even [writing your own custom bridge](./bridge-dev.md).  
Take a look at the list on the left for a complete list of the guides we've created so far."
519,How can I suggest a new use case for Optimism?,You can suggest a new use case by creating a GitHub issue on the Optimism community hub or by discussing it on their Discord channel.,"Are we missing an important use case?
We'd love to hear from you in a [GitHub issue](https://github.com/ethereum-optimism/community-hub/issues) or on [Discord](https://discord-gateway.optimism.io)."
520,How can I add a custom bridge to the OP Mainnet?,"To add a custom bridge to the OP Mainnet, you would need to follow specific guidelines and procedures outlined in the Optimism Governance Documentation. This process ensures that the custom bridge is compatible and secure for use on the OP Mainnet.","---
title: Adding a custom bridge to OP Mainnet
lang: en-US
---  
# Adding a custom bridge to Mainnet"
521,How does the standard bridge work in Optimism?,"In the standard bridge, when an ERC20 token is deposited on Layer 1 (L1) and transferred to the bridge contract, it remains 'locked' there while an equivalent amount is minted in the Layer 2 (L2) token. For withdrawals, the opposite happens: the L2 token amount is burned, and the same amount of L1 tokens is transferred to the recipient.","::: tip
Consider using the [Standard bridge](../developers/bridge/standard-bridge/) first before deciding to develop a custom bridge solution.  
In the standard bridge when ERC20 is deposited on L1 and transferred to the bridge contract, it remains ""locked"" there while the equivalent amount is minted in the L2 token. For withdrawals the opposite happens, the L2 token amount is burned then the same amount of L1 tokens is transferred to the recipient.
This implementation satisfies a wide range of requirements.
:::"
521,Why should I consider using the standard bridge before developing a custom bridge solution?,"The standard bridge implementation satisfies a wide range of requirements, making it a versatile and reliable option for most use cases. It simplifies the process of transferring tokens between L1 and L2 without the need for custom development.","::: tip
Consider using the [Standard bridge](../developers/bridge/standard-bridge/) first before deciding to develop a custom bridge solution.  
In the standard bridge when ERC20 is deposited on L1 and transferred to the bridge contract, it remains ""locked"" there while the equivalent amount is minted in the L2 token. For withdrawals the opposite happens, the L2 token amount is burned then the same amount of L1 tokens is transferred to the recipient.
This implementation satisfies a wide range of requirements.
:::"
522,Can I create my own custom bridge if the OP Mainnet Standard bridge doesn't meet my needs?,"Yes, you can deploy your custom bridge solution using the same cross-domain infrastructure as the Standard bridge. This is useful if you have specific requirements that the standard bridge cannot fulfill, such as managing token supply with custom logic or bridging non-ERC20 tokens like NFTs.","When the OP Mainnet Standard bridge does not satisfy your requirements for bridging assets or data you can deploy your custom bridge solution utilizing the same cross-domain infrastructure as the Standard bridge. For details on how cross-domain messaging works, see [Bridging basics](../developers/bridge/basics/) article and also the [tutorial on depositing and withdrawing between L1 and L2](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20).  
Some of the reasons why the standard bridge might not work for you is for example when you cannot limit the L2 token `mint` and `burn` functions to the bridge alone (something we require for security). Also certain custom bridges implement their own logic for managing the token supply which requires custom logic. Another case might be when you are bridging non-ERC20 tokens for example NFTs. Yet another case is when you are pooling deposits for cheaper transfers to L2.  
Note that when you are building a custom bridge for ERC20 tokens and planning to add these to the [Superchain token list](../developers/bridge/standard-bridge/#the-superchain-token-list), we have specific requirements for the bridge contracts. These have to implement the `IL1ERC20Bridge` interface in the L1 bridge contract and `IL2ERC20Bridge` interface in the L2 bridge contract. This ensures the [OP Mainnet Bridge UI](https://app.optimism.io/bridge/deposit) can support token deposits and withdrawals via this custom bridge.  
To add your bridge and token to the token list, you must make a pull request against the [Superchain token list repository](https://github.com/ethereum-optimism/ethereum-optimism.github.io#adding-a-token-to-the-list).
Due to the complexity of reviewing a custom bridge, you will need to deploy to OP Goerli first, before going to production."
522,What are some reasons why the standard bridge might not work for me?,"The standard bridge might not work for you if you cannot limit the L2 token `mint` and `burn` functions to the bridge alone, if you need to implement custom logic for managing the token supply, if you are bridging non-ERC20 tokens like NFTs, or if you are pooling deposits for cheaper transfers to L2.","When the OP Mainnet Standard bridge does not satisfy your requirements for bridging assets or data you can deploy your custom bridge solution utilizing the same cross-domain infrastructure as the Standard bridge. For details on how cross-domain messaging works, see [Bridging basics](../developers/bridge/basics/) article and also the [tutorial on depositing and withdrawing between L1 and L2](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20).  
Some of the reasons why the standard bridge might not work for you is for example when you cannot limit the L2 token `mint` and `burn` functions to the bridge alone (something we require for security). Also certain custom bridges implement their own logic for managing the token supply which requires custom logic. Another case might be when you are bridging non-ERC20 tokens for example NFTs. Yet another case is when you are pooling deposits for cheaper transfers to L2.  
Note that when you are building a custom bridge for ERC20 tokens and planning to add these to the [Superchain token list](../developers/bridge/standard-bridge/#the-superchain-token-list), we have specific requirements for the bridge contracts. These have to implement the `IL1ERC20Bridge` interface in the L1 bridge contract and `IL2ERC20Bridge` interface in the L2 bridge contract. This ensures the [OP Mainnet Bridge UI](https://app.optimism.io/bridge/deposit) can support token deposits and withdrawals via this custom bridge.  
To add your bridge and token to the token list, you must make a pull request against the [Superchain token list repository](https://github.com/ethereum-optimism/ethereum-optimism.github.io#adding-a-token-to-the-list).
Due to the complexity of reviewing a custom bridge, you will need to deploy to OP Goerli first, before going to production."
522,What do I need to do to add my custom bridge and token to the Superchain token list?,"To add your custom bridge and token to the Superchain token list, your bridge contracts must implement the `IL1ERC20Bridge` interface in the L1 bridge contract and `IL2ERC20Bridge` interface in the L2 bridge contract. You must then make a pull request against the Superchain token list repository. Additionally, you need to deploy your custom bridge to OP Goerli first before going to production due to the complexity of reviewing a custom bridge.","When the OP Mainnet Standard bridge does not satisfy your requirements for bridging assets or data you can deploy your custom bridge solution utilizing the same cross-domain infrastructure as the Standard bridge. For details on how cross-domain messaging works, see [Bridging basics](../developers/bridge/basics/) article and also the [tutorial on depositing and withdrawing between L1 and L2](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20).  
Some of the reasons why the standard bridge might not work for you is for example when you cannot limit the L2 token `mint` and `burn` functions to the bridge alone (something we require for security). Also certain custom bridges implement their own logic for managing the token supply which requires custom logic. Another case might be when you are bridging non-ERC20 tokens for example NFTs. Yet another case is when you are pooling deposits for cheaper transfers to L2.  
Note that when you are building a custom bridge for ERC20 tokens and planning to add these to the [Superchain token list](../developers/bridge/standard-bridge/#the-superchain-token-list), we have specific requirements for the bridge contracts. These have to implement the `IL1ERC20Bridge` interface in the L1 bridge contract and `IL2ERC20Bridge` interface in the L2 bridge contract. This ensures the [OP Mainnet Bridge UI](https://app.optimism.io/bridge/deposit) can support token deposits and withdrawals via this custom bridge.  
To add your bridge and token to the token list, you must make a pull request against the [Superchain token list repository](https://github.com/ethereum-optimism/ethereum-optimism.github.io#adding-a-token-to-the-list).
Due to the complexity of reviewing a custom bridge, you will need to deploy to OP Goerli first, before going to production."
523,How can I add OP Mainnet to my centralized exchange?,"To add OP Mainnet to your centralized exchange, you would need to follow the specific guidelines and procedures outlined in the Optimism Governance Documentation. This typically involves technical steps to integrate the network and ensure compatibility with your exchange's infrastructure.","---
title: Adding OP Mainnet to your centralized exchange
lang: en-US
---"
524,How do I connect to the OP Mainnet?,"You connect to the OP Mainnet the same way you connect to Ethereum, by using a JSON RPC endpoint.","You connect to OP Mainnet the same way you do to Ethereum, by connecting to a JSON RPC endpoint."
525,Where can I find the OP Mainnet endpoints?,You can find the OP Mainnet endpoints by clicking on the provided link in the documentation. It will take you to a page with both public endpoints and endpoints from infrastructure providers.,"[Click here for the OP Mainnet endpoints](../useful-tools/networks.md). You can choose between our public endpoints, which are rate limited, and [endpoints from infrastructure providers](../useful-tools/networks.md). Given rate throughput limits, we recommend using a private rpc provider for both mainnet and testnet use cases."
525,Should I use public or private endpoints for my project?,It is recommended to use a private RPC provider for both mainnet and testnet use cases due to rate throughput limits on public endpoints.,"[Click here for the OP Mainnet endpoints](../useful-tools/networks.md). You can choose between our public endpoints, which are rate limited, and [endpoints from infrastructure providers](../useful-tools/networks.md). Given rate throughput limits, we recommend using a private rpc provider for both mainnet and testnet use cases."
526,How is ETH used in Optimism compared to L1 Ethereum?,ETH is used in Optimism exactly the same way it is used in L1 Ethereum.,ETH is used precisely the way it is used in L1 Ethereum.
527,Are the ERC-20 contract addresses for tokens the same on OP Mainnet and Ethereum?,"No, the ERC-20 contract addresses for tokens on OP Mainnet may be different from the addresses for the same tokens on Ethereum. For example, the SNX token has different addresses on each network.","The ERC-20 contract address for a token on OP Mainnet may be different from the address for the same token on Ethereum. [The list of tokens and their addresses is here](https://static.optimism.io/optimism.tokenlist.json).  
For example, looking at the **SNX** token, we get these addresses:  
| ChainID | Network | Address |
| -: | - | - |
| 1  | Ethereum    | 0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f |
| 10 | OP Mainnet    | 0x8700daec35af8ff88c16bdf0418774cb3d7599b4
| 5 | Goerli (test network) | 0x51f44ca59b867E005e48FA573Cb8df83FC7f7597
| 420 | OP Goerli (test network) | 0x2E5ED97596a8368EB9E44B1f3F25B2E813845303  
To get the total SNX balance of a user that uses OP Mainnet you need to:  
1. Connect to a standard Ethereum endpoint and send a `balanceOf` query to address `0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f`.
1. Connect to an OP Mainnet endpoint and send a `balanceOf` query to address `0x8700daec35af8ff88c16bdf0418774cb3d7599b4`."
527,How can I find the ERC-20 contract addresses for tokens on OP Mainnet?,You can find the list of tokens and their addresses on OP Mainnet by visiting this [link](https://static.optimism.io/optimism.tokenlist.json).,"The ERC-20 contract address for a token on OP Mainnet may be different from the address for the same token on Ethereum. [The list of tokens and their addresses is here](https://static.optimism.io/optimism.tokenlist.json).  
For example, looking at the **SNX** token, we get these addresses:  
| ChainID | Network | Address |
| -: | - | - |
| 1  | Ethereum    | 0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f |
| 10 | OP Mainnet    | 0x8700daec35af8ff88c16bdf0418774cb3d7599b4
| 5 | Goerli (test network) | 0x51f44ca59b867E005e48FA573Cb8df83FC7f7597
| 420 | OP Goerli (test network) | 0x2E5ED97596a8368EB9E44B1f3F25B2E813845303  
To get the total SNX balance of a user that uses OP Mainnet you need to:  
1. Connect to a standard Ethereum endpoint and send a `balanceOf` query to address `0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f`.
1. Connect to an OP Mainnet endpoint and send a `balanceOf` query to address `0x8700daec35af8ff88c16bdf0418774cb3d7599b4`."
527,How do I get the total SNX balance of a user on OP Mainnet?,"To get the total SNX balance of a user on OP Mainnet, you need to connect to a standard Ethereum endpoint and send a `balanceOf` query to the Ethereum address `0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f`, and then connect to an OP Mainnet endpoint and send a `balanceOf` query to the OP Mainnet address `0x8700daec35af8ff88c16bdf0418774cb3d7599b4`.","The ERC-20 contract address for a token on OP Mainnet may be different from the address for the same token on Ethereum. [The list of tokens and their addresses is here](https://static.optimism.io/optimism.tokenlist.json).  
For example, looking at the **SNX** token, we get these addresses:  
| ChainID | Network | Address |
| -: | - | - |
| 1  | Ethereum    | 0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f |
| 10 | OP Mainnet    | 0x8700daec35af8ff88c16bdf0418774cb3d7599b4
| 5 | Goerli (test network) | 0x51f44ca59b867E005e48FA573Cb8df83FC7f7597
| 420 | OP Goerli (test network) | 0x2E5ED97596a8368EB9E44B1f3F25B2E813845303  
To get the total SNX balance of a user that uses OP Mainnet you need to:  
1. Connect to a standard Ethereum endpoint and send a `balanceOf` query to address `0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f`.
1. Connect to an OP Mainnet endpoint and send a `balanceOf` query to address `0x8700daec35af8ff88c16bdf0418774cb3d7599b4`."
528,Can I use my existing Ethereum code for transactions on OP Mainnet?,"Yes, the ERC-20 contracts on OP Mainnet function the same way they do on Ethereum, so you can use your existing code for withdrawals and deposits. Just connect to an OP Mainnet endpoint.","The ERC-20 contracts on OP Mainnet function the same way they do on Ethereum, so you can use your existing code for withdrawals and deposits. Just connect to an OP Mainnet endpoint."
529,Why is the cost of an OP Mainnet transaction usually low?,"The cost of an OP Mainnet transaction is usually low because the gas consumed by the transaction itself is rarely above 0.001 gwei per gas. However, the main cost comes from writing the transaction in Ethereum.","Most of the cost of an OP Mainnet transaction is not the gas consumed by the transaction itself (which is rarely above 0.001 gwei per gas), but the cost of writing the transaction in Ethereum. That cost is deducted automatically from the user's balance on OP Mainnet. If you charge your users the cost of withdrawals, you have to account for it.  
[You can read more about this subject here](../developers/build/transaction-fees.md).
The relevant code is [here](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas)."
529,How is the cost of writing a transaction in Ethereum handled on OP Mainnet?,The cost of writing a transaction in Ethereum is automatically deducted from the user's balance on OP Mainnet.,"Most of the cost of an OP Mainnet transaction is not the gas consumed by the transaction itself (which is rarely above 0.001 gwei per gas), but the cost of writing the transaction in Ethereum. That cost is deducted automatically from the user's balance on OP Mainnet. If you charge your users the cost of withdrawals, you have to account for it.  
[You can read more about this subject here](../developers/build/transaction-fees.md).
The relevant code is [here](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas)."
529,"If I charge my users for withdrawals on OP Mainnet, what should I consider?","If you charge your users for withdrawals on OP Mainnet, you need to account for the cost of writing the transaction in Ethereum, as this cost is deducted from the user's balance.","Most of the cost of an OP Mainnet transaction is not the gas consumed by the transaction itself (which is rarely above 0.001 gwei per gas), but the cost of writing the transaction in Ethereum. That cost is deducted automatically from the user's balance on OP Mainnet. If you charge your users the cost of withdrawals, you have to account for it.  
[You can read more about this subject here](../developers/build/transaction-fees.md).
The relevant code is [here](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas)."
530,How can I transfer assets from Ethereum mainnet to Optimism Mainnet?,You can use the standard gateway provided by Optimism. This gateway receives assets on Ethereum mainnet (L1) and mints the equivalent asset on Optimism Mainnet (L2). You can access the gateway [here](https://app.optimism.io/bridge).,"As a centralized exchange, there will be times that withdrawals of ETH or an ERC-20 token on either OP Mainnet or Ethereum exceed deposits and you need to transfer assets.
To do that you use a bridge or a gateway.
We have a [standard gateway](https://app.optimism.io/bridge) that receives assets on L1 (Ethereum mainnet), and mints the equivalent asset on OP Mainnet.
When a user wants to withdraw the assets back to L1, the bridge burns the asset on L2 and releases it to the user on L1. If you want to use this gateway automatically, [follow this tutorial for ETH](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-eth) or [this one for ERC-20 tokens](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20).  
Note that while L1 to L2 transactions typically take minutes, L2 to L1 transaction on the gateway require [a seven day challenge period](https://help.optimism.io/hc/en-us/articles/4411895558171-Why-do-I-need-to-wait-a-week-when-moving-assets-out-of-Optimism-).  
Alternatively, you can use a [third party bridge](https://www.optimism.io/apps/bridges). These bridges usually rely on liquidity pools to allow for faster withdrawals and support multiple L2 chains. However, their token selection might be more limited and they may not be as decentralized as our gateway.  
When an ERC-20 token does not have an OP Mainnet equivalent you can create one.
If there is no need for custom business logic, you can [follow the steps in this tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-standard-token).
If you need to implement some kind of custom logic, [see this tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-custom-token)."
530,Why does it take a week to move assets from Optimism back to Ethereum?,"When you withdraw assets from Optimism (L2) to Ethereum (L1) using the standard gateway, there is a seven-day challenge period. This period is required to ensure the security and integrity of the transaction. More details can be found [here](https://help.optimism.io/hc/en-us/articles/4411895558171-Why-do-I-need-to-wait-a-week-when-moving-assets-out-of-Optimism-).","As a centralized exchange, there will be times that withdrawals of ETH or an ERC-20 token on either OP Mainnet or Ethereum exceed deposits and you need to transfer assets.
To do that you use a bridge or a gateway.
We have a [standard gateway](https://app.optimism.io/bridge) that receives assets on L1 (Ethereum mainnet), and mints the equivalent asset on OP Mainnet.
When a user wants to withdraw the assets back to L1, the bridge burns the asset on L2 and releases it to the user on L1. If you want to use this gateway automatically, [follow this tutorial for ETH](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-eth) or [this one for ERC-20 tokens](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20).  
Note that while L1 to L2 transactions typically take minutes, L2 to L1 transaction on the gateway require [a seven day challenge period](https://help.optimism.io/hc/en-us/articles/4411895558171-Why-do-I-need-to-wait-a-week-when-moving-assets-out-of-Optimism-).  
Alternatively, you can use a [third party bridge](https://www.optimism.io/apps/bridges). These bridges usually rely on liquidity pools to allow for faster withdrawals and support multiple L2 chains. However, their token selection might be more limited and they may not be as decentralized as our gateway.  
When an ERC-20 token does not have an OP Mainnet equivalent you can create one.
If there is no need for custom business logic, you can [follow the steps in this tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-standard-token).
If you need to implement some kind of custom logic, [see this tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-custom-token)."
530,What can I do if an ERC-20 token does not have an equivalent on Optimism Mainnet?,"If an ERC-20 token does not have an equivalent on Optimism Mainnet, you can create one. If there is no need for custom business logic, you can follow the steps in this [tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-standard-token). If you need to implement custom logic, you can refer to this [tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-custom-token).","As a centralized exchange, there will be times that withdrawals of ETH or an ERC-20 token on either OP Mainnet or Ethereum exceed deposits and you need to transfer assets.
To do that you use a bridge or a gateway.
We have a [standard gateway](https://app.optimism.io/bridge) that receives assets on L1 (Ethereum mainnet), and mints the equivalent asset on OP Mainnet.
When a user wants to withdraw the assets back to L1, the bridge burns the asset on L2 and releases it to the user on L1. If you want to use this gateway automatically, [follow this tutorial for ETH](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-eth) or [this one for ERC-20 tokens](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20).  
Note that while L1 to L2 transactions typically take minutes, L2 to L1 transaction on the gateway require [a seven day challenge period](https://help.optimism.io/hc/en-us/articles/4411895558171-Why-do-I-need-to-wait-a-week-when-moving-assets-out-of-Optimism-).  
Alternatively, you can use a [third party bridge](https://www.optimism.io/apps/bridges). These bridges usually rely on liquidity pools to allow for faster withdrawals and support multiple L2 chains. However, their token selection might be more limited and they may not be as decentralized as our gateway.  
When an ERC-20 token does not have an OP Mainnet equivalent you can create one.
If there is no need for custom business logic, you can [follow the steps in this tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-standard-token).
If you need to implement some kind of custom logic, [see this tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/standard-bridge-custom-token)."
531,Where can I find the audit reports for Optimism?,You can find the full list of audit reports on their GitHub page at this link: https://github.com/ethereum-optimism/optimism/tree/develop/technical-documents/security-reviews.,For a full list of audit reports visit [GitHub](https://github.com/ethereum-optimism/optimism/tree/develop/technical-documents/security-reviews).
532,How is the NFT ecosystem structured on the OP Mainnet?,"The NFT ecosystem on the OP Mainnet consists of creators who supply the NFTs, marketplaces where NFTs are bought and sold, and buyers/traders who create demand. This ecosystem is built on infrastructures that enable the algorithmic generation of art, deployment of smart contracts, and access to NFT market intelligence.","---
title: Creating an OP Mainnet NFT
lang: en-US
---  
An NFT ecosystem consists of creators (supply), marketplaces, and buyers/traders (demand) built on top of infrastructures that enable algorithmic generation of art, deployment of smart contracts and access to NFT market intelligence.  
[Click here for statistics about NFTs on OP Mainnet](https://dune.com/oplabspbc/optimism-nft-secondary-marketplaces)"
532,Where can I find statistics about NFTs on the OP Mainnet?,You can find statistics about NFTs on the OP Mainnet by clicking [here](https://dune.com/oplabspbc/optimism-nft-secondary-marketplaces).,"---
title: Creating an OP Mainnet NFT
lang: en-US
---  
An NFT ecosystem consists of creators (supply), marketplaces, and buyers/traders (demand) built on top of infrastructures that enable algorithmic generation of art, deployment of smart contracts and access to NFT market intelligence.  
[Click here for statistics about NFTs on OP Mainnet](https://dune.com/oplabspbc/optimism-nft-secondary-marketplaces)"
533,Which tools are available on the OP Mainnet for NFTs?,"The OP Mainnet offers various tools for the NFT ecosystem, as depicted in the provided image.","![The OP Mainnet NFT ecosystem](../../assets/docs/guides/nft/OP-NFT-Ecosystem.jpg)  
These tools are available on OP Mainnet:"
534,Which platforms support ERC-1155 tokens?,"According to the fragment, Mintplex and ThirdWeb support ERC-1155 tokens.","- [NiftyKit](https://niftykit.com/)
- [nft-inator](https://nft-inator.com/)
- [Zero Code NFT](https://www.zerocodenft.com/)
- [Unlock](https://unlock-protocol.com/) (time-bound NFTs for membership)
- [ThirdWeb](https://thirdweb.com/)  
<details>
<summary>
Feature comparison
</summary>  
::: tip This comparison may be out of date  
It is accurate, as far as we know, when written (early January 2023), but new features are implemented all the time.  
:::  
|                   | NiftyKit | NFT-Inator | Mintplex | Zero Code NFT | ThirdWeb |
| ----------------- | --- | --- | --- | --- | --- |
| Multi-chain       | 3 | 5 | 6 | 11 | 7 (Flow coming soon) |
| Generator         | ‚ùå | ‚úÖ | ‚ùå | ‚ùå | ‚ùå |
| ERC-20   support  | ‚ùå | ‚ùå | ‚úÖ | ‚úÖ | ‚úÖ |
| ERC-721A support  | ‚úÖ | ‚úÖ | ‚úÖ | ‚úÖ | ‚úÖ |
| ERC-1155 support  | ‚ùå | ‚ùå | ‚úÖ | ‚ùå | ‚úÖ |
| DAO support       | ‚ùå | ‚ùå | ‚ùå | ‚úÖ | ‚úÖ |
| No Code deployment| ‚úÖ | ‚úÖ | ‚úÖ | ‚úÖ | ‚ùå |
| Pricing / Fee     | [Flat membership fee plus 2.5%-10% of the sales](https://app.niftykit.com/buy/passes) | 2% commission on primary sales | Paywall for premium features | Test for free, $499 for OpenSea setup | Currently zero |
| Image Hosting | [NFT storage](https://nft.storage/) / [Pinata](https://www.pinata.cloud/) | [NFT storage](https://nft.storage/) / [Pinata](https://www.pinata.cloud/) | Up to creators. Recommend [Pinata](https://www.pinata.cloud/) | [IPFS](https://ipfs.tech/) | [IPFS](https://ipfs.tech/). [Arweave](https://www.arweave.org/) and [Filecoin](https://filecoin.io/) coming soon |  
</details>"
534,Do any of these platforms offer no-code deployment?,"Yes, NiftyKit, NFT-Inator, Mintplex, and Zero Code NFT offer no-code deployment. ThirdWeb does not.","- [NiftyKit](https://niftykit.com/)
- [nft-inator](https://nft-inator.com/)
- [Zero Code NFT](https://www.zerocodenft.com/)
- [Unlock](https://unlock-protocol.com/) (time-bound NFTs for membership)
- [ThirdWeb](https://thirdweb.com/)  
<details>
<summary>
Feature comparison
</summary>  
::: tip This comparison may be out of date  
It is accurate, as far as we know, when written (early January 2023), but new features are implemented all the time.  
:::  
|                   | NiftyKit | NFT-Inator | Mintplex | Zero Code NFT | ThirdWeb |
| ----------------- | --- | --- | --- | --- | --- |
| Multi-chain       | 3 | 5 | 6 | 11 | 7 (Flow coming soon) |
| Generator         | ‚ùå | ‚úÖ | ‚ùå | ‚ùå | ‚ùå |
| ERC-20   support  | ‚ùå | ‚ùå | ‚úÖ | ‚úÖ | ‚úÖ |
| ERC-721A support  | ‚úÖ | ‚úÖ | ‚úÖ | ‚úÖ | ‚úÖ |
| ERC-1155 support  | ‚ùå | ‚ùå | ‚úÖ | ‚ùå | ‚úÖ |
| DAO support       | ‚ùå | ‚ùå | ‚ùå | ‚úÖ | ‚úÖ |
| No Code deployment| ‚úÖ | ‚úÖ | ‚úÖ | ‚úÖ | ‚ùå |
| Pricing / Fee     | [Flat membership fee plus 2.5%-10% of the sales](https://app.niftykit.com/buy/passes) | 2% commission on primary sales | Paywall for premium features | Test for free, $499 for OpenSea setup | Currently zero |
| Image Hosting | [NFT storage](https://nft.storage/) / [Pinata](https://www.pinata.cloud/) | [NFT storage](https://nft.storage/) / [Pinata](https://www.pinata.cloud/) | Up to creators. Recommend [Pinata](https://www.pinata.cloud/) | [IPFS](https://ipfs.tech/) | [IPFS](https://ipfs.tech/). [Arweave](https://www.arweave.org/) and [Filecoin](https://filecoin.io/) coming soon |  
</details>"
534,What are the pricing models for these platforms?,NiftyKit charges a flat membership fee plus 2.5%-10% of the sales. NFT-Inator takes a 2% commission on primary sales. Mintplex has a paywall for premium features. Zero Code NFT offers a free test and charges $499 for OpenSea setup. ThirdWeb currently has zero fees.,"- [NiftyKit](https://niftykit.com/)
- [nft-inator](https://nft-inator.com/)
- [Zero Code NFT](https://www.zerocodenft.com/)
- [Unlock](https://unlock-protocol.com/) (time-bound NFTs for membership)
- [ThirdWeb](https://thirdweb.com/)  
<details>
<summary>
Feature comparison
</summary>  
::: tip This comparison may be out of date  
It is accurate, as far as we know, when written (early January 2023), but new features are implemented all the time.  
:::  
|                   | NiftyKit | NFT-Inator | Mintplex | Zero Code NFT | ThirdWeb |
| ----------------- | --- | --- | --- | --- | --- |
| Multi-chain       | 3 | 5 | 6 | 11 | 7 (Flow coming soon) |
| Generator         | ‚ùå | ‚úÖ | ‚ùå | ‚ùå | ‚ùå |
| ERC-20   support  | ‚ùå | ‚ùå | ‚úÖ | ‚úÖ | ‚úÖ |
| ERC-721A support  | ‚úÖ | ‚úÖ | ‚úÖ | ‚úÖ | ‚úÖ |
| ERC-1155 support  | ‚ùå | ‚ùå | ‚úÖ | ‚ùå | ‚úÖ |
| DAO support       | ‚ùå | ‚ùå | ‚ùå | ‚úÖ | ‚úÖ |
| No Code deployment| ‚úÖ | ‚úÖ | ‚úÖ | ‚úÖ | ‚ùå |
| Pricing / Fee     | [Flat membership fee plus 2.5%-10% of the sales](https://app.niftykit.com/buy/passes) | 2% commission on primary sales | Paywall for premium features | Test for free, $499 for OpenSea setup | Currently zero |
| Image Hosting | [NFT storage](https://nft.storage/) / [Pinata](https://www.pinata.cloud/) | [NFT storage](https://nft.storage/) / [Pinata](https://www.pinata.cloud/) | Up to creators. Recommend [Pinata](https://www.pinata.cloud/) | [IPFS](https://ipfs.tech/) | [IPFS](https://ipfs.tech/). [Arweave](https://www.arweave.org/) and [Filecoin](https://filecoin.io/) coming soon |  
</details>"
535,Where can I find resources or APIs related to NFTs on Optimism?,"You can find resources or APIs related to NFTs on Optimism from several providers including Alchemy, SimpleHash, QuickNode, Reservoir, and NFTScan. Each of these providers offers documentation and tools to help you get started with NFTs on the Optimism network.","- [Alchemy](https://docs.alchemy.com/reference/nft-api-quickstart)
- [SimpleHash](https://simplehash.com/)
- [QuickNode](https://www.quicknode.com/nft-api)
- [Reservoir](https://docs.reservoir.tools/reference/optimism)
- [NFTScan](https://docs.nftscan.com/reference/evm/get-nfts-by-account)"
535,What is a good starting point for using the NFT API from Alchemy?,"A good starting point for using the NFT API from Alchemy is their quickstart guide, which you can find at the following link: https://docs.alchemy.com/reference/nft-api-quickstart.","- [Alchemy](https://docs.alchemy.com/reference/nft-api-quickstart)
- [SimpleHash](https://simplehash.com/)
- [QuickNode](https://www.quicknode.com/nft-api)
- [Reservoir](https://docs.reservoir.tools/reference/optimism)
- [NFTScan](https://docs.nftscan.com/reference/evm/get-nfts-by-account)"
535,Where can I find the documentation for using Reservoir with Optimism?,You can find the documentation for using Reservoir with Optimism at this link: https://docs.reservoir.tools/reference/optimism.,"- [Alchemy](https://docs.alchemy.com/reference/nft-api-quickstart)
- [SimpleHash](https://simplehash.com/)
- [QuickNode](https://www.quicknode.com/nft-api)
- [Reservoir](https://docs.reservoir.tools/reference/optimism)
- [NFTScan](https://docs.nftscan.com/reference/evm/get-nfts-by-account)"
536,Where can I buy or trade NFTs on the Optimism network?,"You can buy or trade NFTs on the Optimism network using platforms like Quix, OpenSea, Tofu, OptiMarket, and Circular Art.","- [Quix](https://qx.app/)
- [OpenSea](https://opensea.io/rankings?chain=optimism)
- [Tofu](https://tofunft.com/optimism)
- [OptiMarket](https://optimarket.io/)
- [Circular Art](https://www.circularart.xyz/)"
536,What are some marketplaces that support Optimism for NFT transactions?,"Some marketplaces that support Optimism for NFT transactions include Quix, OpenSea, Tofu, OptiMarket, and Circular Art.","- [Quix](https://qx.app/)
- [OpenSea](https://opensea.io/rankings?chain=optimism)
- [Tofu](https://tofunft.com/optimism)
- [OptiMarket](https://optimarket.io/)
- [Circular Art](https://www.circularart.xyz/)"
537,Who or what is Bluesweep?,Bluesweep is a platform or service that is mentioned in the Optimism Governance Documentation. You can find more information about it by visiting their website at https://www.bluesweep.xyz/.,- [Bluesweep](https://www.bluesweep.xyz/)
538,Can I use NFTs as collateral on Optimism?,"Yes, you can use NFTs as collateral on Optimism through a platform called Backed.",- [Backed](https://www.withbacked.xyz/network/optimism) lets you use NFTs as collateral
539,How can I find the chain ID and supporting information for the OP Goerli test network?,"You can find the chain ID and supporting information for OP Goerli, the Optimism test network, by using the endpoints provided in the documentation under the 'useful-tools/networks.md' section.","---
title: Testing on Optimistic Test Networks
lang: en-US
---  
You can find the chainid and supporting information for OP Goerli, our test network, [using these endpoints](../useful-tools/networks.md).
To obtain ETH and tokens (both ERC-20 and NFT) from faucets, [see here](../useful-tools/faucets.md).  
This page shows some additional testing utilities that you might find useful."
539,Where can I obtain ETH and tokens for testing on the OP Goerli network?,"You can obtain ETH and tokens, including ERC-20 and NFTs, from faucets. The specific faucets are listed in the documentation under the 'useful-tools/faucets.md' section.","---
title: Testing on Optimistic Test Networks
lang: en-US
---  
You can find the chainid and supporting information for OP Goerli, our test network, [using these endpoints](../useful-tools/networks.md).
To obtain ETH and tokens (both ERC-20 and NFT) from faucets, [see here](../useful-tools/faucets.md).  
This page shows some additional testing utilities that you might find useful."
539,What additional testing utilities are available for the OP Goerli network?,The documentation page on testing on Optimistic test networks provides some additional testing utilities that you might find useful. You can refer to that page for more details.,"---
title: Testing on Optimistic Test Networks
lang: en-US
---  
You can find the chainid and supporting information for OP Goerli, our test network, [using these endpoints](../useful-tools/networks.md).
To obtain ETH and tokens (both ERC-20 and NFT) from faucets, [see here](../useful-tools/faucets.md).  
This page shows some additional testing utilities that you might find useful."
540,How can I get test tokens for testing on Optimism?,You can use the `faucet` function in the ERC-20 testing token contracts to mint 1000 tokens for yourself. This function is specifically designed to facilitate testing.,"We have several ERC-20 testing token contracts.
This token is an implementation of ERC-20, with the addition of `faucet`, a function that mints for the caller 1000 tokens to facilitate testing.  
Additionally, both OP Mainnet and OP Goerli have [WETH at address `0x4200000000000000000000000000000000000006`](https://help.optimism.io/hc/en-us/articles/4417948883611-What-is-ETH-WETH-How-do-they-interact-)."
540,Is there a specific address for WETH on Optimism?,"Yes, both OP Mainnet and OP Goerli have WETH at the address `0x4200000000000000000000000000000000000006`.","We have several ERC-20 testing token contracts.
This token is an implementation of ERC-20, with the addition of `faucet`, a function that mints for the caller 1000 tokens to facilitate testing.  
Additionally, both OP Mainnet and OP Goerli have [WETH at address `0x4200000000000000000000000000000000000006`](https://help.optimism.io/hc/en-us/articles/4417948883611-What-is-ETH-WETH-How-do-they-interact-)."
541,Where can I find the contract address for the token OUT-1 on Optimism?,The contract address for the token OUT-1 on Optimism is `0x32307adfFE088e383AFAa721b06436aDaBA47DBE`. You can view more details on the Goerli Explorer [here](https://goerli-explorer.optimism.io/address/0x32307adfFE088e383AFAa721b06436aDaBA47DBE).,"| Address | Symbol | Decimals |
| - | - | -: |
| [`0x32307adfFE088e383AFAa721b06436aDaBA47DBE`](https://goerli-explorer.optimism.io/address/0x32307adfFE088e383AFAa721b06436aDaBA47DBE) | OUT-1 | 18 |
| [`0xb378ed8647d67b5db6fd41817fd7a0949627d87a`](https://goerli-explorer.optimism.io/address/0xb378eD8647D67b5dB6fD41817fd7a0949627D87a/) | OUT-2 | 18 |
| [`0x4e6597062c7dc988fbcfe77293d833bad770c19b`](https://goerli-explorer.optimism.io/address/0x4E6597062c7DC988FBcFE77293D833bAD770C19b) | OUT-3 | 18 |"
541,What is the decimal precision for the token OUT-2 on Optimism?,The decimal precision for the token OUT-2 on Optimism is 18 decimals.,"| Address | Symbol | Decimals |
| - | - | -: |
| [`0x32307adfFE088e383AFAa721b06436aDaBA47DBE`](https://goerli-explorer.optimism.io/address/0x32307adfFE088e383AFAa721b06436aDaBA47DBE) | OUT-1 | 18 |
| [`0xb378ed8647d67b5db6fd41817fd7a0949627d87a`](https://goerli-explorer.optimism.io/address/0xb378eD8647D67b5dB6fD41817fd7a0949627D87a/) | OUT-2 | 18 |
| [`0x4e6597062c7dc988fbcfe77293d833bad770c19b`](https://goerli-explorer.optimism.io/address/0x4E6597062c7DC988FBcFE77293D833bAD770C19b) | OUT-3 | 18 |"
541,How can I verify the contract address for the token OUT-3 on Optimism?,You can verify the contract address for the token OUT-3 on Optimism by visiting the Goerli Explorer [here](https://goerli-explorer.optimism.io/address/0x4E6597062c7DC988FBcFE77293D833bAD770C19b). The contract address is `0x4e6597062c7dc988fbcfe77293d833bad770c19b`.,"| Address | Symbol | Decimals |
| - | - | -: |
| [`0x32307adfFE088e383AFAa721b06436aDaBA47DBE`](https://goerli-explorer.optimism.io/address/0x32307adfFE088e383AFAa721b06436aDaBA47DBE) | OUT-1 | 18 |
| [`0xb378ed8647d67b5db6fd41817fd7a0949627d87a`](https://goerli-explorer.optimism.io/address/0xb378eD8647D67b5dB6fD41817fd7a0949627D87a/) | OUT-2 | 18 |
| [`0x4e6597062c7dc988fbcfe77293d833bad770c19b`](https://goerli-explorer.optimism.io/address/0x4E6597062c7DC988FBcFE77293D833bAD770C19b) | OUT-3 | 18 |"
542,Is the `OUTb` token supported by the bridge on Goerli?,"Yes, the `OUTb` token is supported by the bridge on Goerli.","The `OUTb` token is supported by the bridge on Goerli.
See [this tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20) to see how to use it."
542,Where can I find a tutorial on how to use the `OUTb` token with the bridge?,You can find a tutorial on how to use the `OUTb` token with the bridge [here](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20).,"The `OUTb` token is supported by the bridge on Goerli.
See [this tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20) to see how to use it."
543,How can I obtain NFT tokens on OP Goerli?,You can obtain NFT tokens on OP Goerli by calling the `faucet` function of the ERC-721 token contract located at address 0x38abA480f2bA7A17bC01EE5E1AD64fCedd93EfE7.,"We have an ERC-721 token on OP Goerli at address [`0x38abA480f2bA7A17bC01EE5E1AD64fCedd93EfE7`](https://goerli-explorer.optimism.io/address/0x38abA480f2bA7A17bC01EE5E1AD64fCedd93EfE7).
It is the OpenZeppelin ERC-721 token contract with the addition of `faucet`.
Just call the `faucet` function to get as many NFT tokens as you need."
543,What is the address of the ERC-721 token contract on OP Goerli?,The address of the ERC-721 token contract on OP Goerli is 0x38abA480f2bA7A17bC01EE5E1AD64fCedd93EfE7.,"We have an ERC-721 token on OP Goerli at address [`0x38abA480f2bA7A17bC01EE5E1AD64fCedd93EfE7`](https://goerli-explorer.optimism.io/address/0x38abA480f2bA7A17bC01EE5E1AD64fCedd93EfE7).
It is the OpenZeppelin ERC-721 token contract with the addition of `faucet`.
Just call the `faucet` function to get as many NFT tokens as you need."
543,What is special about the ERC-721 token contract on OP Goerli?,The ERC-721 token contract on OP Goerli is an OpenZeppelin ERC-721 token contract with an added `faucet` function that allows you to get as many NFT tokens as you need.,"We have an ERC-721 token on OP Goerli at address [`0x38abA480f2bA7A17bC01EE5E1AD64fCedd93EfE7`](https://goerli-explorer.optimism.io/address/0x38abA480f2bA7A17bC01EE5E1AD64fCedd93EfE7).
It is the OpenZeppelin ERC-721 token contract with the addition of `faucet`.
Just call the `faucet` function to get as many NFT tokens as you need."
544,How can I use OP Mainnet with my wallet?,"To use OP Mainnet with your wallet, you need to ensure that your wallet supports the OP Mainnet network. This typically involves adding the OP Mainnet network settings to your wallet manually or selecting it from a list of supported networks if your wallet has that feature.","---
title: Supporting OP Mainnet in your wallet
lang: en-US
---"
544,What is OP Mainnet?,"OP Mainnet is the main network for the Optimism protocol, which is a layer 2 scaling solution for Ethereum. It aims to provide faster and cheaper transactions while maintaining the security of the Ethereum blockchain.","---
title: Supporting OP Mainnet in your wallet
lang: en-US
---"
545,How does OP Mainnet differ from other EVM-based chains?,"OP Mainnet generally behaves like any other EVM-based chain, but there are minor discrepancies related to transaction fees. These discrepancies arise because OP Mainnet is a Layer 2 blockchain network that must publish transaction data to Ethereum.","This guide is intended for wallet developers who want to give their users the ability to send transactions on OP Mainnet (most other OP Stack chains behave similarly).
OP Mainnet generally behaves like any other EVM-based chain with the exception of minor discrepancies related to [transaction fees](#transaction-fees).
These fee discrepancies are an inherent result of the fact that OP Mainnet is a Layer 2 blockchain network that must publish transaction data to Ethereum."
545,Why are there fee discrepancies on OP Mainnet?,"The fee discrepancies on OP Mainnet are due to the fact that it is a Layer 2 blockchain network. This means it has to publish transaction data to Ethereum, which affects the transaction fees.","This guide is intended for wallet developers who want to give their users the ability to send transactions on OP Mainnet (most other OP Stack chains behave similarly).
OP Mainnet generally behaves like any other EVM-based chain with the exception of minor discrepancies related to [transaction fees](#transaction-fees).
These fee discrepancies are an inherent result of the fact that OP Mainnet is a Layer 2 blockchain network that must publish transaction data to Ethereum."
545,What is the purpose of this guide?,This guide is intended for wallet developers who want to enable their users to send transactions on OP Mainnet. It provides information on how to handle the minor discrepancies related to transaction fees on this Layer 2 blockchain network.,"This guide is intended for wallet developers who want to give their users the ability to send transactions on OP Mainnet (most other OP Stack chains behave similarly).
OP Mainnet generally behaves like any other EVM-based chain with the exception of minor discrepancies related to [transaction fees](#transaction-fees).
These fee discrepancies are an inherent result of the fact that OP Mainnet is a Layer 2 blockchain network that must publish transaction data to Ethereum."
546,How can I connect to OP Mainnet?,"You can connect to OP Mainnet via rate-limited public endpoints, private endpoints from infrastructure providers, or by running your own node.","OP Mainnet shares the [Ethereum JSON-RPC API](https://eth.wiki/json-rpc/API) with only [a few minor differences](../developers/build/json-rpc.md).
You'll find all of the important information about OP Mainnet, as well as any test networks, on [our Networks page](../useful-tools/networks.md).
You can choose to connect to OP Mainnet via our rate-limited public endpoints, [private endpoints from infrastructure providers](../useful-tools/networks.md), or [by running your own node](../developers/build/run-a-node/).
Because of throughput limits, we recommend using private node [providers](../useful-tools/providers.md) or running your own node for production applications."
546,Where can I find information about OP Mainnet and test networks?,You can find all the important information about OP Mainnet and test networks on the Networks page of the Optimism Governance Documentation.,"OP Mainnet shares the [Ethereum JSON-RPC API](https://eth.wiki/json-rpc/API) with only [a few minor differences](../developers/build/json-rpc.md).
You'll find all of the important information about OP Mainnet, as well as any test networks, on [our Networks page](../useful-tools/networks.md).
You can choose to connect to OP Mainnet via our rate-limited public endpoints, [private endpoints from infrastructure providers](../useful-tools/networks.md), or [by running your own node](../developers/build/run-a-node/).
Because of throughput limits, we recommend using private node [providers](../useful-tools/providers.md) or running your own node for production applications."
546,Are there any differences between the OP Mainnet and the Ethereum JSON-RPC API?,"Yes, OP Mainnet shares the Ethereum JSON-RPC API with only a few minor differences.","OP Mainnet shares the [Ethereum JSON-RPC API](https://eth.wiki/json-rpc/API) with only [a few minor differences](../developers/build/json-rpc.md).
You'll find all of the important information about OP Mainnet, as well as any test networks, on [our Networks page](../useful-tools/networks.md).
You can choose to connect to OP Mainnet via our rate-limited public endpoints, [private endpoints from infrastructure providers](../useful-tools/networks.md), or [by running your own node](../developers/build/run-a-node/).
Because of throughput limits, we recommend using private node [providers](../useful-tools/providers.md) or running your own node for production applications."
547,How can I find the ERC-20 contract address for a token on the OP Mainnet?,You can find the ERC-20 contract address for a token on the OP Mainnet by checking the Optimism token list. The list includes known addresses for many popular tokens and can be accessed [here](https://static.optimism.io/optimism.tokenlist.json) or with a nicer user interface [here](https://tokenlists.org/token-list?url=https://static.optimism.io/optimism.tokenlist.json).,"The ERC-20 contract address for a token on OP Mainnet may be different from the address for the same token on Ethereum.
Optimism maintains [a token list](https://static.optimism.io/optimism.tokenlist.json) that includes known addresses for many popular tokens.
You can see the same list with a nicer user interface [here](https://tokenlists.org/token-list?url=https://static.optimism.io/optimism.tokenlist.json).  
For example, looking at the **SNX** token, the [Superchain token list](https://static.optimism.io/optimism.tokenlist.json) returns the following addresses:  
| ChainID | Network | Address |
| -: | - | - |
| 1  | Ethereum    | 0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f |
| 10 | OP Mainnet    | 0x8700daec35af8ff88c16bdf0418774cb3d7599b4
| 5 | Goerli (test network) | 0x51f44ca59b867E005e48FA573Cb8df83FC7f7597
| 420 | OP Goerli (test network) | 0x2E5ED97596a8368EB9E44B1f3F25B2E813845303"
547,Is the ERC-20 contract address for a token on OP Mainnet the same as on Ethereum?,"No, the ERC-20 contract address for a token on OP Mainnet may be different from the address for the same token on Ethereum. You can verify the addresses by checking the Optimism token list.","The ERC-20 contract address for a token on OP Mainnet may be different from the address for the same token on Ethereum.
Optimism maintains [a token list](https://static.optimism.io/optimism.tokenlist.json) that includes known addresses for many popular tokens.
You can see the same list with a nicer user interface [here](https://tokenlists.org/token-list?url=https://static.optimism.io/optimism.tokenlist.json).  
For example, looking at the **SNX** token, the [Superchain token list](https://static.optimism.io/optimism.tokenlist.json) returns the following addresses:  
| ChainID | Network | Address |
| -: | - | - |
| 1  | Ethereum    | 0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f |
| 10 | OP Mainnet    | 0x8700daec35af8ff88c16bdf0418774cb3d7599b4
| 5 | Goerli (test network) | 0x51f44ca59b867E005e48FA573Cb8df83FC7f7597
| 420 | OP Goerli (test network) | 0x2E5ED97596a8368EB9E44B1f3F25B2E813845303"
548,How can I know if my transaction on OP Mainnet is final?,A transaction on OP Mainnet is considered final when it is 'Sequencer Confirmed'. This means the transaction has been accepted by the sequencer on OP Mainnet (L2) and its transaction receipt shows at least one confirmation.,"A transaction in OP Mainnet can be in one of two states:  
1. **Sequencer Confirmed**: The transaction has been accepted by the sequencer on OP Mainnet (L2)
2. **Confirmed Onchain**: The transaction has been written to Ethereum (L1)  
We're still working on the tooling to easily detect when a given transaction has been published to Ethereum.
For the moment, we recommend wallets consider transactions final after they are ""Sequencer Confirmed"".
Transactions are considered ""Sequencer Confirmed"" as soon as their transaction receipt shows at least one confirmation."
548,What are the states a transaction can be in on OP Mainnet?,"A transaction on OP Mainnet can be in one of two states: 'Sequencer Confirmed', where the transaction has been accepted by the sequencer on OP Mainnet (L2), and 'Confirmed Onchain', where the transaction has been written to Ethereum (L1).","A transaction in OP Mainnet can be in one of two states:  
1. **Sequencer Confirmed**: The transaction has been accepted by the sequencer on OP Mainnet (L2)
2. **Confirmed Onchain**: The transaction has been written to Ethereum (L1)  
We're still working on the tooling to easily detect when a given transaction has been published to Ethereum.
For the moment, we recommend wallets consider transactions final after they are ""Sequencer Confirmed"".
Transactions are considered ""Sequencer Confirmed"" as soon as their transaction receipt shows at least one confirmation."
548,Is there a way to easily detect when a transaction has been published to Ethereum?,"Currently, the tooling to easily detect when a transaction has been published to Ethereum is still being developed. For now, it is recommended to consider transactions final once they are 'Sequencer Confirmed'.","A transaction in OP Mainnet can be in one of two states:  
1. **Sequencer Confirmed**: The transaction has been accepted by the sequencer on OP Mainnet (L2)
2. **Confirmed Onchain**: The transaction has been written to Ethereum (L1)  
We're still working on the tooling to easily detect when a given transaction has been published to Ethereum.
For the moment, we recommend wallets consider transactions final after they are ""Sequencer Confirmed"".
Transactions are considered ""Sequencer Confirmed"" as soon as their transaction receipt shows at least one confirmation."
549,How are transaction fees structured on the OP Mainnet?,"On the OP Mainnet, transaction fees include both an L1 data fee and an L2 execution fee. The L2 execution fee is further composed of a fixed base fee per block and a user-selected priority fee.","In OP Mainnet transaction fees include both an [L1 data fee](../developers/build/transaction-fees.md#estimating-the-l1-data-fee) and an [L2 execution fee](../developers/build/transaction-fees.md#the-l2-execution-fee).
To display the entire estimated cost of a transaction to your users we recommend you [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).
We **highly recommend** displaying fees on OP Mainnet (and any other OP Stack chain that uses the same mechanism) as one unified fee to minimize user confusion.  
In Bedrock we support [EIP 1559](https://eips.ethereum.org/EIPS/eip-1559).
Therefore, the L2 execution fee is composed of two components: a fixed (per-block) base fee and a user selected priority fee."
549,How can I display the estimated cost of a transaction to users on OP Mainnet?,"To display the entire estimated cost of a transaction to users on OP Mainnet, it is recommended to use the SDK provided by Optimism. This helps in showing a unified fee to minimize user confusion.","In OP Mainnet transaction fees include both an [L1 data fee](../developers/build/transaction-fees.md#estimating-the-l1-data-fee) and an [L2 execution fee](../developers/build/transaction-fees.md#the-l2-execution-fee).
To display the entire estimated cost of a transaction to your users we recommend you [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).
We **highly recommend** displaying fees on OP Mainnet (and any other OP Stack chain that uses the same mechanism) as one unified fee to minimize user confusion.  
In Bedrock we support [EIP 1559](https://eips.ethereum.org/EIPS/eip-1559).
Therefore, the L2 execution fee is composed of two components: a fixed (per-block) base fee and a user selected priority fee."
549,What is the recommendation for displaying transaction fees on OP Mainnet?,"It is highly recommended to display transaction fees on OP Mainnet as one unified fee. This approach helps to minimize user confusion by consolidating the L1 data fee and the L2 execution fee into a single, understandable amount.","In OP Mainnet transaction fees include both an [L1 data fee](../developers/build/transaction-fees.md#estimating-the-l1-data-fee) and an [L2 execution fee](../developers/build/transaction-fees.md#the-l2-execution-fee).
To display the entire estimated cost of a transaction to your users we recommend you [use the SDK](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).
We **highly recommend** displaying fees on OP Mainnet (and any other OP Stack chain that uses the same mechanism) as one unified fee to minimize user confusion.  
In Bedrock we support [EIP 1559](https://eips.ethereum.org/EIPS/eip-1559).
Therefore, the L2 execution fee is composed of two components: a fixed (per-block) base fee and a user selected priority fee."
550,How often are blocks produced on OP Mainnet?,Blocks are produced every two seconds on OP Mainnet.,"[The EIP 1559 parameters](../developers/bedrock/differences.md#eip-1559) have different values in OP Mainnet (and many other OP Stack chains) than those on L1 Ethereum.
As a result, in every block the base fee can be between 98% and 110% of the previous value.
As blocks are produced every two seconds, the base fee can be between 54% and 1,745% of the value a minute earlier.
If it takes the user fourteen seconds to approve the transaction in the wallet, the base fee can almost double in that time.  
The base fee specified in the transaction is not necessarily the base fee that the user will pay, *it is merely an upper limit to that amount*.
In most cases, it makes sense to specify a much higher base fee than the current value, to ensure acceptance.  
For example, as I'm writing this, ETH is about $2000, and a cent is about 5000 gwei.
Assuming 20% of a cent is an acceptable base fee for a transaction, and that the transaction is a big 5,000,000 gas one (at the target block size), this gives us a base fee of 200,000 wei.
That would be the value to put in the transaction, even though the L2 base fee (as I'm writing this) is 2,420 wei.  
::: info Up to date information  
You can get the current L2 base fee [in the gas tracker dashboard](https://optimism.io/gas-tracker).  
:::"
550,Why might the base fee specified in a transaction be higher than the actual base fee paid?,The base fee specified in the transaction is an upper limit to ensure the transaction is accepted. The actual base fee paid can be lower.,"[The EIP 1559 parameters](../developers/bedrock/differences.md#eip-1559) have different values in OP Mainnet (and many other OP Stack chains) than those on L1 Ethereum.
As a result, in every block the base fee can be between 98% and 110% of the previous value.
As blocks are produced every two seconds, the base fee can be between 54% and 1,745% of the value a minute earlier.
If it takes the user fourteen seconds to approve the transaction in the wallet, the base fee can almost double in that time.  
The base fee specified in the transaction is not necessarily the base fee that the user will pay, *it is merely an upper limit to that amount*.
In most cases, it makes sense to specify a much higher base fee than the current value, to ensure acceptance.  
For example, as I'm writing this, ETH is about $2000, and a cent is about 5000 gwei.
Assuming 20% of a cent is an acceptable base fee for a transaction, and that the transaction is a big 5,000,000 gas one (at the target block size), this gives us a base fee of 200,000 wei.
That would be the value to put in the transaction, even though the L2 base fee (as I'm writing this) is 2,420 wei.  
::: info Up to date information  
You can get the current L2 base fee [in the gas tracker dashboard](https://optimism.io/gas-tracker).  
:::"
550,Where can I find the current L2 base fee for OP Mainnet?,You can get the current L2 base fee on the gas tracker dashboard at https://optimism.io/gas-tracker.,"[The EIP 1559 parameters](../developers/bedrock/differences.md#eip-1559) have different values in OP Mainnet (and many other OP Stack chains) than those on L1 Ethereum.
As a result, in every block the base fee can be between 98% and 110% of the previous value.
As blocks are produced every two seconds, the base fee can be between 54% and 1,745% of the value a minute earlier.
If it takes the user fourteen seconds to approve the transaction in the wallet, the base fee can almost double in that time.  
The base fee specified in the transaction is not necessarily the base fee that the user will pay, *it is merely an upper limit to that amount*.
In most cases, it makes sense to specify a much higher base fee than the current value, to ensure acceptance.  
For example, as I'm writing this, ETH is about $2000, and a cent is about 5000 gwei.
Assuming 20% of a cent is an acceptable base fee for a transaction, and that the transaction is a big 5,000,000 gas one (at the target block size), this gives us a base fee of 200,000 wei.
That would be the value to put in the transaction, even though the L2 base fee (as I'm writing this) is 2,420 wei.  
::: info Up to date information  
You can get the current L2 base fee [in the gas tracker dashboard](https://optimism.io/gas-tracker).  
:::"
551,How much should I set for the priority fee on OP Mainnet?,"On OP Mainnet, the priority fee tends to be very low. As of the time the documentation was written, a priority fee of 500 wei is sufficient. You can check the current values on the Optimism gas tracker.","In contrast to the base fee, the priority fee in the transaction is the amount that the user pays, and therefore it makes sense to keep it as low as possible.
If you already have estimating code you use for L1 Ethereum, you can just use that.  
Note that on OP Mainnet the priority fee tends to be very low.
As I am writing this, a priority fee of 500 wei is sufficient ([see here](https://optimism.io/gas-tracker) to get the current values)."
551,Can I use my existing code for estimating fees on L1 Ethereum for OP Mainnet?,"Yes, if you already have code for estimating fees on L1 Ethereum, you can use that same code for OP Mainnet.","In contrast to the base fee, the priority fee in the transaction is the amount that the user pays, and therefore it makes sense to keep it as low as possible.
If you already have estimating code you use for L1 Ethereum, you can just use that.  
Note that on OP Mainnet the priority fee tends to be very low.
As I am writing this, a priority fee of 500 wei is sufficient ([see here](https://optimism.io/gas-tracker) to get the current values)."
552,How do I ensure my transaction doesn't fail when sending the maximum amount of ETH from my wallet?,"To ensure your transaction doesn't fail, you must deduct both the L2 execution fee and the L1 data fee from your ETH balance before sending. This way, the total amount sent plus the fees will not exceed your available balance.","Many wallets allow users to send the maximum amount of ETH available in the user's balance.
Of course, this requires that the predicted fee for the send transaction be deducted from the ETH balance being sent.
You **MUST** deduct both the L2 execution fee and the L1 data fee or the charged fee plus the balance sent will exceed the user's balance and the transaction will fail."
552,Why do I need to consider both L2 execution fee and L1 data fee when sending ETH?,"You need to consider both the L2 execution fee and the L1 data fee because if you don't, the total charged fee plus the amount you are sending might exceed your available ETH balance, causing the transaction to fail.","Many wallets allow users to send the maximum amount of ETH available in the user's balance.
Of course, this requires that the predicted fee for the send transaction be deducted from the ETH balance being sent.
You **MUST** deduct both the L2 execution fee and the L1 data fee or the charged fee plus the balance sent will exceed the user's balance and the transaction will fail."
553,How can I check the current gas prices on Optimism?,You can check the current gas prices on Optimism by using the `eth_gasPrice` method. This method is part of the JSON-RPC API and provides the current gas price in wei.,"If you want to display the current gas prices, you can use [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)."
554,What's the title of the document?,The title of the document is 'Identity Overview'.,"---
title: Identity Overview
lang: en-US
---"
554,What language is the document written in?,The document is written in English (en-US).,"---
title: Identity Overview
lang: en-US
---"
555,Why is decentralized identity important in the context of Optimism?,"Decentralized identity is important because it allows individuals to customize their identity according to their preferences, move it seamlessly across services, and regain control of their personal information from centralized platforms. This is central to the mission of the Optimism Collective, which aims to build a better economic engine that fuels positive-sum games.","Identity is a fundamental aspect of human experience that encompasses the relationships, interests, and values that define individuals and groups.
However, the current online identity landscape is fragmented, non-interoperable, and controlled by centralized gatekeepers.  
Decentralized identity solutions empower individuals to customize their identity according to their preferences, move it seamlessly across services, and regain control of their personal information from centralized platforms.
These solutions are designed to enable users to prove specific attributes about themselves in a trustworthy and verifiable way, without compromising their privacy or security.  
The Optimism Collective is [building a better economic engine that fuels positive-sum games](https://www.optimism.io/vision) and decentralized identity is central to that mission.
For example, the two-house governance system of the Optimism Collective is composed of token holders and community members who participate in a one-person-one-vote system based on reputation and community contributions.  
In addition to democratic governance, decentralized identity expands the design space for innovation and gives individuals greater control over their finances, and enables them to participate in the global economy on their own terms."
555,How does the governance system of the Optimism Collective work?,"The governance system of the Optimism Collective is composed of two houses: token holders and community members. Community members participate in a one-person-one-vote system based on reputation and community contributions, which is enabled by decentralized identity solutions.","Identity is a fundamental aspect of human experience that encompasses the relationships, interests, and values that define individuals and groups.
However, the current online identity landscape is fragmented, non-interoperable, and controlled by centralized gatekeepers.  
Decentralized identity solutions empower individuals to customize their identity according to their preferences, move it seamlessly across services, and regain control of their personal information from centralized platforms.
These solutions are designed to enable users to prove specific attributes about themselves in a trustworthy and verifiable way, without compromising their privacy or security.  
The Optimism Collective is [building a better economic engine that fuels positive-sum games](https://www.optimism.io/vision) and decentralized identity is central to that mission.
For example, the two-house governance system of the Optimism Collective is composed of token holders and community members who participate in a one-person-one-vote system based on reputation and community contributions.  
In addition to democratic governance, decentralized identity expands the design space for innovation and gives individuals greater control over their finances, and enables them to participate in the global economy on their own terms."
555,What benefits does decentralized identity provide to individuals?,"Decentralized identity provides individuals with greater control over their personal information, allows them to prove specific attributes about themselves in a trustworthy and verifiable way without compromising their privacy or security, and enables them to participate in the global economy on their own terms.","Identity is a fundamental aspect of human experience that encompasses the relationships, interests, and values that define individuals and groups.
However, the current online identity landscape is fragmented, non-interoperable, and controlled by centralized gatekeepers.  
Decentralized identity solutions empower individuals to customize their identity according to their preferences, move it seamlessly across services, and regain control of their personal information from centralized platforms.
These solutions are designed to enable users to prove specific attributes about themselves in a trustworthy and verifiable way, without compromising their privacy or security.  
The Optimism Collective is [building a better economic engine that fuels positive-sum games](https://www.optimism.io/vision) and decentralized identity is central to that mission.
For example, the two-house governance system of the Optimism Collective is composed of token holders and community members who participate in a one-person-one-vote system based on reputation and community contributions.  
In addition to democratic governance, decentralized identity expands the design space for innovation and gives individuals greater control over their finances, and enables them to participate in the global economy on their own terms."
556,How does decentralized identity work on the Superchain?,"Decentralized identity on the Superchain uses proof of personhood and reputation data from various sources, eliminating the need for a single entity to own user data and identity. Algorithms like EigenTrust help derive identity sets based on a subjective web of trust, making identity verification more trustworthy and reliable in a decentralized environment.","Building decentralized identity on the Superchain involves using proof of personhood and reputation data from various sources, eliminating the need for a single entity to own user data and identity.  
Through this process, anyone can use algorithms like [EigenTrust](https://en.wikipedia.org/wiki/EigenTrust) to derive identity sets based on a purely subjective web of trust. This allows for the establishment of a more trustworthy and reliable means of verifying an individual's identity in a decentralized environment.  
This open-source primitive can be applied across the Superchain for a variety of Sybil-resistant applications, including democratic voting and onchain credit scoring for under-collateralized loans. By leveraging attestations in this way, developers can create more secure, transparent, and democratic systems that allow for greater participation and access for everyone.  
Decentralized identity is an essential components of a more democratic, secure, and accessible web. By working together, we can establish a more diverse and trustworthy network of identities that benefits everyone, and enables new opportunities for innovation in the decentralized identity space.  
The AttestationStation serves as a key component in achieving this vision. It functions as a multiplayer database and its underlying network of attestations lays the foundation for constructing decentralized identity systems that can effectively scale and adapt to the evolving needs of users and developers.  
[Next >](./build.md)"
556,What are some applications of decentralized identity on the Superchain?,"Decentralized identity on the Superchain can be applied to various Sybil-resistant applications, such as democratic voting and onchain credit scoring for under-collateralized loans. These applications leverage attestations to create more secure, transparent, and democratic systems.","Building decentralized identity on the Superchain involves using proof of personhood and reputation data from various sources, eliminating the need for a single entity to own user data and identity.  
Through this process, anyone can use algorithms like [EigenTrust](https://en.wikipedia.org/wiki/EigenTrust) to derive identity sets based on a purely subjective web of trust. This allows for the establishment of a more trustworthy and reliable means of verifying an individual's identity in a decentralized environment.  
This open-source primitive can be applied across the Superchain for a variety of Sybil-resistant applications, including democratic voting and onchain credit scoring for under-collateralized loans. By leveraging attestations in this way, developers can create more secure, transparent, and democratic systems that allow for greater participation and access for everyone.  
Decentralized identity is an essential components of a more democratic, secure, and accessible web. By working together, we can establish a more diverse and trustworthy network of identities that benefits everyone, and enables new opportunities for innovation in the decentralized identity space.  
The AttestationStation serves as a key component in achieving this vision. It functions as a multiplayer database and its underlying network of attestations lays the foundation for constructing decentralized identity systems that can effectively scale and adapt to the evolving needs of users and developers.  
[Next >](./build.md)"
556,What is the role of the AttestationStation in decentralized identity?,"The AttestationStation serves as a key component in building decentralized identity systems on the Superchain. It functions as a multiplayer database, and its network of attestations lays the foundation for constructing scalable and adaptable decentralized identity systems.","Building decentralized identity on the Superchain involves using proof of personhood and reputation data from various sources, eliminating the need for a single entity to own user data and identity.  
Through this process, anyone can use algorithms like [EigenTrust](https://en.wikipedia.org/wiki/EigenTrust) to derive identity sets based on a purely subjective web of trust. This allows for the establishment of a more trustworthy and reliable means of verifying an individual's identity in a decentralized environment.  
This open-source primitive can be applied across the Superchain for a variety of Sybil-resistant applications, including democratic voting and onchain credit scoring for under-collateralized loans. By leveraging attestations in this way, developers can create more secure, transparent, and democratic systems that allow for greater participation and access for everyone.  
Decentralized identity is an essential components of a more democratic, secure, and accessible web. By working together, we can establish a more diverse and trustworthy network of identities that benefits everyone, and enables new opportunities for innovation in the decentralized identity space.  
The AttestationStation serves as a key component in achieving this vision. It functions as a multiplayer database and its underlying network of attestations lays the foundation for constructing decentralized identity systems that can effectively scale and adapt to the evolving needs of users and developers.  
[Next >](./build.md)"
557,Which applications use the AttestationStation?,"The documentation lists some of the applications that use the AttestationStation, but the specific applications are not mentioned in the provided fragment.","---
title: Applications
lang: en-US
---  
These are some of the applications that use the AttestationStation:"
558,What is EAS Scan?,"EAS Scan is a no-code interface that allows you to build schemas, query, and submit attestations on the Optimism network.","- [EAS Scan](https://optimism.easscan.org/). This no-code interface lets you build schemas, query, and submit attestations.
- [Citizen Attestations](https://citizen-attestations.xyz). An attestation explorer for Optimism focusing on attestations that are relevant for the OP Citizens eligibility process.
- [Attest Fest](https://attest-fest.party). Create multiple EAS attestations using the power of CSV and Safe multisig wallets. It's an attest fest, yaay!"
558,What is Citizen Attestations?,Citizen Attestations is an attestation explorer for Optimism that focuses on attestations relevant to the OP Citizens eligibility process.,"- [EAS Scan](https://optimism.easscan.org/). This no-code interface lets you build schemas, query, and submit attestations.
- [Citizen Attestations](https://citizen-attestations.xyz). An attestation explorer for Optimism focusing on attestations that are relevant for the OP Citizens eligibility process.
- [Attest Fest](https://attest-fest.party). Create multiple EAS attestations using the power of CSV and Safe multisig wallets. It's an attest fest, yaay!"
558,What is Attest Fest?,Attest Fest is a platform where you can create multiple EAS attestations using the power of CSV files and Safe multisig wallets.,"- [EAS Scan](https://optimism.easscan.org/). This no-code interface lets you build schemas, query, and submit attestations.
- [Citizen Attestations](https://citizen-attestations.xyz). An attestation explorer for Optimism focusing on attestations that are relevant for the OP Citizens eligibility process.
- [Attest Fest](https://attest-fest.party). Create multiple EAS attestations using the power of CSV and Safe multisig wallets. It's an attest fest, yaay!"
559,How can I query and submit attestations on Optimism?,"You can use the AttestationStation Interface by sbvegan, which allows you to query and submit attestations. You can access it at https://attestationstation.xyz/.","- [AttestationStation Interface by sbvegan](https://attestationstation.xyz/).
This interface lets you query and submit attestations.
- [Optimist Score by Flipside](https://science.flipsidecrypto.xyz/optimist/).
- [Optimism Attestor](https://provenance.clique.social/attestor/opattestor) and [ZK Discord Attestations](https://clique.social/attestor/opattestor_discordroles) by Clique.
Bring web2 user behavior and identity data onchain, while bridging the gap between value-creating activities in web2 and incentive distribution layers in web3.
- [Credit Risk Score by RociFi](https://v2.roci.fi/app/analytics?address=0x00227dd82fae1220bdac630297753bb2cb4e8ddd).
Mint NFCS (Non-Fungible Credit Score); DeFi Credit Scoring; Borrow Under-Collateralized DeFi Loans with 70-85% of Collateral; Lend up to 15% APR.
- [Data Provider by Sismo](https://factory.sismo.io/).
Create a Sismo Connect app or Badge for your users.
- [Otterspace Score](https://docs.otterspace.xyz/otterspace-attestation-score).
Otterspace‚Äôs non-transferable badge protocol helps dApp builders & communities create better incentive systems, non-financial rewards and automate permissions"
559,What is the Optimist Score and where can I find it?,The Optimist Score is provided by Flipside and you can find it at https://science.flipsidecrypto.xyz/optimist/.,"- [AttestationStation Interface by sbvegan](https://attestationstation.xyz/).
This interface lets you query and submit attestations.
- [Optimist Score by Flipside](https://science.flipsidecrypto.xyz/optimist/).
- [Optimism Attestor](https://provenance.clique.social/attestor/opattestor) and [ZK Discord Attestations](https://clique.social/attestor/opattestor_discordroles) by Clique.
Bring web2 user behavior and identity data onchain, while bridging the gap between value-creating activities in web2 and incentive distribution layers in web3.
- [Credit Risk Score by RociFi](https://v2.roci.fi/app/analytics?address=0x00227dd82fae1220bdac630297753bb2cb4e8ddd).
Mint NFCS (Non-Fungible Credit Score); DeFi Credit Scoring; Borrow Under-Collateralized DeFi Loans with 70-85% of Collateral; Lend up to 15% APR.
- [Data Provider by Sismo](https://factory.sismo.io/).
Create a Sismo Connect app or Badge for your users.
- [Otterspace Score](https://docs.otterspace.xyz/otterspace-attestation-score).
Otterspace‚Äôs non-transferable badge protocol helps dApp builders & communities create better incentive systems, non-financial rewards and automate permissions"
559,How can I bring web2 user behavior and identity data onchain?,You can use the Optimism Attestor and ZK Discord Attestations by Clique. These tools help bridge the gap between value-creating activities in web2 and incentive distribution layers in web3. You can access them at https://provenance.clique.social/attestor/opattestor and https://clique.social/attestor/opattestor_discordroles respectively.,"- [AttestationStation Interface by sbvegan](https://attestationstation.xyz/).
This interface lets you query and submit attestations.
- [Optimist Score by Flipside](https://science.flipsidecrypto.xyz/optimist/).
- [Optimism Attestor](https://provenance.clique.social/attestor/opattestor) and [ZK Discord Attestations](https://clique.social/attestor/opattestor_discordroles) by Clique.
Bring web2 user behavior and identity data onchain, while bridging the gap between value-creating activities in web2 and incentive distribution layers in web3.
- [Credit Risk Score by RociFi](https://v2.roci.fi/app/analytics?address=0x00227dd82fae1220bdac630297753bb2cb4e8ddd).
Mint NFCS (Non-Fungible Credit Score); DeFi Credit Scoring; Borrow Under-Collateralized DeFi Loans with 70-85% of Collateral; Lend up to 15% APR.
- [Data Provider by Sismo](https://factory.sismo.io/).
Create a Sismo Connect app or Badge for your users.
- [Otterspace Score](https://docs.otterspace.xyz/otterspace-attestation-score).
Otterspace‚Äôs non-transferable badge protocol helps dApp builders & communities create better incentive systems, non-financial rewards and automate permissions"
560,Is AttestationStation v0 still supported?,"No, AttestationStation v0 is deprecated and not actively supported. It is recommended to use AttestationStation v1 instead.","---
title: AttestationStation v0
lang: en-US
---  
::: warning Deprecated  
This contract is not actively being supported, we recommend using [AttestationStation v1](./atst-v1.md).  
:::  
These attestations have these attributes:  
- **Creator**, the address that wrote the attestation.
- **Key**, a 32 byte value that identifies the attestation.
This value can be a short ASCII string, it can be the hash value of a longer (>32 characters) string, or it can be anything else.
It is possible for different creators to use the same key for different purposes.
- **Value**, a string of bytes that can be interpreted as ASCII, a number, etc.  
The interpretation of the attestation is up to the creator, and is not necessarily stored onchain.  
[Here is the tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/ecosystem/attestation-station/contract-access)"
560,What are the main attributes of an attestation in AttestationStation v0?,"The main attributes of an attestation in AttestationStation v0 are: Creator (the address that wrote the attestation), Key (a 32-byte value that identifies the attestation), and Value (a string of bytes that can be interpreted in various ways such as ASCII or a number).","---
title: AttestationStation v0
lang: en-US
---  
::: warning Deprecated  
This contract is not actively being supported, we recommend using [AttestationStation v1](./atst-v1.md).  
:::  
These attestations have these attributes:  
- **Creator**, the address that wrote the attestation.
- **Key**, a 32 byte value that identifies the attestation.
This value can be a short ASCII string, it can be the hash value of a longer (>32 characters) string, or it can be anything else.
It is possible for different creators to use the same key for different purposes.
- **Value**, a string of bytes that can be interpreted as ASCII, a number, etc.  
The interpretation of the attestation is up to the creator, and is not necessarily stored onchain.  
[Here is the tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/ecosystem/attestation-station/contract-access)"
560,Can different creators use the same key for different purposes in AttestationStation v0?,"Yes, it is possible for different creators to use the same key for different purposes in AttestationStation v0.","---
title: AttestationStation v0
lang: en-US
---  
::: warning Deprecated  
This contract is not actively being supported, we recommend using [AttestationStation v1](./atst-v1.md).  
:::  
These attestations have these attributes:  
- **Creator**, the address that wrote the attestation.
- **Key**, a 32 byte value that identifies the attestation.
This value can be a short ASCII string, it can be the hash value of a longer (>32 characters) string, or it can be anything else.
It is possible for different creators to use the same key for different purposes.
- **Value**, a string of bytes that can be interpreted as ASCII, a number, etc.  
The interpretation of the attestation is up to the creator, and is not necessarily stored onchain.  
[Here is the tutorial](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/ecosystem/attestation-station/contract-access)"
561,How can I search for all attestations about a specific address?,"To search for all attestations about a specific address, you need to do it offchain using various APIs. Some options include API endpoints by nxyz, GraphQL Indexer by Mason Hall, ShroomSDK by Flipside, or the Subgraph by wslyvh.","To look for an attestation you have to know the creator, the address it is about, and the key.
If you want to search for information (for example, ‚Äúall attestations about address X‚Äù or ‚Äúall attestations created by address Y for key Z‚Äù), you need to search offchain.  
To optimize for performance, there are several APIs that you can use to search attestations:  
- [API endpoints by nxyz](https://docs.n.xyz/reference/attestation-station)
- [GraphQL Indexer by Mason Hall](https://attestation-indexer-production.up.railway.app/graphql)
- [ShroomSDK by Flipside](https://github.com/MSilb7/op_attestationstation_data)
- [Subgraph by wslyvh](https://thegraph.com/hosted-service/subgraph/wslyvh/optimism-atst)  
Alternatively, you can look at `AttestationCreated` events on the blockchain.
This way there is no centralized authority to trust.  
- [Read contract events directly](https://github.com/ethereum-optimism/optimism-tutorial/blob/main/ecosystem/attestation-station/contract-access/README.md#read-all-relevant-attestations)
- [Use the SDK](https://github.com/ethereum-optimism/optimism/blob/develop/packages/atst/docs/sdk.md#getevents)"
561,What information do I need to look for a specific attestation?,"To look for a specific attestation, you need to know the creator, the address it is about, and the key.","To look for an attestation you have to know the creator, the address it is about, and the key.
If you want to search for information (for example, ‚Äúall attestations about address X‚Äù or ‚Äúall attestations created by address Y for key Z‚Äù), you need to search offchain.  
To optimize for performance, there are several APIs that you can use to search attestations:  
- [API endpoints by nxyz](https://docs.n.xyz/reference/attestation-station)
- [GraphQL Indexer by Mason Hall](https://attestation-indexer-production.up.railway.app/graphql)
- [ShroomSDK by Flipside](https://github.com/MSilb7/op_attestationstation_data)
- [Subgraph by wslyvh](https://thegraph.com/hosted-service/subgraph/wslyvh/optimism-atst)  
Alternatively, you can look at `AttestationCreated` events on the blockchain.
This way there is no centralized authority to trust.  
- [Read contract events directly](https://github.com/ethereum-optimism/optimism-tutorial/blob/main/ecosystem/attestation-station/contract-access/README.md#read-all-relevant-attestations)
- [Use the SDK](https://github.com/ethereum-optimism/optimism/blob/develop/packages/atst/docs/sdk.md#getevents)"
561,Is there a way to search for attestations without relying on a centralized authority?,"Yes, you can look at `AttestationCreated` events directly on the blockchain. This way, there is no centralized authority to trust. You can read contract events directly or use the SDK provided by Optimism.","To look for an attestation you have to know the creator, the address it is about, and the key.
If you want to search for information (for example, ‚Äúall attestations about address X‚Äù or ‚Äúall attestations created by address Y for key Z‚Äù), you need to search offchain.  
To optimize for performance, there are several APIs that you can use to search attestations:  
- [API endpoints by nxyz](https://docs.n.xyz/reference/attestation-station)
- [GraphQL Indexer by Mason Hall](https://attestation-indexer-production.up.railway.app/graphql)
- [ShroomSDK by Flipside](https://github.com/MSilb7/op_attestationstation_data)
- [Subgraph by wslyvh](https://thegraph.com/hosted-service/subgraph/wslyvh/optimism-atst)  
Alternatively, you can look at `AttestationCreated` events on the blockchain.
This way there is no centralized authority to trust.  
- [Read contract events directly](https://github.com/ethereum-optimism/optimism-tutorial/blob/main/ecosystem/attestation-station/contract-access/README.md#read-all-relevant-attestations)
- [Use the SDK](https://github.com/ethereum-optimism/optimism/blob/develop/packages/atst/docs/sdk.md#getevents)"
562,Where can I find the legacy AttestationStation contract in the Optimism monorepo?,You can find the legacy AttestationStation contract in the Optimism monorepo at this [link](https://github.com/ethereum-optimism/optimism/blob/e33d000561af65dbf438f5b8acfcc50c729a775e/packages/contracts-periphery/contracts/universal/op-nft/AttestationStation.sol).,"The legacy AttestationStation contract is located [in the Optimism monorepo](https://github.com/ethereum-optimism/optimism/blob/e33d000561af65dbf438f5b8acfcc50c729a775e/packages/contracts-periphery/contracts/universal/op-nft/AttestationStation.sol). It is deployed at address `0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77`, both on [Optimism Mainnet](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77) and [Optimism Goerli](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77). The following is the breakdown of this smart contract."
562,What is the address of the legacy AttestationStation contract on the Optimism Mainnet?,The address of the legacy AttestationStation contract on the Optimism Mainnet is `0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77`. You can view it on the Optimism Mainnet explorer [here](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77).,"The legacy AttestationStation contract is located [in the Optimism monorepo](https://github.com/ethereum-optimism/optimism/blob/e33d000561af65dbf438f5b8acfcc50c729a775e/packages/contracts-periphery/contracts/universal/op-nft/AttestationStation.sol). It is deployed at address `0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77`, both on [Optimism Mainnet](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77) and [Optimism Goerli](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77). The following is the breakdown of this smart contract."
562,Is the legacy AttestationStation contract also deployed on Optimism Goerli?,"Yes, the legacy AttestationStation contract is also deployed on Optimism Goerli at the same address `0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77`. You can view it on the Optimism Goerli explorer [here](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77).","The legacy AttestationStation contract is located [in the Optimism monorepo](https://github.com/ethereum-optimism/optimism/blob/e33d000561af65dbf438f5b8acfcc50c729a775e/packages/contracts-periphery/contracts/universal/op-nft/AttestationStation.sol). It is deployed at address `0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77`, both on [Optimism Mainnet](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77) and [Optimism Goerli](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77). The following is the breakdown of this smart contract."
563,How are attestations stored in Optimism's governance system?,"Attestations in Optimism's governance system are stored using a nested mapping in Solidity. The structure is `mapping(address => mapping(address => mapping(bytes32 => bytes)))`, which means it maps an address to another address, then to a bytes32 value, and finally to a bytes value.","The following is the nested mapping that stores all the attestations made.  
```solidity
mapping(address => mapping(address => mapping(bytes32 => bytes))) public attestations;
```"
564,How is an attestation represented in Optimism's governance documentation?,"An attestation in Optimism's governance documentation is represented by a struct called `AttestationData`. This struct includes three fields: `address about`, which specifies the address the attestation is about; `bytes32 key`, which is a key associated with the attestation; and `bytes val`, which holds the value of the attestation.","The following is a struct that represents a properly formatted attestation.  
```solidity
struct AttestationData {
address about;
bytes32 key;
bytes val;
}
```"
565,How do I know when an attestation has been successfully made in Optimism?,"An event called `AttestationCreated` is emitted when an attestation is successfully made. This event includes information about the creator, the subject of the attestation, a key, and a value.","This event is emitted when an attestation is successfully made.  
```solidity
event AttestationCreated(
address indexed creator,
address indexed about,
bytes32 indexed key,
bytes val
);
```"
565,What information is included in the `AttestationCreated` event in Optimism?,"The `AttestationCreated` event includes the following information: the address of the creator, the address of the subject (about), a key (as a bytes32 value), and a value (as bytes).","This event is emitted when an attestation is successfully made.  
```solidity
event AttestationCreated(
address indexed creator,
address indexed about,
bytes32 indexed key,
bytes val
);
```"
566,Who can create an attestation in the AttestationStation?,Anyone can create an attestation in the AttestationStation.,"Records attestations to the AttestationStation's state and emits an `AttestationCreated` event with the address of the message sender, address the attestation is about, the bytes32 key, and bytes value.  
```solidity
function attest(address _about, bytes32 _key, bytes memory _val) public
```  
Allows anyone to create an attestation.  
| Name     | Type | Description |
| -------- | --- | --- |
| `_about` | `address` | Address that the attestation is about. |
| `_key`   | `bytes32` | A key used to namespace the attestation. |
| `_val`   | `bytes` | An arbitrary value stored as part of the attestation. |"
566,What information is included in the `AttestationCreated` event?,"The `AttestationCreated` event includes the address of the message sender, the address the attestation is about, the bytes32 key, and the bytes value.","Records attestations to the AttestationStation's state and emits an `AttestationCreated` event with the address of the message sender, address the attestation is about, the bytes32 key, and bytes value.  
```solidity
function attest(address _about, bytes32 _key, bytes memory _val) public
```  
Allows anyone to create an attestation.  
| Name     | Type | Description |
| -------- | --- | --- |
| `_about` | `address` | Address that the attestation is about. |
| `_key`   | `bytes32` | A key used to namespace the attestation. |
| `_val`   | `bytes` | An arbitrary value stored as part of the attestation. |"
566,What are the parameters required for the `attest` function?,"The `attest` function requires three parameters: `_about` (the address that the attestation is about), `_key` (a bytes32 key used to namespace the attestation), and `_val` (an arbitrary value stored as part of the attestation).","Records attestations to the AttestationStation's state and emits an `AttestationCreated` event with the address of the message sender, address the attestation is about, the bytes32 key, and bytes value.  
```solidity
function attest(address _about, bytes32 _key, bytes memory _val) public
```  
Allows anyone to create an attestation.  
| Name     | Type | Description |
| -------- | --- | --- |
| `_about` | `address` | Address that the attestation is about. |
| `_key`   | `bytes32` | A key used to namespace the attestation. |
| `_val`   | `bytes` | An arbitrary value stored as part of the attestation. |"
567,How can I create attestations in Optimism?,You can create attestations in Optimism by using the `attest` function. This function allows anyone to create attestations by passing an array of attestation data as a parameter.,"```solidity
function attest(AttestationData[] memory _attestations) public
```  
Allows anyone to create attestations.  
Parameters:  
| Name | Type | Description |
| --- | --- | --- |
| `_attestations` | `AttestationData[]` | An array of attestation data. |"
567,What is the parameter required for the `attest` function?,"The `attest` function requires a parameter called `_attestations`, which is an array of attestation data (`AttestationData[]`).","```solidity
function attest(AttestationData[] memory _attestations) public
```  
Allows anyone to create attestations.  
Parameters:  
| Name | Type | Description |
| --- | --- | --- |
| `_attestations` | `AttestationData[]` | An array of attestation data. |"
568,"How does Optimism handle the roles of creator, signer, and transaction payer?","Optimism allows for the separation of the roles of creator, signer, and transaction payer. This means that different entities can be responsible for creating a transaction, signing it, and paying for it, which can provide more flexibility and security in managing transactions.","- [Separating creator, signer, and transaction payer](https://github.com/ethereum-optimism/optimism-tutorial/blob/main/ecosystem/attestation-station/contract-access/README.md#separating-creator-signer-and-transaction-payer)"
569,How can I interact with the AttestationStation v1 on the OP Mainnet?,"You can interact with the AttestationStation v1 on the OP Mainnet using the EAS scan user interface, the JavaScript SDK, or by accessing it directly onchain. The EAS scan user interface for OP Mainnet is available at https://optimism.easscan.org/.","---
title: AttestationStation v1
lang: en-US
---  
The AttestationStation v1 uses [the Ethereum Attestation service standard](https://docs.attest.sh/docs/welcome) deployed on these addresses:  
| Network         | Attestation Contract | Schema Registry Contract |
| --------------- | - | - |
| OP Goerli | [0x4200000000000000000000000000000000000021](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000021) | [0x4200000000000000000000000000000000000020](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000020)
| OP Mainnet | [0x4200000000000000000000000000000000000021](https://optimistic.etherscan.io/address/0x4200000000000000000000000000000000000021) | [0x4200000000000000000000000000000000000020](https://optimistic.etherscan.io/address/0x4200000000000000000000000000000000000020) |  
You can read and write attestations in several ways:  
- [EAS scan user interface (OP Mainnet)](https://optimism.easscan.org/)
- [EAS scan user interface (OP Goerli)](https://optimism-goerli-bedrock.easscan.org/)
- [JavaScript SDK](https://docs.attest.sh/docs/getting--started/javascript)
- [Access directly onchain](https://github.com/ethereum-attestation-service/eas-contracts/blob/master/contracts/EAS.sol) (if you need to attest from a smart contract)  
Indexing is available via:
- [GraphQL endpoint (OP Mainnet)](https://optimism.easscan.org/graphql)
- [GraphQL endpoint (OP Goerli)](https://optimism-goerli-bedrock.easscan.org/graphql)
- [Ponder graph]( https://github.com/ethereum-attestation-service/eas-ponder-graph)
- [Open source indexer]( https://github.com/ethereum-attestation-service/eas-indexing-service)"
569,Where can I find the contract addresses for the AttestationStation v1 on the OP Goerli network?,The contract addresses for the AttestationStation v1 on the OP Goerli network are 0x4200000000000000000000000000000000000021 for the Attestation Contract and 0x4200000000000000000000000000000000000020 for the Schema Registry Contract. You can view these contracts on Etherscan at https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000021 and https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000020 respectively.,"---
title: AttestationStation v1
lang: en-US
---  
The AttestationStation v1 uses [the Ethereum Attestation service standard](https://docs.attest.sh/docs/welcome) deployed on these addresses:  
| Network         | Attestation Contract | Schema Registry Contract |
| --------------- | - | - |
| OP Goerli | [0x4200000000000000000000000000000000000021](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000021) | [0x4200000000000000000000000000000000000020](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000020)
| OP Mainnet | [0x4200000000000000000000000000000000000021](https://optimistic.etherscan.io/address/0x4200000000000000000000000000000000000021) | [0x4200000000000000000000000000000000000020](https://optimistic.etherscan.io/address/0x4200000000000000000000000000000000000020) |  
You can read and write attestations in several ways:  
- [EAS scan user interface (OP Mainnet)](https://optimism.easscan.org/)
- [EAS scan user interface (OP Goerli)](https://optimism-goerli-bedrock.easscan.org/)
- [JavaScript SDK](https://docs.attest.sh/docs/getting--started/javascript)
- [Access directly onchain](https://github.com/ethereum-attestation-service/eas-contracts/blob/master/contracts/EAS.sol) (if you need to attest from a smart contract)  
Indexing is available via:
- [GraphQL endpoint (OP Mainnet)](https://optimism.easscan.org/graphql)
- [GraphQL endpoint (OP Goerli)](https://optimism-goerli-bedrock.easscan.org/graphql)
- [Ponder graph]( https://github.com/ethereum-attestation-service/eas-ponder-graph)
- [Open source indexer]( https://github.com/ethereum-attestation-service/eas-indexing-service)"
569,Is there a way to index attestations from the AttestationStation v1?,"Yes, you can index attestations from the AttestationStation v1 using several methods including the GraphQL endpoints for OP Mainnet and OP Goerli, the Ponder graph, and the open-source indexer available at https://github.com/ethereum-attestation-service/eas-indexing-service.","---
title: AttestationStation v1
lang: en-US
---  
The AttestationStation v1 uses [the Ethereum Attestation service standard](https://docs.attest.sh/docs/welcome) deployed on these addresses:  
| Network         | Attestation Contract | Schema Registry Contract |
| --------------- | - | - |
| OP Goerli | [0x4200000000000000000000000000000000000021](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000021) | [0x4200000000000000000000000000000000000020](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000020)
| OP Mainnet | [0x4200000000000000000000000000000000000021](https://optimistic.etherscan.io/address/0x4200000000000000000000000000000000000021) | [0x4200000000000000000000000000000000000020](https://optimistic.etherscan.io/address/0x4200000000000000000000000000000000000020) |  
You can read and write attestations in several ways:  
- [EAS scan user interface (OP Mainnet)](https://optimism.easscan.org/)
- [EAS scan user interface (OP Goerli)](https://optimism-goerli-bedrock.easscan.org/)
- [JavaScript SDK](https://docs.attest.sh/docs/getting--started/javascript)
- [Access directly onchain](https://github.com/ethereum-attestation-service/eas-contracts/blob/master/contracts/EAS.sol) (if you need to attest from a smart contract)  
Indexing is available via:
- [GraphQL endpoint (OP Mainnet)](https://optimism.easscan.org/graphql)
- [GraphQL endpoint (OP Goerli)](https://optimism-goerli-bedrock.easscan.org/graphql)
- [Ponder graph]( https://github.com/ethereum-attestation-service/eas-ponder-graph)
- [Open source indexer]( https://github.com/ethereum-attestation-service/eas-indexing-service)"
570,How can I build decentralized identity apps using attestations?,"To build decentralized identity apps with attestations, you would need to follow guidelines and best practices outlined in the Optimism Governance Documentation. This involves understanding how attestations work and how they can be integrated into your app to ensure secure and verifiable identities.","---
title: Building Decentralized Identity Apps with Attestations
lang: en-US
---"
570,What are attestations in the context of decentralized identity apps?,Attestations in decentralized identity apps are statements or claims made by one party about another that can be verified. They are used to establish trust and verify identities without relying on a central authority.,"---
title: Building Decentralized Identity Apps with Attestations
lang: en-US
---"
571,How does Optimism handle decentralized identity?,"Optimism uses a system called the AttestationStation, which is a smart contract that follows the Ethereum Attestation Service standard. This system allows for creating, verifying, and revoking attestations both on and off the blockchain, helping to build a robust web of trust.","Attestations are signed statements about a person, entity, or thing, made by an individual, company, or organization and are one of the building blocks of decentralized identity.  
Our journey towards decentralized identity begins with the AttestationStation, an attestation smart contract using the [Ethereum Attestation Service standard](https://optimism.easscan.org/) for creating, verifying, and revoking on/off-chain attestations. You can think of the AttestationStation as a multiplayer database for streamlining the attestation process and enabling a robust web of trust on any OP Chain in the Superchain.  
![Logo](../../assets/docs/identity/atst-logo.png)"
571,What is an attestation in the context of Optimism?,"An attestation is a signed statement about a person, entity, or thing, made by an individual, company, or organization. It serves as a building block for decentralized identity within the Optimism ecosystem.","Attestations are signed statements about a person, entity, or thing, made by an individual, company, or organization and are one of the building blocks of decentralized identity.  
Our journey towards decentralized identity begins with the AttestationStation, an attestation smart contract using the [Ethereum Attestation Service standard](https://optimism.easscan.org/) for creating, verifying, and revoking on/off-chain attestations. You can think of the AttestationStation as a multiplayer database for streamlining the attestation process and enabling a robust web of trust on any OP Chain in the Superchain.  
![Logo](../../assets/docs/identity/atst-logo.png)"
571,What is the purpose of the AttestationStation in Optimism?,"The AttestationStation acts as a multiplayer database that streamlines the attestation process. It enables the creation, verification, and revocation of attestations, thereby supporting a robust web of trust on any OP Chain in the Superchain.","Attestations are signed statements about a person, entity, or thing, made by an individual, company, or organization and are one of the building blocks of decentralized identity.  
Our journey towards decentralized identity begins with the AttestationStation, an attestation smart contract using the [Ethereum Attestation Service standard](https://optimism.easscan.org/) for creating, verifying, and revoking on/off-chain attestations. You can think of the AttestationStation as a multiplayer database for streamlining the attestation process and enabling a robust web of trust on any OP Chain in the Superchain.  
![Logo](../../assets/docs/identity/atst-logo.png)"
572,Who can use the AttestationStation?,Anyone can use the AttestationStation because it is a public contract that is not owned or controlled by any one person or organization.,"The AttestationStation makes it easy to sign any piece of data. In addition, here are a few key benefits:  
- **Permissionless**: The AttestationStation is a public contract, which means that it is not owned or controlled by any one person or organization.
Anyone can use the contract to verify and attest anything.
- **Tooling:** Indexing, various access-management integrations, and more are already available for the AttestationStation."
572,What are some benefits of using the AttestationStation?,"Some benefits of using the AttestationStation include its permissionless nature, meaning anyone can use it, and the availability of various tools like indexing and access-management integrations.","The AttestationStation makes it easy to sign any piece of data. In addition, here are a few key benefits:  
- **Permissionless**: The AttestationStation is a public contract, which means that it is not owned or controlled by any one person or organization.
Anyone can use the contract to verify and attest anything.
- **Tooling:** Indexing, various access-management integrations, and more are already available for the AttestationStation."
573,Where can I find project ideas for building on Optimism?,You can find a list of project ideas on the Optimism website at this [project idea list](https://optimism.io/ideas).,"Are you inspired and don‚Äôt know what to build?
We have a [project idea list](https://optimism.io/ideas).
Do you have a good idea, but you know you‚Äôre not the right person to build it? Please open a PR on that list and suggest it."
573,What should I do if I have a good project idea but can't build it myself?,"If you have a good project idea but you're not the right person to build it, you can open a Pull Request (PR) on the project idea list and suggest your idea.","Are you inspired and don‚Äôt know what to build?
We have a [project idea list](https://optimism.io/ideas).
Do you have a good idea, but you know you‚Äôre not the right person to build it? Please open a PR on that list and suggest it."
574,How can I ensure users' privacy when collecting personal information on the blockchain?,"To ensure users' privacy, you should obtain explicit consent from users for any personal information collected. Clearly inform them about what data is being collected, why it is being collected, and how it will be used. Additionally, sensitive data should not be stored onchain; instead, you can use the hash of the sensitive data for verification purposes.","::: danger <nbsp />  
Attestations create log entries that become part of the permanent record of the blockchain.
Here are some best practices to avoid violating users‚Äô privacy:  
- Obtain explicit consent from users for personal information.
Clearly inform them what data is being collected, why it is being collected, and how it will be used.
- Sensitive data should not be stored onchain, in any way.
If you need a smart contract to verify it in the future, you can use the hash of the sensitive data rather than the data itself.
- Even when storing sensitive data offchain, you need to ensure it is stored securely using encryption, proper authentication and authorization, etc.  
:::"
574,Is it safe to store sensitive data on the blockchain?,"No, it is not safe to store sensitive data on the blockchain. Sensitive data should not be stored onchain in any way. If you need to verify sensitive data in the future, you can use the hash of the data rather than the data itself.","::: danger <nbsp />  
Attestations create log entries that become part of the permanent record of the blockchain.
Here are some best practices to avoid violating users‚Äô privacy:  
- Obtain explicit consent from users for personal information.
Clearly inform them what data is being collected, why it is being collected, and how it will be used.
- Sensitive data should not be stored onchain, in any way.
If you need a smart contract to verify it in the future, you can use the hash of the sensitive data rather than the data itself.
- Even when storing sensitive data offchain, you need to ensure it is stored securely using encryption, proper authentication and authorization, etc.  
:::"
574,What measures should be taken when storing sensitive data offchain?,"When storing sensitive data offchain, you need to ensure it is stored securely. This includes using encryption, proper authentication, and authorization to protect the data.","::: danger <nbsp />  
Attestations create log entries that become part of the permanent record of the blockchain.
Here are some best practices to avoid violating users‚Äô privacy:  
- Obtain explicit consent from users for personal information.
Clearly inform them what data is being collected, why it is being collected, and how it will be used.
- Sensitive data should not be stored onchain, in any way.
If you need a smart contract to verify it in the future, you can use the hash of the sensitive data rather than the data itself.
- Even when storing sensitive data offchain, you need to ensure it is stored securely using encryption, proper authentication and authorization, etc.  
:::"
575,Can attestations be used as verifiable credentials?,"Attestations should not be viewed as a replacement for verifiable credentials or decentralized identifiers. Instead, developers can use attestations to create decentralized identifiers, credentials, claims, and more.","**Q: Are attestations replacements for verifiable credentials?**  
**A:** Attestations should not be viewed as a replacement for verifiable credentials or decentralized identifiers. Rather developers can use attestations to create [decentralized identifiers](https://www.w3.org/TR/did-core/), credentials, claims, and more.  
**Q: Are attestations replacements for proof of personhood?**  
**A:** Attestations and the associated web of trust are complementary with proof of personhood like [WorldID](https://worldcoin.org/blog/announcements/worldcoin-commits-optimism-superchain-vision-ahead-mainnet-launch) and similar solutions. Without proof of personhood, agents could sybil-attack the web of trust to build their reputation. On the other hand web of trust extends proof of personhood to confer more information about the person you're interacting with which is critical in governance and other use-cases that require knowledge of the person's reputation.  
**Q: Why attestations instead of soulbound / non-transferable tokens?**  
**A:** Attestations have two key benefits over soulbound / non-transferable tokens: flexibility of whether the attestations is onchain or offchain and composability. While there is a canonical [decentralized schema registry for attestations](https://optimism-goerli-bedrock.easscan.org/schemas), there is no central registry or specification for soulbound / non-transferable tokens which can lead to poor interoperability between systems and protocols."
575,How do attestations relate to proof of personhood?,"Attestations and the associated web of trust are complementary to proof of personhood solutions like WorldID. While proof of personhood prevents sybil attacks, the web of trust extends this by providing more information about a person's reputation, which is important for governance and other use-cases.","**Q: Are attestations replacements for verifiable credentials?**  
**A:** Attestations should not be viewed as a replacement for verifiable credentials or decentralized identifiers. Rather developers can use attestations to create [decentralized identifiers](https://www.w3.org/TR/did-core/), credentials, claims, and more.  
**Q: Are attestations replacements for proof of personhood?**  
**A:** Attestations and the associated web of trust are complementary with proof of personhood like [WorldID](https://worldcoin.org/blog/announcements/worldcoin-commits-optimism-superchain-vision-ahead-mainnet-launch) and similar solutions. Without proof of personhood, agents could sybil-attack the web of trust to build their reputation. On the other hand web of trust extends proof of personhood to confer more information about the person you're interacting with which is critical in governance and other use-cases that require knowledge of the person's reputation.  
**Q: Why attestations instead of soulbound / non-transferable tokens?**  
**A:** Attestations have two key benefits over soulbound / non-transferable tokens: flexibility of whether the attestations is onchain or offchain and composability. While there is a canonical [decentralized schema registry for attestations](https://optimism-goerli-bedrock.easscan.org/schemas), there is no central registry or specification for soulbound / non-transferable tokens which can lead to poor interoperability between systems and protocols."
575,Why choose attestations over soulbound or non-transferable tokens?,"Attestations offer two main advantages over soulbound or non-transferable tokens: the flexibility of being either onchain or offchain, and composability. Additionally, there is a decentralized schema registry for attestations, which ensures better interoperability between systems and protocols, unlike the fragmented nature of soulbound or non-transferable tokens.","**Q: Are attestations replacements for verifiable credentials?**  
**A:** Attestations should not be viewed as a replacement for verifiable credentials or decentralized identifiers. Rather developers can use attestations to create [decentralized identifiers](https://www.w3.org/TR/did-core/), credentials, claims, and more.  
**Q: Are attestations replacements for proof of personhood?**  
**A:** Attestations and the associated web of trust are complementary with proof of personhood like [WorldID](https://worldcoin.org/blog/announcements/worldcoin-commits-optimism-superchain-vision-ahead-mainnet-launch) and similar solutions. Without proof of personhood, agents could sybil-attack the web of trust to build their reputation. On the other hand web of trust extends proof of personhood to confer more information about the person you're interacting with which is critical in governance and other use-cases that require knowledge of the person's reputation.  
**Q: Why attestations instead of soulbound / non-transferable tokens?**  
**A:** Attestations have two key benefits over soulbound / non-transferable tokens: flexibility of whether the attestations is onchain or offchain and composability. While there is a canonical [decentralized schema registry for attestations](https://optimism-goerli-bedrock.easscan.org/schemas), there is no central registry or specification for soulbound / non-transferable tokens which can lead to poor interoperability between systems and protocols."
576,What's an attestation in the context of decentralized identity?,"An attestation is a statement or evidence of information made by anyone about anything. In decentralized identity, it can be used to verify a person's identity or personal information.","---
title: Glossary
lang: en-US
---  
- **Attestation**: Attestations are statements or evidence of information made by anyone about anything.  
- **Attestation recipient:** The entity or individual that receives the attestation from the attester.
In decentralized identity, the attestation recipient can be a service provider, website, or any other entity that requires verification of a person's identity or personal information.  
- **Attestation issuer:** The entity or individual that performs the attestation process and issues the attestation.
In decentralized identity, the attestation issuer can be a government agency, financial institution, or any other trusted entity that is authorized to verify a person's identity or personal information.  
- **Attestation verifier:** The entity or individual that verifies the attestation and ensures that it is valid and accurate.
In decentralized identity, the attestation verifier can be a service provider, website, or any other entity that requires verification of a person's identity or personal information.  
- **AttestationStation (ATST):** AttestationStation is a decentralized, permissionless database for for creating, verifying, and revoking on/off-chain attestations on the Superchain.
The AttestationStation uses [the EAS Standard](https://attest.sh/).  
- **Decentralized identity:** A system that enables individuals to have greater control and ownership over their personal data and identity.
In decentralized identity, personal information is stored on a blockchain or other decentralized system, and individuals have the ability to grant or revoke access to their data as they see fit.
This allows for greater privacy, security, and control over personal information.  
- **Ethereum Attestation Service (EAS):** An Ethereum infrastructure public good for making attestations on or off-chain about anything. EAS is the core infrastructure used to power the AttestationStation.  
- **Sybil-resistance:** Sybil resistance is a defense mechanism that prevents someone from creating multiple fake identities in a decentralized identity system.  
- **Web of trust:** A web of trust is a decentralized model used to establish trust among participants in a network. It relies on the concept of participants vouching for the authenticity or trustworthiness of other participants. In a web of trust, trust is built through the accumulation of attestations from trusted individuals."
576,Who can issue an attestation in a decentralized identity system?,"An attestation issuer can be a government agency, financial institution, or any other trusted entity that is authorized to verify a person's identity or personal information.","---
title: Glossary
lang: en-US
---  
- **Attestation**: Attestations are statements or evidence of information made by anyone about anything.  
- **Attestation recipient:** The entity or individual that receives the attestation from the attester.
In decentralized identity, the attestation recipient can be a service provider, website, or any other entity that requires verification of a person's identity or personal information.  
- **Attestation issuer:** The entity or individual that performs the attestation process and issues the attestation.
In decentralized identity, the attestation issuer can be a government agency, financial institution, or any other trusted entity that is authorized to verify a person's identity or personal information.  
- **Attestation verifier:** The entity or individual that verifies the attestation and ensures that it is valid and accurate.
In decentralized identity, the attestation verifier can be a service provider, website, or any other entity that requires verification of a person's identity or personal information.  
- **AttestationStation (ATST):** AttestationStation is a decentralized, permissionless database for for creating, verifying, and revoking on/off-chain attestations on the Superchain.
The AttestationStation uses [the EAS Standard](https://attest.sh/).  
- **Decentralized identity:** A system that enables individuals to have greater control and ownership over their personal data and identity.
In decentralized identity, personal information is stored on a blockchain or other decentralized system, and individuals have the ability to grant or revoke access to their data as they see fit.
This allows for greater privacy, security, and control over personal information.  
- **Ethereum Attestation Service (EAS):** An Ethereum infrastructure public good for making attestations on or off-chain about anything. EAS is the core infrastructure used to power the AttestationStation.  
- **Sybil-resistance:** Sybil resistance is a defense mechanism that prevents someone from creating multiple fake identities in a decentralized identity system.  
- **Web of trust:** A web of trust is a decentralized model used to establish trust among participants in a network. It relies on the concept of participants vouching for the authenticity or trustworthiness of other participants. In a web of trust, trust is built through the accumulation of attestations from trusted individuals."
576,What is the purpose of the AttestationStation?,"The AttestationStation is a decentralized, permissionless database for creating, verifying, and revoking on/off-chain attestations on the Superchain. It uses the Ethereum Attestation Service (EAS) standard.","---
title: Glossary
lang: en-US
---  
- **Attestation**: Attestations are statements or evidence of information made by anyone about anything.  
- **Attestation recipient:** The entity or individual that receives the attestation from the attester.
In decentralized identity, the attestation recipient can be a service provider, website, or any other entity that requires verification of a person's identity or personal information.  
- **Attestation issuer:** The entity or individual that performs the attestation process and issues the attestation.
In decentralized identity, the attestation issuer can be a government agency, financial institution, or any other trusted entity that is authorized to verify a person's identity or personal information.  
- **Attestation verifier:** The entity or individual that verifies the attestation and ensures that it is valid and accurate.
In decentralized identity, the attestation verifier can be a service provider, website, or any other entity that requires verification of a person's identity or personal information.  
- **AttestationStation (ATST):** AttestationStation is a decentralized, permissionless database for for creating, verifying, and revoking on/off-chain attestations on the Superchain.
The AttestationStation uses [the EAS Standard](https://attest.sh/).  
- **Decentralized identity:** A system that enables individuals to have greater control and ownership over their personal data and identity.
In decentralized identity, personal information is stored on a blockchain or other decentralized system, and individuals have the ability to grant or revoke access to their data as they see fit.
This allows for greater privacy, security, and control over personal information.  
- **Ethereum Attestation Service (EAS):** An Ethereum infrastructure public good for making attestations on or off-chain about anything. EAS is the core infrastructure used to power the AttestationStation.  
- **Sybil-resistance:** Sybil resistance is a defense mechanism that prevents someone from creating multiple fake identities in a decentralized identity system.  
- **Web of trust:** A web of trust is a decentralized model used to establish trust among participants in a network. It relies on the concept of participants vouching for the authenticity or trustworthiness of other participants. In a web of trust, trust is built through the accumulation of attestations from trusted individuals."
578,How does decentralized identity benefit individuals?,"Decentralized identity solutions empower individuals to customize their identity according to their preferences, move it seamlessly across services, and regain control of their personal information from centralized platforms. This allows users to prove specific attributes about themselves in a trustworthy and verifiable way without compromising their privacy or security.","Identity is a fundamental aspect of human experience that encompasses the relationships, interests, and values that define individuals and groups.
However, the current online identity landscape is fragmented, non-interoperable, and controlled by centralized gatekeepers.  
Decentralized identity solutions empower individuals to customize their identity according to their preferences, move it seamlessly across services, and regain control of their personal information from centralized platforms.
These solutions are designed to enable users to prove specific attributes about themselves in a trustworthy and verifiable way, without compromising their privacy or security.  
The Optimism Collective is [building a better economic engine that fuels positive-sum games](https://www.optimism.io/vision) and decentralized identity is central to that mission.
For example, the two-house governance system of the Optimism Collective is composed of token holders and community members who participate in a one-person-one-vote system based on reputation and community contributions.  
In addition to democratic governance, decentralized identity expands the design space for innovation and gives individuals greater control over their finances, and enables them to participate in the global economy on their own terms."
578,What role does decentralized identity play in the Optimism Collective?,"Decentralized identity is central to the mission of the Optimism Collective, which aims to build a better economic engine that fuels positive-sum games. It is integral to their two-house governance system, where token holders and community members participate in a one-person-one-vote system based on reputation and community contributions.","Identity is a fundamental aspect of human experience that encompasses the relationships, interests, and values that define individuals and groups.
However, the current online identity landscape is fragmented, non-interoperable, and controlled by centralized gatekeepers.  
Decentralized identity solutions empower individuals to customize their identity according to their preferences, move it seamlessly across services, and regain control of their personal information from centralized platforms.
These solutions are designed to enable users to prove specific attributes about themselves in a trustworthy and verifiable way, without compromising their privacy or security.  
The Optimism Collective is [building a better economic engine that fuels positive-sum games](https://www.optimism.io/vision) and decentralized identity is central to that mission.
For example, the two-house governance system of the Optimism Collective is composed of token holders and community members who participate in a one-person-one-vote system based on reputation and community contributions.  
In addition to democratic governance, decentralized identity expands the design space for innovation and gives individuals greater control over their finances, and enables them to participate in the global economy on their own terms."
578,How does decentralized identity contribute to democratic governance in the Optimism Collective?,"In the Optimism Collective, decentralized identity allows for a two-house governance system composed of token holders and community members. This system operates on a one-person-one-vote basis, which is based on reputation and community contributions, thereby supporting democratic governance.","Identity is a fundamental aspect of human experience that encompasses the relationships, interests, and values that define individuals and groups.
However, the current online identity landscape is fragmented, non-interoperable, and controlled by centralized gatekeepers.  
Decentralized identity solutions empower individuals to customize their identity according to their preferences, move it seamlessly across services, and regain control of their personal information from centralized platforms.
These solutions are designed to enable users to prove specific attributes about themselves in a trustworthy and verifiable way, without compromising their privacy or security.  
The Optimism Collective is [building a better economic engine that fuels positive-sum games](https://www.optimism.io/vision) and decentralized identity is central to that mission.
For example, the two-house governance system of the Optimism Collective is composed of token holders and community members who participate in a one-person-one-vote system based on reputation and community contributions.  
In addition to democratic governance, decentralized identity expands the design space for innovation and gives individuals greater control over their finances, and enables them to participate in the global economy on their own terms."
579,How does decentralized identity work on the Superchain?,"Decentralized identity on the Superchain uses proof of personhood and reputation data from various sources, eliminating the need for a single entity to own user data and identity. Algorithms like EigenTrust can be used to derive identity sets based on a subjective web of trust, making identity verification more trustworthy and reliable in a decentralized environment.","Building decentralized identity on the Superchain involves using proof of personhood and reputation data from various sources, eliminating the need for a single entity to own user data and identity.  
Through this process, anyone can use algorithms like [EigenTrust](https://en.wikipedia.org/wiki/EigenTrust) to derive identity sets based on a purely subjective web of trust. This allows for the establishment of a more trustworthy and reliable means of verifying an individual's identity in a decentralized environment.  
This open-source primitive can be applied across the Superchain for a variety of Sybil-resistant applications, including democratic voting and onchain credit scoring for under-collateralized loans. By leveraging attestations in this way, developers can create more secure, transparent, and democratic systems that allow for greater participation and access for everyone.  
Decentralized identity is an essential components of a more democratic, secure, and accessible web. By working together, we can establish a more diverse and trustworthy network of identities that benefits everyone, and enables new opportunities for innovation in the decentralized identity space.  
The AttestationStation serves as a key component in achieving this vision. It functions as a multiplayer database and its underlying network of attestations lays the foundation for constructing decentralized identity systems that can effectively scale and adapt to the evolving needs of users and developers.  
[Next >](./build.md)"
579,What are some applications of decentralized identity on the Superchain?,"Decentralized identity on the Superchain can be applied to various Sybil-resistant applications, including democratic voting and onchain credit scoring for under-collateralized loans. These applications benefit from the secure, transparent, and democratic systems enabled by decentralized identity.","Building decentralized identity on the Superchain involves using proof of personhood and reputation data from various sources, eliminating the need for a single entity to own user data and identity.  
Through this process, anyone can use algorithms like [EigenTrust](https://en.wikipedia.org/wiki/EigenTrust) to derive identity sets based on a purely subjective web of trust. This allows for the establishment of a more trustworthy and reliable means of verifying an individual's identity in a decentralized environment.  
This open-source primitive can be applied across the Superchain for a variety of Sybil-resistant applications, including democratic voting and onchain credit scoring for under-collateralized loans. By leveraging attestations in this way, developers can create more secure, transparent, and democratic systems that allow for greater participation and access for everyone.  
Decentralized identity is an essential components of a more democratic, secure, and accessible web. By working together, we can establish a more diverse and trustworthy network of identities that benefits everyone, and enables new opportunities for innovation in the decentralized identity space.  
The AttestationStation serves as a key component in achieving this vision. It functions as a multiplayer database and its underlying network of attestations lays the foundation for constructing decentralized identity systems that can effectively scale and adapt to the evolving needs of users and developers.  
[Next >](./build.md)"
579,What is the role of the AttestationStation in decentralized identity?,"The AttestationStation serves as a key component in building decentralized identity systems on the Superchain. It functions as a multiplayer database, and its network of attestations lays the foundation for constructing scalable and adaptable decentralized identity systems that meet the evolving needs of users and developers.","Building decentralized identity on the Superchain involves using proof of personhood and reputation data from various sources, eliminating the need for a single entity to own user data and identity.  
Through this process, anyone can use algorithms like [EigenTrust](https://en.wikipedia.org/wiki/EigenTrust) to derive identity sets based on a purely subjective web of trust. This allows for the establishment of a more trustworthy and reliable means of verifying an individual's identity in a decentralized environment.  
This open-source primitive can be applied across the Superchain for a variety of Sybil-resistant applications, including democratic voting and onchain credit scoring for under-collateralized loans. By leveraging attestations in this way, developers can create more secure, transparent, and democratic systems that allow for greater participation and access for everyone.  
Decentralized identity is an essential components of a more democratic, secure, and accessible web. By working together, we can establish a more diverse and trustworthy network of identities that benefits everyone, and enables new opportunities for innovation in the decentralized identity space.  
The AttestationStation serves as a key component in achieving this vision. It functions as a multiplayer database and its underlying network of attestations lays the foundation for constructing decentralized identity systems that can effectively scale and adapt to the evolving needs of users and developers.  
[Next >](./build.md)"
580,Can anyone create an Optimist Profile?,"Yes, anyone can create an Optimist Profile.","---
title: Optimist Profile
lang: en-US
---
The Optimist Profile allows contributors to share the contributions and impact they've made to the Optimism Collective.  
Anyone can create an Optimist Profile and anyone is able to use the Optimist Profile in onchain identity use cases."
580,What is the purpose of an Optimist Profile?,The Optimist Profile allows contributors to share the contributions and impact they've made to the Optimism Collective.,"---
title: Optimist Profile
lang: en-US
---
The Optimist Profile allows contributors to share the contributions and impact they've made to the Optimism Collective.  
Anyone can create an Optimist Profile and anyone is able to use the Optimist Profile in onchain identity use cases."
580,Can the Optimist Profile be used for onchain identity purposes?,"Yes, anyone is able to use the Optimist Profile in onchain identity use cases.","---
title: Optimist Profile
lang: en-US
---
The Optimist Profile allows contributors to share the contributions and impact they've made to the Optimism Collective.  
Anyone can create an Optimist Profile and anyone is able to use the Optimist Profile in onchain identity use cases."
581,How is an Optimist Profile created?,An Optimist Profile is created using a variety of onchain reputation data on the OP Mainnet. It involves an onchain self-attestation using a profile schema that represents an individual or organization.,"The Optimist Profile is built using the variety of onchain reputation data on OP Mainnet and has the following elements:  
- **Profile Schema:** An onchain self-attestation using the profile schema that represents an individual or organization.
- **Contributions:** Each Optimist Profile can create onchain attestations about their contributions to the Optimism Collective. Optimist Profiles can also be used to create onchan peer-to-peer (p2p) attestations about the contributions of other contributors. Peer to peer attestations help the Optimism Collective create a contribution web of trust."
581,What can an Optimist Profile do regarding contributions?,"An Optimist Profile can create onchain attestations about their own contributions to the Optimism Collective. Additionally, it can be used to create peer-to-peer attestations about the contributions of other contributors, helping to build a web of trust within the community.","The Optimist Profile is built using the variety of onchain reputation data on OP Mainnet and has the following elements:  
- **Profile Schema:** An onchain self-attestation using the profile schema that represents an individual or organization.
- **Contributions:** Each Optimist Profile can create onchain attestations about their contributions to the Optimism Collective. Optimist Profiles can also be used to create onchan peer-to-peer (p2p) attestations about the contributions of other contributors. Peer to peer attestations help the Optimism Collective create a contribution web of trust."
582,How is the Optimist Profile built?,The Optimist Profile is built on attestations using the Ethereum Attestation Service.,"The Optimist Profile is built on attestations using the [Ethereum Attestation Service](./atst-v1.md).  
![Logo](../../assets/docs/identity/profile.png)  
- **[Profile schema UID](https://optimism.easscan.org/schema/view/0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929):**  `0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929`
- name: name of the profile
- profileMetadataPtrType: used to determine the protocol
- profileMetadataPtr: can be a URI, ipfs hash, etc. that points to any type of blob storage that stores the metadata of type shown below  
- **[RetroPGF 3 Application schema UID](https://optimism.easscan.org/schema/view/0x76e98cce95f3ba992c2ee25cef25f756495147608a3da3aa2e5ca43109fe77cc):** `0x76e98cce95f3ba992c2ee25cef25f756495147608a3da3aa2e5ca43109fe77cc`
- displayName: name of the application
- applicationMetadataPtrType: used to determine the protocol
- applicationMetadataPtr: can be a URI, ipfs hash, etc. that points to any type of blob storage that stores the metadata of type shown below"
582,What is the purpose of the profileMetadataPtr in the Optimist Profile?,"The profileMetadataPtr can be a URI, IPFS hash, etc., that points to any type of blob storage that stores the metadata of the profile.","The Optimist Profile is built on attestations using the [Ethereum Attestation Service](./atst-v1.md).  
![Logo](../../assets/docs/identity/profile.png)  
- **[Profile schema UID](https://optimism.easscan.org/schema/view/0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929):**  `0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929`
- name: name of the profile
- profileMetadataPtrType: used to determine the protocol
- profileMetadataPtr: can be a URI, ipfs hash, etc. that points to any type of blob storage that stores the metadata of type shown below  
- **[RetroPGF 3 Application schema UID](https://optimism.easscan.org/schema/view/0x76e98cce95f3ba992c2ee25cef25f756495147608a3da3aa2e5ca43109fe77cc):** `0x76e98cce95f3ba992c2ee25cef25f756495147608a3da3aa2e5ca43109fe77cc`
- displayName: name of the application
- applicationMetadataPtrType: used to determine the protocol
- applicationMetadataPtr: can be a URI, ipfs hash, etc. that points to any type of blob storage that stores the metadata of type shown below"
582,What does the applicationMetadataPtrType indicate in the RetroPGF 3 Application schema?,The applicationMetadataPtrType is used to determine the protocol for the metadata pointer in the RetroPGF 3 Application schema.,"The Optimist Profile is built on attestations using the [Ethereum Attestation Service](./atst-v1.md).  
![Logo](../../assets/docs/identity/profile.png)  
- **[Profile schema UID](https://optimism.easscan.org/schema/view/0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929):**  `0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929`
- name: name of the profile
- profileMetadataPtrType: used to determine the protocol
- profileMetadataPtr: can be a URI, ipfs hash, etc. that points to any type of blob storage that stores the metadata of type shown below  
- **[RetroPGF 3 Application schema UID](https://optimism.easscan.org/schema/view/0x76e98cce95f3ba992c2ee25cef25f756495147608a3da3aa2e5ca43109fe77cc):** `0x76e98cce95f3ba992c2ee25cef25f756495147608a3da3aa2e5ca43109fe77cc`
- displayName: name of the application
- applicationMetadataPtrType: used to determine the protocol
- applicationMetadataPtr: can be a URI, ipfs hash, etc. that points to any type of blob storage that stores the metadata of type shown below"
583,How can I find the addresses for RetroPGF badgeholders?,You can use the EAS SDK `getAttestation` function to retrieve the onchain attestation with Schema UID: `0xfdcfdad2dbe7489e0ce56b260348b7f14e8365a8a325aef9834818c00d46b31b`. Make sure to verify that the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`.,"**Q: How do I get the addresses for RetroPGF badgeholders?**  
**A:** Use the EAS SDK `getAttestation` function to retrieve the onchain attestation where Schema UID: `0xfdcfdad2dbe7489e0ce56b260348b7f14e8365a8a325aef9834818c00d46b31b`.
Remember to verify the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`.  
**Q: How do I get the addresses for Optimist Profiles?**  
**A:** Use the EAS SDK `getAttestation` function to retrieve the onchain attestation where Schema UID: `0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929`.  
**Q: Why do I see multiple applications associated with a single Optimist Profile?**  
**A:** This happens if the user has updated their `displayName`. To return the most accurate data, look at the most recent application attestation.  
**A:** Use the EAS SDK `getAttestation` function to retrieve the onchain attestation where Schema UID: `0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929`.  
**Q: What other schemas are being used?**  
**A:** Check the [schemas](./schemas.md) page for a list of other schemas being used."
583,How can I find the addresses for Optimist Profiles?,You can use the EAS SDK `getAttestation` function to retrieve the onchain attestation with Schema UID: `0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929`.,"**Q: How do I get the addresses for RetroPGF badgeholders?**  
**A:** Use the EAS SDK `getAttestation` function to retrieve the onchain attestation where Schema UID: `0xfdcfdad2dbe7489e0ce56b260348b7f14e8365a8a325aef9834818c00d46b31b`.
Remember to verify the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`.  
**Q: How do I get the addresses for Optimist Profiles?**  
**A:** Use the EAS SDK `getAttestation` function to retrieve the onchain attestation where Schema UID: `0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929`.  
**Q: Why do I see multiple applications associated with a single Optimist Profile?**  
**A:** This happens if the user has updated their `displayName`. To return the most accurate data, look at the most recent application attestation.  
**A:** Use the EAS SDK `getAttestation` function to retrieve the onchain attestation where Schema UID: `0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929`.  
**Q: What other schemas are being used?**  
**A:** Check the [schemas](./schemas.md) page for a list of other schemas being used."
583,Why do I see multiple applications associated with a single Optimist Profile?,"This occurs if the user has updated their `displayName`. To get the most accurate data, you should look at the most recent application attestation.","**Q: How do I get the addresses for RetroPGF badgeholders?**  
**A:** Use the EAS SDK `getAttestation` function to retrieve the onchain attestation where Schema UID: `0xfdcfdad2dbe7489e0ce56b260348b7f14e8365a8a325aef9834818c00d46b31b`.
Remember to verify the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`.  
**Q: How do I get the addresses for Optimist Profiles?**  
**A:** Use the EAS SDK `getAttestation` function to retrieve the onchain attestation where Schema UID: `0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929`.  
**Q: Why do I see multiple applications associated with a single Optimist Profile?**  
**A:** This happens if the user has updated their `displayName`. To return the most accurate data, look at the most recent application attestation.  
**A:** Use the EAS SDK `getAttestation` function to retrieve the onchain attestation where Schema UID: `0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929`.  
**Q: What other schemas are being used?**  
**A:** Check the [schemas](./schemas.md) page for a list of other schemas being used."
584,What's the purpose of schemas in Optimism Governance?,Schemas define the structure and type of data that can be included in an attestation on the OP Mainnet.,"---
title: Schemas
lang: en-US
---
Schemas define the structure and type of data that can be included in an attestation.  
Below you will find a list of relevant schemas that are being used on OP Mainnet. Schemas are built using the [Ethereum Attestation Service](./atst-v1.md)."
584,How are schemas built for use in Optimism Governance?,Schemas are built using the Ethereum Attestation Service.,"---
title: Schemas
lang: en-US
---
Schemas define the structure and type of data that can be included in an attestation.  
Below you will find a list of relevant schemas that are being used on OP Mainnet. Schemas are built using the [Ethereum Attestation Service](./atst-v1.md)."
584,What can I find in the documentation about schemas?,The documentation provides a list of relevant schemas that are being used on the OP Mainnet.,"---
title: Schemas
lang: en-US
---
Schemas define the structure and type of data that can be included in an attestation.  
Below you will find a list of relevant schemas that are being used on OP Mainnet. Schemas are built using the [Ethereum Attestation Service](./atst-v1.md)."
585,Where can I find the schema UID for the Optimist Profile?,You can find the schema UID for the Optimist Profile at this link: https://optimism.easscan.org/schema/view/0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929. The UID itself is `0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929`.,"- **[Optimist Profile schema UID](https://optimism.easscan.org/schema/view/0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929):**  `0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929`
- **[Gitcoin Passport V1 scores schema UID](https://optimism.easscan.org/schema/view/0x6ab5d34260fca0cfcf0e76e96d439cace6aa7c3c019d7c4580ed52c6845e9c89):** `0x6ab5d34260fca0cfcf0e76e96d439cace6aa7c3c019d7c4580ed52c6845e9c89`"
585,Where can I find the schema UID for Gitcoin Passport V1 scores?,You can find the schema UID for Gitcoin Passport V1 scores at this link: https://optimism.easscan.org/schema/view/0x6ab5d34260fca0cfcf0e76e96d439cace6aa7c3c019d7c4580ed52c6845e9c89. The UID itself is `0x6ab5d34260fca0cfcf0e76e96d439cace6aa7c3c019d7c4580ed52c6845e9c89`.,"- **[Optimist Profile schema UID](https://optimism.easscan.org/schema/view/0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929):**  `0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929`
- **[Gitcoin Passport V1 scores schema UID](https://optimism.easscan.org/schema/view/0x6ab5d34260fca0cfcf0e76e96d439cace6aa7c3c019d7c4580ed52c6845e9c89):** `0x6ab5d34260fca0cfcf0e76e96d439cace6aa7c3c019d7c4580ed52c6845e9c89`"
586,Where can I find the Superchain Faucet schema UID for Optimism?,You can find the Superchain Faucet schema UID for Optimism at this link: [Superchain Faucet schema UID](https://optimism.easscan.org/schema/view/0x98ef220cd2f94de79fbc343ef982bfa8f5b315dec6a08f413680ecb7085624d7). The UID itself is `0x98ef220cd2f94de79fbc343ef982bfa8f5b315dec6a08f413680ecb7085624d7`.,- **[Superchain Faucet schema UID](https://optimism.easscan.org/schema/view/0x98ef220cd2f94de79fbc343ef982bfa8f5b315dec6a08f413680ecb7085624d7):** `0x98ef220cd2f94de79fbc343ef982bfa8f5b315dec6a08f413680ecb7085624d7`
586,What is the UID for the Superchain Faucet schema in Optimism?,The UID for the Superchain Faucet schema in Optimism is `0x98ef220cd2f94de79fbc343ef982bfa8f5b315dec6a08f413680ecb7085624d7`.,- **[Superchain Faucet schema UID](https://optimism.easscan.org/schema/view/0x98ef220cd2f94de79fbc343ef982bfa8f5b315dec6a08f413680ecb7085624d7):** `0x98ef220cd2f94de79fbc343ef982bfa8f5b315dec6a08f413680ecb7085624d7`
587,How can I verify the authenticity of a Season 4 Co-grant participant schema UID?,"To verify the authenticity of a Season 4 Co-grant participant schema UID, you should check that the attester address is either `0x3C7820f2874b665AC7471f84f5cbd6E12871F4cC` or `0x2a0eB7cAE52B68e94FF6ab0bFcf0dF8EeEB624be`.","- [**Season 4 Co-grant participant schema UID**](https://optimism.easscan.org/schema/view/0x401a80196f3805c57b00482ae2b575a9f270562b6b6de7711af9837f08fa0faf):`0x401a80196f3805c57b00482ae2b575a9f270562b6b6de7711af9837f08fa0faf` Important: Remember to verify the attester address is `0x3C7820f2874b665AC7471f84f5cbd6E12871F4cC` or `0x2a0eB7cAE52B68e94FF6ab0bFcf0dF8EeEB624be`
- **[Governance contribution schema UID](https://optimism.easscan.org/schema/view/0xef874554718a2afc254b064e5ce9c58c9082fb9f770250499bf406fc112bd315)**:`0xef874554718a2afc254b064e5ce9c58c9082fb9f770250499bf406fc112bd315`. Important: Remember to verify the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`"
587,Where can I find the Governance contribution schema UID?,You can find the Governance contribution schema UID at the following link: [Governance contribution schema UID](https://optimism.easscan.org/schema/view/0xef874554718a2afc254b064e5ce9c58c9082fb9f770250499bf406fc112bd315). Make sure to verify that the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`.,"- [**Season 4 Co-grant participant schema UID**](https://optimism.easscan.org/schema/view/0x401a80196f3805c57b00482ae2b575a9f270562b6b6de7711af9837f08fa0faf):`0x401a80196f3805c57b00482ae2b575a9f270562b6b6de7711af9837f08fa0faf` Important: Remember to verify the attester address is `0x3C7820f2874b665AC7471f84f5cbd6E12871F4cC` or `0x2a0eB7cAE52B68e94FF6ab0bFcf0dF8EeEB624be`
- **[Governance contribution schema UID](https://optimism.easscan.org/schema/view/0xef874554718a2afc254b064e5ce9c58c9082fb9f770250499bf406fc112bd315)**:`0xef874554718a2afc254b064e5ce9c58c9082fb9f770250499bf406fc112bd315`. Important: Remember to verify the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`"
588,How can I verify the attester address for the RetroPGF Badgeholders schema?,"To verify the attester address for the RetroPGF Badgeholders schema, ensure that the address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`.","- **[RetroPGF Badgeholders schema UID](https://optimism.easscan.org/schema/view/0xfdcfdad2dbe7489e0ce56b260348b7f14e8365a8a325aef9834818c00d46b31b):**`0xfdcfdad2dbe7489e0ce56b260348b7f14e8365a8a325aef9834818c00d46b31b`. Important: Remember to verify the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`
- **[RetroPGF governance contributor schema UID](https://optimism.easscan.org/schema/view/0x3743be2afa818ee40304516c153427be55931f238d961af5d98653a93192cdb3):**`0x3743be2afa818ee40304516c153427be55931f238d961af5d98653a93192cdb3`. Important: Remember to verify the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`
- **[RetroPGF 3 Approved Application schema UID](https://optimism.easscan.org/schema/view/0xebbf697d5d3ca4b53579917ffc3597fb8d1a85b8c6ca10ec10039709903b9277):**`0xebbf697d5d3ca4b53579917ffc3597fb8d1a85b8c6ca10ec10039709903b9277`. Important: Remember to verify the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`
- **[RetroPGF 3 Application schema UID](https://optimism.easscan.org/schema/view/0x76e98cce95f3ba992c2ee25cef25f756495147608a3da3aa2e5ca43109fe77cc):** `0x76e98cce95f3ba992c2ee25cef25f756495147608a3da3aa2e5ca43109fe77cc`
- **[RetroPGF 3 Lists schema UID](https://optimism.easscan.org/schema/view/0x3e3e2172aebb902cf7aa6e1820809c5b469af139e7a4265442b1c22b97c6b2a5):** `0x3e3e2172aebb902cf7aa6e1820809c5b469af139e7a4265442b1c22b97c6b2a5`"
588,What is the schema UID for the RetroPGF 3 Approved Application?,The schema UID for the RetroPGF 3 Approved Application is `0xebbf697d5d3ca4b53579917ffc3597fb8d1a85b8c6ca10ec10039709903b9277`.,"- **[RetroPGF Badgeholders schema UID](https://optimism.easscan.org/schema/view/0xfdcfdad2dbe7489e0ce56b260348b7f14e8365a8a325aef9834818c00d46b31b):**`0xfdcfdad2dbe7489e0ce56b260348b7f14e8365a8a325aef9834818c00d46b31b`. Important: Remember to verify the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`
- **[RetroPGF governance contributor schema UID](https://optimism.easscan.org/schema/view/0x3743be2afa818ee40304516c153427be55931f238d961af5d98653a93192cdb3):**`0x3743be2afa818ee40304516c153427be55931f238d961af5d98653a93192cdb3`. Important: Remember to verify the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`
- **[RetroPGF 3 Approved Application schema UID](https://optimism.easscan.org/schema/view/0xebbf697d5d3ca4b53579917ffc3597fb8d1a85b8c6ca10ec10039709903b9277):**`0xebbf697d5d3ca4b53579917ffc3597fb8d1a85b8c6ca10ec10039709903b9277`. Important: Remember to verify the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`
- **[RetroPGF 3 Application schema UID](https://optimism.easscan.org/schema/view/0x76e98cce95f3ba992c2ee25cef25f756495147608a3da3aa2e5ca43109fe77cc):** `0x76e98cce95f3ba992c2ee25cef25f756495147608a3da3aa2e5ca43109fe77cc`
- **[RetroPGF 3 Lists schema UID](https://optimism.easscan.org/schema/view/0x3e3e2172aebb902cf7aa6e1820809c5b469af139e7a4265442b1c22b97c6b2a5):** `0x3e3e2172aebb902cf7aa6e1820809c5b469af139e7a4265442b1c22b97c6b2a5`"
588,Where can I find the schema UID for the RetroPGF governance contributor?,You can find the schema UID for the RetroPGF governance contributor at `0x3743be2afa818ee40304516c153427be55931f238d961af5d98653a93192cdb3`.,"- **[RetroPGF Badgeholders schema UID](https://optimism.easscan.org/schema/view/0xfdcfdad2dbe7489e0ce56b260348b7f14e8365a8a325aef9834818c00d46b31b):**`0xfdcfdad2dbe7489e0ce56b260348b7f14e8365a8a325aef9834818c00d46b31b`. Important: Remember to verify the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`
- **[RetroPGF governance contributor schema UID](https://optimism.easscan.org/schema/view/0x3743be2afa818ee40304516c153427be55931f238d961af5d98653a93192cdb3):**`0x3743be2afa818ee40304516c153427be55931f238d961af5d98653a93192cdb3`. Important: Remember to verify the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`
- **[RetroPGF 3 Approved Application schema UID](https://optimism.easscan.org/schema/view/0xebbf697d5d3ca4b53579917ffc3597fb8d1a85b8c6ca10ec10039709903b9277):**`0xebbf697d5d3ca4b53579917ffc3597fb8d1a85b8c6ca10ec10039709903b9277`. Important: Remember to verify the attester address is `0x621477dBA416E12df7FF0d48E14c4D20DC85D7D9`
- **[RetroPGF 3 Application schema UID](https://optimism.easscan.org/schema/view/0x76e98cce95f3ba992c2ee25cef25f756495147608a3da3aa2e5ca43109fe77cc):** `0x76e98cce95f3ba992c2ee25cef25f756495147608a3da3aa2e5ca43109fe77cc`
- **[RetroPGF 3 Lists schema UID](https://optimism.easscan.org/schema/view/0x3e3e2172aebb902cf7aa6e1820809c5b469af139e7a4265442b1c22b97c6b2a5):** `0x3e3e2172aebb902cf7aa6e1820809c5b469af139e7a4265442b1c22b97c6b2a5`"
589,Can you explain the main principles behind the design of Optimism?,"Optimism is built on four main pillars: simplicity, pragmatism, sustainability, and optimism. These principles heavily influence its overall design.","---
title: Design Philosophy
lang: en-US
---  
Optimism is built according to a strong design philosophy that stands on four main pillars: simplicity, pragmatism, sustainability, and, of course, optimism.
It's important to understand these pillars as they heavily influence the design of Optimism as a whole."
589,What does the design philosophy of Optimism emphasize?,"The design philosophy of Optimism emphasizes simplicity, pragmatism, sustainability, and optimism. These pillars guide the development and implementation of the platform.","---
title: Design Philosophy
lang: en-US
---  
Optimism is built according to a strong design philosophy that stands on four main pillars: simplicity, pragmatism, sustainability, and, of course, optimism.
It's important to understand these pillars as they heavily influence the design of Optimism as a whole."
590,Why does Optimism prefer to use existing Ethereum code and infrastructure?,"Optimism prefers to use existing Ethereum code and infrastructure because it reduces engineering overhead, allowing the team to focus on new features instead of re-creating existing ones. This approach also leverages battle-tested code, enhancing security and reliability.","Optimism is designed to be as simple as possible for the featureset it provides.
Ideally, Optimism should be composed of the minimum number of moving parts required for a secure, scalable, and flexible L2 system.
This simplicity gives Optimism's design a number of significant advantages over other more complex L2 constructions.  
Simplicity reduces engineering overhead, which in turn means we can spend our time working on new features instead of re-creating existing ones.
Optimism prefers to use existing battle-tested Ethereum code and infrastructure where possible.
The most visible example of this philosophy in practice is the choice to use Geth as Optimism's client software.  
When dealing with critical infrastructure, simplicity is also security.
Every line of code we write is an opportunity to introduce unintentional bugs.
A simple protocol means there's less code to write and, as a result, less surface area for potential mistakes.
A clean and minimal codebase is also more accessible to external contributors and auditors.
All of this serves to maximize the security and correctness of the Optimism protocol.  
Simplicity is also important for the long-term vision of Optimism.
By limiting the amount of code that we write on top of Ethereum tooling, we're able to spend most of our time working directly with existing codebases.
Engineering effort that goes into Optimism can also directly benefit Ethereum, and vice versa.
This will only become more pronounced as the Optimism protocol solidifies and existing resources can be redirected towards core Ethereum infrastructure."
590,What are the benefits of Optimism's simplicity in its design?,"The simplicity of Optimism's design reduces engineering overhead, minimizes the potential for bugs, and makes the codebase more accessible to external contributors and auditors. This results in a more secure, scalable, and flexible L2 system.","Optimism is designed to be as simple as possible for the featureset it provides.
Ideally, Optimism should be composed of the minimum number of moving parts required for a secure, scalable, and flexible L2 system.
This simplicity gives Optimism's design a number of significant advantages over other more complex L2 constructions.  
Simplicity reduces engineering overhead, which in turn means we can spend our time working on new features instead of re-creating existing ones.
Optimism prefers to use existing battle-tested Ethereum code and infrastructure where possible.
The most visible example of this philosophy in practice is the choice to use Geth as Optimism's client software.  
When dealing with critical infrastructure, simplicity is also security.
Every line of code we write is an opportunity to introduce unintentional bugs.
A simple protocol means there's less code to write and, as a result, less surface area for potential mistakes.
A clean and minimal codebase is also more accessible to external contributors and auditors.
All of this serves to maximize the security and correctness of the Optimism protocol.  
Simplicity is also important for the long-term vision of Optimism.
By limiting the amount of code that we write on top of Ethereum tooling, we're able to spend most of our time working directly with existing codebases.
Engineering effort that goes into Optimism can also directly benefit Ethereum, and vice versa.
This will only become more pronounced as the Optimism protocol solidifies and existing resources can be redirected towards core Ethereum infrastructure."
590,How does Optimism's simplicity contribute to its long-term vision?,"By keeping the codebase simple and minimal, Optimism can focus on working directly with existing Ethereum codebases. This allows engineering efforts to benefit both Optimism and Ethereum, and as the protocol solidifies, resources can be redirected towards improving core Ethereum infrastructure.","Optimism is designed to be as simple as possible for the featureset it provides.
Ideally, Optimism should be composed of the minimum number of moving parts required for a secure, scalable, and flexible L2 system.
This simplicity gives Optimism's design a number of significant advantages over other more complex L2 constructions.  
Simplicity reduces engineering overhead, which in turn means we can spend our time working on new features instead of re-creating existing ones.
Optimism prefers to use existing battle-tested Ethereum code and infrastructure where possible.
The most visible example of this philosophy in practice is the choice to use Geth as Optimism's client software.  
When dealing with critical infrastructure, simplicity is also security.
Every line of code we write is an opportunity to introduce unintentional bugs.
A simple protocol means there's less code to write and, as a result, less surface area for potential mistakes.
A clean and minimal codebase is also more accessible to external contributors and auditors.
All of this serves to maximize the security and correctness of the Optimism protocol.  
Simplicity is also important for the long-term vision of Optimism.
By limiting the amount of code that we write on top of Ethereum tooling, we're able to spend most of our time working directly with existing codebases.
Engineering effort that goes into Optimism can also directly benefit Ethereum, and vice versa.
This will only become more pronounced as the Optimism protocol solidifies and existing resources can be redirected towards core Ethereum infrastructure."
591,How does the design philosophy of Optimism prioritize user and developer needs?,"Optimism's design philosophy prioritizes user and developer needs over theoretical perfection. This means that the solutions implemented may not always be the most elegant, but they are practical and address real-world constraints and problems faced by users and developers.","For all its idealism, the design process behind Optimism is ultimately driven by pragmatism.
The core Optimism team has real-world constraints, the projects that build on Optimism have real-world needs, and the users that engage with Optimism have real-world problems.
Optimism's design philosophy prioritizes user and developer needs over theoretical perfection.
Sometimes the best solution isn't the prettiest one.  
Optimism is also developed with the understanding that any core team will have limited areas of expertise.
Optimism is developed iteratively and strives to continuously pull feedback from users.
Many core Optimism features today (like [EVM Equivalence](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306)) were only made possible by this iterative approach to protocol development."
591,How does Optimism handle the limitations of its core team's expertise?,"Optimism is developed with the understanding that any core team will have limited areas of expertise. To address this, the development process is iterative and continuously incorporates feedback from users, allowing the team to adapt and improve the protocol based on real-world usage and needs.","For all its idealism, the design process behind Optimism is ultimately driven by pragmatism.
The core Optimism team has real-world constraints, the projects that build on Optimism have real-world needs, and the users that engage with Optimism have real-world problems.
Optimism's design philosophy prioritizes user and developer needs over theoretical perfection.
Sometimes the best solution isn't the prettiest one.  
Optimism is also developed with the understanding that any core team will have limited areas of expertise.
Optimism is developed iteratively and strives to continuously pull feedback from users.
Many core Optimism features today (like [EVM Equivalence](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306)) were only made possible by this iterative approach to protocol development."
591,What role does user feedback play in the development of Optimism?,"User feedback plays a crucial role in the development of Optimism. The iterative approach to protocol development means that many core features, such as EVM Equivalence, were made possible by continuously pulling feedback from users and making adjustments based on that input.","For all its idealism, the design process behind Optimism is ultimately driven by pragmatism.
The core Optimism team has real-world constraints, the projects that build on Optimism have real-world needs, and the users that engage with Optimism have real-world problems.
Optimism's design philosophy prioritizes user and developer needs over theoretical perfection.
Sometimes the best solution isn't the prettiest one.  
Optimism is also developed with the understanding that any core team will have limited areas of expertise.
Optimism is developed iteratively and strives to continuously pull feedback from users.
Many core Optimism features today (like [EVM Equivalence](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306)) were only made possible by this iterative approach to protocol development."
592,Why is long-term sustainability important for Optimism?,Long-term sustainability is important for Optimism because application developers need assurance that the platform they are building on will remain operational and competitive over long periods of time. This ensures that the ecosystem can continue to grow and thrive.,"Optimism is in it for the long haul.
Application developers need assurance that the platform they're building on will remain not only operational but competitive over long periods of time.
Optimism's design process is built around the idea of long-term sustainability and not taking shortcuts to scalability.
At the end of the day, a scalable system means nothing without the ecosystem that sustains it.  
Sustainability actively influences Optimism's protocol design in ways that go hand-in-hand with our philosophy of simplicity.
The more complex a codebase, the more difficult it is for people outside of the core development team to actively contribute.
By keeping our codebase simple we're able to build a bigger community of contributors who can help maintain the protocol long-term."
592,How does Optimism ensure that its protocol remains sustainable?,"Optimism ensures its protocol remains sustainable by focusing on simplicity in its design process. By keeping the codebase simple, it becomes easier for people outside of the core development team to contribute, which helps maintain the protocol over the long term.","Optimism is in it for the long haul.
Application developers need assurance that the platform they're building on will remain not only operational but competitive over long periods of time.
Optimism's design process is built around the idea of long-term sustainability and not taking shortcuts to scalability.
At the end of the day, a scalable system means nothing without the ecosystem that sustains it.  
Sustainability actively influences Optimism's protocol design in ways that go hand-in-hand with our philosophy of simplicity.
The more complex a codebase, the more difficult it is for people outside of the core development team to actively contribute.
By keeping our codebase simple we're able to build a bigger community of contributors who can help maintain the protocol long-term."
592,Why does Optimism prioritize simplicity in its codebase?,"Optimism prioritizes simplicity in its codebase because a more complex codebase makes it difficult for people outside of the core development team to contribute. By keeping things simple, Optimism can build a larger community of contributors who can help maintain the protocol long-term.","Optimism is in it for the long haul.
Application developers need assurance that the platform they're building on will remain not only operational but competitive over long periods of time.
Optimism's design process is built around the idea of long-term sustainability and not taking shortcuts to scalability.
At the end of the day, a scalable system means nothing without the ecosystem that sustains it.  
Sustainability actively influences Optimism's protocol design in ways that go hand-in-hand with our philosophy of simplicity.
The more complex a codebase, the more difficult it is for people outside of the core development team to actively contribute.
By keeping our codebase simple we're able to build a bigger community of contributors who can help maintain the protocol long-term."
593,How is Optimism related to Ethereum?,"Optimism is designed as an extension to Ethereum. Although it looks like a standalone blockchain, it is closely integrated with Ethereum to help it succeed and to redesign our relationships with institutions.","Of course, none of this would be possible without a sense of optimism.
Our optimism about the Ethereum vision keeps this project moving forward.
We believe in an optimistic future for Ethereum, a future where we get to redesign our relationships with the institutions that coordinate our lives.  
Although Optimism looks like a standalone blockchain, it's ultimately designed as an extension to Ethereum.
We keep this in mind whenever we're creating new features or trying to simplify existing ones.
Optimism is as close to Ethereum as possible not only for pragmatic reasons, but because Optimism exists so that Ethereum can succeed.
We hope that you can see the influence of this philosophy when looking at Optimism's design."
593,Why is the project named 'Optimism'?,The project is named 'Optimism' because the team believes in an optimistic future for Ethereum. Their optimism about Ethereum's vision is what keeps the project moving forward.,"Of course, none of this would be possible without a sense of optimism.
Our optimism about the Ethereum vision keeps this project moving forward.
We believe in an optimistic future for Ethereum, a future where we get to redesign our relationships with the institutions that coordinate our lives.  
Although Optimism looks like a standalone blockchain, it's ultimately designed as an extension to Ethereum.
We keep this in mind whenever we're creating new features or trying to simplify existing ones.
Optimism is as close to Ethereum as possible not only for pragmatic reasons, but because Optimism exists so that Ethereum can succeed.
We hope that you can see the influence of this philosophy when looking at Optimism's design."
593,What is the main goal of Optimism?,"The main goal of Optimism is to support the success of Ethereum by creating features and simplifying existing ones, all while staying as close to Ethereum as possible.","Of course, none of this would be possible without a sense of optimism.
Our optimism about the Ethereum vision keeps this project moving forward.
We believe in an optimistic future for Ethereum, a future where we get to redesign our relationships with the institutions that coordinate our lives.  
Although Optimism looks like a standalone blockchain, it's ultimately designed as an extension to Ethereum.
We keep this in mind whenever we're creating new features or trying to simplify existing ones.
Optimism is as close to Ethereum as possible not only for pragmatic reasons, but because Optimism exists so that Ethereum can succeed.
We hope that you can see the influence of this philosophy when looking at Optimism's design."
594,How does Optimism work?,Optimism works using a technology called Optimistic Rollup. This involves bundling multiple transactions together off-chain and then submitting them to the Ethereum blockchain as a single batch. This process helps to increase transaction throughput and reduce fees.,"---
title: Rollup Protocol
lang: en-US
---  
The big idea that makes Optimism possible is the Optimistic Rollup.
We'll go through a brief explainer of *how* Optimistic Rollups work at a high level.
Then we'll explain *why* Optimism is built as an Optimistic Rollup and why we believe it's the best option for a system that addresses all of our design goals."
594,Why is Optimism built as an Optimistic Rollup?,Optimism is built as an Optimistic Rollup because it effectively addresses the design goals of the system. It allows for higher transaction throughput and lower fees while maintaining the security and decentralization of the Ethereum blockchain.,"---
title: Rollup Protocol
lang: en-US
---  
The big idea that makes Optimism possible is the Optimistic Rollup.
We'll go through a brief explainer of *how* Optimistic Rollups work at a high level.
Then we'll explain *why* Optimism is built as an Optimistic Rollup and why we believe it's the best option for a system that addresses all of our design goals."
595,How does Optimism ensure its security?,"Optimism ensures its security by piggy-backing off the security of a parent blockchain, specifically Ethereum. It uses Ethereum's consensus mechanism, such as Proof of Work (PoW) or Proof of Stake (PoS), instead of providing its own.","Optimism is an ""Optimistic Rollup,"" which is basically just a fancy way of describing a blockchain that piggy-backs off of the security of another ""parent"" blockchain.
Specifically, Optimistic Rollups take advantage of the consensus mechanism (like PoW or PoS) of their parent chain instead of providing their own.
In OP Mainnet's case this parent blockchain is Ethereum.  
<div align=""center"">
<img width=""400"" src=""../../assets/docs/how-optimism-works/1.png"">
</div>"
595,What is an Optimistic Rollup?,An Optimistic Rollup is a type of blockchain that relies on the security of another 'parent' blockchain. It leverages the consensus mechanism of the parent chain to ensure its own security.,"Optimism is an ""Optimistic Rollup,"" which is basically just a fancy way of describing a blockchain that piggy-backs off of the security of another ""parent"" blockchain.
Specifically, Optimistic Rollups take advantage of the consensus mechanism (like PoW or PoS) of their parent chain instead of providing their own.
In OP Mainnet's case this parent blockchain is Ethereum.  
<div align=""center"">
<img width=""400"" src=""../../assets/docs/how-optimism-works/1.png"">
</div>"
595,What parent blockchain does OP Mainnet use?,OP Mainnet uses Ethereum as its parent blockchain to ensure its security.,"Optimism is an ""Optimistic Rollup,"" which is basically just a fancy way of describing a blockchain that piggy-backs off of the security of another ""parent"" blockchain.
Specifically, Optimistic Rollups take advantage of the consensus mechanism (like PoW or PoS) of their parent chain instead of providing their own.
In OP Mainnet's case this parent blockchain is Ethereum.  
<div align=""center"">
<img width=""400"" src=""../../assets/docs/how-optimism-works/1.png"">
</div>"
596,How are Bedrock L2 blocks saved to the Ethereum blockchain?,"Bedrock L2 blocks are saved to the Ethereum blockchain using a non-contract address to minimize the L1 gas expense. These blocks are submitted as transaction calldata on Ethereum, making them immutable and uncensorable once included in a block with enough attestations.","In Bedrock L2 blocks are saved to the Ethereum blockchain using a non-contract address ([`0xff00...0420` on Goerli](https://goerli.etherscan.io/address/0xff00000000000000000000000000000000000420), [`0xff00..0010` on Ethereum](https://etherscan.io/address/0xff00000000000000000000000000000000000010)) to minimize the L1 gas expense.
As these blocks are submitted as transaction calldata on Ethereum, there is no way to modify or censor them after the ""transaction"" is included in a block that has enough attestations.
This is the way that OP Mainnet inherits the availability and integrity guarantees of Ethereum.  
Blocks are written to L1 in [a compressed format](https://github.com/ethereum-optimism/optimism/blob/develop/specs/derivation.md#batch-submission-wire-format) to reduce costs.
This is important because writing to L1 is [the major cost of OP Mainnet transactions](../developers/build/transaction-fees.md)."
596,Why is it important to write blocks to L1 in a compressed format?,"Writing blocks to L1 in a compressed format is important because it helps reduce costs. Writing to L1 is the major cost of OP Mainnet transactions, so compression helps make the process more economical.","In Bedrock L2 blocks are saved to the Ethereum blockchain using a non-contract address ([`0xff00...0420` on Goerli](https://goerli.etherscan.io/address/0xff00000000000000000000000000000000000420), [`0xff00..0010` on Ethereum](https://etherscan.io/address/0xff00000000000000000000000000000000000010)) to minimize the L1 gas expense.
As these blocks are submitted as transaction calldata on Ethereum, there is no way to modify or censor them after the ""transaction"" is included in a block that has enough attestations.
This is the way that OP Mainnet inherits the availability and integrity guarantees of Ethereum.  
Blocks are written to L1 in [a compressed format](https://github.com/ethereum-optimism/optimism/blob/develop/specs/derivation.md#batch-submission-wire-format) to reduce costs.
This is important because writing to L1 is [the major cost of OP Mainnet transactions](../developers/build/transaction-fees.md)."
596,What guarantees does OP Mainnet inherit from Ethereum?,"OP Mainnet inherits the availability and integrity guarantees of Ethereum because the blocks are submitted as transaction calldata on Ethereum, making them immutable and uncensorable once included in a block with enough attestations.","In Bedrock L2 blocks are saved to the Ethereum blockchain using a non-contract address ([`0xff00...0420` on Goerli](https://goerli.etherscan.io/address/0xff00000000000000000000000000000000000420), [`0xff00..0010` on Ethereum](https://etherscan.io/address/0xff00000000000000000000000000000000000010)) to minimize the L1 gas expense.
As these blocks are submitted as transaction calldata on Ethereum, there is no way to modify or censor them after the ""transaction"" is included in a block that has enough attestations.
This is the way that OP Mainnet inherits the availability and integrity guarantees of Ethereum.  
Blocks are written to L1 in [a compressed format](https://github.com/ethereum-optimism/optimism/blob/develop/specs/derivation.md#batch-submission-wire-format) to reduce costs.
This is important because writing to L1 is [the major cost of OP Mainnet transactions](../developers/build/transaction-fees.md)."
597,Who manages block production in Optimism?,"Block production in Optimism is primarily managed by a single party called the 'sequencer.' The sequencer provides transaction confirmations, state updates, constructs and executes L2 blocks, and submits user transactions to L1.","Optimism block production is primarily managed by a single party, called the ""sequencer,"" which helps the network by providing the following services:  
- Providing transaction confirmations and state updates.
- Constructing and executing L2 blocks.
- Submitting user transactions to L1.  
In Bedrock the sequencer does have a mempool, similar to L1 Ethereum, but the mempool is private to avoid opening opportunities for MEV.
In OP Mainnet blocks are produced every two seconds, regardless of whether they are empty (no transactions), filled up to the block gas limit with transactions, or anything in between.  
Transactions get to the sequencer in two ways:  
1. Transactions submitted on L1 (called *deposits* whether they have assets attached or not) are included in the chain in the appropriate L2 block.
Every L2 block is identified by the ""epoch"" (the L1 block to which it corresponds, which typically has happened a few minutes before the L2 block) and its sequence number within that epoch.
The first block of the epoch includes all the deposits that happened in the L1 block to which it corresponds.
If the sequencer attempts to ignore a legitimate L1 transaction it ends up with a state that is inconsistent with the verifiers, same as if the sequencer tried to fake the state by other means.
This provides OP Mainnet with L1 Ethereum level censorship resistance.
You can read more about this mechanism [in the protocol specifications](https://github.com/ethereum-optimism/optimism/blob/develop/specs/derivation.md#deriving-the-transaction-list).  
1. Transactions submitted directly to the sequencer.
These transactions are a lot cheaper to submit (because you do not need the expense of a separate L1 transaction), but of course they cannot be made censorship resistant, because the sequencer is the only entity that knows about them.  
For the moment, [The Optimism Foundation](https://www.optimism.io/) runs the only block producer on OP Mainnet. Refer to [Protocol specs](../protocol/README.md) section for more information about how we plan to decentralize the Sequencer role in the future."
597,How often are blocks produced on the OP Mainnet?,"On the OP Mainnet, blocks are produced every two seconds, regardless of whether they are empty or filled with transactions.","Optimism block production is primarily managed by a single party, called the ""sequencer,"" which helps the network by providing the following services:  
- Providing transaction confirmations and state updates.
- Constructing and executing L2 blocks.
- Submitting user transactions to L1.  
In Bedrock the sequencer does have a mempool, similar to L1 Ethereum, but the mempool is private to avoid opening opportunities for MEV.
In OP Mainnet blocks are produced every two seconds, regardless of whether they are empty (no transactions), filled up to the block gas limit with transactions, or anything in between.  
Transactions get to the sequencer in two ways:  
1. Transactions submitted on L1 (called *deposits* whether they have assets attached or not) are included in the chain in the appropriate L2 block.
Every L2 block is identified by the ""epoch"" (the L1 block to which it corresponds, which typically has happened a few minutes before the L2 block) and its sequence number within that epoch.
The first block of the epoch includes all the deposits that happened in the L1 block to which it corresponds.
If the sequencer attempts to ignore a legitimate L1 transaction it ends up with a state that is inconsistent with the verifiers, same as if the sequencer tried to fake the state by other means.
This provides OP Mainnet with L1 Ethereum level censorship resistance.
You can read more about this mechanism [in the protocol specifications](https://github.com/ethereum-optimism/optimism/blob/develop/specs/derivation.md#deriving-the-transaction-list).  
1. Transactions submitted directly to the sequencer.
These transactions are a lot cheaper to submit (because you do not need the expense of a separate L1 transaction), but of course they cannot be made censorship resistant, because the sequencer is the only entity that knows about them.  
For the moment, [The Optimism Foundation](https://www.optimism.io/) runs the only block producer on OP Mainnet. Refer to [Protocol specs](../protocol/README.md) section for more information about how we plan to decentralize the Sequencer role in the future."
597,What are the two ways transactions can get to the sequencer in Optimism?,"Transactions can get to the sequencer in two ways: 1) Transactions submitted on L1, called 'deposits,' which are included in the appropriate L2 block. 2) Transactions submitted directly to the sequencer, which are cheaper but cannot be made censorship resistant.","Optimism block production is primarily managed by a single party, called the ""sequencer,"" which helps the network by providing the following services:  
- Providing transaction confirmations and state updates.
- Constructing and executing L2 blocks.
- Submitting user transactions to L1.  
In Bedrock the sequencer does have a mempool, similar to L1 Ethereum, but the mempool is private to avoid opening opportunities for MEV.
In OP Mainnet blocks are produced every two seconds, regardless of whether they are empty (no transactions), filled up to the block gas limit with transactions, or anything in between.  
Transactions get to the sequencer in two ways:  
1. Transactions submitted on L1 (called *deposits* whether they have assets attached or not) are included in the chain in the appropriate L2 block.
Every L2 block is identified by the ""epoch"" (the L1 block to which it corresponds, which typically has happened a few minutes before the L2 block) and its sequence number within that epoch.
The first block of the epoch includes all the deposits that happened in the L1 block to which it corresponds.
If the sequencer attempts to ignore a legitimate L1 transaction it ends up with a state that is inconsistent with the verifiers, same as if the sequencer tried to fake the state by other means.
This provides OP Mainnet with L1 Ethereum level censorship resistance.
You can read more about this mechanism [in the protocol specifications](https://github.com/ethereum-optimism/optimism/blob/develop/specs/derivation.md#deriving-the-transaction-list).  
1. Transactions submitted directly to the sequencer.
These transactions are a lot cheaper to submit (because you do not need the expense of a separate L1 transaction), but of course they cannot be made censorship resistant, because the sequencer is the only entity that knows about them.  
For the moment, [The Optimism Foundation](https://www.optimism.io/) runs the only block producer on OP Mainnet. Refer to [Protocol specs](../protocol/README.md) section for more information about how we plan to decentralize the Sequencer role in the future."
598,How does the execution engine in Optimism receive blocks?,"The execution engine in Optimism, implemented as the `op-geth` component, receives blocks using two mechanisms: it can update itself using a peer-to-peer network with other execution engines, similar to how L1 execution clients synchronize state across the network, and it can derive L2 blocks from L1 using the rollup node, implemented as the `op-node` component.","The execution engine (implemented as the `op-geth` component) receive blocks using two mechanisms:  
1. The execution engine can update itself using peer to peer network with other execution engines.
This operates the same way that the L1 execution clients synchronize the state across the network.
You can read more about it [in the specs](https://github.com/ethereum-optimism/optimism/blob/develop/specs/exec-engine.md#happy-path-sync).  
1. The rollup node (implemented as the `op-node` component) derives the L2 blocks from L1.
This mechanism is slower, but censorship resistant.
You can read more about it [in the specs](https://github.com/ethereum-optimism/optimism/blob/develop/specs/exec-engine.md#worst-case-sync)."
598,What is the difference between the two mechanisms for receiving blocks in Optimism?,"The first mechanism involves the execution engine updating itself through a peer-to-peer network with other execution engines, which is similar to how L1 execution clients synchronize state. The second mechanism involves the rollup node deriving L2 blocks from L1, which is slower but offers censorship resistance.","The execution engine (implemented as the `op-geth` component) receive blocks using two mechanisms:  
1. The execution engine can update itself using peer to peer network with other execution engines.
This operates the same way that the L1 execution clients synchronize the state across the network.
You can read more about it [in the specs](https://github.com/ethereum-optimism/optimism/blob/develop/specs/exec-engine.md#happy-path-sync).  
1. The rollup node (implemented as the `op-node` component) derives the L2 blocks from L1.
This mechanism is slower, but censorship resistant.
You can read more about it [in the specs](https://github.com/ethereum-optimism/optimism/blob/develop/specs/exec-engine.md#worst-case-sync)."
598,Where can I find more detailed information about the synchronization mechanisms of the execution engine in Optimism?,"You can find more detailed information about the synchronization mechanisms of the execution engine in the Optimism specs. For the peer-to-peer network synchronization, refer to the 'happy-path-sync' section, and for the rollup node mechanism, refer to the 'worst-case-sync' section.","The execution engine (implemented as the `op-geth` component) receive blocks using two mechanisms:  
1. The execution engine can update itself using peer to peer network with other execution engines.
This operates the same way that the L1 execution clients synchronize the state across the network.
You can read more about it [in the specs](https://github.com/ethereum-optimism/optimism/blob/develop/specs/exec-engine.md#happy-path-sync).  
1. The rollup node (implemented as the `op-node` component) derives the L2 blocks from L1.
This mechanism is slower, but censorship resistant.
You can read more about it [in the specs](https://github.com/ethereum-optimism/optimism/blob/develop/specs/exec-engine.md#worst-case-sync)."
599,Can I transfer ERC20 tokens between Ethereum and Optimism?,"Yes, you can transfer ERC20 tokens between Ethereum and Optimism. Optimism allows users to send arbitrary messages between smart contracts on L2 (like OP Mainnet) and the underlying L1 (Ethereum mainnet). This functionality is used in the Standard bridge to deposit and withdraw assets, including ERC20 tokens, between the two networks.","Optimism is designed so that users can send arbitrary messages between smart contracts on L2 (OP Mainnet, OP Goerli, etc.) and the underlying L1 (Ethereum mainnet, Goerli, etc.).
This makes it possible to transfer assets, including ERC20 tokens, between the two networks.
The exact mechanism by which this communication occurs differs depending on the direction in which messages are being sent.  
OP Mainnet uses this functionality in the Standard bridge to allow users to deposit assets (ERC20s and ETH) from Ethereum to OP Mainnet and also allow withdrawals of the same from OP Mainnet back to Ethereum.
See the [developer documentation and examples](../developers/bridge/standard-bridge/) on details on the inner workings of the Standard bridge."
599,How does Optimism handle asset transfers between Ethereum and its own network?,"Optimism uses a mechanism that allows communication between smart contracts on L2 (Optimism) and L1 (Ethereum). The exact mechanism varies depending on the direction of the message. For example, the Standard bridge on OP Mainnet enables users to deposit assets from Ethereum to OP Mainnet and withdraw them back to Ethereum.","Optimism is designed so that users can send arbitrary messages between smart contracts on L2 (OP Mainnet, OP Goerli, etc.) and the underlying L1 (Ethereum mainnet, Goerli, etc.).
This makes it possible to transfer assets, including ERC20 tokens, between the two networks.
The exact mechanism by which this communication occurs differs depending on the direction in which messages are being sent.  
OP Mainnet uses this functionality in the Standard bridge to allow users to deposit assets (ERC20s and ETH) from Ethereum to OP Mainnet and also allow withdrawals of the same from OP Mainnet back to Ethereum.
See the [developer documentation and examples](../developers/bridge/standard-bridge/) on details on the inner workings of the Standard bridge."
599,Where can I find more technical details about the Standard bridge in Optimism?,You can find more technical details and examples about the Standard bridge in the developer documentation. The documentation provides insights into the inner workings of the Standard bridge and how it facilitates asset transfers between Ethereum and Optimism.,"Optimism is designed so that users can send arbitrary messages between smart contracts on L2 (OP Mainnet, OP Goerli, etc.) and the underlying L1 (Ethereum mainnet, Goerli, etc.).
This makes it possible to transfer assets, including ERC20 tokens, between the two networks.
The exact mechanism by which this communication occurs differs depending on the direction in which messages are being sent.  
OP Mainnet uses this functionality in the Standard bridge to allow users to deposit assets (ERC20s and ETH) from Ethereum to OP Mainnet and also allow withdrawals of the same from OP Mainnet back to Ethereum.
See the [developer documentation and examples](../developers/bridge/standard-bridge/) on details on the inner workings of the Standard bridge."
600,How are transactions from Ethereum to OP Mainnet referred to in Optimism terminology?,"In Optimism terminology, transactions going from Ethereum (L1) to OP Mainnet (L2) are called deposits, even if they do not have any assets attached to them.","In Optimism terminology, transactions going from Ethereum (L1) to OP Mainnet (L2) are called *deposits*, even if they do not have any assets attached to them.  
You use [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-comm) or [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol).
Deposit transactions become part of the canonical blockchain in the first L2 block of the ""epoch"" corresponding to the L1 block where the deposits were made.
This L2 block will usually be created a few minutes after the corresponding L1 block.
You can read more about this [in the specs](https://github.com/ethereum-optimism/optimism/blob/develop/specs/deposits.md)."
600,What tools can be used to perform deposit transactions in Optimism?,You can use L1CrossDomainMessenger or L1StandardBridge to perform deposit transactions in Optimism.,"In Optimism terminology, transactions going from Ethereum (L1) to OP Mainnet (L2) are called *deposits*, even if they do not have any assets attached to them.  
You use [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-comm) or [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol).
Deposit transactions become part of the canonical blockchain in the first L2 block of the ""epoch"" corresponding to the L1 block where the deposits were made.
This L2 block will usually be created a few minutes after the corresponding L1 block.
You can read more about this [in the specs](https://github.com/ethereum-optimism/optimism/blob/develop/specs/deposits.md)."
600,When do deposit transactions become part of the canonical blockchain in Optimism?,Deposit transactions become part of the canonical blockchain in the first L2 block of the 'epoch' corresponding to the L1 block where the deposits were made. This L2 block is usually created a few minutes after the corresponding L1 block.,"In Optimism terminology, transactions going from Ethereum (L1) to OP Mainnet (L2) are called *deposits*, even if they do not have any assets attached to them.  
You use [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-comm) or [`L1StandardBridge`](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol).
Deposit transactions become part of the canonical blockchain in the first L2 block of the ""epoch"" corresponding to the L1 block where the deposits were made.
This L2 block will usually be created a few minutes after the corresponding L1 block.
You can read more about this [in the specs](https://github.com/ethereum-optimism/optimism/blob/develop/specs/deposits.md)."
601,How do withdrawals work on Optimism?,"Withdrawals on Optimism have three stages: First, you initialize the withdrawal with an L2 transaction. Then, you wait for the next output root to be submitted to L1 and submit the withdrawal proof using `proveWithdrawalTransaction`. Finally, after the fault challenge period ends (a week on mainnet, less on the test network), you can finalize the withdrawal.","Withdrawals (the term is used for any OP Mainnet to Ethereum message, regardless of whether it has attached assets or not) have three stages:  
1. You initialize withdrawals with an L2 transaction.  
1. Wait for the next output root to be submitted to L1 (you can see this on [the SDK](../sdk/js-client.md)) and then submit the withdrawal proof using `proveWithdrawalTransaction`.
This new step enables offchain monitoring of the withdrawals, which makes it easier to identify incorrect withdrawals or output roots.
This protects OP Mainnet users against a whole class of potential bridge vulnerabilities.  
1. After the fault challenge period ends (a week on mainnet, less than that on the test network), finalize the withdrawal.  
[You can read the full withdrawal specifications here](https://github.com/ethereum-optimism/optimism/blob/develop/specs/withdrawals.md)"
601,What is the purpose of the fault challenge period in the withdrawal process?,"The fault challenge period, which lasts a week on mainnet, allows time to identify and challenge any incorrect withdrawals or output roots. This helps protect OP Mainnet users from potential bridge vulnerabilities.","Withdrawals (the term is used for any OP Mainnet to Ethereum message, regardless of whether it has attached assets or not) have three stages:  
1. You initialize withdrawals with an L2 transaction.  
1. Wait for the next output root to be submitted to L1 (you can see this on [the SDK](../sdk/js-client.md)) and then submit the withdrawal proof using `proveWithdrawalTransaction`.
This new step enables offchain monitoring of the withdrawals, which makes it easier to identify incorrect withdrawals or output roots.
This protects OP Mainnet users against a whole class of potential bridge vulnerabilities.  
1. After the fault challenge period ends (a week on mainnet, less than that on the test network), finalize the withdrawal.  
[You can read the full withdrawal specifications here](https://github.com/ethereum-optimism/optimism/blob/develop/specs/withdrawals.md)"
601,Can withdrawals on Optimism be monitored offchain?,"Yes, the new step of submitting the withdrawal proof using `proveWithdrawalTransaction` enables offchain monitoring of withdrawals. This makes it easier to identify incorrect withdrawals or output roots.","Withdrawals (the term is used for any OP Mainnet to Ethereum message, regardless of whether it has attached assets or not) have three stages:  
1. You initialize withdrawals with an L2 transaction.  
1. Wait for the next output root to be submitted to L1 (you can see this on [the SDK](../sdk/js-client.md)) and then submit the withdrawal proof using `proveWithdrawalTransaction`.
This new step enables offchain monitoring of the withdrawals, which makes it easier to identify incorrect withdrawals or output roots.
This protects OP Mainnet users against a whole class of potential bridge vulnerabilities.  
1. After the fault challenge period ends (a week on mainnet, less than that on the test network), finalize the withdrawal.  
[You can read the full withdrawal specifications here](https://github.com/ethereum-optimism/optimism/blob/develop/specs/withdrawals.md)"
602,How does Optimism ensure the validity of state commitments on Ethereum?,"In an Optimistic Rollup, state commitments are published to Ethereum without direct proof of their validity. These commitments are considered pending during a 'challenge window' of 7 days. If a commitment goes unchallenged during this period, it is considered final and smart contracts on Ethereum can safely accept withdrawal proofs based on that commitment.","In an Optimistic Rollup, state commitments are published to L1 (Ethereum in the case of OP Mainnet) without any direct proof of the validity of these commitments.
Instead, these commitments are considered pending for a period of time (called the ""challenge window"").
If a proposed state commitment goes unchallenged for the duration of the challenge window (currently set to 7 days), then it is considered final.
Once a commitment is considered final, smart contracts on Ethereum can safely accept withdrawal proofs about the state of OP Mainnet based on that commitment.  
When a state commitment is challenged, it can be invalidated through a ""fault proof"" ([formerly known as a ""fraud proof""](https://github.com/ethereum-optimism/optimistic-specs/discussions/53)) process.
If the commitment is successfully challenged, then it is removed from the `StateCommitmentChain` to eventually be replaced by another proposed commitment.
It's important to note that a successful challenge does not roll back OP Mainnet itself, only the published commitments about the state of the chain.
The ordering of transactions and the state of OP Mainnet is unchanged by a fault proof challenge.  
The fault proof process is currently undergoing major redevelopment as a side-effect of the November 11th [EVM Equivalence](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306) update.
You can read more about this process within the [Protocol specs](../protocol/README.md) section of this website."
602,What happens if a state commitment on Optimism is challenged?,"If a state commitment is challenged, it can be invalidated through a 'fault proof' process. If the challenge is successful, the commitment is removed from the StateCommitmentChain and will eventually be replaced by another proposed commitment. Importantly, a successful challenge does not roll back OP Mainnet itself; it only affects the published commitments about the state of the chain.","In an Optimistic Rollup, state commitments are published to L1 (Ethereum in the case of OP Mainnet) without any direct proof of the validity of these commitments.
Instead, these commitments are considered pending for a period of time (called the ""challenge window"").
If a proposed state commitment goes unchallenged for the duration of the challenge window (currently set to 7 days), then it is considered final.
Once a commitment is considered final, smart contracts on Ethereum can safely accept withdrawal proofs about the state of OP Mainnet based on that commitment.  
When a state commitment is challenged, it can be invalidated through a ""fault proof"" ([formerly known as a ""fraud proof""](https://github.com/ethereum-optimism/optimistic-specs/discussions/53)) process.
If the commitment is successfully challenged, then it is removed from the `StateCommitmentChain` to eventually be replaced by another proposed commitment.
It's important to note that a successful challenge does not roll back OP Mainnet itself, only the published commitments about the state of the chain.
The ordering of transactions and the state of OP Mainnet is unchanged by a fault proof challenge.  
The fault proof process is currently undergoing major redevelopment as a side-effect of the November 11th [EVM Equivalence](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306) update.
You can read more about this process within the [Protocol specs](../protocol/README.md) section of this website."
602,What is the 'challenge window' in Optimism's rollup process?,"The 'challenge window' is a period of time, currently set to 7 days, during which state commitments published to Ethereum can be challenged. If a commitment goes unchallenged for the duration of this window, it is considered final.","In an Optimistic Rollup, state commitments are published to L1 (Ethereum in the case of OP Mainnet) without any direct proof of the validity of these commitments.
Instead, these commitments are considered pending for a period of time (called the ""challenge window"").
If a proposed state commitment goes unchallenged for the duration of the challenge window (currently set to 7 days), then it is considered final.
Once a commitment is considered final, smart contracts on Ethereum can safely accept withdrawal proofs about the state of OP Mainnet based on that commitment.  
When a state commitment is challenged, it can be invalidated through a ""fault proof"" ([formerly known as a ""fraud proof""](https://github.com/ethereum-optimism/optimistic-specs/discussions/53)) process.
If the commitment is successfully challenged, then it is removed from the `StateCommitmentChain` to eventually be replaced by another proposed commitment.
It's important to note that a successful challenge does not roll back OP Mainnet itself, only the published commitments about the state of the chain.
The ordering of transactions and the state of OP Mainnet is unchanged by a fault proof challenge.  
The fault proof process is currently undergoing major redevelopment as a side-effect of the November 11th [EVM Equivalence](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306) update.
You can read more about this process within the [Protocol specs](../protocol/README.md) section of this website."
604,Does Optimism have a roadmap for future releases?,"Yes, Optimism has a planned roadmap for future releases, which you can find summarized on their website.",Below is a brief summary of some of the planned [Optimism roadmap](https://www.optimism.io/about) releases.
605,Is the fault proof mechanism currently active on the OP Mainnet network?,"No, the fault proof mechanism had to be temporarily disabled as part of the OVM 2.0 upgrade. Users currently need to trust the Sequencer node run by the Optimism Foundation to publish valid state roots to Ethereum.","As part of the OVM 2.0 upgrade, the **Optimism fault proof mechanism had to be temporarily disabled**. This means that users of the OP Mainnet network currently need to trust the Sequencer node (run by Optimism Foundation) to publish valid state roots to Ethereum. **You can read more about our security model [here](../security-model/README.md)**.  
We're making progress on the upgrade fault proof mechanism and we expect to productionize our work in 2023. You can keep up with developments in the [Cannon repository](https://github.com/ethereum-optimism/cannon/)."
605,When is the fault proof mechanism expected to be back in production?,The Optimism team is making progress on the upgrade fault proof mechanism and expects to productionize their work in 2023.,"As part of the OVM 2.0 upgrade, the **Optimism fault proof mechanism had to be temporarily disabled**. This means that users of the OP Mainnet network currently need to trust the Sequencer node (run by Optimism Foundation) to publish valid state roots to Ethereum. **You can read more about our security model [here](../security-model/README.md)**.  
We're making progress on the upgrade fault proof mechanism and we expect to productionize our work in 2023. You can keep up with developments in the [Cannon repository](https://github.com/ethereum-optimism/cannon/)."
605,Where can I find more information about the security model of Optimism?,"You can read more about the security model of Optimism in their documentation, specifically at the security model section [here](../security-model/README.md).","As part of the OVM 2.0 upgrade, the **Optimism fault proof mechanism had to be temporarily disabled**. This means that users of the OP Mainnet network currently need to trust the Sequencer node (run by Optimism Foundation) to publish valid state roots to Ethereum. **You can read more about our security model [here](../security-model/README.md)**.  
We're making progress on the upgrade fault proof mechanism and we expect to productionize our work in 2023. You can keep up with developments in the [Cannon repository](https://github.com/ethereum-optimism/cannon/)."
606,Who currently runs the sequencer on the OP Mainnet?,The Optimism Foundation currently runs the sole sequencer on the OP Mainnet.,"Currently, the Optimism Foundation runs the sole sequencer on OP Mainnet. This does not mean that Optimism can censor user transactions. However, it is still desirable to decentralize the sequencer over time, eliminating Optimism's role entirely so that anyone can participate in the network as a block producer.  
The first step to decentralizing the sequencer is to still have one sequencer at a time, but rotate that sequencer with some frequency. The precise mechanic for sequencer rotation is not yet finalized, but will involve two components:  
- an **economic mechanism** which creates a competitive market for sequencing, and redirects excess sequencer profits [towards protocol development](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c).
- a **governance mechanism** which prevents sequencers from prioritizing short-term profits over the long-term health of the network.  
After this, the next step is to support multiple concurrent sequencers. This can be simply achieved by adopting a standard BFT consensus protocol, as used by other L1 protocols and sidechains like Polygon and Cosmos.  
You can keep up with the roadmap progress in [Cannon repository](https://github.com/ethereum-optimism/optimism/tree/develop/cannon) for the fault proofs and [Optimism specs repository](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/specs) for the overall protocol work."
606,Can Optimism censor user transactions?,"No, even though the Optimism Foundation runs the sole sequencer, it does not mean that Optimism can censor user transactions.","Currently, the Optimism Foundation runs the sole sequencer on OP Mainnet. This does not mean that Optimism can censor user transactions. However, it is still desirable to decentralize the sequencer over time, eliminating Optimism's role entirely so that anyone can participate in the network as a block producer.  
The first step to decentralizing the sequencer is to still have one sequencer at a time, but rotate that sequencer with some frequency. The precise mechanic for sequencer rotation is not yet finalized, but will involve two components:  
- an **economic mechanism** which creates a competitive market for sequencing, and redirects excess sequencer profits [towards protocol development](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c).
- a **governance mechanism** which prevents sequencers from prioritizing short-term profits over the long-term health of the network.  
After this, the next step is to support multiple concurrent sequencers. This can be simply achieved by adopting a standard BFT consensus protocol, as used by other L1 protocols and sidechains like Polygon and Cosmos.  
You can keep up with the roadmap progress in [Cannon repository](https://github.com/ethereum-optimism/optimism/tree/develop/cannon) for the fault proofs and [Optimism specs repository](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/specs) for the overall protocol work."
606,What is the plan for decentralizing the sequencer on Optimism?,"The plan involves initially rotating the sequencer with some frequency using an economic mechanism to create a competitive market for sequencing and a governance mechanism to ensure long-term network health. Eventually, the goal is to support multiple concurrent sequencers using a standard BFT consensus protocol.","Currently, the Optimism Foundation runs the sole sequencer on OP Mainnet. This does not mean that Optimism can censor user transactions. However, it is still desirable to decentralize the sequencer over time, eliminating Optimism's role entirely so that anyone can participate in the network as a block producer.  
The first step to decentralizing the sequencer is to still have one sequencer at a time, but rotate that sequencer with some frequency. The precise mechanic for sequencer rotation is not yet finalized, but will involve two components:  
- an **economic mechanism** which creates a competitive market for sequencing, and redirects excess sequencer profits [towards protocol development](https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c).
- a **governance mechanism** which prevents sequencers from prioritizing short-term profits over the long-term health of the network.  
After this, the next step is to support multiple concurrent sequencers. This can be simply achieved by adopting a standard BFT consensus protocol, as used by other L1 protocols and sidechains like Polygon and Cosmos.  
You can keep up with the roadmap progress in [Cannon repository](https://github.com/ethereum-optimism/optimism/tree/develop/cannon) for the fault proofs and [Optimism specs repository](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/specs) for the overall protocol work."
607,How does the deposit process work in Optimism?,The deposit process in Optimism involves transferring assets from the Ethereum mainnet to the Optimism Layer 2 network. This typically requires using a bridge to lock assets on the mainnet and mint corresponding tokens on Optimism.,"---
title: Deposit Flow
lang: en-US
---"
607,What is the purpose of the deposit flow in Optimism?,"The deposit flow in Optimism is designed to enable users to move their assets from the Ethereum mainnet to the Optimism Layer 2 network, allowing for faster and cheaper transactions while still benefiting from Ethereum's security.","---
title: Deposit Flow
lang: en-US
---"
608,What's a deposit transaction in Optimism?,"In Optimism terminology, a deposit transaction refers to any Layer 2 (L2) transaction that is triggered by a transaction or event on Layer 1 (L1). It may or may not have assets like ETH or tokens attached to it.","In Optimism terminology, ""*deposit transaction*"" refers to any L2 transaction that is triggered by a transaction or event on L1.
A deposit transaction may or may not have assets (ETH, tokens, etc.) attached to it.  
The process is somewhat similar to [the way most networking stacks work](https://en.wikipedia.org/wiki/Encapsulation_(networking)).
Information is encapsulated in lower layer packets on the sending side, and then retrieved and used by those layers on the receiving side while going up the stack to the receiving application.  
![Overall process](../../assets/docs/protocol/deposit-flow/overall-process.svg)"
608,Does a deposit transaction always include assets like ETH or tokens?,"No, a deposit transaction in Optimism may or may not have assets such as ETH or tokens attached to it.","In Optimism terminology, ""*deposit transaction*"" refers to any L2 transaction that is triggered by a transaction or event on L1.
A deposit transaction may or may not have assets (ETH, tokens, etc.) attached to it.  
The process is somewhat similar to [the way most networking stacks work](https://en.wikipedia.org/wiki/Encapsulation_(networking)).
Information is encapsulated in lower layer packets on the sending side, and then retrieved and used by those layers on the receiving side while going up the stack to the receiving application.  
![Overall process](../../assets/docs/protocol/deposit-flow/overall-process.svg)"
608,How is the process of a deposit transaction in Optimism similar to networking?,The process of a deposit transaction in Optimism is somewhat similar to the way most networking stacks work. Information is encapsulated in lower layer packets on the sending side and then retrieved and used by those layers on the receiving side while going up the stack to the receiving application.,"In Optimism terminology, ""*deposit transaction*"" refers to any L2 transaction that is triggered by a transaction or event on L1.
A deposit transaction may or may not have assets (ETH, tokens, etc.) attached to it.  
The process is somewhat similar to [the way most networking stacks work](https://en.wikipedia.org/wiki/Encapsulation_(networking)).
Information is encapsulated in lower layer packets on the sending side, and then retrieved and used by those layers on the receiving side while going up the stack to the receiving application.  
![Overall process](../../assets/docs/protocol/deposit-flow/overall-process.svg)"
609,How does an L1 entity send a message to an L2 address in Optimism?,"An L1 entity, either a smart contract or an externally owned account (EOA), sends a deposit transaction to the `L1CrossDomainMessenger` using the `sendMessage` function. This function requires three parameters: the target address on L2, the L2 transaction's calldata, and the minimum gas limit for the transaction on L2.","1. An L1 entity, either a smart contract or an externally owned account (EOA), sends a deposit transaction to [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol), using [`sendMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L249-L289).
This function accepts three parameters:  
- `_target`, target address on L2.
- `_message`, the L2 transaction's calldata, formatted as per the [ABI](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html) of the target account.
- `_minGasLimit`, the minimum gas limit allowed for the transaction on L2. Note that this is a *minimum* and the actual amount provided on L2 may be higher (but never lower) than the specified gas limit.
Note that the actual amount provided on L2 will be higher, because the portal contract on L2 needs to do some processing before submitting the call to `_target`.  
You can see code that implements this call [in the tutorial](https://github.com/ethereum-optimism/optimism-tutorial/blob/main/cross-dom-comm/hardhat/contracts/FromL1_ControlL2Greeter.sol#L16).  
1. The L1 cross domain messenger calls [its own `_send` function](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol#L42-L52).
It uses these parameters:  
- `_to`, the destination address, is the messenger on the other side.
In the case of deposits, this is always [`0x4200000000000000000000000000000000000007`](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007).
- `_gasLimit`, the gas limit.
This value is calculated using [the `baseGas` function](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L442-L471).
- `_value`, the ETH that is sent with the message.
This amount is taken from the transaction value.
- `_data`, the calldata for the call on L2 that is needed to relay the message.
This is an [ABI encoded](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html) call to [`relayMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L291-L413).  
1. [`_sendMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol#L42-L52) calls the portal's [`depositTransaction` function](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L422-L483).  
Note that other contracts can also call [`depositTransaction`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L422-L483) directly.
However, doing so bypasses certain safeguards, so in most cases it's a bad idea.  
1. [The `depositTransaction` function](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L422-L483) runs a few sanity checks, and then emits a [`TransactionDeposited`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L85-L99) event."
609,What happens after the L1CrossDomainMessenger receives a deposit transaction?,"The L1CrossDomainMessenger calls its own `_send` function, which uses parameters such as the destination address (always `0x4200000000000000000000000000000000000007` for deposits), the gas limit, the ETH sent with the message, and the calldata for the call on L2. This calldata is an ABI-encoded call to `relayMessage`.","1. An L1 entity, either a smart contract or an externally owned account (EOA), sends a deposit transaction to [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol), using [`sendMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L249-L289).
This function accepts three parameters:  
- `_target`, target address on L2.
- `_message`, the L2 transaction's calldata, formatted as per the [ABI](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html) of the target account.
- `_minGasLimit`, the minimum gas limit allowed for the transaction on L2. Note that this is a *minimum* and the actual amount provided on L2 may be higher (but never lower) than the specified gas limit.
Note that the actual amount provided on L2 will be higher, because the portal contract on L2 needs to do some processing before submitting the call to `_target`.  
You can see code that implements this call [in the tutorial](https://github.com/ethereum-optimism/optimism-tutorial/blob/main/cross-dom-comm/hardhat/contracts/FromL1_ControlL2Greeter.sol#L16).  
1. The L1 cross domain messenger calls [its own `_send` function](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol#L42-L52).
It uses these parameters:  
- `_to`, the destination address, is the messenger on the other side.
In the case of deposits, this is always [`0x4200000000000000000000000000000000000007`](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007).
- `_gasLimit`, the gas limit.
This value is calculated using [the `baseGas` function](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L442-L471).
- `_value`, the ETH that is sent with the message.
This amount is taken from the transaction value.
- `_data`, the calldata for the call on L2 that is needed to relay the message.
This is an [ABI encoded](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html) call to [`relayMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L291-L413).  
1. [`_sendMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol#L42-L52) calls the portal's [`depositTransaction` function](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L422-L483).  
Note that other contracts can also call [`depositTransaction`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L422-L483) directly.
However, doing so bypasses certain safeguards, so in most cases it's a bad idea.  
1. [The `depositTransaction` function](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L422-L483) runs a few sanity checks, and then emits a [`TransactionDeposited`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L85-L99) event."
609,Can other contracts call the `depositTransaction` function directly?,"Yes, other contracts can call the `depositTransaction` function directly. However, doing so bypasses certain safeguards, so it is generally not recommended. The `depositTransaction` function performs sanity checks and emits a `TransactionDeposited` event.","1. An L1 entity, either a smart contract or an externally owned account (EOA), sends a deposit transaction to [`L1CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol), using [`sendMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L249-L289).
This function accepts three parameters:  
- `_target`, target address on L2.
- `_message`, the L2 transaction's calldata, formatted as per the [ABI](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html) of the target account.
- `_minGasLimit`, the minimum gas limit allowed for the transaction on L2. Note that this is a *minimum* and the actual amount provided on L2 may be higher (but never lower) than the specified gas limit.
Note that the actual amount provided on L2 will be higher, because the portal contract on L2 needs to do some processing before submitting the call to `_target`.  
You can see code that implements this call [in the tutorial](https://github.com/ethereum-optimism/optimism-tutorial/blob/main/cross-dom-comm/hardhat/contracts/FromL1_ControlL2Greeter.sol#L16).  
1. The L1 cross domain messenger calls [its own `_send` function](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol#L42-L52).
It uses these parameters:  
- `_to`, the destination address, is the messenger on the other side.
In the case of deposits, this is always [`0x4200000000000000000000000000000000000007`](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007).
- `_gasLimit`, the gas limit.
This value is calculated using [the `baseGas` function](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L442-L471).
- `_value`, the ETH that is sent with the message.
This amount is taken from the transaction value.
- `_data`, the calldata for the call on L2 that is needed to relay the message.
This is an [ABI encoded](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html) call to [`relayMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L291-L413).  
1. [`_sendMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol#L42-L52) calls the portal's [`depositTransaction` function](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L422-L483).  
Note that other contracts can also call [`depositTransaction`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L422-L483) directly.
However, doing so bypasses certain safeguards, so in most cases it's a bad idea.  
1. [The `depositTransaction` function](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L422-L483) runs a few sanity checks, and then emits a [`TransactionDeposited`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L85-L99) event."
610,How does the `op-node` component handle `TransactionDeposited` events on L1?,"The `op-node` component looks for `TransactionDeposited` events on L1. If it sees any such events, it parses them and then converts those events into deposit transactions.","1. The `op-node` component [looks for `TransactionDeposited` events on L1](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/op-node/rollup/derive/deposits.go#L13-L33).
If it sees any such events, it [parses](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/op-node/rollup/derive/deposit_log.go) them.  
1. Next, `op-node` [converts](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/op-node/rollup/derive/deposits.go#L35-L51) those `TransactionDeposited` events into [deposit transactions](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/specs/deposits.md#user-deposited-transactions).  
1. In most cases user deposit transactions call the [`relayMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L291-L413) function of [`L2CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol).  
1. `relayMessage` runs a few sanity checks and then, if everything is good, [calls the real target contract with the relayed calldata](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L394)."
610,What happens after the `op-node` converts `TransactionDeposited` events into deposit transactions?,"In most cases, user deposit transactions call the `relayMessage` function of the `L2CrossDomainMessenger`. This function runs a few sanity checks and then, if everything is good, calls the real target contract with the relayed calldata.","1. The `op-node` component [looks for `TransactionDeposited` events on L1](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/op-node/rollup/derive/deposits.go#L13-L33).
If it sees any such events, it [parses](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/op-node/rollup/derive/deposit_log.go) them.  
1. Next, `op-node` [converts](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/op-node/rollup/derive/deposits.go#L35-L51) those `TransactionDeposited` events into [deposit transactions](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/specs/deposits.md#user-deposited-transactions).  
1. In most cases user deposit transactions call the [`relayMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L291-L413) function of [`L2CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol).  
1. `relayMessage` runs a few sanity checks and then, if everything is good, [calls the real target contract with the relayed calldata](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L394)."
611,Who bears the cost of a deposit transaction in Optimism?,The L1 costs of a deposit are borne by the transaction's originator.,"As with all other L1 transactions, the L1 costs of a deposit are borne by the transaction's originator.
However, the L2 processing of the transaction is performed by the Optimism nodes.
If there were no cost attached, an attacker could be able to submit a transaction that had high costs of run on L2, and that way perform a denial of service attack.  
To avoid this DoS vector, [`depositTransaction`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L422-L483), and the functions that call it, require a gas limit parameter.
[This gas limit is encoded into the []`TransactionDeposited` event](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L469-L477), and used as the gas limit for the user deposit transaction on L2.  
This L2 gas is paid for by burning L1 gas [here](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/ResourceMetering.sol#L162)."
611,How does Optimism prevent denial of service (DoS) attacks related to high-cost transactions on L2?,"To avoid DoS attacks, the `depositTransaction` function and the functions that call it require a gas limit parameter. This gas limit is encoded into the `TransactionDeposited` event and used as the gas limit for the user deposit transaction on L2.","As with all other L1 transactions, the L1 costs of a deposit are borne by the transaction's originator.
However, the L2 processing of the transaction is performed by the Optimism nodes.
If there were no cost attached, an attacker could be able to submit a transaction that had high costs of run on L2, and that way perform a denial of service attack.  
To avoid this DoS vector, [`depositTransaction`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L422-L483), and the functions that call it, require a gas limit parameter.
[This gas limit is encoded into the []`TransactionDeposited` event](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L469-L477), and used as the gas limit for the user deposit transaction on L2.  
This L2 gas is paid for by burning L1 gas [here](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/ResourceMetering.sol#L162)."
611,Who processes the L2 part of a transaction in Optimism?,The L2 processing of the transaction is performed by the Optimism nodes.,"As with all other L1 transactions, the L1 costs of a deposit are borne by the transaction's originator.
However, the L2 processing of the transaction is performed by the Optimism nodes.
If there were no cost attached, an attacker could be able to submit a transaction that had high costs of run on L2, and that way perform a denial of service attack.  
To avoid this DoS vector, [`depositTransaction`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L422-L483), and the functions that call it, require a gas limit parameter.
[This gas limit is encoded into the []`TransactionDeposited` event](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L469-L477), and used as the gas limit for the user deposit transaction on L2.  
This L2 gas is paid for by burning L1 gas [here](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/ResourceMetering.sol#L162)."
612,Why might a deposit transaction fail on Optimism?,A deposit transaction on Optimism can fail due to not providing enough gas or because the state on Layer 2 (L2) does not allow the transaction to be successful.,"Deposits transactions can fail due to several reasons:  
- Not enough gas provided.
- The state on L2 does not allow the transaction to be successful.  
It is possible to replay a failed deposit, possibly with more gas,"
612,What can I do if my deposit transaction fails on Optimism?,"If your deposit transaction fails on Optimism, you can replay the failed deposit, possibly with more gas.","Deposits transactions can fail due to several reasons:  
- Not enough gas provided.
- The state on L2 does not allow the transaction to be successful.  
It is possible to replay a failed deposit, possibly with more gas,"
614,What's the title of the section in the Optimism Governance Documentation?,The title of the section is 'Contract Overview'.,"---
title: Contract Overview
lang: en-US
---"
615,What's the purpose of the `L2OutputOracle` contract in Optimism?,"The `L2OutputOracle` contract contains the state root of the Optimism blockchain, such as OP Mainnet and OP Goerli. It will also receive the result of the fault proof process once fault proofs are activated.","[The `L2OutputOracle` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L2OutputOracle.sol) contains the state root of the Optimism blockchain (OP Mainnet, OP Goerli, etc.).
Once fault proofs are activated, it will be the one that receives the result of the fault proof process.  
This is the contract that replaces the old State Commitment Chain."
615,What did the `L2OutputOracle` contract replace in the Optimism system?,The `L2OutputOracle` contract replaced the old State Commitment Chain in the Optimism system.,"[The `L2OutputOracle` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L2OutputOracle.sol) contains the state root of the Optimism blockchain (OP Mainnet, OP Goerli, etc.).
Once fault proofs are activated, it will be the one that receives the result of the fault proof process.  
This is the contract that replaces the old State Commitment Chain."
615,What happens when fault proofs are activated in Optimism?,"When fault proofs are activated, the `L2OutputOracle` contract will receive the result of the fault proof process.","[The `L2OutputOracle` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L2OutputOracle.sol) contains the state root of the Optimism blockchain (OP Mainnet, OP Goerli, etc.).
Once fault proofs are activated, it will be the one that receives the result of the fault proof process.  
This is the contract that replaces the old State Commitment Chain."
616,How can I send messages between Layer 1 (L1) and Layer 2 (L2) in Optimism?,"To send messages between L1 and L2 in Optimism, it is strongly recommended to use the L1CrossDomainMessenger and L2CrossDomainMessenger. These tools provide a more straightforward and reliable way to communicate between the layers.","[The `OptimismPortal` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol) provides the low-level API for communications between layers. Unless you are trying to send L2 transactions via L1 to bypass the sequencer, we strongly recommend sending messages between L1 and L2 via the L1CrossDomainMessenger and L2CrossDomainMessenger."
616,What is the purpose of the OptimismPortal contract?,"The OptimismPortal contract provides the low-level API for communications between layers. It is mainly used for sending L2 transactions via L1 to bypass the sequencer, but for most use cases, using the L1CrossDomainMessenger and L2CrossDomainMessenger is recommended.","[The `OptimismPortal` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol) provides the low-level API for communications between layers. Unless you are trying to send L2 transactions via L1 to bypass the sequencer, we strongly recommend sending messages between L1 and L2 via the L1CrossDomainMessenger and L2CrossDomainMessenger."
617,How does Optimism handle communication between Layer 1 and Layer 2?,Optimism uses the `L1CrossDomainMessenger` contract to send messages between the underlying Layer 1 (such as Ethereum or Goerli) and Layer 2 (such as OP Mainnet or OP Goerli). These messages can include assets or just data.,"[The `L1CrossDomainMessenger` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol) is used for sending messages between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.). Those messages may or may not have assets attached to them."
617,Can assets be transferred using the `L1CrossDomainMessenger` contract?,"Yes, the `L1CrossDomainMessenger` contract can send messages that may or may not have assets attached to them between Layer 1 and Layer 2.","[The `L1CrossDomainMessenger` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1CrossDomainMessenger.sol) is used for sending messages between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.). Those messages may or may not have assets attached to them."
618,How does the `L1StandardBridge` contract facilitate the transfer of assets between different layers?,The `L1StandardBridge` contract uses the `L1CrossDomainMessenger` to transfer ETH and ERC-20 tokens between the underlying Layer 1 (such as Ethereum or Goerli) and Layer 2 (such as OP Mainnet or OP Goerli).,"[The `L1StandardBridge` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol) uses `L1CrossDomainMessenger` to transfer ETH and ERC-20 tokens between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.)."
618,What types of tokens can be transferred using the `L1StandardBridge` contract?,The `L1StandardBridge` contract can transfer both ETH and ERC-20 tokens between Layer 1 and Layer 2 networks.,"[The `L1StandardBridge` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol) uses `L1CrossDomainMessenger` to transfer ETH and ERC-20 tokens between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.)."
618,Which networks are supported by the `L1StandardBridge` for transferring assets?,"The `L1StandardBridge` supports transferring assets between Layer 1 networks like Ethereum and Goerli, and Layer 2 networks like OP Mainnet and OP Goerli.","[The `L1StandardBridge` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L1/L1StandardBridge.sol) uses `L1CrossDomainMessenger` to transfer ETH and ERC-20 tokens between the underlying L1 (Ethereum, Goerli, etc.) and L2 (OP Mainnet, OP Goerli, etc.)."
619,How can I find the address of the `L1Block` contract in Optimism?,The `L1Block` contract in Optimism is located at the address `0x4200000000000000000000000000000000000015`.,"[The `L1Block` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol) sits at address `0x4200000000000000000000000000000000000015`.
You can use [the getter functions](https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions) to get these parameters:  
- `number`: The latest L1 block number known to L2 (the `L1BlockNumber` contract is still supported to avoid breaking existing applications)
- `timestamp`: The timestamp of the latest L1 block
- `basefee`: The base fee of the latest L1 block
- `hash`: The hash of the latest L1 block
- `sequenceNumber`: The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)  
Currently the L1 information is delayed by two block confirmations (~24 seconds) to minimize the impact of reorgs."
619,What kind of information can I retrieve from the `L1Block` contract?,"You can retrieve several parameters from the `L1Block` contract using getter functions, including the latest L1 block number (`number`), the timestamp of the latest L1 block (`timestamp`), the base fee of the latest L1 block (`basefee`), the hash of the latest L1 block (`hash`), and the number of the L2 block within the epoch (`sequenceNumber`).","[The `L1Block` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol) sits at address `0x4200000000000000000000000000000000000015`.
You can use [the getter functions](https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions) to get these parameters:  
- `number`: The latest L1 block number known to L2 (the `L1BlockNumber` contract is still supported to avoid breaking existing applications)
- `timestamp`: The timestamp of the latest L1 block
- `basefee`: The base fee of the latest L1 block
- `hash`: The hash of the latest L1 block
- `sequenceNumber`: The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)  
Currently the L1 information is delayed by two block confirmations (~24 seconds) to minimize the impact of reorgs."
619,Why is there a delay in the L1 information provided by the `L1Block` contract?,"The L1 information is delayed by two block confirmations, which is approximately 24 seconds, to minimize the impact of reorgs (reorganizations) on the blockchain.","[The `L1Block` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L1Block.sol) sits at address `0x4200000000000000000000000000000000000015`.
You can use [the getter functions](https://docs.soliditylang.org/en/v0.8.12/contracts.html#getter-functions) to get these parameters:  
- `number`: The latest L1 block number known to L2 (the `L1BlockNumber` contract is still supported to avoid breaking existing applications)
- `timestamp`: The timestamp of the latest L1 block
- `basefee`: The base fee of the latest L1 block
- `hash`: The hash of the latest L1 block
- `sequenceNumber`: The number of the L2 block within the epoch (the epoch changes when there is a new L1 block)  
Currently the L1 information is delayed by two block confirmations (~24 seconds) to minimize the impact of reorgs."
620,How does the Sequencer get funded on Optimism?,"The Sequencer on Optimism is funded through the `SequencerFeeVault` contract, which uses the ETH base fee on L2 to handle the funding on L1.","[The `SequencerFeeVault` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/SequencerFeeVault.sol) handles funding the sequencer on L1 using the ETH base fee on L2.  
The fees are calculated using [EIP 1559](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md), the same mechanism that Ethereum uses (but with different parameter values)."
620,How are the fees calculated for the Sequencer on Optimism?,"The fees for the Sequencer on Optimism are calculated using the EIP 1559 mechanism, which is the same method used by Ethereum, although with different parameter values.","[The `SequencerFeeVault` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/SequencerFeeVault.sol) handles funding the sequencer on L1 using the ETH base fee on L2.  
The fees are calculated using [EIP 1559](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md), the same mechanism that Ethereum uses (but with different parameter values)."
621,How does the `L2ToL1MessagePasser` contract function within the Optimism network?,The `L2ToL1MessagePasser` contract is used internally by the `L2CrossDomainMessenger` to initiate withdrawals from Layer 2 to Layer 1.,"[The `L2ToL1MessagePasser` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) is used internally by `L2CrossDomainMessenger` to initiate withdrawals.  
Note that there are two contracts under this name:  
- [The legacy contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyMessagePasser.sol) at address `0x4200000000000000000000000000000000000000`
- [The new contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) at address `0x4200000000000000000000000000000000000016`"
621,Are there different versions of the `L2ToL1MessagePasser` contract?,"Yes, there are two versions: the legacy contract at address `0x4200000000000000000000000000000000000000` and the new contract at address `0x4200000000000000000000000000000000000016`.","[The `L2ToL1MessagePasser` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) is used internally by `L2CrossDomainMessenger` to initiate withdrawals.  
Note that there are two contracts under this name:  
- [The legacy contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyMessagePasser.sol) at address `0x4200000000000000000000000000000000000000`
- [The new contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) at address `0x4200000000000000000000000000000000000016`"
621,Where can I find the code for the `L2ToL1MessagePasser` contract?,You can find the code for the `L2ToL1MessagePasser` contract on GitHub. The legacy contract is available [here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyMessagePasser.sol) and the new contract is available [here](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol).,"[The `L2ToL1MessagePasser` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) is used internally by `L2CrossDomainMessenger` to initiate withdrawals.  
Note that there are two contracts under this name:  
- [The legacy contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyMessagePasser.sol) at address `0x4200000000000000000000000000000000000000`
- [The new contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol) at address `0x4200000000000000000000000000000000000016`"
622,How does the `L2CrossDomainMessenger` contract function in the Optimism network?,The `L2CrossDomainMessenger` contract is used to send messages from Layer 2 (L2) networks like OP Mainnet and OP Goerli to the underlying Layer 1 (L1) networks such as Ethereum and Goerli.,"[The `L2CrossDomainMessenger` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol) is used to send messages from L2 (OP Mainnet, OP Goerli, etc.) to the underlying L1 (Ethereum, Goerli, etc.)."
622,What is the purpose of the `L2CrossDomainMessenger` contract?,The purpose of the `L2CrossDomainMessenger` contract is to facilitate communication and message passing between Layer 2 (L2) networks and the underlying Layer 1 (L1) networks.,"[The `L2CrossDomainMessenger` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol) is used to send messages from L2 (OP Mainnet, OP Goerli, etc.) to the underlying L1 (Ethereum, Goerli, etc.)."
622,Can the `L2CrossDomainMessenger` contract be used on test networks?,"Yes, the `L2CrossDomainMessenger` contract can be used on test networks like OP Goerli and Goerli.","[The `L2CrossDomainMessenger` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol) is used to send messages from L2 (OP Mainnet, OP Goerli, etc.) to the underlying L1 (Ethereum, Goerli, etc.)."
623,How are assets like ETH and ERC-20 tokens sent in the Optimism network?,"Assets like ETH and ERC-20 tokens are sent using the `L2StandardBridge` contract, which attaches these assets to messages that are then sent by the `L2CrossDomainMessenger`.","[The `L2StandardBridge` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol) is used to ""attach"" assets (ETH and ERC-20 tokens) to messages that are then sent by `L2CrossDomainMessenger`."
623,What is the role of the `L2StandardBridge` contract in Optimism?,"The `L2StandardBridge` contract is used to attach assets such as ETH and ERC-20 tokens to messages, which are then sent by the `L2CrossDomainMessenger`.","[The `L2StandardBridge` contract](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/L2/L2StandardBridge.sol) is used to ""attach"" assets (ETH and ERC-20 tokens) to messages that are then sent by `L2CrossDomainMessenger`."
624,Why is WETH9 used in the Optimism network?,"WETH9 is used in the Optimism network because it is an ERC-20 token that wraps around ETH, providing extra functionality such as approvals, which are not available with regular ETH.","[The WETH9 contract](https://web.archive.org/web/20221022164309/https://weth.io/) is an ERC-20 token that wraps around ETH to provide extra functionality, such as approvals."
624,What is the main benefit of using WETH9 over regular ETH?,"The main benefit of using WETH9 over regular ETH is that it provides additional functionality like approvals, which allows for more complex interactions within the Ethereum ecosystem.","[The WETH9 contract](https://web.archive.org/web/20221022164309/https://weth.io/) is an ERC-20 token that wraps around ETH to provide extra functionality, such as approvals."
625,Why are some contracts kept even if they have been superseded?,"Some contracts are kept in case any deployed contract depends on them, ensuring backward compatibility and stability.","Those are contracts that have been superceded, but are kept in case any deployed contract depends on them.  
- [L1BlockNumber](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/L1BlockNumber.sol):
The `L1BlockNumber` contract provides the number of the latest L1 block.
In Bedrock it is simply a proxy to [`L1Block`](#l1block).
- [DeployerWhitelist](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/DeployerWhitelist.sol):
The `DeployerWhitelist` contract used to manage the whitelist before [OP Mainnet moved out of beta](https://twitter.com/optimismFND/status/1471571415774023682).  
- [OVM_ETH](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyERC20ETH.sol):
The `OVM_ETH` contract used to manage users ETH balances prior to Bedrock."
625,What does the L1BlockNumber contract do?,"The L1BlockNumber contract provides the number of the latest L1 block. In Bedrock, it acts as a proxy to the L1Block contract.","Those are contracts that have been superceded, but are kept in case any deployed contract depends on them.  
- [L1BlockNumber](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/L1BlockNumber.sol):
The `L1BlockNumber` contract provides the number of the latest L1 block.
In Bedrock it is simply a proxy to [`L1Block`](#l1block).
- [DeployerWhitelist](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/DeployerWhitelist.sol):
The `DeployerWhitelist` contract used to manage the whitelist before [OP Mainnet moved out of beta](https://twitter.com/optimismFND/status/1471571415774023682).  
- [OVM_ETH](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyERC20ETH.sol):
The `OVM_ETH` contract used to manage users ETH balances prior to Bedrock."
625,What was the purpose of the DeployerWhitelist contract?,The DeployerWhitelist contract was used to manage the whitelist before OP Mainnet moved out of beta.,"Those are contracts that have been superceded, but are kept in case any deployed contract depends on them.  
- [L1BlockNumber](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/L1BlockNumber.sol):
The `L1BlockNumber` contract provides the number of the latest L1 block.
In Bedrock it is simply a proxy to [`L1Block`](#l1block).
- [DeployerWhitelist](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/DeployerWhitelist.sol):
The `DeployerWhitelist` contract used to manage the whitelist before [OP Mainnet moved out of beta](https://twitter.com/optimismFND/status/1471571415774023682).  
- [OVM_ETH](https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock/contracts/legacy/LegacyERC20ETH.sol):
The `OVM_ETH` contract used to manage users ETH balances prior to Bedrock."
626,Why am I being redirected when I try to access the sequencing documentation on Optimism's website?,You are being redirected because search engines still have the old URL for the sequencing documentation. The redirect ensures you are taken to the correct and updated section of the documentation.,"<script>
// This redirect is here because search engines still know
// https://community.optimism.io/docs/protocol/sequencing/
// See https://github.com/ethereum-optimism/community-hub/issues/377
export default {
mounted () {
window.location.href=""/docs/protocol/#decentralizing-the-sequencer""
}
}
</script>"
626,What is the new URL for the sequencing documentation on Optimism's website?,The new URL for the sequencing documentation is /docs/protocol/#decentralizing-the-sequencer.,"<script>
// This redirect is here because search engines still know
// https://community.optimism.io/docs/protocol/sequencing/
// See https://github.com/ethereum-optimism/community-hub/issues/377
export default {
mounted () {
window.location.href=""/docs/protocol/#decentralizing-the-sequencer""
}
}
</script>"
626,Is there an issue related to the old URL for the sequencing documentation?,"Yes, there is an issue tracked on GitHub (issue #377) that addresses the problem of search engines still pointing to the old URL for the sequencing documentation.","<script>
// This redirect is here because search engines still know
// https://community.optimism.io/docs/protocol/sequencing/
// See https://github.com/ethereum-optimism/community-hub/issues/377
export default {
mounted () {
window.location.href=""/docs/protocol/#decentralizing-the-sequencer""
}
}
</script>"
627,Can you explain what the 'Transaction Flow' section in the Optimism Governance Documentation is about?,"The 'Transaction Flow' section in the Optimism Governance Documentation likely details the process and steps involved in how transactions are handled within the Optimism network. This would include how transactions are initiated, processed, and finalized within the system.","---
title: Transaction Flow
lang: en-US
---"
628,How is a rollup transaction written to the Ethereum blockchain?,"A rollup transaction is typically written to the Ethereum blockchain (L1) by a component called `op-batcher`. However, any user can also send an L1 transaction to submit an L2 transaction, bypassing the `op-batcher`.","The process for a rollup transaction has two requirements.  
- The transaction needs to be written to L1 (Ethereum).
This is typically performed by `op-batcher`, but any user can send an L1 transaction to submit an L2 transaction, in which case `op-batcher` is bypassed.  
- The transaction needs to be executed to modify the state (by `op-geth`).
Afterwards, `op-proposer` writes a [commitment](https://en.wikipedia.org/wiki/Commitment_scheme) to the post-transaction state to L1.
Note that `op-proposer` does not need to write a commitment after each transaction to L1, it is OK to commit to the state after a block of transactions.  
![Overall process](../../assets/docs/protocol/txn-flow/overall-process.svg)"
628,What happens after a rollup transaction is written to L1?,"After a rollup transaction is written to L1, it needs to be executed to modify the state. This execution is performed by `op-geth`. Following the execution, `op-proposer` writes a commitment to the post-transaction state to L1. Note that `op-proposer` does not need to write a commitment after each transaction; it can commit to the state after a block of transactions.","The process for a rollup transaction has two requirements.  
- The transaction needs to be written to L1 (Ethereum).
This is typically performed by `op-batcher`, but any user can send an L1 transaction to submit an L2 transaction, in which case `op-batcher` is bypassed.  
- The transaction needs to be executed to modify the state (by `op-geth`).
Afterwards, `op-proposer` writes a [commitment](https://en.wikipedia.org/wiki/Commitment_scheme) to the post-transaction state to L1.
Note that `op-proposer` does not need to write a commitment after each transaction to L1, it is OK to commit to the state after a block of transactions.  
![Overall process](../../assets/docs/protocol/txn-flow/overall-process.svg)"
629,What's the main purpose of `op-batcher` in Optimism?,`op-batcher` has two main jobs: it compresses transactions into batches and posts those batches to Layer 1 (L1) to ensure availability and integrity.,"[`op-batcher`](https://github.com/ethereum-optimism/optimism/tree/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-batcher) has two main jobs:  
- Compress transactions into batches.
- Post those batches to L1 to ensure availability and integrity."
629,How does `op-batcher` ensure the integrity of transactions?,"`op-batcher` ensures the integrity of transactions by posting the compressed transaction batches to Layer 1 (L1), which helps maintain their availability and integrity.","[`op-batcher`](https://github.com/ethereum-optimism/optimism/tree/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-batcher) has two main jobs:  
- Compress transactions into batches.
- Post those batches to L1 to ensure availability and integrity."
630,How does the batcher improve data compression in Optimism?,"The batcher aggregates sequencer batches into channels, allowing for more data per compression frame and therefore a better compression ratio.","The batcher aggregates [sequencer batches](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/specs/glossary.md#sequencer-batch) into [channels](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/specs/glossary.md#channel).
This allows for more data per compression frame, and therefore a better compression ratio.
You can read more about this process [in the specs](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/specs/derivation.md#batch-submission).  
When a channel is full or times out it is compressed and written.  
The maximum time that a channel can be open, from the first transaction to the last, is specified in units of L1 block time (so a value of 5 means 5*12=60 seconds).
You can specify it either as an environment variable (`OP_BATCHER_MAX_CHANNEL_DURATION`) or a command line parameters (`--max-channel-duration`).
Alternatively, you can set it to zero (the default) to avoid posting smaller, less cost efficient, transactions.  
A channel is full when the anticipated compressed size is the target L1 transaction size.
This is controlled by two parameters:  
1. The target L1 transaction size, which you can specify in bytes on the command line (`--target-l1-tx-size-bytes`) or as an environment variable (`OP_BATCHER_TARGET_L1_TX_SIZE_BYTES`)  
1. The expected compression ratio, which you can specify as a decimal value, again either on the command line (`--approx-compr-ratio`) or as an environment variable (`OP_BATCHER_APPROX_COMPR_RATIO`).  
You can see the code that implements this process in [`channel_manager.go`](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-batcher/batcher/channel_manager.go) and [`channel_builder.go`](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-batcher/batcher/channel_builder.go)."
630,What happens when a channel is full or times out in Optimism?,"When a channel is full or times out, it is compressed and written. The maximum time a channel can be open is specified in units of L1 block time.","The batcher aggregates [sequencer batches](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/specs/glossary.md#sequencer-batch) into [channels](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/specs/glossary.md#channel).
This allows for more data per compression frame, and therefore a better compression ratio.
You can read more about this process [in the specs](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/specs/derivation.md#batch-submission).  
When a channel is full or times out it is compressed and written.  
The maximum time that a channel can be open, from the first transaction to the last, is specified in units of L1 block time (so a value of 5 means 5*12=60 seconds).
You can specify it either as an environment variable (`OP_BATCHER_MAX_CHANNEL_DURATION`) or a command line parameters (`--max-channel-duration`).
Alternatively, you can set it to zero (the default) to avoid posting smaller, less cost efficient, transactions.  
A channel is full when the anticipated compressed size is the target L1 transaction size.
This is controlled by two parameters:  
1. The target L1 transaction size, which you can specify in bytes on the command line (`--target-l1-tx-size-bytes`) or as an environment variable (`OP_BATCHER_TARGET_L1_TX_SIZE_BYTES`)  
1. The expected compression ratio, which you can specify as a decimal value, again either on the command line (`--approx-compr-ratio`) or as an environment variable (`OP_BATCHER_APPROX_COMPR_RATIO`).  
You can see the code that implements this process in [`channel_manager.go`](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-batcher/batcher/channel_manager.go) and [`channel_builder.go`](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-batcher/batcher/channel_builder.go)."
630,How can I specify the maximum duration a channel can be open in Optimism?,You can specify the maximum duration a channel can be open either as an environment variable (`OP_BATCHER_MAX_CHANNEL_DURATION`) or as a command line parameter (`--max-channel-duration`).,"The batcher aggregates [sequencer batches](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/specs/glossary.md#sequencer-batch) into [channels](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/specs/glossary.md#channel).
This allows for more data per compression frame, and therefore a better compression ratio.
You can read more about this process [in the specs](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/specs/derivation.md#batch-submission).  
When a channel is full or times out it is compressed and written.  
The maximum time that a channel can be open, from the first transaction to the last, is specified in units of L1 block time (so a value of 5 means 5*12=60 seconds).
You can specify it either as an environment variable (`OP_BATCHER_MAX_CHANNEL_DURATION`) or a command line parameters (`--max-channel-duration`).
Alternatively, you can set it to zero (the default) to avoid posting smaller, less cost efficient, transactions.  
A channel is full when the anticipated compressed size is the target L1 transaction size.
This is controlled by two parameters:  
1. The target L1 transaction size, which you can specify in bytes on the command line (`--target-l1-tx-size-bytes`) or as an environment variable (`OP_BATCHER_TARGET_L1_TX_SIZE_BYTES`)  
1. The expected compression ratio, which you can specify as a decimal value, again either on the command line (`--approx-compr-ratio`) or as an environment variable (`OP_BATCHER_APPROX_COMPR_RATIO`).  
You can see the code that implements this process in [`channel_manager.go`](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-batcher/batcher/channel_manager.go) and [`channel_builder.go`](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-batcher/batcher/channel_builder.go)."
631,How are transactions processed and posted in Optimism?,"Transactions in Optimism are processed and posted to Layer 1 (L1) when a channel is full. Depending on the data size, they can be posted as a single transaction or multiple transactions.","When a channel is full it is posted, either as a single transaction or as multiple transactions (depending on data size) to L1.  
Processed L2 transactions exist in one of three states:  
- **unsafe** transactions are already processed, but not written to L1 yet.
A batcher fault might cause these transactions to be dropped.  
- **safe** transactions are already processed and written to L1.
However, they might be dropped due to a reorganization at the L1 level.  
- **finalized** transactions are written to L1 in an L1 block that is old enough to be extremely unlikely to be re-organized.  
::: tip When are transactions irrevocable?  
Once a transaction is finalized, you can rely that it has ""happened"".
While the state after the transaction is subject to fault challenges, the transaction itself is fix and immutable.  
:::  
You can see the code that builds the channels to be written to L1 in [`channel_out.go`](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-node/rollup/derive/channel_out.go) and [`channel_builder.go`](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-node/rollup/derive/channel_out.go).
The transactions themselves are sent in [`op-batcher`'s main loop](https://github.com/ethereum-optimism/optimism/blob/915036aaa7eba7ee2ce290be90f78bb35df8d066/op-batcher/batcher/driver.go#L284-L299), which calls [`publishStateToL1`](https://github.com/ethereum-optimism/optimism/blob/915036aaa7eba7ee2ce290be90f78bb35df8d066/op-batcher/batcher/driver.go#L303-L344)"
631,What are the different states of processed Layer 2 (L2) transactions in Optimism?,"Processed L2 transactions in Optimism can exist in three states: unsafe, safe, and finalized. Unsafe transactions are processed but not yet written to L1 and can be dropped due to a batcher fault. Safe transactions are processed and written to L1 but might be dropped due to a reorganization at the L1 level. Finalized transactions are written to L1 in an old enough block that is extremely unlikely to be reorganized.","When a channel is full it is posted, either as a single transaction or as multiple transactions (depending on data size) to L1.  
Processed L2 transactions exist in one of three states:  
- **unsafe** transactions are already processed, but not written to L1 yet.
A batcher fault might cause these transactions to be dropped.  
- **safe** transactions are already processed and written to L1.
However, they might be dropped due to a reorganization at the L1 level.  
- **finalized** transactions are written to L1 in an L1 block that is old enough to be extremely unlikely to be re-organized.  
::: tip When are transactions irrevocable?  
Once a transaction is finalized, you can rely that it has ""happened"".
While the state after the transaction is subject to fault challenges, the transaction itself is fix and immutable.  
:::  
You can see the code that builds the channels to be written to L1 in [`channel_out.go`](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-node/rollup/derive/channel_out.go) and [`channel_builder.go`](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-node/rollup/derive/channel_out.go).
The transactions themselves are sent in [`op-batcher`'s main loop](https://github.com/ethereum-optimism/optimism/blob/915036aaa7eba7ee2ce290be90f78bb35df8d066/op-batcher/batcher/driver.go#L284-L299), which calls [`publishStateToL1`](https://github.com/ethereum-optimism/optimism/blob/915036aaa7eba7ee2ce290be90f78bb35df8d066/op-batcher/batcher/driver.go#L303-L344)"
631,When is a transaction considered irrevocable in Optimism?,"A transaction is considered irrevocable in Optimism once it is finalized. At this point, you can rely on the transaction having 'happened,' and while the state after the transaction is subject to fault challenges, the transaction itself is fixed and immutable.","When a channel is full it is posted, either as a single transaction or as multiple transactions (depending on data size) to L1.  
Processed L2 transactions exist in one of three states:  
- **unsafe** transactions are already processed, but not written to L1 yet.
A batcher fault might cause these transactions to be dropped.  
- **safe** transactions are already processed and written to L1.
However, they might be dropped due to a reorganization at the L1 level.  
- **finalized** transactions are written to L1 in an L1 block that is old enough to be extremely unlikely to be re-organized.  
::: tip When are transactions irrevocable?  
Once a transaction is finalized, you can rely that it has ""happened"".
While the state after the transaction is subject to fault challenges, the transaction itself is fix and immutable.  
:::  
You can see the code that builds the channels to be written to L1 in [`channel_out.go`](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-node/rollup/derive/channel_out.go) and [`channel_builder.go`](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-node/rollup/derive/channel_out.go).
The transactions themselves are sent in [`op-batcher`'s main loop](https://github.com/ethereum-optimism/optimism/blob/915036aaa7eba7ee2ce290be90f78bb35df8d066/op-batcher/batcher/driver.go#L284-L299), which calls [`publishStateToL1`](https://github.com/ethereum-optimism/optimism/blob/915036aaa7eba7ee2ce290be90f78bb35df8d066/op-batcher/batcher/driver.go#L303-L344)"
632,How can I check if my transaction on the Optimism network is finalized?,"To check if your transaction on the Optimism network is finalized, you need to get the number of the L2 block in which your transaction is recorded and then compare it to the number of the latest finalized block. If the latest finalized block number is greater than or equal to your transaction's block number, your transaction is finalized.","This is the procedure to see a transaction's status.
The directions here are for [Foundry](https://book.getfoundry.sh/), but the concept is the same regardless of the method you use.  
1. Get the number of the L2 block in which the transaction is recorded.  
```sh
export ETH_RPC_URL=<URL to Optimism network>
cast tx <transaction hash> blockNumber
```  
1. Get the number of the latest finalized block.
If the result is greater than the block number of the transaction, or equal, the transaction is finalized.  
```sh
cast block finalized --field number
```  
1. Get the number of the latest safe block.
If the result is greater than the block number of the transaction, or equal, the transaction is safe.  
```sh
cast block safe --field number
```  
1. If the transaction isn't finalized or safe, it's unsafe."
632,How do I find out if my transaction on the Optimism network is safe?,"To determine if your transaction on the Optimism network is safe, you need to get the number of the L2 block in which your transaction is recorded and then compare it to the number of the latest safe block. If the latest safe block number is greater than or equal to your transaction's block number, your transaction is safe.","This is the procedure to see a transaction's status.
The directions here are for [Foundry](https://book.getfoundry.sh/), but the concept is the same regardless of the method you use.  
1. Get the number of the L2 block in which the transaction is recorded.  
```sh
export ETH_RPC_URL=<URL to Optimism network>
cast tx <transaction hash> blockNumber
```  
1. Get the number of the latest finalized block.
If the result is greater than the block number of the transaction, or equal, the transaction is finalized.  
```sh
cast block finalized --field number
```  
1. Get the number of the latest safe block.
If the result is greater than the block number of the transaction, or equal, the transaction is safe.  
```sh
cast block safe --field number
```  
1. If the transaction isn't finalized or safe, it's unsafe."
632,What does it mean if my transaction on the Optimism network is neither finalized nor safe?,"If your transaction on the Optimism network is neither finalized nor safe, it means the transaction is considered unsafe. This indicates that the transaction has not yet reached a state where it is confirmed or secure.","This is the procedure to see a transaction's status.
The directions here are for [Foundry](https://book.getfoundry.sh/), but the concept is the same regardless of the method you use.  
1. Get the number of the L2 block in which the transaction is recorded.  
```sh
export ETH_RPC_URL=<URL to Optimism network>
cast tx <transaction hash> blockNumber
```  
1. Get the number of the latest finalized block.
If the result is greater than the block number of the transaction, or equal, the transaction is finalized.  
```sh
cast block finalized --field number
```  
1. Get the number of the latest safe block.
If the result is greater than the block number of the transaction, or equal, the transaction is safe.  
```sh
cast block safe --field number
```  
1. If the transaction isn't finalized or safe, it's unsafe."
633,How is the new state produced in Optimism?,The new state is produced by applying the transaction to the old state using a tool called `op-geth`.,"State processing can be divided into two steps:  
1. Applying the transaction to the old state to produce the new state, which is performed by [`op-geth`](https://github.com/ethereum-optimism/op-geth).  
1. Proposing the new [Merkle root](https://en.wikipedia.org/wiki/Merkle_tree) of the state.
Merkle roots are used because the actual state is long and would cost too much to write to L1.
This step is performed by `op-proposer`."
633,Why are Merkle roots used in Optimism?,Merkle roots are used because the actual state is long and would cost too much to write to Layer 1 (L1).,"State processing can be divided into two steps:  
1. Applying the transaction to the old state to produce the new state, which is performed by [`op-geth`](https://github.com/ethereum-optimism/op-geth).  
1. Proposing the new [Merkle root](https://en.wikipedia.org/wiki/Merkle_tree) of the state.
Merkle roots are used because the actual state is long and would cost too much to write to L1.
This step is performed by `op-proposer`."
633,What is the role of `op-proposer` in Optimism?,The `op-proposer` is responsible for proposing the new Merkle root of the state after the transaction has been applied.,"State processing can be divided into two steps:  
1. Applying the transaction to the old state to produce the new state, which is performed by [`op-geth`](https://github.com/ethereum-optimism/op-geth).  
1. Proposing the new [Merkle root](https://en.wikipedia.org/wiki/Merkle_tree) of the state.
Merkle roots are used because the actual state is long and would cost too much to write to L1.
This step is performed by `op-proposer`."
634,How is the state stored and modified in Optimism?,"The state is stored and modified by `op-geth`, which is a slightly modified version of the standard `geth` used in Ethereum.","The state is stored and modified by [`op-geth`](https://github.com/ethereum-optimism/op-geth).
It is a [slightly modified](https://op-geth.optimism.io/) version of the standard [geth](https://geth.ethereum.org/)."
634,What is `op-geth`?,"`op-geth` is a slightly modified version of the standard `geth` used in Ethereum, specifically tailored for Optimism.","The state is stored and modified by [`op-geth`](https://github.com/ethereum-optimism/op-geth).
It is a [slightly modified](https://op-geth.optimism.io/) version of the standard [geth](https://geth.ethereum.org/)."
634,Where can I find more information about `op-geth`?,You can find more information about `op-geth` on its GitHub page at https://github.com/ethereum-optimism/op-geth or on its dedicated site at https://op-geth.optimism.io/.,"The state is stored and modified by [`op-geth`](https://github.com/ethereum-optimism/op-geth).
It is a [slightly modified](https://op-geth.optimism.io/) version of the standard [geth](https://geth.ethereum.org/)."
635,How are state root proposals posted in Optimism?,State root proposals are posted by a component called `op-proposer` to the `L2OutputOracle` on Layer 1 (L1).,"The state root proposals are posted by [`op-proposer`](https://github.com/ethereum-optimism/optimism/tree/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-proposer) to [`L2OutputOracle`](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/packages/contracts-bedrock/contracts/L1/L2OutputOracle.sol) on L1.  
Output proposals are *not* immediately valid.
They can only be considered authoritative once the fault challenge period (7 days on the production network, less on test networks) has passed."
635,When do output proposals become authoritative in Optimism?,"Output proposals become authoritative only after the fault challenge period has passed, which is 7 days on the production network and less on test networks.","The state root proposals are posted by [`op-proposer`](https://github.com/ethereum-optimism/optimism/tree/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/op-proposer) to [`L2OutputOracle`](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/packages/contracts-bedrock/contracts/L1/L2OutputOracle.sol) on L1.  
Output proposals are *not* immediately valid.
They can only be considered authoritative once the fault challenge period (7 days on the production network, less on test networks) has passed."
636,How does a withdrawal work in Optimism?,"In Optimism, a withdrawal is a transaction sent from Layer 2 (like OP Mainnet or OP Goerli) to Layer 1 (like Ethereum mainnet or Goerli). The process involves three transactions: initiating the withdrawal on L2, proving the withdrawal on L1, and finalizing the withdrawal on L1 after a fault challenge period.","---
title: Withdrawal Flow
lang: en-US
---  
In Optimism terminology, a *withdrawal* is a transaction sent from L2 (OP Mainnet, OP Goerli etc.) to L1 (Ethereum mainnet, Goerli, etc.).
This withdrawal may or may not have assets attached to it.  
Withdrawals require the user to submit three transactions:  
1. **Withdrawal initiating transaction**, which the user submits on L2.
1. **Withdrawal proving transaction**, which the user submits on L1 to prove that the withdrawal is legitimate (based on a merkle patricia trie root that commits to the state of the `L2ToL1MessagePasser`'s storage on L2)
1. **Withdrawal finalizing transaction**, which the user submits on L1 after the fault challenge period has passed, to actually run the transaction on L1, claim any assets attached, etc.  
You can see an example of how to do this [in the tutorials](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-comm#optimism-message-to-ethereum-withdrawal)."
636,What are the steps involved in making a withdrawal from Optimism to Ethereum?,"To make a withdrawal from Optimism to Ethereum, you need to complete three steps: first, submit a withdrawal initiating transaction on L2; second, submit a withdrawal proving transaction on L1 to prove the withdrawal's legitimacy; and third, submit a withdrawal finalizing transaction on L1 after the fault challenge period to complete the process and claim any attached assets.","---
title: Withdrawal Flow
lang: en-US
---  
In Optimism terminology, a *withdrawal* is a transaction sent from L2 (OP Mainnet, OP Goerli etc.) to L1 (Ethereum mainnet, Goerli, etc.).
This withdrawal may or may not have assets attached to it.  
Withdrawals require the user to submit three transactions:  
1. **Withdrawal initiating transaction**, which the user submits on L2.
1. **Withdrawal proving transaction**, which the user submits on L1 to prove that the withdrawal is legitimate (based on a merkle patricia trie root that commits to the state of the `L2ToL1MessagePasser`'s storage on L2)
1. **Withdrawal finalizing transaction**, which the user submits on L1 after the fault challenge period has passed, to actually run the transaction on L1, claim any assets attached, etc.  
You can see an example of how to do this [in the tutorials](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-comm#optimism-message-to-ethereum-withdrawal)."
636,Do I need to perform multiple transactions to withdraw assets from Optimism to Ethereum?,"Yes, you need to perform three transactions to withdraw assets from Optimism to Ethereum: the withdrawal initiating transaction on L2, the withdrawal proving transaction on L1, and the withdrawal finalizing transaction on L1.","---
title: Withdrawal Flow
lang: en-US
---  
In Optimism terminology, a *withdrawal* is a transaction sent from L2 (OP Mainnet, OP Goerli etc.) to L1 (Ethereum mainnet, Goerli, etc.).
This withdrawal may or may not have assets attached to it.  
Withdrawals require the user to submit three transactions:  
1. **Withdrawal initiating transaction**, which the user submits on L2.
1. **Withdrawal proving transaction**, which the user submits on L1 to prove that the withdrawal is legitimate (based on a merkle patricia trie root that commits to the state of the `L2ToL1MessagePasser`'s storage on L2)
1. **Withdrawal finalizing transaction**, which the user submits on L1 after the fault challenge period has passed, to actually run the transaction on L1, claim any assets attached, etc.  
You can see an example of how to do this [in the tutorials](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-comm#optimism-message-to-ethereum-withdrawal)."
637,How does the `sendMessage` function work in Optimism's L2CrossDomainMessenger?,"The `sendMessage` function in Optimism's L2CrossDomainMessenger is called by either an externally owned account (EOA) or a contract acting on behalf of an EOA. It accepts three parameters: `_target` (the target address on L1), `_message` (the L1 transaction's calldata), and `_minGasLimit` (the minimum amount of gas that the withdrawal finalizing transaction can provide). This function is used to initiate cross-domain messages and calls the `_sendMessage` function, which is specific to L2CrossDomainMessenger.","1. On L2 somebody (either an externally owned account (EOA) directly or a contract acting on behalf of an EOA) calls the [`sendMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L249-L289) function of [`L2CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol).  
This function accepts three parameters:  
- `_target`, target address on L1.
- `_message`, the L1 transaction's calldata, formatted as per the [ABI](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html) of the target account.
- `_minGasLimit`, The minimum amount of gas that the withdrawal finalizing transaction can provide to the withdrawal transaction. This is enforced by the `SafeCall` library, and if the minimum amount of gas cannot be met at the time of the external call from the `OptimismPortal` -> `L1CrossDomainMessenger`, the finalization transaction will revert to allow for re-attempting with a higher gas limit. In order to account for the gas consumed in the `L1CrossDomainMessenger.relayMessage` function's execution, extra gas will be added on top of the `_minGasLimit` value by the `CrossDomainMessenger.baseGas` function when `sendMessage` is called on L2.  
1. `sendMessage` is a generic function that is used in both cross domain messengers.
It calls [`_sendMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol#L48-L60), which is specific to [`L2CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol).  
1. `_sendMessage` calls [`initiateWithdrawal`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol#L91-L129) on [`L2ToL1MessagePasser`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol).
This function calculates the hash of the raw withdrawal fields.
It then [marks that hash as a sent message in `sentMessages`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol#L114) and [emits the fields with the hash in a `MessagePassed` event](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol#L116-L124).  
The raw withdrawal fields are:  
- `nonce` - A single use value to prevent two otherwise identical withdrawals from hashing to the same value
- `sender` - The L2 address that initiated the transfer, typically [`L2CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol)
- `target` - The L1 target address
- `value` - The amount of WEI transferred by this transaction
- `gasLimit` - Gas limit for the transaction, the system guarantees that at least this amount of gas will be available to the transaction on L1.
Note that if the gas limit is not enough, or if the L1 finalizing transaction does not have enough gas to provide that gas limit, the finalizing transaction returns a failure, it does not revert.
- `data` - The calldata for the withdrawal transaction  
1. When `op-proposer` [proposes a new output](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/op-proposer/proposer/l2_output_submitter.go#L312-L320), the output proposal includes [the output root](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/op-proposer/proposer/l2_output_submitter.go#L316), provided as part of the block by `op-node`.
This new output root commits to the state of the `sentMessages` mapping in the `L2ToL1MessagePasser` contract's storage on L2, and it can be used to prove the presence of a pending withdrawal within it."
637,What happens when the `sendMessage` function is called on L2?,"When the `sendMessage` function is called on L2, it calls the `_sendMessage` function, which then calls the `initiateWithdrawal` function on the L2ToL1MessagePasser contract. This function calculates the hash of the raw withdrawal fields, marks that hash as a sent message in `sentMessages`, and emits a `MessagePassed` event with the fields and the hash.","1. On L2 somebody (either an externally owned account (EOA) directly or a contract acting on behalf of an EOA) calls the [`sendMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L249-L289) function of [`L2CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol).  
This function accepts three parameters:  
- `_target`, target address on L1.
- `_message`, the L1 transaction's calldata, formatted as per the [ABI](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html) of the target account.
- `_minGasLimit`, The minimum amount of gas that the withdrawal finalizing transaction can provide to the withdrawal transaction. This is enforced by the `SafeCall` library, and if the minimum amount of gas cannot be met at the time of the external call from the `OptimismPortal` -> `L1CrossDomainMessenger`, the finalization transaction will revert to allow for re-attempting with a higher gas limit. In order to account for the gas consumed in the `L1CrossDomainMessenger.relayMessage` function's execution, extra gas will be added on top of the `_minGasLimit` value by the `CrossDomainMessenger.baseGas` function when `sendMessage` is called on L2.  
1. `sendMessage` is a generic function that is used in both cross domain messengers.
It calls [`_sendMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol#L48-L60), which is specific to [`L2CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol).  
1. `_sendMessage` calls [`initiateWithdrawal`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol#L91-L129) on [`L2ToL1MessagePasser`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol).
This function calculates the hash of the raw withdrawal fields.
It then [marks that hash as a sent message in `sentMessages`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol#L114) and [emits the fields with the hash in a `MessagePassed` event](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol#L116-L124).  
The raw withdrawal fields are:  
- `nonce` - A single use value to prevent two otherwise identical withdrawals from hashing to the same value
- `sender` - The L2 address that initiated the transfer, typically [`L2CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol)
- `target` - The L1 target address
- `value` - The amount of WEI transferred by this transaction
- `gasLimit` - Gas limit for the transaction, the system guarantees that at least this amount of gas will be available to the transaction on L1.
Note that if the gas limit is not enough, or if the L1 finalizing transaction does not have enough gas to provide that gas limit, the finalizing transaction returns a failure, it does not revert.
- `data` - The calldata for the withdrawal transaction  
1. When `op-proposer` [proposes a new output](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/op-proposer/proposer/l2_output_submitter.go#L312-L320), the output proposal includes [the output root](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/op-proposer/proposer/l2_output_submitter.go#L316), provided as part of the block by `op-node`.
This new output root commits to the state of the `sentMessages` mapping in the `L2ToL1MessagePasser` contract's storage on L2, and it can be used to prove the presence of a pending withdrawal within it."
637,What are the raw withdrawal fields used in the `initiateWithdrawal` function?,"The raw withdrawal fields used in the `initiateWithdrawal` function are: `nonce` (a single-use value to prevent identical withdrawals from hashing to the same value), `sender` (the L2 address that initiated the transfer), `target` (the L1 target address), `value` (the amount of WEI transferred), `gasLimit` (the gas limit for the transaction), and `data` (the calldata for the withdrawal transaction).","1. On L2 somebody (either an externally owned account (EOA) directly or a contract acting on behalf of an EOA) calls the [`sendMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol#L249-L289) function of [`L2CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol).  
This function accepts three parameters:  
- `_target`, target address on L1.
- `_message`, the L1 transaction's calldata, formatted as per the [ABI](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html) of the target account.
- `_minGasLimit`, The minimum amount of gas that the withdrawal finalizing transaction can provide to the withdrawal transaction. This is enforced by the `SafeCall` library, and if the minimum amount of gas cannot be met at the time of the external call from the `OptimismPortal` -> `L1CrossDomainMessenger`, the finalization transaction will revert to allow for re-attempting with a higher gas limit. In order to account for the gas consumed in the `L1CrossDomainMessenger.relayMessage` function's execution, extra gas will be added on top of the `_minGasLimit` value by the `CrossDomainMessenger.baseGas` function when `sendMessage` is called on L2.  
1. `sendMessage` is a generic function that is used in both cross domain messengers.
It calls [`_sendMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol#L48-L60), which is specific to [`L2CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol).  
1. `_sendMessage` calls [`initiateWithdrawal`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol#L91-L129) on [`L2ToL1MessagePasser`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol).
This function calculates the hash of the raw withdrawal fields.
It then [marks that hash as a sent message in `sentMessages`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol#L114) and [emits the fields with the hash in a `MessagePassed` event](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2ToL1MessagePasser.sol#L116-L124).  
The raw withdrawal fields are:  
- `nonce` - A single use value to prevent two otherwise identical withdrawals from hashing to the same value
- `sender` - The L2 address that initiated the transfer, typically [`L2CrossDomainMessenger`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L2/L2CrossDomainMessenger.sol)
- `target` - The L1 target address
- `value` - The amount of WEI transferred by this transaction
- `gasLimit` - Gas limit for the transaction, the system guarantees that at least this amount of gas will be available to the transaction on L1.
Note that if the gas limit is not enough, or if the L1 finalizing transaction does not have enough gas to provide that gas limit, the finalizing transaction returns a failure, it does not revert.
- `data` - The calldata for the withdrawal transaction  
1. When `op-proposer` [proposes a new output](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/op-proposer/proposer/l2_output_submitter.go#L312-L320), the output proposal includes [the output root](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/op-proposer/proposer/l2_output_submitter.go#L316), provided as part of the block by `op-node`.
This new output root commits to the state of the `sentMessages` mapping in the `L2ToL1MessagePasser` contract's storage on L2, and it can be used to prove the presence of a pending withdrawal within it."
638,How do you prove that a message hash is in L2 after an output root is published to L1?,"After an output root that includes the `MessagePassed` event is published to L1, the next step is to prove that the message hash really is in L2. This is typically done by using the SDK provided by Optimism.","Once an output root that includes the `MessagePassed` event is published to L1, the next step is to prove that the message hash really is in L2.
Typically this is done [by the SDK](https://sdk.optimism.io/classes/crosschainmessenger#proveMessage-2)."
638,What tool can be used to prove a message hash in L2?,The SDK provided by Optimism can be used to prove that a message hash is in L2. You can find more details in the SDK documentation.,"Once an output root that includes the `MessagePassed` event is published to L1, the next step is to prove that the message hash really is in L2.
Typically this is done [by the SDK](https://sdk.optimism.io/classes/crosschainmessenger#proveMessage-2)."
639,How does the SDK prove a message in Optimism?,The SDK proves a message in Optimism by calling the `CrossDomainMessenger.proveMessage()` function with the hash of the L1 message. This function then calls `CrossDomainMessenger.populateTransaction.proveMessage()`.,"1. A user calls the SDK's [`CrossDomainMessenger.proveMessage()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1452-L1471) with the hash of the L1 message.
This function calls [`CrossDomainMessenger.populateTransaction.proveMessage()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1746-L1798).  
1. To get from the L2 transaction hash to the raw withdrawal fields, the SDK uses [`toLowLevelMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L368-L450).
It gets them from the `MessagePassed` event in the receipt.  
1. To get the proof, the SDK uses [`getBedrockMessageProof`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1348-L1395).  
1. Finally, the SDK calls [`OptimismPortal.proveWithdrawalTransaction()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L234-L318) on L1."
639,How does the SDK get the raw withdrawal fields from an L2 transaction hash?,The SDK uses the `toLowLevelMessage` function to get the raw withdrawal fields from an L2 transaction hash. It retrieves them from the `MessagePassed` event in the receipt.,"1. A user calls the SDK's [`CrossDomainMessenger.proveMessage()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1452-L1471) with the hash of the L1 message.
This function calls [`CrossDomainMessenger.populateTransaction.proveMessage()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1746-L1798).  
1. To get from the L2 transaction hash to the raw withdrawal fields, the SDK uses [`toLowLevelMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L368-L450).
It gets them from the `MessagePassed` event in the receipt.  
1. To get the proof, the SDK uses [`getBedrockMessageProof`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1348-L1395).  
1. Finally, the SDK calls [`OptimismPortal.proveWithdrawalTransaction()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L234-L318) on L1."
639,What function does the SDK use to get the proof for a message?,The SDK uses the `getBedrockMessageProof` function to get the proof for a message.,"1. A user calls the SDK's [`CrossDomainMessenger.proveMessage()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1452-L1471) with the hash of the L1 message.
This function calls [`CrossDomainMessenger.populateTransaction.proveMessage()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1746-L1798).  
1. To get from the L2 transaction hash to the raw withdrawal fields, the SDK uses [`toLowLevelMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L368-L450).
It gets them from the `MessagePassed` event in the receipt.  
1. To get the proof, the SDK uses [`getBedrockMessageProof`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1348-L1395).  
1. Finally, the SDK calls [`OptimismPortal.proveWithdrawalTransaction()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L234-L318) on L1."
639,What is the final step the SDK takes to prove a withdrawal transaction on L1?,The final step the SDK takes is calling the `OptimismPortal.proveWithdrawalTransaction()` function on L1.,"1. A user calls the SDK's [`CrossDomainMessenger.proveMessage()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1452-L1471) with the hash of the L1 message.
This function calls [`CrossDomainMessenger.populateTransaction.proveMessage()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1746-L1798).  
1. To get from the L2 transaction hash to the raw withdrawal fields, the SDK uses [`toLowLevelMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L368-L450).
It gets them from the `MessagePassed` event in the receipt.  
1. To get the proof, the SDK uses [`getBedrockMessageProof`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1348-L1395).  
1. Finally, the SDK calls [`OptimismPortal.proveWithdrawalTransaction()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L234-L318) on L1."
640,How does the `OptimismPortal.proveWithdrawalTransaction()` function ensure the legitimacy of a withdrawal transaction?,"The `OptimismPortal.proveWithdrawalTransaction()` function runs several sanity checks, verifies that the hash for the withdrawal is turned on in `L2ToL1MessagePasser.sentMessages` on L2, and ensures that the proof has not been submitted before. If everything checks out, it writes the output root, timestamp, and L2 output index to `provenWithdrawals` and emits an event. It then waits for the fault challenge period to ensure the L2 output root and the proof are legitimate.","[`OptimismPortal.proveWithdrawalTransaction()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L234-L318) runs a few sanity checks.
Then it verifies that in `L2ToL1MessagePasser.sentMessages` on L2 the hash for the withdrawal is turned on, and that this proof have not been submitted before.
If everything checks out, it writes the output root, the timestamp, and the L2 output index to which it applies in `provenWithdrawals` and emits an event.  
The next step is to wait the fault challenge period, to ensure that the L2 output root used in the proof is legitimate, and that the proof itself is legitimate and not a hack."
640,What happens after the `OptimismPortal.proveWithdrawalTransaction()` function verifies a withdrawal transaction?,"After verifying a withdrawal transaction, the function writes the output root, timestamp, and L2 output index to `provenWithdrawals` and emits an event. The next step is to wait for the fault challenge period to ensure the L2 output root and the proof are legitimate and not a hack.","[`OptimismPortal.proveWithdrawalTransaction()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L234-L318) runs a few sanity checks.
Then it verifies that in `L2ToL1MessagePasser.sentMessages` on L2 the hash for the withdrawal is turned on, and that this proof have not been submitted before.
If everything checks out, it writes the output root, the timestamp, and the L2 output index to which it applies in `provenWithdrawals` and emits an event.  
The next step is to wait the fault challenge period, to ensure that the L2 output root used in the proof is legitimate, and that the proof itself is legitimate and not a hack."
641,How is a withdrawal finalized in Optimism?,A withdrawal in Optimism is finalized and executed on Layer 1 (L1) after the fault challenge period passes.,"Finally, once the fault challenge period passes, the withdrawal can be finalized and executed on L1."
642,How does the SDK finalize a message in Optimism?,The SDK finalizes a message by calling the `CrossDomainMessenger.finalizeMessage()` function with the hash of the L1 message. This function then calls `CrossDomainMessenger.populateTransaction.finalizeMessage()` to proceed with the transaction.,"1. A user calls the SDK's [`CrossDomainMessenger.finalizeMessage()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1473-L1493) with the hash of the L1 message.
This function calls [`CrossDomainMessenger.populateTransaction.finalizeMessage()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1800-L1853).  
1. To get from the L2 transaction hash to the raw withdrawal fields, the SDK uses [`toLowLevelMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L368-L450).
It gets them from the `MessagePassed` event in the receipt.  
1. Finally, the SDK calls [`OptimismPortal.finalizeWithdrawalTransaction()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L320-L420) on L1."
642,How does the SDK retrieve the raw withdrawal fields from an L2 transaction?,The SDK retrieves the raw withdrawal fields from an L2 transaction by using the `toLowLevelMessage` function. It gets these fields from the `MessagePassed` event in the transaction receipt.,"1. A user calls the SDK's [`CrossDomainMessenger.finalizeMessage()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1473-L1493) with the hash of the L1 message.
This function calls [`CrossDomainMessenger.populateTransaction.finalizeMessage()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1800-L1853).  
1. To get from the L2 transaction hash to the raw withdrawal fields, the SDK uses [`toLowLevelMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L368-L450).
It gets them from the `MessagePassed` event in the receipt.  
1. Finally, the SDK calls [`OptimismPortal.finalizeWithdrawalTransaction()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L320-L420) on L1."
642,What is the final step the SDK takes to complete a withdrawal transaction on L1?,The final step the SDK takes to complete a withdrawal transaction on L1 is calling the `OptimismPortal.finalizeWithdrawalTransaction()` function.,"1. A user calls the SDK's [`CrossDomainMessenger.finalizeMessage()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1473-L1493) with the hash of the L1 message.
This function calls [`CrossDomainMessenger.populateTransaction.finalizeMessage()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L1800-L1853).  
1. To get from the L2 transaction hash to the raw withdrawal fields, the SDK uses [`toLowLevelMessage`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/sdk/src/cross-chain-messenger.ts#L368-L450).
It gets them from the `MessagePassed` event in the receipt.  
1. Finally, the SDK calls [`OptimismPortal.finalizeWithdrawalTransaction()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L320-L420) on L1."
643,How does the `finalizeWithdrawalTransaction` function ensure the security of a withdrawal on Optimism?,"The `finalizeWithdrawalTransaction` function runs several checks to ensure security: it verifies that the proof has already been submitted, that the proof was submitted long enough ago for the fault challenge period to have passed, that the proof applies to the current output root for the block, that the current output root was proposed long enough ago for the fault challenge period to have passed, and that the transaction has not been finalized before to prevent replay attacks. If any of these checks fail, the transaction reverts.","1. [`OptimismPortal.finalizeWithdrawalTransaction()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L320-L420) runs several checks. The interesting ones are:  
- [Verify the proof has already been submitted](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L341-L347).
- [Verify the proof has been submitted long enough ago that the fault challenge period has already passed](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L357-L364).
- [Verify that the proof applies to the current output root for that block (the output root for a block can be changed by the fault challenge process)](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L366-L378).
- [Verify that the current output root for that block was proposed long enough ago that the fault challenge period has passed](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L380-L384).
- [Verify that the transaction has not been finalized before to prevent replay attacks](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L386-L390).  
If any of these checks fail, the transaction reverts.  
1. Mark the withdrawal as finalized in `finalizedWithdrawals`.  
1. Run the actual withdrawal transaction (call the `target` contract with the calldata in `data`).  
1. Emit a [`WithdrawalFinalized`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L118) event."
643,What happens after the `finalizeWithdrawalTransaction` function successfully passes all checks?,"After passing all checks, the `finalizeWithdrawalTransaction` function marks the withdrawal as finalized in `finalizedWithdrawals`, runs the actual withdrawal transaction by calling the target contract with the provided calldata, and emits a `WithdrawalFinalized` event.","1. [`OptimismPortal.finalizeWithdrawalTransaction()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L320-L420) runs several checks. The interesting ones are:  
- [Verify the proof has already been submitted](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L341-L347).
- [Verify the proof has been submitted long enough ago that the fault challenge period has already passed](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L357-L364).
- [Verify that the proof applies to the current output root for that block (the output root for a block can be changed by the fault challenge process)](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L366-L378).
- [Verify that the current output root for that block was proposed long enough ago that the fault challenge period has passed](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L380-L384).
- [Verify that the transaction has not been finalized before to prevent replay attacks](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L386-L390).  
If any of these checks fail, the transaction reverts.  
1. Mark the withdrawal as finalized in `finalizedWithdrawals`.  
1. Run the actual withdrawal transaction (call the `target` contract with the calldata in `data`).  
1. Emit a [`WithdrawalFinalized`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/OptimismPortal.sol#L118) event."
644,How does gas cost estimation differ between Ethereum and Optimism?,"On Ethereum (L1), gas cost is proportional to the gas used by the transaction. However, on Optimism, gas costs are primarily determined by the cost of writing the transaction to L1, which depends on the transaction size rather than the amount of processing required.","---
title: SDK
lang: en-US
---  
In most ways Optimism is [EVM equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306).
However, there are [a few differences](../developers/build/differences/), which sometimes require decentralized applications to access Optimism-specific services.  
For example, decentralized applications might need to estimate gas costs.
The standard Ethereum tooling assumes that gas cost is proportional to the gas used by the transaction, which is correct on L1, but not on Optimism.
[Our gas costs are predominately the cost of writing the transaction to L1](../developers/build/transaction-fees.md), which depends on the transaction size, not the amount of processing required.
This difference requires us to have separate methods to provide gas estimates.  
There are three ways to access Optimism services:  
1. [Onchain contract calls](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock).
This is the way your contracts can get Optimism information or services directly.
1. [The JavaScript SDK](js-client.md). For use when you write JavaScript or TypeScript code, either in the client or a Node.js server.
1. [Offchain, using RPC](../developers/build/json-rpc.md). Which is more complicated but usable from any development stack (Python, Rust, etc.).  
::: tip Improving the SDK
If you find a bug, or if there's a feature you think we should add, there are several ways to inform us.  
- [Go on our Discord](https://discord-gateway.optimism.io/), and then ask in **#dev-support**.
- Submit an issue on [our Github](https://github.com/ethereum-optimism/optimism/issues).
:::"
644,What are the ways to access Optimism-specific services?,"There are three ways to access Optimism services: 1) Onchain contract calls, 2) The JavaScript SDK for use in JavaScript or TypeScript code, and 3) Offchain, using RPC, which can be used from any development stack like Python or Rust.","---
title: SDK
lang: en-US
---  
In most ways Optimism is [EVM equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306).
However, there are [a few differences](../developers/build/differences/), which sometimes require decentralized applications to access Optimism-specific services.  
For example, decentralized applications might need to estimate gas costs.
The standard Ethereum tooling assumes that gas cost is proportional to the gas used by the transaction, which is correct on L1, but not on Optimism.
[Our gas costs are predominately the cost of writing the transaction to L1](../developers/build/transaction-fees.md), which depends on the transaction size, not the amount of processing required.
This difference requires us to have separate methods to provide gas estimates.  
There are three ways to access Optimism services:  
1. [Onchain contract calls](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock).
This is the way your contracts can get Optimism information or services directly.
1. [The JavaScript SDK](js-client.md). For use when you write JavaScript or TypeScript code, either in the client or a Node.js server.
1. [Offchain, using RPC](../developers/build/json-rpc.md). Which is more complicated but usable from any development stack (Python, Rust, etc.).  
::: tip Improving the SDK
If you find a bug, or if there's a feature you think we should add, there are several ways to inform us.  
- [Go on our Discord](https://discord-gateway.optimism.io/), and then ask in **#dev-support**.
- Submit an issue on [our Github](https://github.com/ethereum-optimism/optimism/issues).
:::"
644,How can I report a bug or suggest a feature for the Optimism SDK?,"You can report a bug or suggest a feature by going to the Optimism Discord and asking in the #dev-support channel, or by submitting an issue on their Github repository.","---
title: SDK
lang: en-US
---  
In most ways Optimism is [EVM equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306).
However, there are [a few differences](../developers/build/differences/), which sometimes require decentralized applications to access Optimism-specific services.  
For example, decentralized applications might need to estimate gas costs.
The standard Ethereum tooling assumes that gas cost is proportional to the gas used by the transaction, which is correct on L1, but not on Optimism.
[Our gas costs are predominately the cost of writing the transaction to L1](../developers/build/transaction-fees.md), which depends on the transaction size, not the amount of processing required.
This difference requires us to have separate methods to provide gas estimates.  
There are three ways to access Optimism services:  
1. [Onchain contract calls](https://github.com/ethereum-optimism/optimism/tree/65ec61dde94ffa93342728d324fecf474d228e1f/packages/contracts-bedrock).
This is the way your contracts can get Optimism information or services directly.
1. [The JavaScript SDK](js-client.md). For use when you write JavaScript or TypeScript code, either in the client or a Node.js server.
1. [Offchain, using RPC](../developers/build/json-rpc.md). Which is more complicated but usable from any development stack (Python, Rust, etc.).  
::: tip Improving the SDK
If you find a bug, or if there's a feature you think we should add, there are several ways to inform us.  
- [Go on our Discord](https://discord-gateway.optimism.io/), and then ask in **#dev-support**.
- Submit an issue on [our Github](https://github.com/ethereum-optimism/optimism/issues).
:::"
645,Does Alchemy provide any tools for interacting with Optimism?,"Yes, Alchemy provides an SDK in addition to the standard Ethereum RPC interface for interacting with Optimism.","---
title: Alchemy SDK
lang: en-US
---  
In addition to the standard [Ethereum RPC interface](../useful-tools/networks.md), Alchemy makes available an SDK.  
- [Quickstart](https://docs.alchemy.com/reference/alchemy-sdk-quickstart/?a=818c11a8da)
- [Examples](https://docs.alchemy.com/reference/optimism-sdk-examples/?a=818c11a8da)"
645,Where can I find examples of how to use the Alchemy SDK with Optimism?,You can find examples of how to use the Alchemy SDK with Optimism on the Alchemy documentation website under the 'Examples' section.,"---
title: Alchemy SDK
lang: en-US
---  
In addition to the standard [Ethereum RPC interface](../useful-tools/networks.md), Alchemy makes available an SDK.  
- [Quickstart](https://docs.alchemy.com/reference/alchemy-sdk-quickstart/?a=818c11a8da)
- [Examples](https://docs.alchemy.com/reference/optimism-sdk-examples/?a=818c11a8da)"
645,Is there a quickstart guide available for the Alchemy SDK?,"Yes, there is a quickstart guide available for the Alchemy SDK, which can be found on the Alchemy documentation website.","---
title: Alchemy SDK
lang: en-US
---  
In addition to the standard [Ethereum RPC interface](../useful-tools/networks.md), Alchemy makes available an SDK.  
- [Quickstart](https://docs.alchemy.com/reference/alchemy-sdk-quickstart/?a=818c11a8da)
- [Examples](https://docs.alchemy.com/reference/optimism-sdk-examples/?a=818c11a8da)"
646,How can the OP Stack Client SDK help me when working with OP Mainnet and Ethereum?,"The OP Stack Client SDK can help you navigate differences between OP Mainnet and Ethereum, such as gas costs and interlayer communication.","---
title: The OP Stack Client SDK
lang: en-US
---  
There are a few areas in which the SDK can help you navigate [the differences between OP Mainnet and Ethereum](../developers/build/differences/):  
- [Gas costs](../developers/build/transaction-fees.md)
- [Interlayer communication](../developers/bridge/basics.md)  
The SDK supports multiple OP Chains: OP, Base, etc.
To see whether a specific OP Chain is supported directly, [see the documentation](https://sdk.optimism.io/enums/l2chainid).
Chains that aren't officially supported just take a few extra steps.
Get the L1 contract addresses, and [provide them to the SDK](https://stack.optimism.io/docs/build/sdk/#contract-addresses).
Once you do that, you can use the SDK normally.  
[Reference](https://sdk.optimism.io/)"
646,Does the OP Stack Client SDK support multiple OP Chains?,"Yes, the SDK supports multiple OP Chains like OP and Base. You can check if a specific OP Chain is supported directly in the documentation.","---
title: The OP Stack Client SDK
lang: en-US
---  
There are a few areas in which the SDK can help you navigate [the differences between OP Mainnet and Ethereum](../developers/build/differences/):  
- [Gas costs](../developers/build/transaction-fees.md)
- [Interlayer communication](../developers/bridge/basics.md)  
The SDK supports multiple OP Chains: OP, Base, etc.
To see whether a specific OP Chain is supported directly, [see the documentation](https://sdk.optimism.io/enums/l2chainid).
Chains that aren't officially supported just take a few extra steps.
Get the L1 contract addresses, and [provide them to the SDK](https://stack.optimism.io/docs/build/sdk/#contract-addresses).
Once you do that, you can use the SDK normally.  
[Reference](https://sdk.optimism.io/)"
646,What should I do if the OP Chain I want to use is not officially supported by the SDK?,"If the OP Chain is not officially supported, you need to get the L1 contract addresses and provide them to the SDK. After that, you can use the SDK normally.","---
title: The OP Stack Client SDK
lang: en-US
---  
There are a few areas in which the SDK can help you navigate [the differences between OP Mainnet and Ethereum](../developers/build/differences/):  
- [Gas costs](../developers/build/transaction-fees.md)
- [Interlayer communication](../developers/bridge/basics.md)  
The SDK supports multiple OP Chains: OP, Base, etc.
To see whether a specific OP Chain is supported directly, [see the documentation](https://sdk.optimism.io/enums/l2chainid).
Chains that aren't officially supported just take a few extra steps.
Get the L1 contract addresses, and [provide them to the SDK](https://stack.optimism.io/docs/build/sdk/#contract-addresses).
Once you do that, you can use the SDK normally.  
[Reference](https://sdk.optimism.io/)"
647,How can I view transactions between different layers in Optimism?,You can view transactions between different layers in Optimism by following the tutorial provided in the Optimism Governance Documentation. The specific guide can be found [here](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-view-tx).,"- [Viewing transactions between layers](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-view-tx)
- [Bridging ETH](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-eth)
- [Bridging ERC-20](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20)
- [Estimate the costs of an OP (L2) transaction](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas)"
647,How do I bridge ETH to Optimism?,"To bridge ETH to Optimism, you can follow the step-by-step instructions provided in the Optimism Governance Documentation. The detailed tutorial is available [here](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-eth).","- [Viewing transactions between layers](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-view-tx)
- [Bridging ETH](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-eth)
- [Bridging ERC-20](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20)
- [Estimate the costs of an OP (L2) transaction](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas)"
647,Is there a way to estimate the costs of a transaction on Optimism?,"Yes, you can estimate the costs of a transaction on Optimism by using the guide provided in the Optimism Governance Documentation. The tutorial for estimating gas costs is available [here](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas).","- [Viewing transactions between layers](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-view-tx)
- [Bridging ETH](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-eth)
- [Bridging ERC-20](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/cross-dom-bridge-erc20)
- [Estimate the costs of an OP (L2) transaction](https://github.com/ethereum-optimism/optimism-tutorial/tree/main/sdk-estimate-gas)"
648,How is the security of OP Mainnet managed?,The security of OP Mainnet is currently dependent on a multisig wallet managed by several anonymous individuals. This wallet can be used to upgrade core OP Mainnet smart contracts without upgrade delays.,"---
title: OP Mainnet's Security Model
lang: en-US
---  
OP Mainnet is a work in progress.
Constantly pushing to improve the security guarantees that users have while using OP Mainnet is a top priority.
At the moment, **it‚Äôs important to understand that the security of OP Mainnet is dependent on a [multisig wallet](https://www.coindesk.com/tech/2020/11/10/multisignature-wallets-can-keep-your-coins-safer-if-you-use-them-right/)** managed by several anonymous individuals.
This multisig wallet can be used to upgrade core OP Mainnet smart contracts without upgrade delays.  
Please also keep in mind that just like any other system, **the Optimism codebase may contain unknown bugs** that could lead to the loss of some or all of the assets held within the system.
[2222 smart contract codebase has been audited repeatedly](https://github.com/ethereum-optimism/optimism/tree/develop/docs/security-reviews) but **audits are not a stamp of approval** and **a completed audit does not mean that the audited codebase is free of bugs.**
It‚Äôs important to understand that using OP Mainnet inherently exposes you to the risk of bugs within the Optimism codebase, and that you use OP Mainnet at your own risk."
648,Are there any risks associated with using OP Mainnet?,"Yes, using OP Mainnet inherently exposes you to the risk of bugs within the Optimism codebase. Despite repeated audits of the smart contract codebase, there may still be unknown bugs that could lead to the loss of some or all assets held within the system. You use OP Mainnet at your own risk.","---
title: OP Mainnet's Security Model
lang: en-US
---  
OP Mainnet is a work in progress.
Constantly pushing to improve the security guarantees that users have while using OP Mainnet is a top priority.
At the moment, **it‚Äôs important to understand that the security of OP Mainnet is dependent on a [multisig wallet](https://www.coindesk.com/tech/2020/11/10/multisignature-wallets-can-keep-your-coins-safer-if-you-use-them-right/)** managed by several anonymous individuals.
This multisig wallet can be used to upgrade core OP Mainnet smart contracts without upgrade delays.  
Please also keep in mind that just like any other system, **the Optimism codebase may contain unknown bugs** that could lead to the loss of some or all of the assets held within the system.
[2222 smart contract codebase has been audited repeatedly](https://github.com/ethereum-optimism/optimism/tree/develop/docs/security-reviews) but **audits are not a stamp of approval** and **a completed audit does not mean that the audited codebase is free of bugs.**
It‚Äôs important to understand that using OP Mainnet inherently exposes you to the risk of bugs within the Optimism codebase, and that you use OP Mainnet at your own risk."
648,Does an audit guarantee that the OP Mainnet codebase is free of bugs?,"No, audits are not a stamp of approval and a completed audit does not mean that the audited codebase is free of bugs. There may still be unknown bugs that could affect the security of the system.","---
title: OP Mainnet's Security Model
lang: en-US
---  
OP Mainnet is a work in progress.
Constantly pushing to improve the security guarantees that users have while using OP Mainnet is a top priority.
At the moment, **it‚Äôs important to understand that the security of OP Mainnet is dependent on a [multisig wallet](https://www.coindesk.com/tech/2020/11/10/multisignature-wallets-can-keep-your-coins-safer-if-you-use-them-right/)** managed by several anonymous individuals.
This multisig wallet can be used to upgrade core OP Mainnet smart contracts without upgrade delays.  
Please also keep in mind that just like any other system, **the Optimism codebase may contain unknown bugs** that could lead to the loss of some or all of the assets held within the system.
[2222 smart contract codebase has been audited repeatedly](https://github.com/ethereum-optimism/optimism/tree/develop/docs/security-reviews) but **audits are not a stamp of approval** and **a completed audit does not mean that the audited codebase is free of bugs.**
It‚Äôs important to understand that using OP Mainnet inherently exposes you to the risk of bugs within the Optimism codebase, and that you use OP Mainnet at your own risk."
649,Does OP Mainnet currently have fault proofs?,"No, OP Mainnet does not currently have fault proofs.","**No**, OP Mainnet does not currently have fault proofs.
**Fault proofs do not meaningfully improve the security of a system if that system can be upgraded within the 7 day challenge window (‚Äùfast upgrade keys‚Äù)**.
A system with fast upgrade keys, such as OP Mainnet, is fully dependent on the upgrade keys for security.
OP Mainnet's goal is to be the first system that deploys fault proofs that can secure the system by themselves, without fast upgrade keys."
649,Why don't fault proofs improve the security of OP Mainnet?,"Fault proofs do not meaningfully improve the security of a system if that system can be upgraded within the 7 day challenge window using 'fast upgrade keys'. A system with fast upgrade keys, such as OP Mainnet, is fully dependent on the upgrade keys for security.","**No**, OP Mainnet does not currently have fault proofs.
**Fault proofs do not meaningfully improve the security of a system if that system can be upgraded within the 7 day challenge window (‚Äùfast upgrade keys‚Äù)**.
A system with fast upgrade keys, such as OP Mainnet, is fully dependent on the upgrade keys for security.
OP Mainnet's goal is to be the first system that deploys fault proofs that can secure the system by themselves, without fast upgrade keys."
649,What is OP Mainnet's goal regarding fault proofs?,"OP Mainnet's goal is to be the first system that deploys fault proofs that can secure the system by themselves, without relying on fast upgrade keys.","**No**, OP Mainnet does not currently have fault proofs.
**Fault proofs do not meaningfully improve the security of a system if that system can be upgraded within the 7 day challenge window (‚Äùfast upgrade keys‚Äù)**.
A system with fast upgrade keys, such as OP Mainnet, is fully dependent on the upgrade keys for security.
OP Mainnet's goal is to be the first system that deploys fault proofs that can secure the system by themselves, without fast upgrade keys."
650,Why are the members of the multisig anonymous?,The members of the multisig are anonymous to make it more difficult to compromise the multisig.,"The multisig is managed by an anonymous set of individuals.
Members are anonymous in order to make the multisig more difficult to compromise."
651,How does Optimism plan to achieve decentralization?,"Optimism plans to achieve decentralization by removing the multisig in a way that makes OP Mainnet the first chain with true fault proof security. For more details, you can check out their detailed post on the Pragmatic Path to Decentralization.",Check out Optimism‚Äôs detailed [Pragmatic Path to Decentralization](https://medium.com/ethereum-optimism/our-pragmatic-path-to-decentralization-cb5805ca43c1) post for a detailed view into how the multisig may be removed in a way that makes OP Mainnet the first chain with true fault proof security.
651,What is the significance of removing the multisig in Optimism's plan?,"Removing the multisig is significant because it aims to make OP Mainnet the first chain with true fault proof security, enhancing the overall security and trustworthiness of the network.",Check out Optimism‚Äôs detailed [Pragmatic Path to Decentralization](https://medium.com/ethereum-optimism/our-pragmatic-path-to-decentralization-cb5805ca43c1) post for a detailed view into how the multisig may be removed in a way that makes OP Mainnet the first chain with true fault proof security.
652,How much can I earn by finding critical bugs in the Optimism codebase?,"You can earn up to $2,000,042 by finding critical bugs in the Optimism codebase.","[OP Mainnet has one of the biggest bug bounties (ever)](./bounties.md).
You can earn up to $2,000,042 by finding critical bugs in the Optimism codebase.
You can also run your own verifier node to detect network faults."
652,Can I run my own verifier node on Optimism?,"Yes, you can run your own verifier node to detect network faults on Optimism.","[OP Mainnet has one of the biggest bug bounties (ever)](./bounties.md).
You can earn up to $2,000,042 by finding critical bugs in the Optimism codebase.
You can also run your own verifier node to detect network faults."
653,Are there any bug bounties available for Optimism?,"Yes, Optimism has a bug bounty program to encourage the discovery and reporting of vulnerabilities in their system.","---
title: Bug Bounties
lang: en-US
---"
653,What is the purpose of the bug bounty program in Optimism?,The purpose of the bug bounty program in Optimism is to incentivize the discovery and responsible reporting of security vulnerabilities to ensure the safety and reliability of the platform.,"---
title: Bug Bounties
lang: en-US
---"
654,How does Optimism handle security?,Optimism takes security very seriously and has a massive bug bounty program to incentivize finding and fixing vulnerabilities. They have even given out one of the largest bounty payouts ever for a critical bug.,"Optimism takes security seriously and as such, we have a massive bug bounty program. We don't just talk about it either! We have given out one of the [largest bounty payouts ever](https://medium.com/ethereum-optimism/disclosure-fixing-a-critical-bug-in-optimisms-geth-fork-a836ebdf7c94)! You can read more about that bug [here](https://www.saurik.com/optimism.html). Below are the various bug bounty programs we have, as well as how to reach out to us if your bug is not covered by an existing bounty."
654,Has Optimism ever paid out a large bounty for a bug?,"Yes, Optimism has given out one of the largest bounty payouts ever for a critical bug. You can read more about that specific bug on their Medium post.","Optimism takes security seriously and as such, we have a massive bug bounty program. We don't just talk about it either! We have given out one of the [largest bounty payouts ever](https://medium.com/ethereum-optimism/disclosure-fixing-a-critical-bug-in-optimisms-geth-fork-a836ebdf7c94)! You can read more about that bug [here](https://www.saurik.com/optimism.html). Below are the various bug bounty programs we have, as well as how to reach out to us if your bug is not covered by an existing bounty."
654,Where can I find more information about a specific bug that Optimism paid a large bounty for?,You can read more about the specific bug that Optimism paid a large bounty for on their Medium post and on Saurik's website.,"Optimism takes security seriously and as such, we have a massive bug bounty program. We don't just talk about it either! We have given out one of the [largest bounty payouts ever](https://medium.com/ethereum-optimism/disclosure-fixing-a-critical-bug-in-optimisms-geth-fork-a836ebdf7c94)! You can read more about that bug [here](https://www.saurik.com/optimism.html). Below are the various bug bounty programs we have, as well as how to reach out to us if your bug is not covered by an existing bounty."
655,Where can I find information about Optimism's bug bounty program?,"You can find detailed information about Optimism's bug bounty program on their Bug Bounty Page on Immunefi. The page includes information about assets in scope, how to report bugs, and the payout process.","Optimism has a very detailed [Bug bounty Page on Immunefi](https://immunefi.com/bounty/optimism/). In the listing you can find all the information relating to assets in scope, reporting, and the payout process."
656,What's the purpose of the Sherlock audit contest mentioned in the Optimism Governance Documentation?,The Sherlock audit contest is launched to ensure the security and reliability of the upcoming Bedrock launch by having experts review and audit the code.,With our upcoming launch of [Bedrock](../developers/bedrock/how-is-bedrock-different.md) we have launched a [Sherlock audit contest](https://app.sherlock.xyz/audits/contests/38).
656,What is Bedrock in the context of Optimism?,"Bedrock is an upcoming launch by Optimism, which likely involves significant updates or changes to their system, as indicated by the need for a security audit.",With our upcoming launch of [Bedrock](../developers/bedrock/how-is-bedrock-different.md) we have launched a [Sherlock audit contest](https://app.sherlock.xyz/audits/contests/38).
657,How should I report a critical or major bug that is not covered by the existing bug bounty?,"You should report it via the Immunefi program. The team will seriously consider the impact of any issues, and they have previously rewarded security researchers for bugs not within the stated scope of the program.","If you think you have found a critical or major bug that is not covered by our existing bug bounty, please report it to us via the Immunefi program regardless. We will seriously consider the impact of any issues, and have previously rewarded security researchers for bugs not within the stated scope of the program."
658,Are there any privileged roles in OP Mainnet?,"Yes, in the current state of decentralization, there are still some privileged roles in OP Mainnet.","---
title: Privileged Roles in OP Mainnet
lang: en-US
---  
In our current state of decentralization, there are still some privileged roles in OP Mainnet. This document explains what they are, and why they exist."
658,Why do privileged roles exist in OP Mainnet?,Privileged roles exist in OP Mainnet to manage certain aspects of the network during its current state of decentralization.,"---
title: Privileged Roles in OP Mainnet
lang: en-US
---  
In our current state of decentralization, there are still some privileged roles in OP Mainnet. This document explains what they are, and why they exist."
659,Why do some addresses need to have their private key online in the Optimism system?,Some addresses need to have their private key online because a component of the system requires it to function properly.,These are addresses that *need* to have their private key online somewhere for a component of the system to work.
660,Where can I find the mainnet address for the component that submits new transaction batches?,The mainnet address for the component that submits new transaction batches is 0x6887246668a3b87F54DeB3b94Ba47a6f63F32985. You can view it on Etherscan [here](https://etherscan.io/address/0x6887246668a3b87F54DeB3b94Ba47a6f63F32985).,"This is the component that submits new transaction batches.  
- **Mainnet address**: [`0x6887246668a3b87F54DeB3b94Ba47a6f63F32985`](https://etherscan.io/address/0x6887246668a3b87F54DeB3b94Ba47a6f63F32985)
- **Goerli address**: [`0x7431310e026B69BFC676C0013E12A1A11411EEc9`](https://goerli.etherscan.io/address/0x7431310e026B69BFC676C0013E12A1A11411EEc9)  
If this account is compromised, that would enable denial of service attacks against the rollup."
660,What is the Goerli address for the component that submits new transaction batches?,The Goerli address for the component that submits new transaction batches is 0x7431310e026B69BFC676C0013E12A1A11411EEc9. You can view it on Etherscan [here](https://goerli.etherscan.io/address/0x7431310e026B69BFC676C0013E12A1A11411EEc9).,"This is the component that submits new transaction batches.  
- **Mainnet address**: [`0x6887246668a3b87F54DeB3b94Ba47a6f63F32985`](https://etherscan.io/address/0x6887246668a3b87F54DeB3b94Ba47a6f63F32985)
- **Goerli address**: [`0x7431310e026B69BFC676C0013E12A1A11411EEc9`](https://goerli.etherscan.io/address/0x7431310e026B69BFC676C0013E12A1A11411EEc9)  
If this account is compromised, that would enable denial of service attacks against the rollup."
660,What could happen if the account that submits new transaction batches is compromised?,"If the account that submits new transaction batches is compromised, it could enable denial of service attacks against the rollup.","This is the component that submits new transaction batches.  
- **Mainnet address**: [`0x6887246668a3b87F54DeB3b94Ba47a6f63F32985`](https://etherscan.io/address/0x6887246668a3b87F54DeB3b94Ba47a6f63F32985)
- **Goerli address**: [`0x7431310e026B69BFC676C0013E12A1A11411EEc9`](https://goerli.etherscan.io/address/0x7431310e026B69BFC676C0013E12A1A11411EEc9)  
If this account is compromised, that would enable denial of service attacks against the rollup."
661,How does Optimism handle invalid output proposals?,"If the account that submits new state roots for the L2 output is compromised, invalid output proposals might be submitted. In such cases, a challenger can cancel these invalid proposals within seven days to minimize the risk.","This is the component that submits new state roots for the L2 output.  
- **Mainnet address**: [`0x473300df21D047806A082244b417f96b32f13A33`](https://etherscan.io/address/0x473300df21D047806A082244b417f96b32f13A33)
- **Goerli address**: [`0x02b1786A85Ec3f71fBbBa46507780dB7cF9014f6`](https://goerli.etherscan.io/address/0x02b1786A85Ec3f71fBbBa46507780dB7cF9014f6)  
If this account is compromised then we might have invalid output proposals that we need the [challenger](#challenger) to cancel.
As long as we do it within seven days, the risk is minimalized."
661,What are the addresses used for submitting new state roots on Optimism?,"The mainnet address for submitting new state roots is 0x473300df21D047806A082244b417f96b32f13A33, and the Goerli testnet address is 0x02b1786A85Ec3f71fBbBa46507780dB7cF9014f6.","This is the component that submits new state roots for the L2 output.  
- **Mainnet address**: [`0x473300df21D047806A082244b417f96b32f13A33`](https://etherscan.io/address/0x473300df21D047806A082244b417f96b32f13A33)
- **Goerli address**: [`0x02b1786A85Ec3f71fBbBa46507780dB7cF9014f6`](https://goerli.etherscan.io/address/0x02b1786A85Ec3f71fBbBa46507780dB7cF9014f6)  
If this account is compromised then we might have invalid output proposals that we need the [challenger](#challenger) to cancel.
As long as we do it within seven days, the risk is minimalized."
662,How are the private keys for certain addresses on OP Mainnet secured?,"The private keys for these addresses are 'cold', meaning they are not stored on any device connected to the network and cannot be used without human intervention. These addresses are usually controlled by multisig contracts managed by groups of community members.","These addresses are *cold*, meaning the private key is not on any device connected to the network, and cannot be used without human intervention.
On OP Mainnet these are usually multisig contracts, controlled by groups of community members.
On [OP Stack](https://stack.optimism.io) these wallets are set by default to the `ADMIN` account.
When you create a new OP Stack blockchain you specify them in [the deployment configuration JSON file](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/deploy-config/getting-started.json)."
662,What is the default account for wallets on the OP Stack?,"On the OP Stack, wallets are set by default to the 'ADMIN' account.","These addresses are *cold*, meaning the private key is not on any device connected to the network, and cannot be used without human intervention.
On OP Mainnet these are usually multisig contracts, controlled by groups of community members.
On [OP Stack](https://stack.optimism.io) these wallets are set by default to the `ADMIN` account.
When you create a new OP Stack blockchain you specify them in [the deployment configuration JSON file](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/deploy-config/getting-started.json)."
662,How do you specify wallets when creating a new OP Stack blockchain?,"When creating a new OP Stack blockchain, you specify the wallets in the deployment configuration JSON file.","These addresses are *cold*, meaning the private key is not on any device connected to the network, and cannot be used without human intervention.
On OP Mainnet these are usually multisig contracts, controlled by groups of community members.
On [OP Stack](https://stack.optimism.io) these wallets are set by default to the `ADMIN` account.
When you create a new OP Stack blockchain you specify them in [the deployment configuration JSON file](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/deploy-config/getting-started.json)."
663,Who controls the minting of new OP tokens on the OP Mainnet?,"On the OP Mainnet, the account that controls the MintManager contract is responsible for minting new OP tokens.","On OP Mainnet this account controls the [`MintManager`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/governance/MintManager.sol) that can mint new OP tokens.
On OP Stack it is usually meaningless.  
| Address of | Goerli | Mainnet |
| - | - | - |
| Contract | [`0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76`](https://goerli.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76) | [`0x5c4e7ba1e219e47948e6e3f55019a647ba501005`](https://optimistic.etherscan.io/address/0x5c4e7ba1e219e47948e6e3f55019a647ba501005)
| Owner | [`0x18394B52d3Cb931dfA76F63251919D051953413d`](https://goerli.etherscan.io/address/0x18394B52d3Cb931dfA76F63251919D051953413d) | [`0x2a82ae142b2e62cb7d10b55e323acb1cab663a26`](https://optimistic.etherscan.io/address/0x2a82ae142b2e62cb7d10b55e323acb1cab663a26)  
If access to this account is lost, there is no more ability to mint new OP tokens.
If access to this account is compromised, attackers can mint an endless supply of OP tokens."
663,What happens if the account controlling the MintManager on OP Mainnet is compromised?,"If the account controlling the MintManager on OP Mainnet is compromised, attackers can mint an endless supply of OP tokens.","On OP Mainnet this account controls the [`MintManager`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/governance/MintManager.sol) that can mint new OP tokens.
On OP Stack it is usually meaningless.  
| Address of | Goerli | Mainnet |
| - | - | - |
| Contract | [`0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76`](https://goerli.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76) | [`0x5c4e7ba1e219e47948e6e3f55019a647ba501005`](https://optimistic.etherscan.io/address/0x5c4e7ba1e219e47948e6e3f55019a647ba501005)
| Owner | [`0x18394B52d3Cb931dfA76F63251919D051953413d`](https://goerli.etherscan.io/address/0x18394B52d3Cb931dfA76F63251919D051953413d) | [`0x2a82ae142b2e62cb7d10b55e323acb1cab663a26`](https://optimistic.etherscan.io/address/0x2a82ae142b2e62cb7d10b55e323acb1cab663a26)  
If access to this account is lost, there is no more ability to mint new OP tokens.
If access to this account is compromised, attackers can mint an endless supply of OP tokens."
663,What are the addresses of the MintManager contract on Goerli and Mainnet?,"The address of the MintManager contract on Goerli is 0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76, and on Mainnet, it is 0x5c4e7ba1e219e47948e6e3f55019a647ba501005.","On OP Mainnet this account controls the [`MintManager`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/governance/MintManager.sol) that can mint new OP tokens.
On OP Stack it is usually meaningless.  
| Address of | Goerli | Mainnet |
| - | - | - |
| Contract | [`0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76`](https://goerli.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76) | [`0x5c4e7ba1e219e47948e6e3f55019a647ba501005`](https://optimistic.etherscan.io/address/0x5c4e7ba1e219e47948e6e3f55019a647ba501005)
| Owner | [`0x18394B52d3Cb931dfA76F63251919D051953413d`](https://goerli.etherscan.io/address/0x18394B52d3Cb931dfA76F63251919D051953413d) | [`0x2a82ae142b2e62cb7d10b55e323acb1cab663a26`](https://optimistic.etherscan.io/address/0x2a82ae142b2e62cb7d10b55e323acb1cab663a26)  
If access to this account is lost, there is no more ability to mint new OP tokens.
If access to this account is compromised, attackers can mint an endless supply of OP tokens."
664,Who is authorized to change the settings in the SystemConfig contract?,"The address authorized to change the settings in the SystemConfig contract is specified for both the Mainnet and Goerli networks. For Mainnet, the address is 0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A, and for Goerli, it is 0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60.","This is the address authorized to change the settings in the [`SystemConfig`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/SystemConfig.sol) contract.  
- **Mainnet address**: [`0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A`](https://etherscan.io/address/0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A)
- **Goerli address**: [`0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60`](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60#readProxyContract)  
If access to this account is lost, it would make it more difficult to modify the system configuration (not impossible, because we can upgrade the contract at the proxy).
If access to this account is compromised, an attack can raise the gas markup and drain users' funds."
664,What happens if access to the authorized account is lost?,"If access to the authorized account is lost, it would make it more difficult to modify the system configuration. However, it is not impossible to make changes because the contract can still be upgraded at the proxy.","This is the address authorized to change the settings in the [`SystemConfig`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/SystemConfig.sol) contract.  
- **Mainnet address**: [`0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A`](https://etherscan.io/address/0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A)
- **Goerli address**: [`0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60`](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60#readProxyContract)  
If access to this account is lost, it would make it more difficult to modify the system configuration (not impossible, because we can upgrade the contract at the proxy).
If access to this account is compromised, an attack can raise the gas markup and drain users' funds."
664,What are the risks if the authorized account is compromised?,"If the authorized account is compromised, an attacker could raise the gas markup and drain users' funds, posing a significant security risk.","This is the address authorized to change the settings in the [`SystemConfig`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/SystemConfig.sol) contract.  
- **Mainnet address**: [`0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A`](https://etherscan.io/address/0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A)
- **Goerli address**: [`0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60`](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60#readProxyContract)  
If access to this account is lost, it would make it more difficult to modify the system configuration (not impossible, because we can upgrade the contract at the proxy).
If access to this account is compromised, an attack can raise the gas markup and drain users' funds."
665,Who controls the SystemDictator for upgrades in Optimism?,"The SystemDictator, which is used for upgrades, is controlled by a specific address. On the Mainnet, the address is 0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB, and on the Goerli testnet, the address is 0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971.","This is the address authorized to control [`SystemDictator`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/deployment/SystemDictator.sol), used for upgrades.
It can be used to perform an upgrade, and to revert out of one until a certain stage is reached.  
- **Mainnet address**: [`0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB`](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)
- **Goerli address**: [`0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971`](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971#readProxyContract)  
If access to the owner is lost, or compromised, it can prevent upgrades."
665,What happens if the owner of the SystemDictator address is compromised?,"If access to the owner of the SystemDictator address is lost or compromised, it can prevent upgrades from being performed.","This is the address authorized to control [`SystemDictator`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/deployment/SystemDictator.sol), used for upgrades.
It can be used to perform an upgrade, and to revert out of one until a certain stage is reached.  
- **Mainnet address**: [`0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB`](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)
- **Goerli address**: [`0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971`](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971#readProxyContract)  
If access to the owner is lost, or compromised, it can prevent upgrades."
665,Can the SystemDictator revert an upgrade?,"Yes, the SystemDictator can be used to revert out of an upgrade until a certain stage is reached.","This is the address authorized to control [`SystemDictator`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/deployment/SystemDictator.sol), used for upgrades.
It can be used to perform an upgrade, and to revert out of one until a certain stage is reached.  
- **Mainnet address**: [`0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB`](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)
- **Goerli address**: [`0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971`](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971#readProxyContract)  
If access to the owner is lost, or compromised, it can prevent upgrades."
666,Who is currently authorized to call the `deleteL2Outputs()` function in Optimism?,"Currently, a multisig with trusted community members is authorized to call the `deleteL2Outputs()` function to remove a faulty state commitment.","This is the address authorized to call [`deleteL2Outputs()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/L2OutputOracle.sol#L133-L167) to remove a faulty state commitment.  
Currently this is a multisig with trusted community members.
Eventually, once fault proofs are completed, it will be a contract that verifies challenges are correct.  
- **Mainnet address**: [`0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A`](https://etherscan.io/address/0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A)
- **Goerli address:** [`0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f`](https://goerli.etherscan.io/address/0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f#readProxyContract)  
If this account is compromised, an attacker could delay finalization by challenging valid states.
If this account is lost, it needs to be upgraded into a new value.
To do anything beyond slow down service, an attack would need to make sure challenger is not operational *and* control the Proposer."
666,What will eventually replace the multisig for calling the `deleteL2Outputs()` function?,"Eventually, once fault proofs are completed, a contract that verifies challenges are correct will replace the multisig for calling the `deleteL2Outputs()` function.","This is the address authorized to call [`deleteL2Outputs()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/L2OutputOracle.sol#L133-L167) to remove a faulty state commitment.  
Currently this is a multisig with trusted community members.
Eventually, once fault proofs are completed, it will be a contract that verifies challenges are correct.  
- **Mainnet address**: [`0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A`](https://etherscan.io/address/0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A)
- **Goerli address:** [`0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f`](https://goerli.etherscan.io/address/0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f#readProxyContract)  
If this account is compromised, an attacker could delay finalization by challenging valid states.
If this account is lost, it needs to be upgraded into a new value.
To do anything beyond slow down service, an attack would need to make sure challenger is not operational *and* control the Proposer."
666,What could happen if the account authorized to call `deleteL2Outputs()` is compromised?,"If the account is compromised, an attacker could delay finalization by challenging valid states. However, to do anything beyond slowing down the service, the attacker would need to ensure the challenger is not operational and also control the Proposer.","This is the address authorized to call [`deleteL2Outputs()`](https://github.com/ethereum-optimism/optimism/blob/62c7f3b05a70027b30054d4c8974f44000606fb7/packages/contracts-bedrock/contracts/L1/L2OutputOracle.sol#L133-L167) to remove a faulty state commitment.  
Currently this is a multisig with trusted community members.
Eventually, once fault proofs are completed, it will be a contract that verifies challenges are correct.  
- **Mainnet address**: [`0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A`](https://etherscan.io/address/0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A)
- **Goerli address:** [`0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f`](https://goerli.etherscan.io/address/0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f#readProxyContract)  
If this account is compromised, an attacker could delay finalization by challenging valid states.
If this account is lost, it needs to be upgraded into a new value.
To do anything beyond slow down service, an attack would need to make sure challenger is not operational *and* control the Proposer."
667,Who has the ability to upgrade most of the L1 contracts in Optimism?,The owner of most of the L1 contracts has the ability to upgrade them if necessary.,"This is the owner of most of the L1 contracts, which can upgrade them if necessary.  
- **Mainnet address**: [`0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A`](https://etherscan.io/address/0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A)
- **Goerli address:** [`0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f`](https://goerli.etherscan.io/address/0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f#readProxyContract)  
If this account is compromised, there could be a catastrophic loss of funds, because it controls the bridge.
If access to this account is lost, we will not be able to upgrade in an emergency."
667,What could happen if the account controlling the L1 contracts is compromised?,"If the account is compromised, there could be a catastrophic loss of funds because it controls the bridge.","This is the owner of most of the L1 contracts, which can upgrade them if necessary.  
- **Mainnet address**: [`0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A`](https://etherscan.io/address/0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A)
- **Goerli address:** [`0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f`](https://goerli.etherscan.io/address/0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f#readProxyContract)  
If this account is compromised, there could be a catastrophic loss of funds, because it controls the bridge.
If access to this account is lost, we will not be able to upgrade in an emergency."
667,What are the addresses for the owner of the L1 contracts on Mainnet and Goerli?,"The Mainnet address is 0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A, and the Goerli address is 0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f.","This is the owner of most of the L1 contracts, which can upgrade them if necessary.  
- **Mainnet address**: [`0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A`](https://etherscan.io/address/0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A)
- **Goerli address:** [`0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f`](https://goerli.etherscan.io/address/0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f#readProxyContract)  
If this account is compromised, there could be a catastrophic loss of funds, because it controls the bridge.
If access to this account is lost, we will not be able to upgrade in an emergency."
668,Who controls most of the L2 contracts in Optimism?,The owner of most of the L2 contracts in Optimism is an account with the address 0x7871d1187a97cbbe40710ac119aa3d412944e4fe on the main Optimism network and 0xe534cca2753acfbcdbceb2291f596fc60495257e on the Optimistic Goerli network.,"This is the owner of most of the L2 contracts, which can upgrade them if necessary.  
- **Optimism address**: [`0x7871d1187a97cbbe40710ac119aa3d412944e4fe`](https://optimistic.etherscan.io/address/0x7871d1187a97cbbe40710ac119aa3d412944e4fe)
- **Optimistic Goerli address:** [`0xe534cca2753acfbcdbceb2291f596fc60495257e`](https://goerli-optimism.etherscan.io/address/0xe534cca2753acfbcdbceb2291f596fc60495257e)  
If this account is compromised, there could be a catastrophic loss of funds, because it controls the bridge.
If access to this account is lost, we will not be able to upgrade in an emergency."
668,What happens if the account controlling the L2 contracts is compromised?,"If the account controlling the L2 contracts is compromised, there could be a catastrophic loss of funds because it controls the bridge. Additionally, if access to this account is lost, it will not be possible to upgrade the contracts in an emergency.","This is the owner of most of the L2 contracts, which can upgrade them if necessary.  
- **Optimism address**: [`0x7871d1187a97cbbe40710ac119aa3d412944e4fe`](https://optimistic.etherscan.io/address/0x7871d1187a97cbbe40710ac119aa3d412944e4fe)
- **Optimistic Goerli address:** [`0xe534cca2753acfbcdbceb2291f596fc60495257e`](https://goerli-optimism.etherscan.io/address/0xe534cca2753acfbcdbceb2291f596fc60495257e)  
If this account is compromised, there could be a catastrophic loss of funds, because it controls the bridge.
If access to this account is lost, we will not be able to upgrade in an emergency."
668,Why is it important to secure the account that controls the L2 contracts?,"It is important to secure the account that controls the L2 contracts because it has the ability to upgrade the contracts if necessary. If this account is compromised, it could lead to a catastrophic loss of funds and the inability to perform emergency upgrades.","This is the owner of most of the L2 contracts, which can upgrade them if necessary.  
- **Optimism address**: [`0x7871d1187a97cbbe40710ac119aa3d412944e4fe`](https://optimistic.etherscan.io/address/0x7871d1187a97cbbe40710ac119aa3d412944e4fe)
- **Optimistic Goerli address:** [`0xe534cca2753acfbcdbceb2291f596fc60495257e`](https://goerli-optimism.etherscan.io/address/0xe534cca2753acfbcdbceb2291f596fc60495257e)  
If this account is compromised, there could be a catastrophic loss of funds, because it controls the bridge.
If access to this account is lost, we will not be able to upgrade in an emergency."
669,Can the OptimismPortal be paused in case of security issues?,"Yes, the OptimismPortal is pausable as a backup safety mechanism. A specific GUARDIAN address has the authority to temporarily halt deposits and withdrawals to mitigate security issues if necessary.","The `OptimismPortal` is pausable as a backup safety mechanism that allows a specific `GUARDIAN` address to temporarily halt deposits and withdrawals to mitigate security issues if necessary.  
- **Mainnet address**: [`0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A`](https://etherscan.io/address/0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A)
- **Goerli address:** [`0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f`](https://goerli.etherscan.io/address/0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f#readProxyContract)"
669,What is the mainnet address for the OptimismPortal?,The mainnet address for the OptimismPortal is 0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A.,"The `OptimismPortal` is pausable as a backup safety mechanism that allows a specific `GUARDIAN` address to temporarily halt deposits and withdrawals to mitigate security issues if necessary.  
- **Mainnet address**: [`0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A`](https://etherscan.io/address/0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A)
- **Goerli address:** [`0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f`](https://goerli.etherscan.io/address/0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f#readProxyContract)"
669,What is the Goerli testnet address for the OptimismPortal?,The Goerli testnet address for the OptimismPortal is 0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f.,"The `OptimismPortal` is pausable as a backup safety mechanism that allows a specific `GUARDIAN` address to temporarily halt deposits and withdrawals to mitigate security issues if necessary.  
- **Mainnet address**: [`0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A`](https://etherscan.io/address/0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A)
- **Goerli address:** [`0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f`](https://goerli.etherscan.io/address/0xBc1233d0C3e6B5d53Ab455cF65A6623F6dCd7e4f#readProxyContract)"
670,Where can I find tools for developing on the OP Mainnet?,You can find the developer tools for the OP Mainnet in the 'Developer tools' section of the Optimism Governance Documentation.,"---
title: Developer tools
lang: en-US
---  
Welcome to the OP Mainnet developer tools!  
If you are already familiar with [building on OP Mainnet](../developers/README.md) and just need the tools to get cracking, you are in the right place!"
670,What should I do if I am already familiar with building on OP Mainnet and just need the tools?,"If you are already familiar with building on OP Mainnet and just need the tools, you can go directly to the 'Developer tools' section to get started.","---
title: Developer tools
lang: en-US
---  
Welcome to the OP Mainnet developer tools!  
If you are already familiar with [building on OP Mainnet](../developers/README.md) and just need the tools to get cracking, you are in the right place!"
671,How can I find information on the networks available for connecting to an Optimism node?,You can find information on the networks available for connecting to an Optimism node by referring to the list of networks provided in the documentation.,You have the list of [networks](./networks.md) and [node providers](./providers.md) to help you connect to an Optimism node.
671,Where can I find a list of node providers for Optimism?,You can find a list of node providers for Optimism in the documentation under the section for node providers.,You have the list of [networks](./networks.md) and [node providers](./providers.md) to help you connect to an Optimism node.
672,How can I get ETH for deployment gas fees on Optimism?,You can get ETH for deployment gas fees by using one of the available faucets or by bridging ETH using the OP Mainnet Gateway.,"To get some ETH bridged over for deployment gas fees, use one of the available [faucets](./faucets.md) or just bridge ETH using the [OP Mainnet Gateway](https://gateway.optimism.io/)."
673,How can I monitor my app once it's live in production?,You can monitor your app using one of the monitoring tools provided in the Optimism Governance Documentation.,Your app is live in production? Watch it grow using one of the [monitoring tools](./monitoring.md). We also have a set of [troubleshooting tools](./debugging.md) and [block explorers](./explorers.md) to help you provide a stellar service to your users.
673,What resources are available to help troubleshoot issues with my app?,The Optimism Governance Documentation offers a set of troubleshooting tools to help you resolve any issues with your app.,Your app is live in production? Watch it grow using one of the [monitoring tools](./monitoring.md). We also have a set of [troubleshooting tools](./debugging.md) and [block explorers](./explorers.md) to help you provide a stellar service to your users.
673,Are there any tools to explore blocks and transactions on Optimism?,"Yes, the documentation provides access to block explorers that can help you explore blocks and transactions on Optimism.",Your app is live in production? Watch it grow using one of the [monitoring tools](./monitoring.md). We also have a set of [troubleshooting tools](./debugging.md) and [block explorers](./explorers.md) to help you provide a stellar service to your users.
674,How does account abstraction benefit users?,Account abstraction allows users to use smart contracts as their accounts instead of the traditional Externally Owned Accounts (EOAs). This can create superior user experiences by enabling more advanced functionalities and customizations.,"---
title: Supercharge your dapp with account abstraction
lang: en-US
---  
Acount Abstraction enables users to utilize smart contracts as their accounts. While the default account for most users today is an Externally Owned Account (EOA), smart account adoption has been growing due to their ability to create superior user experiences.  
Did you know deploying a contract wallet on the OP Stack costs [34x less](https://dune.com/optimismfnd/How-Much-Could-You-Save-on-Optimism-Fee-Savings-Calculator?Transaction+Hash=0x6c097cd57b2f38236ecf06142185345be9263a8305d9b7afe559ee0d6830b640&Transaction+Block+Number=17190737&Transaction+Block+Number_nb9363=17678963&Transaction+Hash_t09de3=0xa37f0b5cdbcb0c26268bab2f3b37687851a1161a6d363c13d13872e2deb89b49) than Ethereum Mainnet?  
Use this docs page to learn how you can use use smart contract wallet primitives to build, onboard, and scale your dapp."
674,Is it cheaper to deploy a contract wallet on Optimism compared to Ethereum Mainnet?,"Yes, deploying a contract wallet on the OP Stack costs 34 times less than on the Ethereum Mainnet.","---
title: Supercharge your dapp with account abstraction
lang: en-US
---  
Acount Abstraction enables users to utilize smart contracts as their accounts. While the default account for most users today is an Externally Owned Account (EOA), smart account adoption has been growing due to their ability to create superior user experiences.  
Did you know deploying a contract wallet on the OP Stack costs [34x less](https://dune.com/optimismfnd/How-Much-Could-You-Save-on-Optimism-Fee-Savings-Calculator?Transaction+Hash=0x6c097cd57b2f38236ecf06142185345be9263a8305d9b7afe559ee0d6830b640&Transaction+Block+Number=17190737&Transaction+Block+Number_nb9363=17678963&Transaction+Hash_t09de3=0xa37f0b5cdbcb0c26268bab2f3b37687851a1161a6d363c13d13872e2deb89b49) than Ethereum Mainnet?  
Use this docs page to learn how you can use use smart contract wallet primitives to build, onboard, and scale your dapp."
674,What can I learn from the documentation page about account abstraction?,"The documentation page provides information on how to use smart contract wallet primitives to build, onboard, and scale your decentralized application (dapp).","---
title: Supercharge your dapp with account abstraction
lang: en-US
---  
Acount Abstraction enables users to utilize smart contracts as their accounts. While the default account for most users today is an Externally Owned Account (EOA), smart account adoption has been growing due to their ability to create superior user experiences.  
Did you know deploying a contract wallet on the OP Stack costs [34x less](https://dune.com/optimismfnd/How-Much-Could-You-Save-on-Optimism-Fee-Savings-Calculator?Transaction+Hash=0x6c097cd57b2f38236ecf06142185345be9263a8305d9b7afe559ee0d6830b640&Transaction+Block+Number=17190737&Transaction+Block+Number_nb9363=17678963&Transaction+Hash_t09de3=0xa37f0b5cdbcb0c26268bab2f3b37687851a1161a6d363c13d13872e2deb89b49) than Ethereum Mainnet?  
Use this docs page to learn how you can use use smart contract wallet primitives to build, onboard, and scale your dapp."
675,How can account abstraction improve the user experience for dapps and wallets?,"Account abstraction allows for several improvements in user experience, such as batching transactions together (e.g., approving and executing a swap in one go), offering wallets with easy recovery and no seed phrase, sponsoring gas fees for transactions, and enabling users to pay gas fees in the token(s) of their choice.","Account abstraction (and contract accounts) enables more opportunities for dapps and wallet developers to innovate on user experiences including the ability to:  
- Batch transactions together (e.g. approve and execute a swap in one go)
- Offer wallets with easy recovery and no seed phrase
- Sponsor the gas fees for transactions
- Enable users to pay gas in the token(s) of their choice"
675,What does it mean to batch transactions together?,"Batching transactions together means combining multiple actions into a single transaction. For example, you could approve and execute a swap in one go, rather than having to perform these actions separately.","Account abstraction (and contract accounts) enables more opportunities for dapps and wallet developers to innovate on user experiences including the ability to:  
- Batch transactions together (e.g. approve and execute a swap in one go)
- Offer wallets with easy recovery and no seed phrase
- Sponsor the gas fees for transactions
- Enable users to pay gas in the token(s) of their choice"
675,Can users choose which token to use for paying gas fees with account abstraction?,"Yes, account abstraction enables users to pay gas fees in the token(s) of their choice, rather than being limited to a specific token like ETH.","Account abstraction (and contract accounts) enables more opportunities for dapps and wallet developers to innovate on user experiences including the ability to:  
- Batch transactions together (e.g. approve and execute a swap in one go)
- Offer wallets with easy recovery and no seed phrase
- Sponsor the gas fees for transactions
- Enable users to pay gas in the token(s) of their choice"
676,Where can I find information on account abstraction infrastructure for my dapp on OP Mainnet?,"You can find information on account abstraction infrastructure like ERC-4337 bundler and gas manager APIs on the following platforms: Station, Alchemy, Biconomy, CyberConnect, Pimlico, and Stackup.","Ready to enable account abstraction experiences in your dapp? Here's some helpful information on account abstraction infrastructure like ERC-4337 bundler and gas manager APIs that are available on OP Mainnet:  
- [Station](https://docs.groupos.xyz/)
- [Alchemy](https://www.alchemy.com/account-abstraction)
- [Biconomy](https://docs.biconomy.io/docs/category/biconomy-aa-stack)
- [CyberConnect](https://docs.cyberconnect.me/)
- [Pimlico](https://docs.pimlico.io/)
- [Stackup](https://docs.stackup.sh/docs)"
676,What is ERC-4337 in the context of account abstraction?,ERC-4337 is a standard related to account abstraction that helps in managing transactions and gas fees in a more efficient way for decentralized applications (dapps).,"Ready to enable account abstraction experiences in your dapp? Here's some helpful information on account abstraction infrastructure like ERC-4337 bundler and gas manager APIs that are available on OP Mainnet:  
- [Station](https://docs.groupos.xyz/)
- [Alchemy](https://www.alchemy.com/account-abstraction)
- [Biconomy](https://docs.biconomy.io/docs/category/biconomy-aa-stack)
- [CyberConnect](https://docs.cyberconnect.me/)
- [Pimlico](https://docs.pimlico.io/)
- [Stackup](https://docs.stackup.sh/docs)"
676,Which platforms provide documentation for account abstraction on OP Mainnet?,"The platforms that provide documentation for account abstraction on OP Mainnet include Station, Alchemy, Biconomy, CyberConnect, Pimlico, and Stackup.","Ready to enable account abstraction experiences in your dapp? Here's some helpful information on account abstraction infrastructure like ERC-4337 bundler and gas manager APIs that are available on OP Mainnet:  
- [Station](https://docs.groupos.xyz/)
- [Alchemy](https://www.alchemy.com/account-abstraction)
- [Biconomy](https://docs.biconomy.io/docs/category/biconomy-aa-stack)
- [CyberConnect](https://docs.cyberconnect.me/)
- [Pimlico](https://docs.pimlico.io/)
- [Stackup](https://docs.stackup.sh/docs)"
677,How does Optimism handle signature validation for smart contracts?,"Optimism uses the EIP-1271 standard for signature validation. This standard allows smart contracts to verify signatures, ensuring that transactions are authorized by the correct parties.","- [EIP-1271 Signature Validation](https://eip1271.io/)
- [Making smart accounts work with WalletConnect v2 ](https://safe-global.notion.site/WalletConnect-v2-update-Issues-and-solutions-for-smart-wallets-3fc32fad6af4485fa5823eaebd486819)"
677,Are there any resources for making smart accounts work with WalletConnect v2 on Optimism?,"Yes, there is a resource available that addresses issues and solutions for making smart accounts work with WalletConnect v2. You can find more information on this topic in the documentation provided by Safe Global.","- [EIP-1271 Signature Validation](https://eip1271.io/)
- [Making smart accounts work with WalletConnect v2 ](https://safe-global.notion.site/WalletConnect-v2-update-Issues-and-solutions-for-smart-wallets-3fc32fad6af4485fa5823eaebd486819)"
678,Can I use the same debugging tools on OP Mainnet that I use on Ethereum?,"Yes, since OP Mainnet is EVM Equivalent, most debugging tools that work on Ethereum will also work out of the box with OP Mainnet.","---
title: Transaction Debugging Tools
lang: en-US
---  
::: tip EVM Equivalence
As OP Mainnet is [EVM Equivalent](https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306), most debugging tools work out of the box with OP Mainnet.
:::"
679,How can I inspect the execution of a transaction on OP Mainnet or OP Goerli?,You can use Tenderly to inspect the execution of any transaction on OP Mainnet or OP Goerli. Tenderly provides a detailed dashboard that allows you to inspect the state of your verified contract at any step of the transaction's execution.,"[Tenderly](https://tenderly.co/) lets you [inspect any transaction execution on OP Mainnet or OP Goerli](https://docs.tenderly.co/debugger/how-to-use-tenderly-debugger).
You can inspect the state of your verified contract in any step of the transaction's execution, as well as step into or over function calls.
The level of detail the Tenderly dashboard presents will reduce your development time as well as help you understand the execution flow of transactions.
It helps you to inspect states at every instance of transaction and gives a platform to trace transactions."
679,What benefits does using Tenderly provide for developers?,"Using Tenderly can significantly reduce your development time by helping you understand the execution flow of transactions. It allows you to inspect states at every instance of a transaction and provides a platform to trace transactions, making debugging and development more efficient.","[Tenderly](https://tenderly.co/) lets you [inspect any transaction execution on OP Mainnet or OP Goerli](https://docs.tenderly.co/debugger/how-to-use-tenderly-debugger).
You can inspect the state of your verified contract in any step of the transaction's execution, as well as step into or over function calls.
The level of detail the Tenderly dashboard presents will reduce your development time as well as help you understand the execution flow of transactions.
It helps you to inspect states at every instance of transaction and gives a platform to trace transactions."
679,Can I see the state of my contract during different steps of a transaction using Tenderly?,"Yes, Tenderly allows you to inspect the state of your verified contract at any step of the transaction's execution. You can also step into or over function calls to get a detailed view of the transaction's execution flow.","[Tenderly](https://tenderly.co/) lets you [inspect any transaction execution on OP Mainnet or OP Goerli](https://docs.tenderly.co/debugger/how-to-use-tenderly-debugger).
You can inspect the state of your verified contract in any step of the transaction's execution, as well as step into or over function calls.
The level of detail the Tenderly dashboard presents will reduce your development time as well as help you understand the execution flow of transactions.
It helps you to inspect states at every instance of transaction and gives a platform to trace transactions."
680,How can I view transaction events and revert messages on Optimism?,You can use Etherscan to see events and revert messages for transactions that have been mined on OP Mainnet and OP Goerli.,"[Etherscan](https://explorer.optimism.io) allows you to see events as well as revert messages for transactions that have been mined on OP Mainnet as well as [OP Goerli](https://goerli-explorer.optimism.io).
You can see more information about all the L2 features Etherscan offers on our [Explorers page](./explorers.md#etherscan)."
680,Where can I find more information about the features Etherscan offers for Optimism?,You can find more information about all the L2 features Etherscan offers on the Explorers page of the Optimism Governance Documentation.,"[Etherscan](https://explorer.optimism.io) allows you to see events as well as revert messages for transactions that have been mined on OP Mainnet as well as [OP Goerli](https://goerli-explorer.optimism.io).
You can see more information about all the L2 features Etherscan offers on our [Explorers page](./explorers.md#etherscan)."
681,Where can I see events on the OP Mainnet?,You can see events on the OP Mainnet using Blockscout at the following link: [OP Mainnet](https://optimism.blockscout.com).,Blockscout allows you to see events on both [OP Mainnet](https://optimism.blockscout.com) and [OP Goerli](https://optimism-goerli.blockscout.com).
681,Is there a way to view events on the OP Goerli network?,"Yes, you can view events on the OP Goerli network using Blockscout at this link: [OP Goerli](https://optimism-goerli.blockscout.com).",Blockscout allows you to see events on both [OP Mainnet](https://optimism.blockscout.com) and [OP Goerli](https://optimism-goerli.blockscout.com).
682,How can I get in touch with the Optimism team for support or to contribute?,You can reach out to the Optimism team through their Discord channel at https://discord-gateway.optimism.io or by making a pull request (PR) on their GitHub repository at https://github.com/ethereum-optimism/community-hub/pulls.,"Reach out to us in our [Discord](https://discord-gateway.optimism.io) or [make a PR](https://github.com/ethereum-optimism/community-hub/pulls).
We'd love your help in expanding the tools available to build Optimistically."
682,How can I contribute to the Optimism project?,You can contribute to the Optimism project by making a pull request (PR) on their GitHub repository at https://github.com/ethereum-optimism/community-hub/pulls. The team is looking for help in expanding the tools available to build Optimistically.,"Reach out to us in our [Discord](https://discord-gateway.optimism.io) or [make a PR](https://github.com/ethereum-optimism/community-hub/pulls).
We'd love your help in expanding the tools available to build Optimistically."
683,What's a block explorer?,"A block explorer is a tool that allows users to view and search the blockchain for specific transactions, blocks, and other related data. It provides a user-friendly interface to access detailed information about the blockchain's activity.","---
title: Block Explorers
lang: en-US
---"
683,Why would I use a block explorer?,"You would use a block explorer to track the status of transactions, verify the details of a specific block, or explore the overall activity on the blockchain. It's a valuable tool for transparency and monitoring purposes.","---
title: Block Explorers
lang: en-US
---"
684,Where can I find detailed transaction information for Optimism testnets?,"You can find detailed testnet transaction information on the Blockscout explorer for OP Mainnet, OP Goerli, and OP Sepolia. For example, you can visit [this link](https://optimism.blockscout.com/tx/0xa1b04233084d4067ec0bb3e09301012900f0e209f14a3d406f3d6dc696eea138) for a specific transaction.","We have a Blockscout explorer for [OP Mainnet](https://optimism.blockscout.com), [OP Goerli](https://optimism-goerli.blockscout.com), and [OP Sepolia](https://optimism-sepolia.blockscout.com/). It includes:  
- [Verified testnet contract source code, along with the ability to interact with it](https://optimism.blockscout.com/verified-contracts)
- [Detailed testnet transaction information](https://optimism.blockscout.com/tx/0xa1b04233084d4067ec0bb3e09301012900f0e209f14a3d406f3d6dc696eea138)  
Blockscout also has some OP-Mainnet-specific features:
- [An interactive list of deposits (L1-L2)](https://optimism.blockscout.com/l2-deposits)
- [An interactive list of withdrawals (L2-L1)](https://optimism.blockscout.com/l2-withdrawals)
- [Transaction batches](https://optimism.blockscout.com/l2-txn-batches)
- [Output roots](https://optimism.blockscout.com/l2-output-roots)
- [Dapp marketplace](https://optimism.blockscout.com/apps)
- And much more!"
684,Is there a way to interact with verified testnet contract source code on Optimism?,"Yes, you can interact with verified testnet contract source code on the Blockscout explorer. You can access it through [this link](https://optimism.blockscout.com/verified-contracts).","We have a Blockscout explorer for [OP Mainnet](https://optimism.blockscout.com), [OP Goerli](https://optimism-goerli.blockscout.com), and [OP Sepolia](https://optimism-sepolia.blockscout.com/). It includes:  
- [Verified testnet contract source code, along with the ability to interact with it](https://optimism.blockscout.com/verified-contracts)
- [Detailed testnet transaction information](https://optimism.blockscout.com/tx/0xa1b04233084d4067ec0bb3e09301012900f0e209f14a3d406f3d6dc696eea138)  
Blockscout also has some OP-Mainnet-specific features:
- [An interactive list of deposits (L1-L2)](https://optimism.blockscout.com/l2-deposits)
- [An interactive list of withdrawals (L2-L1)](https://optimism.blockscout.com/l2-withdrawals)
- [Transaction batches](https://optimism.blockscout.com/l2-txn-batches)
- [Output roots](https://optimism.blockscout.com/l2-output-roots)
- [Dapp marketplace](https://optimism.blockscout.com/apps)
- And much more!"
684,Does Blockscout offer any specific features for OP Mainnet?,"Yes, Blockscout offers several OP-Mainnet-specific features, including an interactive list of deposits (L1-L2), an interactive list of withdrawals (L2-L1), transaction batches, output roots, and a dapp marketplace. You can explore these features on the Blockscout explorer for OP Mainnet.","We have a Blockscout explorer for [OP Mainnet](https://optimism.blockscout.com), [OP Goerli](https://optimism-goerli.blockscout.com), and [OP Sepolia](https://optimism-sepolia.blockscout.com/). It includes:  
- [Verified testnet contract source code, along with the ability to interact with it](https://optimism.blockscout.com/verified-contracts)
- [Detailed testnet transaction information](https://optimism.blockscout.com/tx/0xa1b04233084d4067ec0bb3e09301012900f0e209f14a3d406f3d6dc696eea138)  
Blockscout also has some OP-Mainnet-specific features:
- [An interactive list of deposits (L1-L2)](https://optimism.blockscout.com/l2-deposits)
- [An interactive list of withdrawals (L2-L1)](https://optimism.blockscout.com/l2-withdrawals)
- [Transaction batches](https://optimism.blockscout.com/l2-txn-batches)
- [Output roots](https://optimism.blockscout.com/l2-output-roots)
- [Dapp marketplace](https://optimism.blockscout.com/apps)
- And much more!"
685,Where can I explore transactions on the OP Mainnet?,You can explore transactions on the OP Mainnet using the Etherscan explorer available at [this link](https://explorer.optimism.io).,"We have Etherscan explorers for the [OP Mainnet](https://explorer.optimism.io) and the [OP Goerli](https://goerli-explorer.optimism.io).
Etherscan has lots of tools to help you debug transactions.  
Optimistic Etherscan has all the tools you expect from Etherscan, such as:
- [Verified contract source code, along with the ability to interact with it](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#code)
- [Detailed transaction information](https://explorer.optimism.io/tx/0x292423266d6da24126dc4e0e81890c22a67295cc8b1a987e71ad84748511452f)
- And everything else you might find on Etherscan!  
It's also got some OP-Mainnet-specific features:
- [A list of L1-to-L2 transactions](https://explorer.optimism.io/txsEnqueued)
- [A list of L2-to-L1 transactions](https://explorer.optimism.io/txsExit)
- [A tool for finalizing L2-to-L1 transactions](https://explorer.optimism.io/messagerelayer)
- And more! Just check it out and click around to find all of the available features."
685,What tools are available on Optimistic Etherscan for debugging transactions?,"Optimistic Etherscan offers tools such as verified contract source code with interaction capabilities, detailed transaction information, and other standard Etherscan features. Additionally, it has OP-Mainnet-specific features like lists of L1-to-L2 and L2-to-L1 transactions, and a tool for finalizing L2-to-L1 transactions.","We have Etherscan explorers for the [OP Mainnet](https://explorer.optimism.io) and the [OP Goerli](https://goerli-explorer.optimism.io).
Etherscan has lots of tools to help you debug transactions.  
Optimistic Etherscan has all the tools you expect from Etherscan, such as:
- [Verified contract source code, along with the ability to interact with it](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#code)
- [Detailed transaction information](https://explorer.optimism.io/tx/0x292423266d6da24126dc4e0e81890c22a67295cc8b1a987e71ad84748511452f)
- And everything else you might find on Etherscan!  
It's also got some OP-Mainnet-specific features:
- [A list of L1-to-L2 transactions](https://explorer.optimism.io/txsEnqueued)
- [A list of L2-to-L1 transactions](https://explorer.optimism.io/txsExit)
- [A tool for finalizing L2-to-L1 transactions](https://explorer.optimism.io/messagerelayer)
- And more! Just check it out and click around to find all of the available features."
685,Can I find specific transaction lists for L1-to-L2 and L2-to-L1 on Optimistic Etherscan?,"Yes, you can find specific lists for L1-to-L2 transactions [here](https://explorer.optimism.io/txsEnqueued) and for L2-to-L1 transactions [here](https://explorer.optimism.io/txsExit) on Optimistic Etherscan.","We have Etherscan explorers for the [OP Mainnet](https://explorer.optimism.io) and the [OP Goerli](https://goerli-explorer.optimism.io).
Etherscan has lots of tools to help you debug transactions.  
Optimistic Etherscan has all the tools you expect from Etherscan, such as:
- [Verified contract source code, along with the ability to interact with it](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#code)
- [Detailed transaction information](https://explorer.optimism.io/tx/0x292423266d6da24126dc4e0e81890c22a67295cc8b1a987e71ad84748511452f)
- And everything else you might find on Etherscan!  
It's also got some OP-Mainnet-specific features:
- [A list of L1-to-L2 transactions](https://explorer.optimism.io/txsEnqueued)
- [A list of L2-to-L1 transactions](https://explorer.optimism.io/txsExit)
- [A tool for finalizing L2-to-L1 transactions](https://explorer.optimism.io/messagerelayer)
- And more! Just check it out and click around to find all of the available features."
686,Where can I explore and filter transactions for Optimism?,You can explore and filter transactions in the Tenderly Dashboard.,"You can also search for, filter and explore transaction in the [Tenderly Dashboard](https://dashboard.tenderly.co/), where you also have easy and integrated access to stuff like:  
- Extremely detailed execution trace, with [complete control and insight into your debugging](https://blog.tenderly.co/tenderly-devnets-develop-and-test-with-mainnet-data/) and transaction simulation environment
- [100% accurate gas estimates](https://blog.tenderly.co/how-tenderly-enables-most-accurate-ethereum-gas-estimation/)
- [RPC customization](https://blog.tenderly.co/customizing-rpc-endpoints-with-node-extensions/)"
686,What features does the Tenderly Dashboard offer for transaction analysis?,"The Tenderly Dashboard offers features like extremely detailed execution trace with complete control and insight into debugging, 100% accurate gas estimates, and RPC customization.","You can also search for, filter and explore transaction in the [Tenderly Dashboard](https://dashboard.tenderly.co/), where you also have easy and integrated access to stuff like:  
- Extremely detailed execution trace, with [complete control and insight into your debugging](https://blog.tenderly.co/tenderly-devnets-develop-and-test-with-mainnet-data/) and transaction simulation environment
- [100% accurate gas estimates](https://blog.tenderly.co/how-tenderly-enables-most-accurate-ethereum-gas-estimation/)
- [RPC customization](https://blog.tenderly.co/customizing-rpc-endpoints-with-node-extensions/)"
686,How accurate are the gas estimates provided by the Tenderly Dashboard?,The gas estimates provided by the Tenderly Dashboard are 100% accurate.,"You can also search for, filter and explore transaction in the [Tenderly Dashboard](https://dashboard.tenderly.co/), where you also have easy and integrated access to stuff like:  
- Extremely detailed execution trace, with [complete control and insight into your debugging](https://blog.tenderly.co/tenderly-devnets-develop-and-test-with-mainnet-data/) and transaction simulation environment
- [100% accurate gas estimates](https://blog.tenderly.co/how-tenderly-enables-most-accurate-ethereum-gas-estimation/)
- [RPC customization](https://blog.tenderly.co/customizing-rpc-endpoints-with-node-extensions/)"
687,Why can't I find older transactions on the Optimism blockchain?,"Older transactions are not part of the current blockchain because of a final regenesis that occurred on 11 November 2021. As a result, they do not appear on platforms like Etherscan.","Because of our final regenesis on 11 November 2021, older transactions are not part of the current blockchain.
As such, they do not appear, for example, on [Etherscan](https://explorer.optimism.io/).
However, you **can** access transaction history between 23 June 2021 and the final regenesis using the Etherscan CSV exporting tool."
687,How can I access transaction history between 23 June 2021 and 11 November 2021 on Optimism?,You can access the transaction history between 23 June 2021 and the final regenesis on 11 November 2021 using the Etherscan CSV exporting tool.,"Because of our final regenesis on 11 November 2021, older transactions are not part of the current blockchain.
As such, they do not appear, for example, on [Etherscan](https://explorer.optimism.io/).
However, you **can** access transaction history between 23 June 2021 and the final regenesis using the Etherscan CSV exporting tool."
688,How can I export data for my address on Optimism?,"You can export data for your address on Optimism by visiting the provided link (https://explorer.optimism.io/exportDataMain), selecting your address, and choosing the type of report you want.","[Browse here](https://explorer.optimism.io/exportDataMain) and select your address and the type of report you want.  
![export data](../../assets/docs/useful-tools/explorers/export.png)"
689,Do I need a paid account to use Dune Analytics for querying Optimism transactions?,"No, you do not need a paid account. The free tier of Dune Analytics is sufficient for querying Optimism transactions.","[Click here](https://dune.com/optimismfnd/OVM1.0-User-Address-Transactions).  
<!--
If none of the Etherscan CSV files contains the information you need, you can use a query on [Dune Analytics](https://dune.xyz), similar to [this query](https://dune.xyz/queries/354886?addr=%5Cx25E1c58040f27ECF20BBd4ca83a09290326896B3).
You have to log on with a Dune account, but their free tier is sufficient.  
```sql
SELECT * FROM optimism.transactions
WHERE ""from""='{{addr}}' or ""to""='{{addr}}'
LIMIT 100
```  
Notes:
- Make sure to select the data source **Optimism (OVM 1.0)**
- This is how you specify parameters in Dune, `{{` followed by the parameter name and then `}}`.
- Addresses are specified as `\x<hex address>` rather than `0x<hex address>`.
- The limit is not required, but here to save resources
-->"
689,How should I format addresses when querying Optimism transactions on Dune Analytics?,"When querying Optimism transactions on Dune Analytics, you should format addresses as `\x<hex address>` rather than `0x<hex address>`.","[Click here](https://dune.com/optimismfnd/OVM1.0-User-Address-Transactions).  
<!--
If none of the Etherscan CSV files contains the information you need, you can use a query on [Dune Analytics](https://dune.xyz), similar to [this query](https://dune.xyz/queries/354886?addr=%5Cx25E1c58040f27ECF20BBd4ca83a09290326896B3).
You have to log on with a Dune account, but their free tier is sufficient.  
```sql
SELECT * FROM optimism.transactions
WHERE ""from""='{{addr}}' or ""to""='{{addr}}'
LIMIT 100
```  
Notes:
- Make sure to select the data source **Optimism (OVM 1.0)**
- This is how you specify parameters in Dune, `{{` followed by the parameter name and then `}}`.
- Addresses are specified as `\x<hex address>` rather than `0x<hex address>`.
- The limit is not required, but here to save resources
-->"
690,How can I get the full event history for ERC20 tokens using Optimism?,"To get the full event history for ERC20 tokens, you need to follow a series of steps. First, clone the go-ethereum repository and checkout version v1.9.10. Then, download three specific datadir folders for different time periods. Finally, build and run the standard geth v1.9.10 with the appropriate datadir and use ERC20 events filters to get the events for each address. You will need to repeat this process for each datadir to get the complete event history.","Follow these steps:  
1. Clone go-ethereum (the standard version) and checkout version v1.9.10:  
```sh
git clone https://github.com/ethereum/go-ethereum.git
cd go-ethereum
git checkout v1.9.10
```  
1. Download the following three datadir folders:
- [Generation #1 (Jan to April)](https://storage.googleapis.com/sequencer-datadirs/datadir-gen1.zip)
- [Generation #2 (April to May)](https://storage.googleapis.com/sequencer-datadirs/datadir-gen2.zip)
- [Generation #3 (May to June)](https://storage.googleapis.com/sequencer-datadirs/datadir-gen3.zip)  
1. Build and run the standard geth v1.9.10 with:  
```sh
./build/bin/geth --datadir ./path/to/datadir --rpc
```  
You can then use ERC20 events filters to get the events that you want for each address. Note that you will have to repeat this process for each datadir to get the full event history.
If you are non-technical and need help requesting this data please reach out to us in Discord and we will be happy to help."
690,What should I do if I need help with requesting data and I'm not technical?,"If you are non-technical and need help requesting data, you can reach out to the Optimism team on Discord. They will be happy to assist you with your data requests.","Follow these steps:  
1. Clone go-ethereum (the standard version) and checkout version v1.9.10:  
```sh
git clone https://github.com/ethereum/go-ethereum.git
cd go-ethereum
git checkout v1.9.10
```  
1. Download the following three datadir folders:
- [Generation #1 (Jan to April)](https://storage.googleapis.com/sequencer-datadirs/datadir-gen1.zip)
- [Generation #2 (April to May)](https://storage.googleapis.com/sequencer-datadirs/datadir-gen2.zip)
- [Generation #3 (May to June)](https://storage.googleapis.com/sequencer-datadirs/datadir-gen3.zip)  
1. Build and run the standard geth v1.9.10 with:  
```sh
./build/bin/geth --datadir ./path/to/datadir --rpc
```  
You can then use ERC20 events filters to get the events that you want for each address. Note that you will have to repeat this process for each datadir to get the full event history.
If you are non-technical and need help requesting this data please reach out to us in Discord and we will be happy to help."
691,How can I get testnet Ether (ETH) for deploying a smart contract on OP Sepolia?,"You can get testnet ETH from a faucet. Faucets are developer tools that provide free testnet ETH, which you can use to pay for testnet transactions and test your decentralized application or protocol before going live on the mainnet.","---
title: Network Faucets
lang: en-US
---  
In order to deploy a smart contract to a test network like OP Sepolia you will need some testnet Ether (ETH).  
You can get testnet ETH to pay for testnet transactions from a faucet. Faucets are developer tools to get free testnet ETH in order to test and troubleshoot your decentralized application or protocol before going live on mainnet.  
::: info Testnet Tokens
Tokens on testnet networks like OP Sepolia have no value as they are only used for testing purposes.
:::"
691,Do testnet tokens on networks like OP Sepolia have any real value?,"No, tokens on testnet networks like OP Sepolia have no value. They are only used for testing purposes.","---
title: Network Faucets
lang: en-US
---  
In order to deploy a smart contract to a test network like OP Sepolia you will need some testnet Ether (ETH).  
You can get testnet ETH to pay for testnet transactions from a faucet. Faucets are developer tools to get free testnet ETH in order to test and troubleshoot your decentralized application or protocol before going live on mainnet.  
::: info Testnet Tokens
Tokens on testnet networks like OP Sepolia have no value as they are only used for testing purposes.
:::"
692,How can developers get free testnet ETH for testing their apps on OP Chains?,"Developers can use the Superchain Faucet, a tool hosted by OP Labs, to get free testnet ETH for testing their apps on testnet OP Chains like Base Sepolia, OP Sepolia, PGN Sepolia, Zora Sepolia, and other OP Chains in the Superchain.","[Superchain Faucet](https://app.optimism.io/faucet?utm_source=docs) is a developer tool hosted by OP Labs that allows developers to get free testnet ETH to test apps on testnet OP Chains like Base Sepolia, OP Sepolia, PGN Sepolia, Zora Sepolia, and other OP Chains in the Superchain."
692,What is the purpose of the Superchain Faucet?,The Superchain Faucet is a developer tool that provides free testnet ETH to developers so they can test their applications on various testnet OP Chains within the Superchain ecosystem.,"[Superchain Faucet](https://app.optimism.io/faucet?utm_source=docs) is a developer tool hosted by OP Labs that allows developers to get free testnet ETH to test apps on testnet OP Chains like Base Sepolia, OP Sepolia, PGN Sepolia, Zora Sepolia, and other OP Chains in the Superchain."
692,Which testnet OP Chains are supported by the Superchain Faucet?,"The Superchain Faucet supports testnet OP Chains such as Base Sepolia, OP Sepolia, PGN Sepolia, Zora Sepolia, and other OP Chains in the Superchain.","[Superchain Faucet](https://app.optimism.io/faucet?utm_source=docs) is a developer tool hosted by OP Labs that allows developers to get free testnet ETH to test apps on testnet OP Chains like Base Sepolia, OP Sepolia, PGN Sepolia, Zora Sepolia, and other OP Chains in the Superchain."
693,Where can I get test ETH for the OP Goerli network?,"You can get test ETH for the OP Goerli network from Paradigm's MultiFaucet, Coinbase Faucet, and QuickNode Faucet.","A list of additional faucets is below:  
|                       FAUCET                        |                                           DESCRIPTION                                            |    NETWORKS    |
|-----------------------------------------------------|--------------------------------------------------------------------------------------------------|--------------|
| [Paradigm's MultiFaucet](https://faucet.paradigm.xyz/)    | Paradigm offers an easy way to get ETH on many different testnets at the same time. | OP Goerli  |
| [Coinbase Faucet](https://coinbase.com/faucets/optimism-goerli-faucet)    | Get test ETH on OP Goerli directly from the Coinbase Wallet extension or Coinbase Faucet. | OP Goerli  |
| [QuickNode Faucet](https://faucet.quicknode.com/optimism/)    | Another easy way to acquire some testnet ETH for OP Goerli and OP Sepolia. | OP Goerli, OP Sepolia  |"
693,Is there a faucet that provides test ETH for both OP Goerli and OP Sepolia networks?,"Yes, the QuickNode Faucet provides test ETH for both OP Goerli and OP Sepolia networks.","A list of additional faucets is below:  
|                       FAUCET                        |                                           DESCRIPTION                                            |    NETWORKS    |
|-----------------------------------------------------|--------------------------------------------------------------------------------------------------|--------------|
| [Paradigm's MultiFaucet](https://faucet.paradigm.xyz/)    | Paradigm offers an easy way to get ETH on many different testnets at the same time. | OP Goerli  |
| [Coinbase Faucet](https://coinbase.com/faucets/optimism-goerli-faucet)    | Get test ETH on OP Goerli directly from the Coinbase Wallet extension or Coinbase Faucet. | OP Goerli  |
| [QuickNode Faucet](https://faucet.quicknode.com/optimism/)    | Another easy way to acquire some testnet ETH for OP Goerli and OP Sepolia. | OP Goerli, OP Sepolia  |"
693,How can I get test ETH directly from the Coinbase Wallet extension?,You can get test ETH directly from the Coinbase Wallet extension by using the Coinbase Faucet.,"A list of additional faucets is below:  
|                       FAUCET                        |                                           DESCRIPTION                                            |    NETWORKS    |
|-----------------------------------------------------|--------------------------------------------------------------------------------------------------|--------------|
| [Paradigm's MultiFaucet](https://faucet.paradigm.xyz/)    | Paradigm offers an easy way to get ETH on many different testnets at the same time. | OP Goerli  |
| [Coinbase Faucet](https://coinbase.com/faucets/optimism-goerli-faucet)    | Get test ETH on OP Goerli directly from the Coinbase Wallet extension or Coinbase Faucet. | OP Goerli  |
| [QuickNode Faucet](https://faucet.quicknode.com/optimism/)    | Another easy way to acquire some testnet ETH for OP Goerli and OP Sepolia. | OP Goerli, OP Sepolia  |"
694,How can I get testnet ETH for use on OP Chain testnets?,You can get testnet ETH from an Ethereum Sepolia faucet and then bridge the testnet ETH to/from OP Chain testnets using the L1StandardBridge.,"Need another option? Alternatively, you can get testnet ETH from an [Ethereum Sepolia faucet](https://sepoliafaucet.com/) and bridge the testnet ETH to/from OP Chain testnets using the L1StandardBridge.  
Once you have the testnet ETH on Ethereum Sepolia you can use [Superchain Testnet Tools](https://www.superchain.tools/) if you need to bridge to multiple OP Chain testnets at once."
694,Is there a way to bridge testnet ETH to multiple OP Chain testnets at once?,"Yes, you can use Superchain Testnet Tools to bridge testnet ETH to multiple OP Chain testnets at once.","Need another option? Alternatively, you can get testnet ETH from an [Ethereum Sepolia faucet](https://sepoliafaucet.com/) and bridge the testnet ETH to/from OP Chain testnets using the L1StandardBridge.  
Once you have the testnet ETH on Ethereum Sepolia you can use [Superchain Testnet Tools](https://www.superchain.tools/) if you need to bridge to multiple OP Chain testnets at once."
695,Where can I find resources to learn about onchain development for Optimism?,"If you're new to onchain development, you can check out 'Optimism Unleashed' by CryptoZombies and 'Superchain Builder NFT' by ThirdWeb.","- If you're new to onchain development, check out [Optimism Unleashed](https://cryptozombies.io/en/optimism) by CryptoZombies and [Superchain Builder NFT](https://blog.thirdweb.com/optimism-superchain-faucet-nft) by ThirdWeb.
- If you're familiar with onchain development, check out the [Optimism Ecosystem‚Äôs Contributions Dashboard](https://optimism.io/ideas/) for project ideas that the Optimism Collective is looking for."
695,Are there any project ideas available for developers familiar with onchain development in the Optimism ecosystem?,"Yes, you can check out the Optimism Ecosystem‚Äôs Contributions Dashboard for project ideas that the Optimism Collective is looking for.","- If you're new to onchain development, check out [Optimism Unleashed](https://cryptozombies.io/en/optimism) by CryptoZombies and [Superchain Builder NFT](https://blog.thirdweb.com/optimism-superchain-faucet-nft) by ThirdWeb.
- If you're familiar with onchain development, check out the [Optimism Ecosystem‚Äôs Contributions Dashboard](https://optimism.io/ideas/) for project ideas that the Optimism Collective is looking for."
696,Can you explain what Meta Transactions are in the context of Optimism?,"Meta Transactions in Optimism refer to a mechanism where a third party can pay the gas fees on behalf of a user, allowing the user to interact with the blockchain without needing to hold ETH for transaction fees. This can make the user experience smoother and more accessible, especially for those who are new to blockchain technology.","---
title: Meta Transactions
lang: en-US
---"
697,How do meta-transactions work?,Meta-transactions allow users to sign transactions that are then submitted and have the gas fees paid by someone else.,"Meta-transactions let users sign transactions that are then submitted (and the gas paid for) by somebody else.
OP Mainnet is a good place for meta-transactions because the low gas costs make it possible to explore business models that allow for payment for transactions by other means.  
Here are some example use cases for meta-transactions:  
- **Onboarding**.
Users who aren't committed to web3 yet need to pay and go through [KYC](https://www.thalesgroup.com/en/markets/digital-identity-and-security/banking-payment/issuance/id-verification/know-your-customer) before they can do anything.
This is a bad initial experience that can cause people to decide they prefer to investigate something else, especially for non-  
- **Privacy**.
It's easy to use a new address for privacy purposes.
It is a lot harder to transfer ETH to the new address privately without creating a connection between it and your identity.  
- **Transaction payment by other means**.
With meta-transactions you can collect payment for transactions either using a different token (ERC-20) or an offchain means (for example a credit card)."
697,Why is OP Mainnet a good place for meta-transactions?,OP Mainnet is a good place for meta-transactions because its low gas costs make it feasible to explore business models that allow for alternative payment methods for transactions.,"Meta-transactions let users sign transactions that are then submitted (and the gas paid for) by somebody else.
OP Mainnet is a good place for meta-transactions because the low gas costs make it possible to explore business models that allow for payment for transactions by other means.  
Here are some example use cases for meta-transactions:  
- **Onboarding**.
Users who aren't committed to web3 yet need to pay and go through [KYC](https://www.thalesgroup.com/en/markets/digital-identity-and-security/banking-payment/issuance/id-verification/know-your-customer) before they can do anything.
This is a bad initial experience that can cause people to decide they prefer to investigate something else, especially for non-  
- **Privacy**.
It's easy to use a new address for privacy purposes.
It is a lot harder to transfer ETH to the new address privately without creating a connection between it and your identity.  
- **Transaction payment by other means**.
With meta-transactions you can collect payment for transactions either using a different token (ERC-20) or an offchain means (for example a credit card)."
697,What are some use cases for meta-transactions?,"Some use cases for meta-transactions include onboarding new users without requiring them to pay upfront or go through KYC, enhancing privacy by using new addresses without linking them to your identity, and allowing transaction payments through different tokens or offchain methods like credit cards.","Meta-transactions let users sign transactions that are then submitted (and the gas paid for) by somebody else.
OP Mainnet is a good place for meta-transactions because the low gas costs make it possible to explore business models that allow for payment for transactions by other means.  
Here are some example use cases for meta-transactions:  
- **Onboarding**.
Users who aren't committed to web3 yet need to pay and go through [KYC](https://www.thalesgroup.com/en/markets/digital-identity-and-security/banking-payment/issuance/id-verification/know-your-customer) before they can do anything.
This is a bad initial experience that can cause people to decide they prefer to investigate something else, especially for non-  
- **Privacy**.
It's easy to use a new address for privacy purposes.
It is a lot harder to transfer ETH to the new address privately without creating a connection between it and your identity.  
- **Transaction payment by other means**.
With meta-transactions you can collect payment for transactions either using a different token (ERC-20) or an offchain means (for example a credit card)."
698,How does the Gas Station Network (GSN) help with transactions?,The Gas Station Network (GSN) is a distributed infrastructure for meta-transactions that allows you to create your own relay or pay other relays to relay your users' traffic. This helps facilitate transactions by enabling relays to handle the transaction process.,"The [Gas Station Network](https://opengsn.org/) is distributed infrastructure for meta-transaction that allows you to create your own relay, or pay other relays to relay your users' traffic.
Relays have to post a bond, which they lose if they attempt to censor transactions (by pretending to accept them without sending them onchain).
See here for [their documentation](https://docs.opengsn.org/)."
698,What happens if a relay in the Gas Station Network tries to censor transactions?,"If a relay in the Gas Station Network attempts to censor transactions by pretending to accept them without sending them onchain, they lose the bond they posted. This bond acts as a security measure to ensure relays act honestly.","The [Gas Station Network](https://opengsn.org/) is distributed infrastructure for meta-transaction that allows you to create your own relay, or pay other relays to relay your users' traffic.
Relays have to post a bond, which they lose if they attempt to censor transactions (by pretending to accept them without sending them onchain).
See here for [their documentation](https://docs.opengsn.org/)."
698,Where can I find more information about the Gas Station Network?,"You can find more information about the Gas Station Network in their documentation, which is available at https://docs.opengsn.org/.","The [Gas Station Network](https://opengsn.org/) is distributed infrastructure for meta-transaction that allows you to create your own relay, or pay other relays to relay your users' traffic.
Relays have to post a bond, which they lose if they attempt to censor transactions (by pretending to accept them without sending them onchain).
See here for [their documentation](https://docs.opengsn.org/)."
699,What are the different networks available for Optimism?,The different networks available for Optimism are OP Mainnet and OP Goerli.,"- [OP Mainnet](https://docs.opengsn.org/networks/optimism/optimism.html)
- [OP Goerli](https://docs.opengsn.org/networks/optimism/goerli-optimism.html)"
700,How does Gelato relay transactions?,Gelato uses a list of white-listed executors to relay transactions.,[Gelato](https://docs.gelato.network/developer-services/relay/what-is-relaying) uses a list of white-listed executors to relay transactions.
700,What is the role of executors in Gelato's transaction relaying?,"Executors in Gelato are responsible for relaying transactions, and only those who are white-listed can perform this task.",[Gelato](https://docs.gelato.network/developer-services/relay/what-is-relaying) uses a list of white-listed executors to relay transactions.
701,Which networks does Optimism support?,Optimism supports two networks: OP Mainnet and OP Goerli.,"- OP Mainnet
- OP Goerli"
702,How does Optimism handle monitoring?,"The fragment does not provide specific details on how Optimism handles monitoring, but it indicates that there is a section dedicated to monitoring in the Optimism Governance Documentation.","---
title: Monitoring
lang: en-US
---"
703,Where can I check the status of the OP Mainnet?,"You can check the status of the OP Mainnet on the [OP Mainnet status page](https://status.optimism.io/). This page provides information on public APIs, the gateway, deposits, withdrawals, and transaction sequencing for both OP Mainnet and OP Goerli.","Check out the [OP Mainnet status page](https://status.optimism.io/).
This page includes public APIs, the gateway, deposits, withdraws and transaction sequencing for both OP Mainnet and OP Goerli."
704,Where can I check the current gas price for Optimism?,You can see the current gas price [here](https://optimism.io/gas-tracker).,You can see the current gas price [here](https://optimism.io/gas-tracker).
705,Where can I find a list of OP Mainnet Block Explorers?,"You can find a non-exhaustive list of OP Mainnet Block Explorers in the Optimism Governance Documentation under the useful tools section, specifically in the explorers.md file.",You can find a non-exhaustive list of OP Mainnet Block Explorers [here](../useful-tools/explorers.md).
706,Where can I find detailed information about what's happening on OP Mainnet and OP Goerli?,"You can find detailed information on Etherscan. For OP Mainnet, you can visit the [OP Mainnet explorer](https://explorer.optimism.io), and for OP Goerli, you can check out the [OP Goerli explorer](https://goerli-explorer.optimism.io).","Etherscan provides a lot of detailed information about what's happening on OP Mainnet and OP Goerli.
Check out the [OP Mainnet explorer](https://explorer.optimism.io) as well as the [OP Goerli explorer](https://goerli-explorer.optimism.io) to get a look for yourself."
706,How can I explore the activities on OP Goerli?,You can explore the activities on OP Goerli by visiting the [OP Goerli explorer](https://goerli-explorer.optimism.io) on Etherscan.,"Etherscan provides a lot of detailed information about what's happening on OP Mainnet and OP Goerli.
Check out the [OP Mainnet explorer](https://explorer.optimism.io) as well as the [OP Goerli explorer](https://goerli-explorer.optimism.io) to get a look for yourself."
706,Is there a way to see what's happening on OP Mainnet?,"Yes, you can see what's happening on OP Mainnet by visiting the [OP Mainnet explorer](https://explorer.optimism.io) on Etherscan.","Etherscan provides a lot of detailed information about what's happening on OP Mainnet and OP Goerli.
Check out the [OP Mainnet explorer](https://explorer.optimism.io) as well as the [OP Goerli explorer](https://goerli-explorer.optimism.io) to get a look for yourself."
707,Is there an alternative block explorer for OP Mainnet and OP Goerli?,"Yes, another block explorer for OP Mainnet and OP Goerli is Blockscout. You can access it at https://optimism.blockscout.com for OP Mainnet and https://optimism-goerli.blockscout.com for OP Goerli.",Another block explorer for [OP Mainnet](https://optimism.blockscout.com) and [OP Goerli](https://optimism-goerli.blockscout.com) is [Blockscout](https://blockscout.com).
708,How can I monitor transactions and block data on Optimism?,"You can use the Tenderly monitoring stack to view transactions and block data. It offers advanced trace search and a detailed execution overview, allowing you to filter through millions of transactions.","[Tenderly](https://tenderly.co/) monitoring stack shows transactions and block data, with an option to filter millions of transactions with advanced trace search and a detailed execution overview.
You can check out [how to robustly monitor wallets](https://blog.tenderly.co/how-to-monitor-ethereum-wallets/) or even [set up real-time alerting for smart contracts](https://blog.tenderly.co/how-to-set-up-real-time-alerting-for-smart-contracts-with-tenderly/), and in both cases you can simulate pending (or any other historical) transactions and see their exact outcomes.
Finally you can [automate your responses to alert triggers](https://blog.tenderly.co/tenderly-alert-webhooks/) with custom webhooks."
708,Is it possible to set up real-time alerts for smart contracts on Optimism?,"Yes, you can set up real-time alerting for smart contracts using Tenderly. This allows you to monitor smart contracts and receive alerts for specific events.","[Tenderly](https://tenderly.co/) monitoring stack shows transactions and block data, with an option to filter millions of transactions with advanced trace search and a detailed execution overview.
You can check out [how to robustly monitor wallets](https://blog.tenderly.co/how-to-monitor-ethereum-wallets/) or even [set up real-time alerting for smart contracts](https://blog.tenderly.co/how-to-set-up-real-time-alerting-for-smart-contracts-with-tenderly/), and in both cases you can simulate pending (or any other historical) transactions and see their exact outcomes.
Finally you can [automate your responses to alert triggers](https://blog.tenderly.co/tenderly-alert-webhooks/) with custom webhooks."
708,Can I automate responses to alert triggers on Optimism?,"Yes, you can automate your responses to alert triggers with custom webhooks using Tenderly. This allows you to create automated workflows based on specific alert conditions.","[Tenderly](https://tenderly.co/) monitoring stack shows transactions and block data, with an option to filter millions of transactions with advanced trace search and a detailed execution overview.
You can check out [how to robustly monitor wallets](https://blog.tenderly.co/how-to-monitor-ethereum-wallets/) or even [set up real-time alerting for smart contracts](https://blog.tenderly.co/how-to-set-up-real-time-alerting-for-smart-contracts-with-tenderly/), and in both cases you can simulate pending (or any other historical) transactions and see their exact outcomes.
Finally you can [automate your responses to alert triggers](https://blog.tenderly.co/tenderly-alert-webhooks/) with custom webhooks."
709,How can I find dashboards with information about OP Mainnet?,You can find a full list of community-created dashboards for OP Mainnet on Dune Analytics by visiting this [link](https://dune.xyz/browse/dashboards?q=optimism).,"[Dune Analytics](https://dune.xyz) allows anyone to create dashboards that present information about OP Mainnet.
You can find a full list of community created dashboards for OP Mainnet [here](https://dune.xyz/browse/dashboards?q=optimism), or [create your own](https://docs.dune.xyz/#queries) dashboard.  
Here are some of our favorite dashboards so far:  
- [General OP Mainnet dashboard](https://dune.xyz/Marcov/Optimism-Ethereum)
- [Uniswap usage comparison, Ethereum vs. OP Mainnet](https://dune.xyz/msilb7/Uniswap-v3-Usage-Comparison-on-Ethereum-vs-Optimism-(OVM-2.0))"
709,Can I create my own dashboard for OP Mainnet?,"Yes, you can create your own dashboard for OP Mainnet on Dune Analytics. You can start by following the instructions provided [here](https://docs.dune.xyz/#queries).","[Dune Analytics](https://dune.xyz) allows anyone to create dashboards that present information about OP Mainnet.
You can find a full list of community created dashboards for OP Mainnet [here](https://dune.xyz/browse/dashboards?q=optimism), or [create your own](https://docs.dune.xyz/#queries) dashboard.  
Here are some of our favorite dashboards so far:  
- [General OP Mainnet dashboard](https://dune.xyz/Marcov/Optimism-Ethereum)
- [Uniswap usage comparison, Ethereum vs. OP Mainnet](https://dune.xyz/msilb7/Uniswap-v3-Usage-Comparison-on-Ethereum-vs-Optimism-(OVM-2.0))"
709,Are there any recommended dashboards for OP Mainnet?,"Yes, some recommended dashboards include the [General OP Mainnet dashboard](https://dune.xyz/Marcov/Optimism-Ethereum) and the [Uniswap usage comparison, Ethereum vs. OP Mainnet](https://dune.xyz/msilb7/Uniswap-v3-Usage-Comparison-on-Ethereum-vs-Optimism-(OVM-2.0)).","[Dune Analytics](https://dune.xyz) allows anyone to create dashboards that present information about OP Mainnet.
You can find a full list of community created dashboards for OP Mainnet [here](https://dune.xyz/browse/dashboards?q=optimism), or [create your own](https://docs.dune.xyz/#queries) dashboard.  
Here are some of our favorite dashboards so far:  
- [General OP Mainnet dashboard](https://dune.xyz/Marcov/Optimism-Ethereum)
- [Uniswap usage comparison, Ethereum vs. OP Mainnet](https://dune.xyz/msilb7/Uniswap-v3-Usage-Comparison-on-Ethereum-vs-Optimism-(OVM-2.0))"
710,Are all API calls supported in Optimism's shared environment?,"No, some API calls, especially those in the personal namespace, are either unsupported or will return nonsensical values in a shared environment.","---
title: Networks, Public RPC Endpoints, & APIs
lang: en-US
---  
::: warning
Some API calls, such as those in the [personal namespace](https://geth.ethereum.org/docs/rpc/ns-personal) make no sense in a shared environment.
Such RPCs are either totally unsupported, or will return nonsensical values.
:::"
710,Why do some API calls return nonsensical values in Optimism's shared environment?,"In a shared environment, certain API calls, like those in the personal namespace, do not make sense because they are designed for individual use rather than shared use. As a result, they may return nonsensical values or be unsupported.","---
title: Networks, Public RPC Endpoints, & APIs
lang: en-US
---  
::: warning
Some API calls, such as those in the [personal namespace](https://geth.ethereum.org/docs/rpc/ns-personal) make no sense in a shared environment.
Such RPCs are either totally unsupported, or will return nonsensical values.
:::"
711,Where can I find the explorer for the Optimism network?,You can find the explorer for the Optimism network at [https://explorer.optimism.io](https://explorer.optimism.io).,"| Parameter | Value |
| --------- | ----- |
| Network Name | **`Optimism`** |
| Description | **`Mainnet`** |
| Chain ID | **`10`** |
| Explorer | **[https://explorer.optimism.io](https://explorer.optimism.io)** |
| HTTP Endpoint | Optimism also provides this endpoint: **`https://mainnet.optimism.io`.** _But it is not for production systems and is rate limited._   |
| Sequencer URL<sup>1</sup> | **`https://mainnet-sequencer.optimism.io/`** |
| L1 Contract Addresses | [link](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/optimism-mainnet) |
| L2 Contract Addresses | [link](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/optimism-mainnet) |
| chainid.link | [https://chainid.link/?network=optimism](https://chainid.link/?network=optimism)  
(1) The sequencer URL is write only, it only accepts `eth_sendRawTransaction` requests.  
::: tip Developer Tip
If you are seeing rate limit issues when testing with the public end point, or if you need websocket functionality, we recommend signing up for a third-party [provider](../useful-tools/providers.md).
:::"
711,What is the Chain ID for the Optimism network?,The Chain ID for the Optimism network is 10.,"| Parameter | Value |
| --------- | ----- |
| Network Name | **`Optimism`** |
| Description | **`Mainnet`** |
| Chain ID | **`10`** |
| Explorer | **[https://explorer.optimism.io](https://explorer.optimism.io)** |
| HTTP Endpoint | Optimism also provides this endpoint: **`https://mainnet.optimism.io`.** _But it is not for production systems and is rate limited._   |
| Sequencer URL<sup>1</sup> | **`https://mainnet-sequencer.optimism.io/`** |
| L1 Contract Addresses | [link](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/optimism-mainnet) |
| L2 Contract Addresses | [link](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/optimism-mainnet) |
| chainid.link | [https://chainid.link/?network=optimism](https://chainid.link/?network=optimism)  
(1) The sequencer URL is write only, it only accepts `eth_sendRawTransaction` requests.  
::: tip Developer Tip
If you are seeing rate limit issues when testing with the public end point, or if you need websocket functionality, we recommend signing up for a third-party [provider](../useful-tools/providers.md).
:::"
711,Is the HTTP endpoint provided by Optimism suitable for production systems?,"No, the HTTP endpoint provided by Optimism at https://mainnet.optimism.io is not suitable for production systems and is rate limited.","| Parameter | Value |
| --------- | ----- |
| Network Name | **`Optimism`** |
| Description | **`Mainnet`** |
| Chain ID | **`10`** |
| Explorer | **[https://explorer.optimism.io](https://explorer.optimism.io)** |
| HTTP Endpoint | Optimism also provides this endpoint: **`https://mainnet.optimism.io`.** _But it is not for production systems and is rate limited._   |
| Sequencer URL<sup>1</sup> | **`https://mainnet-sequencer.optimism.io/`** |
| L1 Contract Addresses | [link](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/optimism-mainnet) |
| L2 Contract Addresses | [link](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/optimism-mainnet) |
| chainid.link | [https://chainid.link/?network=optimism](https://chainid.link/?network=optimism)  
(1) The sequencer URL is write only, it only accepts `eth_sendRawTransaction` requests.  
::: tip Developer Tip
If you are seeing rate limit issues when testing with the public end point, or if you need websocket functionality, we recommend signing up for a third-party [provider](../useful-tools/providers.md).
:::"
712,Where can I find the authoritative list of contract addresses for Optimism?,The authoritative list of contract addresses for Optimism can be found in the monorepo on GitHub at this link: https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/mainnet.,"The authoritative list of contract addresses is [in the monorepo](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/mainnet).
They are reproduced here for convenience.  
| Contract name | Address |
| - | -
| L1CrossDomainMessenger | [`0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1`](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)
| L1ERC721Bridge | [`0x5a7749f83b81B301cAb5f48EB8516B986DAef23D`](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)
| L1StandardBridge | [`0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1`](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)
| L2OutputOracle | [`0xdfe97868233d1aa22e815a266982f2cf17685a27`](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)
| OptimismMintableERC20Factory | [`0x75505a97BD334E7BD3C476893285569C4136Fa0F`](https://etherscan.io/address/0x75505a97BD334E7BD3C476893285569C4136Fa0F)
| OptimismPortal | [`0xbEb5Fc579115071764c7423A4f12eDde41f106Ed`](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed) |
| PortalSender | [`0x0A893d9576b9cFD9EF78595963dc973238E78210`](https://etherscan.io/address/0x0A893d9576b9cFD9EF78595963dc973238E78210)
| ProxyAdmin | [`0x543bA4AADBAb8f9025686Bd03993043599c6fB04`](https://etherscan.io/address/0x543bA4AADBAb8f9025686Bd03993043599c6fB04)
| SystemConfig | [`0x229047fed2591dbec1eF1118d64F7aF3dB9EB290`](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)
| SystemDictator | [`0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB`](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)
| Batch Inbox Address | [`0xff00000000000000000000000000000000000010`](https://etherscan.io/address/0xff00000000000000000000000000000000000010)"
712,What is the address of the L1CrossDomainMessenger contract?,The address of the L1CrossDomainMessenger contract is 0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1. You can also view it on Etherscan using this link: https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1.,"The authoritative list of contract addresses is [in the monorepo](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/mainnet).
They are reproduced here for convenience.  
| Contract name | Address |
| - | -
| L1CrossDomainMessenger | [`0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1`](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)
| L1ERC721Bridge | [`0x5a7749f83b81B301cAb5f48EB8516B986DAef23D`](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)
| L1StandardBridge | [`0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1`](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)
| L2OutputOracle | [`0xdfe97868233d1aa22e815a266982f2cf17685a27`](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)
| OptimismMintableERC20Factory | [`0x75505a97BD334E7BD3C476893285569C4136Fa0F`](https://etherscan.io/address/0x75505a97BD334E7BD3C476893285569C4136Fa0F)
| OptimismPortal | [`0xbEb5Fc579115071764c7423A4f12eDde41f106Ed`](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed) |
| PortalSender | [`0x0A893d9576b9cFD9EF78595963dc973238E78210`](https://etherscan.io/address/0x0A893d9576b9cFD9EF78595963dc973238E78210)
| ProxyAdmin | [`0x543bA4AADBAb8f9025686Bd03993043599c6fB04`](https://etherscan.io/address/0x543bA4AADBAb8f9025686Bd03993043599c6fB04)
| SystemConfig | [`0x229047fed2591dbec1eF1118d64F7aF3dB9EB290`](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)
| SystemDictator | [`0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB`](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)
| Batch Inbox Address | [`0xff00000000000000000000000000000000000010`](https://etherscan.io/address/0xff00000000000000000000000000000000000010)"
712,What is the purpose of the OptimismMintableERC20Factory contract?,"The OptimismMintableERC20Factory contract is used to create ERC20 tokens that are mintable on the Optimism network. Its address is 0x75505a97BD334E7BD3C476893285569C4136Fa0F, and you can view it on Etherscan here: https://etherscan.io/address/0x75505a97BD334E7BD3C476893285569C4136Fa0F.","The authoritative list of contract addresses is [in the monorepo](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/mainnet).
They are reproduced here for convenience.  
| Contract name | Address |
| - | -
| L1CrossDomainMessenger | [`0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1`](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)
| L1ERC721Bridge | [`0x5a7749f83b81B301cAb5f48EB8516B986DAef23D`](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)
| L1StandardBridge | [`0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1`](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)
| L2OutputOracle | [`0xdfe97868233d1aa22e815a266982f2cf17685a27`](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)
| OptimismMintableERC20Factory | [`0x75505a97BD334E7BD3C476893285569C4136Fa0F`](https://etherscan.io/address/0x75505a97BD334E7BD3C476893285569C4136Fa0F)
| OptimismPortal | [`0xbEb5Fc579115071764c7423A4f12eDde41f106Ed`](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed) |
| PortalSender | [`0x0A893d9576b9cFD9EF78595963dc973238E78210`](https://etherscan.io/address/0x0A893d9576b9cFD9EF78595963dc973238E78210)
| ProxyAdmin | [`0x543bA4AADBAb8f9025686Bd03993043599c6fB04`](https://etherscan.io/address/0x543bA4AADBAb8f9025686Bd03993043599c6fB04)
| SystemConfig | [`0x229047fed2591dbec1eF1118d64F7aF3dB9EB290`](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)
| SystemDictator | [`0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB`](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)
| Batch Inbox Address | [`0xff00000000000000000000000000000000000010`](https://etherscan.io/address/0xff00000000000000000000000000000000000010)"
713,Who would find these parameters useful?,These parameters are mostly useful to people responsible for running and administering network nodes.,"These parameters are mostly useful to people responsible for running and administering network nodes.  
| Parameter      | Value |
| -------------- | ----- |
| L1 Chain ID    | 1 |
| Rollup Config  | This network does not require a rollup config. Specify `--network=mainnet` on the command line
| Withdrawal period | 1 week |"
713,What is the L1 Chain ID for this network?,The L1 Chain ID for this network is 1.,"These parameters are mostly useful to people responsible for running and administering network nodes.  
| Parameter      | Value |
| -------------- | ----- |
| L1 Chain ID    | 1 |
| Rollup Config  | This network does not require a rollup config. Specify `--network=mainnet` on the command line
| Withdrawal period | 1 week |"
713,How long is the withdrawal period?,The withdrawal period is 1 week.,"These parameters are mostly useful to people responsible for running and administering network nodes.  
| Parameter      | Value |
| -------------- | ----- |
| L1 Chain ID    | 1 |
| Rollup Config  | This network does not require a rollup config. Specify `--network=mainnet` on the command line
| Withdrawal period | 1 week |"
714,Where can I download the Bedrock Data Directory for Optimism?,You can download the Bedrock Data Directory (303 GB) from the following link: [Bedrock Data Directory](https://datadirs.optimism.io/mainnet-bedrock.tar.zst). The `sha512sum` for this file is `c17067b7bc39a6daa14f71d448c6fa0477834c3e68a25e96f26fe849c12a09bffe510e96f7eacdef19e93e3167d15250f807d252dd6f6f9053d0e4457c73d5fb`.,"::: tip  
Links to download data directories will be posted here as soon as they are available.  
:::  
- [Bedrock Data Directory (303 GB)<sup>1</sup>](https://datadirs.optimism.io/mainnet-bedrock.tar.zst).
The `sha512sum` for this file is `c17067b7bc39a6daa14f71d448c6fa0477834c3e68a25e96f26fe849c12a09bffe510e96f7eacdef19e93e3167d15250f807d252dd6f6f9053d0e4457c73d5fb`.
- [Legacy Geth Data Directory (2.9TB)<sup>1</sup>](https://datadirs.optimism.io/mainnet-legacy-archival.tar.zst).
The `sha512sum` for this file is `e348488c458baa755510f23bbc8601619bc66bea78a89354c949ba7be3c6b39ed7dd2c50516621e38df6120299407da0d24445b96bf94a50364ed07bb8234b26`.
Note that you *only* need this file if you run `l2geth` to answer archive queries prior to the bedrock upgrade.
If you are running an archive only for post-bedrock transactions (using `op-geth` with the command line flag `gcmode=archive`), you do *not* need this file.
- [Configuration parameters](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/deploy-config/mainnet.json).
- [Latest release of `op-geth`](https://github.com/ethereum-optimism/op-geth/releases/latest)
- [Latest release of `op-node`](https://github.com/ethereum-optimism/optimism/releases/) - you need to scroll down until you get a release that has `op-node` in it.
- [Legacy geth](https://hub.docker.com/layers/ethereumoptimism/l2geth/0.5.31/images/sha256-5577036dc36d167d11f5ac49b91cc0a3d835574928a9563783c2e70309e5eb28?context=explore).  
(1) This file is compressed with `zstd`.
We recommend that users install the command line tool if it is not already installed on their system.
`tar -xf` will work without installing anything if you have an up to date version of `tar`.
If you want to decompress separately, we recommend `pzstd -d`  or `zstd -d` (pzstd will likely be faster)."
714,Do I need the Legacy Geth Data Directory if I am running an archive only for post-bedrock transactions?,"No, you do not need the Legacy Geth Data Directory if you are running an archive only for post-bedrock transactions using `op-geth` with the command line flag `gcmode=archive`. This file is only necessary if you run `l2geth` to answer archive queries prior to the bedrock upgrade.","::: tip  
Links to download data directories will be posted here as soon as they are available.  
:::  
- [Bedrock Data Directory (303 GB)<sup>1</sup>](https://datadirs.optimism.io/mainnet-bedrock.tar.zst).
The `sha512sum` for this file is `c17067b7bc39a6daa14f71d448c6fa0477834c3e68a25e96f26fe849c12a09bffe510e96f7eacdef19e93e3167d15250f807d252dd6f6f9053d0e4457c73d5fb`.
- [Legacy Geth Data Directory (2.9TB)<sup>1</sup>](https://datadirs.optimism.io/mainnet-legacy-archival.tar.zst).
The `sha512sum` for this file is `e348488c458baa755510f23bbc8601619bc66bea78a89354c949ba7be3c6b39ed7dd2c50516621e38df6120299407da0d24445b96bf94a50364ed07bb8234b26`.
Note that you *only* need this file if you run `l2geth` to answer archive queries prior to the bedrock upgrade.
If you are running an archive only for post-bedrock transactions (using `op-geth` with the command line flag `gcmode=archive`), you do *not* need this file.
- [Configuration parameters](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/deploy-config/mainnet.json).
- [Latest release of `op-geth`](https://github.com/ethereum-optimism/op-geth/releases/latest)
- [Latest release of `op-node`](https://github.com/ethereum-optimism/optimism/releases/) - you need to scroll down until you get a release that has `op-node` in it.
- [Legacy geth](https://hub.docker.com/layers/ethereumoptimism/l2geth/0.5.31/images/sha256-5577036dc36d167d11f5ac49b91cc0a3d835574928a9563783c2e70309e5eb28?context=explore).  
(1) This file is compressed with `zstd`.
We recommend that users install the command line tool if it is not already installed on their system.
`tar -xf` will work without installing anything if you have an up to date version of `tar`.
If you want to decompress separately, we recommend `pzstd -d`  or `zstd -d` (pzstd will likely be faster)."
714,What tools do I need to decompress the downloaded data directories?,"The data directories are compressed with `zstd`. We recommend installing the `zstd` command line tool if it is not already installed on your system. You can use `tar -xf` if you have an up-to-date version of `tar`. If you want to decompress separately, we recommend using `pzstd -d` or `zstd -d`, with `pzstd` likely being faster.","::: tip  
Links to download data directories will be posted here as soon as they are available.  
:::  
- [Bedrock Data Directory (303 GB)<sup>1</sup>](https://datadirs.optimism.io/mainnet-bedrock.tar.zst).
The `sha512sum` for this file is `c17067b7bc39a6daa14f71d448c6fa0477834c3e68a25e96f26fe849c12a09bffe510e96f7eacdef19e93e3167d15250f807d252dd6f6f9053d0e4457c73d5fb`.
- [Legacy Geth Data Directory (2.9TB)<sup>1</sup>](https://datadirs.optimism.io/mainnet-legacy-archival.tar.zst).
The `sha512sum` for this file is `e348488c458baa755510f23bbc8601619bc66bea78a89354c949ba7be3c6b39ed7dd2c50516621e38df6120299407da0d24445b96bf94a50364ed07bb8234b26`.
Note that you *only* need this file if you run `l2geth` to answer archive queries prior to the bedrock upgrade.
If you are running an archive only for post-bedrock transactions (using `op-geth` with the command line flag `gcmode=archive`), you do *not* need this file.
- [Configuration parameters](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/deploy-config/mainnet.json).
- [Latest release of `op-geth`](https://github.com/ethereum-optimism/op-geth/releases/latest)
- [Latest release of `op-node`](https://github.com/ethereum-optimism/optimism/releases/) - you need to scroll down until you get a release that has `op-node` in it.
- [Legacy geth](https://hub.docker.com/layers/ethereumoptimism/l2geth/0.5.31/images/sha256-5577036dc36d167d11f5ac49b91cc0a3d835574928a9563783c2e70309e5eb28?context=explore).  
(1) This file is compressed with `zstd`.
We recommend that users install the command line tool if it is not already installed on their system.
`tar -xf` will work without installing anything if you have an up to date version of `tar`.
If you want to decompress separately, we recommend `pzstd -d`  or `zstd -d` (pzstd will likely be faster)."
715,Is Optimism Goerli a mainnet or a testnet?,"Optimism Goerli is a testnet, specifically a public test network.","::: tip Purpose
This is our current test network. Note that OP Goerli is planned to be deprecated in Q4 2023. Please migrate to OP Sepolia before then.
:::  
| Parameter | Value |
| --------- | ----- |
| Network Name | **`Optimism Goerli`** |
| Description | **`Testnet (public)`** |
| Chain ID | **`420`** |
| Explorer | **[https://goerli-explorer.optimism.io](https://goerli-explorer.optimism.io)** |
| HTTP Endpoint | **`https://goerli.optimism.io`** |
| Sequencer URL<sup>1</sup> | **`https://goerli-sequencer.optimism.io/`** |
| chainid.link | [https://chainid.link/?network=optimism-goerli](https://chainid.link/?network=optimism-goerli)  
(1) The sequencer URL is write only, it only accepts `eth_sendRawTransaction` requests."
715,When is Optimism Goerli planned to be deprecated?,Optimism Goerli is planned to be deprecated in Q4 2023. Users are advised to migrate to OP Sepolia before then.,"::: tip Purpose
This is our current test network. Note that OP Goerli is planned to be deprecated in Q4 2023. Please migrate to OP Sepolia before then.
:::  
| Parameter | Value |
| --------- | ----- |
| Network Name | **`Optimism Goerli`** |
| Description | **`Testnet (public)`** |
| Chain ID | **`420`** |
| Explorer | **[https://goerli-explorer.optimism.io](https://goerli-explorer.optimism.io)** |
| HTTP Endpoint | **`https://goerli.optimism.io`** |
| Sequencer URL<sup>1</sup> | **`https://goerli-sequencer.optimism.io/`** |
| chainid.link | [https://chainid.link/?network=optimism-goerli](https://chainid.link/?network=optimism-goerli)  
(1) The sequencer URL is write only, it only accepts `eth_sendRawTransaction` requests."
715,What is the Chain ID for Optimism Goerli?,The Chain ID for Optimism Goerli is 420.,"::: tip Purpose
This is our current test network. Note that OP Goerli is planned to be deprecated in Q4 2023. Please migrate to OP Sepolia before then.
:::  
| Parameter | Value |
| --------- | ----- |
| Network Name | **`Optimism Goerli`** |
| Description | **`Testnet (public)`** |
| Chain ID | **`420`** |
| Explorer | **[https://goerli-explorer.optimism.io](https://goerli-explorer.optimism.io)** |
| HTTP Endpoint | **`https://goerli.optimism.io`** |
| Sequencer URL<sup>1</sup> | **`https://goerli-sequencer.optimism.io/`** |
| chainid.link | [https://chainid.link/?network=optimism-goerli](https://chainid.link/?network=optimism-goerli)  
(1) The sequencer URL is write only, it only accepts `eth_sendRawTransaction` requests."
716,Where can I find the authoritative list of contract addresses for Optimism?,The authoritative list of contract addresses for Optimism can be found in the monorepo on GitHub at this link: https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/goerli.,"The authoritative list of contract addresses is [in the monorepo](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/goerli).
They are reproduced here for convenience  
| Contract name | Address |
| - | -
| L1CrossDomainMessenger | [`0x5086d1eEF304eb5284A0f6720f79403b4e9bE294`](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)
| L1ERC721Bridge | [`0x0F9C590b958002E8B10a7431979c1aF882772E88`](https://goerli.etherscan.io/address/0x0F9C590b958002E8B10a7431979c1aF882772E88)
| L1StandardBridge | [`0x636Af16bf2f682dD3109e60102b8E1A089FedAa8`](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)
| L2OutputOracle | [`0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0`](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)
| OptimismMintableERC20Factory | [`0x883dcF8B05364083D849D8bD226bC8Cb4c42F9C5`](https://goerli.etherscan.io/address/0x883dcF8B05364083D849D8bD226bC8Cb4c42F9C5)
| OptimismPortal | [`0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383`](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)
| PortalSender | [`0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4`](https://goerli.etherscan.io/address/0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4)
| ProxyAdmin | [`0x01d3670863c3F4b24D7b107900f0b75d4BbC6e0d`](https://goerli.etherscan.io/address/0x01d3670863c3F4b24D7b107900f0b75d4BbC6e0d)
| SystemConfig | [`0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60`](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)
| SystemDictator | [`0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971`](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)
| Batch Inbox Address | [`0xff00000000000000000000000000000000000420`](https://goerli.etherscan.io/address/0xff00000000000000000000000000000000000420)"
716,What is the address of the L1CrossDomainMessenger contract on Goerli?,The address of the L1CrossDomainMessenger contract on Goerli is 0x5086d1eEF304eb5284A0f6720f79403b4e9bE294. You can view it on Etherscan here: https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294.,"The authoritative list of contract addresses is [in the monorepo](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/goerli).
They are reproduced here for convenience  
| Contract name | Address |
| - | -
| L1CrossDomainMessenger | [`0x5086d1eEF304eb5284A0f6720f79403b4e9bE294`](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)
| L1ERC721Bridge | [`0x0F9C590b958002E8B10a7431979c1aF882772E88`](https://goerli.etherscan.io/address/0x0F9C590b958002E8B10a7431979c1aF882772E88)
| L1StandardBridge | [`0x636Af16bf2f682dD3109e60102b8E1A089FedAa8`](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)
| L2OutputOracle | [`0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0`](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)
| OptimismMintableERC20Factory | [`0x883dcF8B05364083D849D8bD226bC8Cb4c42F9C5`](https://goerli.etherscan.io/address/0x883dcF8B05364083D849D8bD226bC8Cb4c42F9C5)
| OptimismPortal | [`0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383`](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)
| PortalSender | [`0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4`](https://goerli.etherscan.io/address/0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4)
| ProxyAdmin | [`0x01d3670863c3F4b24D7b107900f0b75d4BbC6e0d`](https://goerli.etherscan.io/address/0x01d3670863c3F4b24D7b107900f0b75d4BbC6e0d)
| SystemConfig | [`0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60`](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)
| SystemDictator | [`0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971`](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)
| Batch Inbox Address | [`0xff00000000000000000000000000000000000420`](https://goerli.etherscan.io/address/0xff00000000000000000000000000000000000420)"
716,What is the purpose of the OptimismMintableERC20Factory contract?,"The OptimismMintableERC20Factory contract is used to create new ERC20 tokens that are mintable on the Optimism network. Its address on Goerli is 0x883dcF8B05364083D849D8bD226bC8Cb4c42F9C5, and you can view it on Etherscan here: https://goerli.etherscan.io/address/0x883dcF8B05364083D849D8bD226bC8Cb4c42F9C5.","The authoritative list of contract addresses is [in the monorepo](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/goerli).
They are reproduced here for convenience  
| Contract name | Address |
| - | -
| L1CrossDomainMessenger | [`0x5086d1eEF304eb5284A0f6720f79403b4e9bE294`](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)
| L1ERC721Bridge | [`0x0F9C590b958002E8B10a7431979c1aF882772E88`](https://goerli.etherscan.io/address/0x0F9C590b958002E8B10a7431979c1aF882772E88)
| L1StandardBridge | [`0x636Af16bf2f682dD3109e60102b8E1A089FedAa8`](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)
| L2OutputOracle | [`0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0`](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)
| OptimismMintableERC20Factory | [`0x883dcF8B05364083D849D8bD226bC8Cb4c42F9C5`](https://goerli.etherscan.io/address/0x883dcF8B05364083D849D8bD226bC8Cb4c42F9C5)
| OptimismPortal | [`0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383`](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)
| PortalSender | [`0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4`](https://goerli.etherscan.io/address/0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4)
| ProxyAdmin | [`0x01d3670863c3F4b24D7b107900f0b75d4BbC6e0d`](https://goerli.etherscan.io/address/0x01d3670863c3F4b24D7b107900f0b75d4BbC6e0d)
| SystemConfig | [`0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60`](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)
| SystemDictator | [`0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971`](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)
| Batch Inbox Address | [`0xff00000000000000000000000000000000000420`](https://goerli.etherscan.io/address/0xff00000000000000000000000000000000000420)"
717,How can I bridge my Goerli ETH to Optimism?,"If you already have Goerli ETH, you can bridge it by using the Optimism bridge available at this [link](https://app.optimism.io/bridge).","If you already have Goerli ETH, you can [bridge it](https://app.optimism.io/bridge). For more faucet options see [Network Faucets](./faucets.md)."
717,Where can I find more options for getting Goerli ETH?,"For more faucet options to get Goerli ETH, you can refer to the Network Faucets section in the documentation, which can be found [here](./faucets.md).","If you already have Goerli ETH, you can [bridge it](https://app.optimism.io/bridge). For more faucet options see [Network Faucets](./faucets.md)."
718,Who would find these parameters useful?,These parameters are mostly useful to people responsible for running and administering network nodes.,"These parameters are mostly useful to people responsible for running and administering network nodes.  
| Parameter      | Value |
| -------------- | ----- |
| L1 Chain ID    | 5 |
| Rollup Config  | This network does not require a rollup config. Specify `--network=goerli` on the command line
| Withdrawal period | 12 seconds |"
718,What is the L1 Chain ID for this network?,The L1 Chain ID for this network is 5.,"These parameters are mostly useful to people responsible for running and administering network nodes.  
| Parameter      | Value |
| -------------- | ----- |
| L1 Chain ID    | 5 |
| Rollup Config  | This network does not require a rollup config. Specify `--network=goerli` on the command line
| Withdrawal period | 12 seconds |"
718,How long is the withdrawal period for this network?,The withdrawal period for this network is 12 seconds.,"These parameters are mostly useful to people responsible for running and administering network nodes.  
| Parameter      | Value |
| -------------- | ----- |
| L1 Chain ID    | 5 |
| Rollup Config  | This network does not require a rollup config. Specify `--network=goerli` on the command line
| Withdrawal period | 12 seconds |"
719,Do I need the Legacy Geth Data Directory file if I'm only running an archive for post-bedrock transactions?,"No, you do not need the Legacy Geth Data Directory file if you are running an archive only for post-bedrock transactions using `op-geth` with the command line flag `gcmode=archive`.","- [Bedrock Data Directory (5.0GB)<sup>1</sup>](https://datadirs.optimism.io/goerli-bedrock.tar.zst).
The `sha512sum` for this file is `7d420ddf34ee5b157d60cf7a9612cb950b24ff1405e1ab944f8d7910c45e7a46907bdb86ea124a8069b15ad9e171776ab5f8ed0146c43b0ff12539f38f262f7d`.
- [Legacy Geth Data Directory (50GB)<sup>1</sup>](https://datadirs.optimism.io/goerli-legacy-archival.tar.zst).
The `sha512sum` for this file is `5d78c1f2cd5bea062fb979b9d616a5fe4c55b27a444812b91a90340631d7a5f750c4e6e5a352513f3cf102d61586a4e2861f1aa3827e5be8fcae01e2ec291d2a`.
Note that you *only* need this file if you run `l2geth` to answer archive queries prior to the bedrock upgrade.
If you are running an archive only for post-bedrock transactions (using `op-geth` with the command line flag `gcmode=archive`), you do *not* need this file.
- [Configuration parameters](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/deploy-config/goerli.json)
- [Latest releases of `op-geth`](https://github.com/ethereum-optimism/op-geth/releases/latest)
- [Latest release of `op-node`](https://github.com/ethereum-optimism/optimism/releases/) - you need to scroll down until you get a release that has `op-node` in it.
- [Legacy geth](https://hub.docker.com/layers/ethereumoptimism/l2geth/0.5.31/images/sha256-5577036dc36d167d11f5ac49b91cc0a3d835574928a9563783c2e70309e5eb28?context=explore)  
(1) This file is compressed with `zstd`.
We recommend that users install the command line tool if it is not already installed on their system.
`tar -xf` will work without installing anything if you have an up to date version of `tar`.
If you want to decompress separately, we recommend `pzstd -d`  or `zstd -d` (pzstd will likely be faster)."
719,What tool do you recommend for decompressing the Bedrock Data Directory file?,"We recommend using `pzstd -d` or `zstd -d` for decompression, as `pzstd` will likely be faster. If you have an up-to-date version of `tar`, you can also use `tar -xf` without installing anything else.","- [Bedrock Data Directory (5.0GB)<sup>1</sup>](https://datadirs.optimism.io/goerli-bedrock.tar.zst).
The `sha512sum` for this file is `7d420ddf34ee5b157d60cf7a9612cb950b24ff1405e1ab944f8d7910c45e7a46907bdb86ea124a8069b15ad9e171776ab5f8ed0146c43b0ff12539f38f262f7d`.
- [Legacy Geth Data Directory (50GB)<sup>1</sup>](https://datadirs.optimism.io/goerli-legacy-archival.tar.zst).
The `sha512sum` for this file is `5d78c1f2cd5bea062fb979b9d616a5fe4c55b27a444812b91a90340631d7a5f750c4e6e5a352513f3cf102d61586a4e2861f1aa3827e5be8fcae01e2ec291d2a`.
Note that you *only* need this file if you run `l2geth` to answer archive queries prior to the bedrock upgrade.
If you are running an archive only for post-bedrock transactions (using `op-geth` with the command line flag `gcmode=archive`), you do *not* need this file.
- [Configuration parameters](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/deploy-config/goerli.json)
- [Latest releases of `op-geth`](https://github.com/ethereum-optimism/op-geth/releases/latest)
- [Latest release of `op-node`](https://github.com/ethereum-optimism/optimism/releases/) - you need to scroll down until you get a release that has `op-node` in it.
- [Legacy geth](https://hub.docker.com/layers/ethereumoptimism/l2geth/0.5.31/images/sha256-5577036dc36d167d11f5ac49b91cc0a3d835574928a9563783c2e70309e5eb28?context=explore)  
(1) This file is compressed with `zstd`.
We recommend that users install the command line tool if it is not already installed on their system.
`tar -xf` will work without installing anything if you have an up to date version of `tar`.
If you want to decompress separately, we recommend `pzstd -d`  or `zstd -d` (pzstd will likely be faster)."
719,Where can I find the latest releases of `op-geth`?,You can find the latest releases of `op-geth` on the GitHub releases page at this link: https://github.com/ethereum-optimism/op-geth/releases/latest.,"- [Bedrock Data Directory (5.0GB)<sup>1</sup>](https://datadirs.optimism.io/goerli-bedrock.tar.zst).
The `sha512sum` for this file is `7d420ddf34ee5b157d60cf7a9612cb950b24ff1405e1ab944f8d7910c45e7a46907bdb86ea124a8069b15ad9e171776ab5f8ed0146c43b0ff12539f38f262f7d`.
- [Legacy Geth Data Directory (50GB)<sup>1</sup>](https://datadirs.optimism.io/goerli-legacy-archival.tar.zst).
The `sha512sum` for this file is `5d78c1f2cd5bea062fb979b9d616a5fe4c55b27a444812b91a90340631d7a5f750c4e6e5a352513f3cf102d61586a4e2861f1aa3827e5be8fcae01e2ec291d2a`.
Note that you *only* need this file if you run `l2geth` to answer archive queries prior to the bedrock upgrade.
If you are running an archive only for post-bedrock transactions (using `op-geth` with the command line flag `gcmode=archive`), you do *not* need this file.
- [Configuration parameters](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/deploy-config/goerli.json)
- [Latest releases of `op-geth`](https://github.com/ethereum-optimism/op-geth/releases/latest)
- [Latest release of `op-node`](https://github.com/ethereum-optimism/optimism/releases/) - you need to scroll down until you get a release that has `op-node` in it.
- [Legacy geth](https://hub.docker.com/layers/ethereumoptimism/l2geth/0.5.31/images/sha256-5577036dc36d167d11f5ac49b91cc0a3d835574928a9563783c2e70309e5eb28?context=explore)  
(1) This file is compressed with `zstd`.
We recommend that users install the command line tool if it is not already installed on their system.
`tar -xf` will work without installing anything if you have an up to date version of `tar`.
If you want to decompress separately, we recommend `pzstd -d`  or `zstd -d` (pzstd will likely be faster)."
720,What's the purpose of OP Sepolia?,OP Sepolia is the latest test network for Optimism. It's new and still missing some core third-party infrastructure.,"::: tip Purpose
This is our latest test network. Note that OP Sepolia is new and still missing some core third-party infra.
:::  
| Parameter | Value |
| --------- | ----- |
| Network Name | **`OP Sepolia`** |
| Description | **`Testnet (public)`** |
| Chain ID | **`11155420`** |
| Explorer | **[https://optimism-sepolia.blockscout.com/](https://optimism-sepolia.blockscout.com/)** |
| HTTP Endpoint | **`https://sepolia.optimism.io`** |
| Sequencer URL<sup>1</sup> | **`https://sepolia-sequencer.optimism.io/`** |  
(1) The sequencer URL is write only, it only accepts `eth_sendRawTransaction` requests."
720,What is the Chain ID for OP Sepolia?,The Chain ID for OP Sepolia is 11155420.,"::: tip Purpose
This is our latest test network. Note that OP Sepolia is new and still missing some core third-party infra.
:::  
| Parameter | Value |
| --------- | ----- |
| Network Name | **`OP Sepolia`** |
| Description | **`Testnet (public)`** |
| Chain ID | **`11155420`** |
| Explorer | **[https://optimism-sepolia.blockscout.com/](https://optimism-sepolia.blockscout.com/)** |
| HTTP Endpoint | **`https://sepolia.optimism.io`** |
| Sequencer URL<sup>1</sup> | **`https://sepolia-sequencer.optimism.io/`** |  
(1) The sequencer URL is write only, it only accepts `eth_sendRawTransaction` requests."
720,Where can I find the block explorer for OP Sepolia?,You can find the block explorer for OP Sepolia at [https://optimism-sepolia.blockscout.com/](https://optimism-sepolia.blockscout.com/).,"::: tip Purpose
This is our latest test network. Note that OP Sepolia is new and still missing some core third-party infra.
:::  
| Parameter | Value |
| --------- | ----- |
| Network Name | **`OP Sepolia`** |
| Description | **`Testnet (public)`** |
| Chain ID | **`11155420`** |
| Explorer | **[https://optimism-sepolia.blockscout.com/](https://optimism-sepolia.blockscout.com/)** |
| HTTP Endpoint | **`https://sepolia.optimism.io`** |
| Sequencer URL<sup>1</sup> | **`https://sepolia-sequencer.optimism.io/`** |  
(1) The sequencer URL is write only, it only accepts `eth_sendRawTransaction` requests."
721,Where can I find the authoritative list of contract addresses for Optimism?,The authoritative list of contract addresses for Optimism can be found in the monorepo on GitHub at this link: https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/sepolia.,"The authoritative list of contract addresses is [in the monorepo](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/sepolia).
They are reproduced here for convenience  
| Contract name | Address |
| - | -
| L1CrossDomainMessenger | [`0x58Cc85b8D04EA49cC6DBd3CbFFd00B4B8D6cb3ef`](https://sepolia.etherscan.io/address/0x58Cc85b8D04EA49cC6DBd3CbFFd00B4B8D6cb3ef)
| L1ERC721Bridge | [`0xd83e03D576d23C9AEab8cC44Fa98d058D2176D1f`](https://sepolia.etherscan.io/address/0xd83e03D576d23C9AEab8cC44Fa98d058D2176D1f)
| L1StandardBridge | [`0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1`](https://sepolia.etherscan.io/address/0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1)
| L2OutputOracle | [`0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F`](https://sepolia.etherscan.io/address/0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F)
| OptimismMintableERC20Factory | [`0x868D59fF9710159C2B330Cc0fBDF57144dD7A13b`](https://sepolia.etherscan.io/address/0x868D59fF9710159C2B330Cc0fBDF57144dD7A13b)
| OptimismPortal | [`0x16Fc5058F25648194471939df75CF27A2fdC48BC`](https://sepolia.etherscan.io/address/0x16Fc5058F25648194471939df75CF27A2fdC48BC) |
| ProxyAdmin | [`0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc`](https://sepolia.etherscan.io/address/0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc)
| SystemConfig | [`0x034edD2A225f7f429A63E0f1D2084B9E0A93b538`](https://sepolia.etherscan.io/address/0x034edD2A225f7f429A63E0f1D2084B9E0A93b538)
| Batch Inbox Address | [`0xff00000000000000000000000000000011155420`](https://sepolia.etherscan.io/address/0xff00000000000000000000000000000011155420)"
721,What is the address of the L1CrossDomainMessenger contract?,The address of the L1CrossDomainMessenger contract is 0x58Cc85b8D04EA49cC6DBd3CbFFd00B4B8D6cb3ef. You can view more details on Etherscan at this link: https://sepolia.etherscan.io/address/0x58Cc85b8D04EA49cC6DBd3CbFFd00B4B8D6cb3ef.,"The authoritative list of contract addresses is [in the monorepo](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/sepolia).
They are reproduced here for convenience  
| Contract name | Address |
| - | -
| L1CrossDomainMessenger | [`0x58Cc85b8D04EA49cC6DBd3CbFFd00B4B8D6cb3ef`](https://sepolia.etherscan.io/address/0x58Cc85b8D04EA49cC6DBd3CbFFd00B4B8D6cb3ef)
| L1ERC721Bridge | [`0xd83e03D576d23C9AEab8cC44Fa98d058D2176D1f`](https://sepolia.etherscan.io/address/0xd83e03D576d23C9AEab8cC44Fa98d058D2176D1f)
| L1StandardBridge | [`0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1`](https://sepolia.etherscan.io/address/0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1)
| L2OutputOracle | [`0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F`](https://sepolia.etherscan.io/address/0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F)
| OptimismMintableERC20Factory | [`0x868D59fF9710159C2B330Cc0fBDF57144dD7A13b`](https://sepolia.etherscan.io/address/0x868D59fF9710159C2B330Cc0fBDF57144dD7A13b)
| OptimismPortal | [`0x16Fc5058F25648194471939df75CF27A2fdC48BC`](https://sepolia.etherscan.io/address/0x16Fc5058F25648194471939df75CF27A2fdC48BC) |
| ProxyAdmin | [`0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc`](https://sepolia.etherscan.io/address/0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc)
| SystemConfig | [`0x034edD2A225f7f429A63E0f1D2084B9E0A93b538`](https://sepolia.etherscan.io/address/0x034edD2A225f7f429A63E0f1D2084B9E0A93b538)
| Batch Inbox Address | [`0xff00000000000000000000000000000011155420`](https://sepolia.etherscan.io/address/0xff00000000000000000000000000000011155420)"
721,What is the purpose of the OptimismMintableERC20Factory contract?,"The OptimismMintableERC20Factory contract is used to create mintable ERC20 tokens on the Optimism network. Its address is 0x868D59fF9710159C2B330Cc0fBDF57144dD7A13b, and you can view more details on Etherscan at this link: https://sepolia.etherscan.io/address/0x868D59fF9710159C2B330Cc0fBDF57144dD7A13b.","The authoritative list of contract addresses is [in the monorepo](https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts-bedrock/deployments/sepolia).
They are reproduced here for convenience  
| Contract name | Address |
| - | -
| L1CrossDomainMessenger | [`0x58Cc85b8D04EA49cC6DBd3CbFFd00B4B8D6cb3ef`](https://sepolia.etherscan.io/address/0x58Cc85b8D04EA49cC6DBd3CbFFd00B4B8D6cb3ef)
| L1ERC721Bridge | [`0xd83e03D576d23C9AEab8cC44Fa98d058D2176D1f`](https://sepolia.etherscan.io/address/0xd83e03D576d23C9AEab8cC44Fa98d058D2176D1f)
| L1StandardBridge | [`0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1`](https://sepolia.etherscan.io/address/0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1)
| L2OutputOracle | [`0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F`](https://sepolia.etherscan.io/address/0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F)
| OptimismMintableERC20Factory | [`0x868D59fF9710159C2B330Cc0fBDF57144dD7A13b`](https://sepolia.etherscan.io/address/0x868D59fF9710159C2B330Cc0fBDF57144dD7A13b)
| OptimismPortal | [`0x16Fc5058F25648194471939df75CF27A2fdC48BC`](https://sepolia.etherscan.io/address/0x16Fc5058F25648194471939df75CF27A2fdC48BC) |
| ProxyAdmin | [`0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc`](https://sepolia.etherscan.io/address/0x189aBAAaa82DfC015A588A7dbaD6F13b1D3485Bc)
| SystemConfig | [`0x034edD2A225f7f429A63E0f1D2084B9E0A93b538`](https://sepolia.etherscan.io/address/0x034edD2A225f7f429A63E0f1D2084B9E0A93b538)
| Batch Inbox Address | [`0xff00000000000000000000000000000011155420`](https://sepolia.etherscan.io/address/0xff00000000000000000000000000000011155420)"
722,How can I deposit Sepolia ETH to Optimism?,You can deposit Sepolia ETH by sending it to the Optimism Portal on L1 Sepolia at the address `0x16Fc5058F25648194471939df75CF27A2fdC48BC`.,"If you already have Sepolia ETH, you can deposit it by sending it to the Optimism Portal on L1 Sepolia (`0x16Fc5058F25648194471939df75CF27A2fdC48BC`). To get L1 Sepolia ETH, check out our faucet options in [Network Faucets](./faucets.md).
We are still building out Sepolia support in our [Bridge UI](https://app.optimism.io/bridge)."
722,Where can I get L1 Sepolia ETH?,You can get L1 Sepolia ETH by checking out the faucet options listed in the Network Faucets section of the Optimism documentation.,"If you already have Sepolia ETH, you can deposit it by sending it to the Optimism Portal on L1 Sepolia (`0x16Fc5058F25648194471939df75CF27A2fdC48BC`). To get L1 Sepolia ETH, check out our faucet options in [Network Faucets](./faucets.md).
We are still building out Sepolia support in our [Bridge UI](https://app.optimism.io/bridge)."
722,Is Sepolia support available in the Optimism Bridge UI?,"Sepolia support is still being built out in the Optimism Bridge UI, so it may not be fully available yet.","If you already have Sepolia ETH, you can deposit it by sending it to the Optimism Portal on L1 Sepolia (`0x16Fc5058F25648194471939df75CF27A2fdC48BC`). To get L1 Sepolia ETH, check out our faucet options in [Network Faucets](./faucets.md).
We are still building out Sepolia support in our [Bridge UI](https://app.optimism.io/bridge)."
723,What's the L1 Chain ID for the network?,The L1 Chain ID for the network is 11155111.,"These parameters are mostly useful to people responsible for running and administering network nodes.  
| Parameter      | Value |
| -------------- | ----- |
| L1 Chain ID    | 11155111 |
| Rollup Config  | This network does not require a rollup config. Specify `--network=sepolia` on the command line
| Withdrawal period | 12 seconds |"
723,Do I need a rollup config for this network?,"No, this network does not require a rollup config. You should specify `--network=sepolia` on the command line.","These parameters are mostly useful to people responsible for running and administering network nodes.  
| Parameter      | Value |
| -------------- | ----- |
| L1 Chain ID    | 11155111 |
| Rollup Config  | This network does not require a rollup config. Specify `--network=sepolia` on the command line
| Withdrawal period | 12 seconds |"
723,How long is the withdrawal period for this network?,The withdrawal period for this network is 12 seconds.,"These parameters are mostly useful to people responsible for running and administering network nodes.  
| Parameter      | Value |
| -------------- | ----- |
| L1 Chain ID    | 11155111 |
| Rollup Config  | This network does not require a rollup config. Specify `--network=sepolia` on the command line
| Withdrawal period | 12 seconds |"
724,Do I need a Bedrock Data Directory or Legacy Geth Data Directory to run OP Sepolia nodes?,"No, you do not need a Bedrock Data Directory or Legacy Geth Data Directory to run OP Sepolia nodes.","- Note that there is no Bedrock Data Directory or Legacy Geth Data Directory required for running OP Sepolia nodes
- [Configuration parameters](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/deploy-config/sepolia.json)
- [Genesis.json File](https://networks.optimism.io/op-sepolia/genesis.json)
- [Latest releases of `op-geth`](https://github.com/ethereum-optimism/op-geth/releases/latest)
- [Latest release of `op-node`](https://github.com/ethereum-optimism/optimism/releases/latest)
- Note: Unlike on OP Mainnet or OP Goerli, you do not need to run `legacy-geth` to run an archival OP Sepolia node."
724,Do I need to run `legacy-geth` to run an archival OP Sepolia node?,"No, unlike on OP Mainnet or OP Goerli, you do not need to run `legacy-geth` to run an archival OP Sepolia node.","- Note that there is no Bedrock Data Directory or Legacy Geth Data Directory required for running OP Sepolia nodes
- [Configuration parameters](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/deploy-config/sepolia.json)
- [Genesis.json File](https://networks.optimism.io/op-sepolia/genesis.json)
- [Latest releases of `op-geth`](https://github.com/ethereum-optimism/op-geth/releases/latest)
- [Latest release of `op-node`](https://github.com/ethereum-optimism/optimism/releases/latest)
- Note: Unlike on OP Mainnet or OP Goerli, you do not need to run `legacy-geth` to run an archival OP Sepolia node."
725,How do oracles help blockchain applications?,"Oracles provide offchain data onchain, allowing blockchain applications to access a wide variety of information. For example, they can provide the ETH/USD exchange rate needed by a stablecoin that accepts ETH as collateral.","---
title: Oracles
lang: en-US
---  
[Oracles](https://ethereum.org/en/developers/docs/oracles/) provide offchain data onchain.
This allows code running on a blockchain to access a wide variety of information.
For example, a [stablecoin](https://ethereum.org/en/stablecoins/) that accepts ETH as collateral needs to know the ETH/USD exchange rate:  
- How many stablecoins can we give a user for a given amount of ETH?
- Do we need to liquidate any deposits because they are under collateralized?  
Different oracles have different security assumptions and different levels of decentralization.
Usually they are either run by the organization that produces the information, or have a mechanism to reward entities that provide accurate information and penalize those that provide incorrect information."
725,What are some examples of information that oracles can provide?,"Oracles can provide various types of information, such as the ETH/USD exchange rate, which is crucial for stablecoins that use ETH as collateral. This helps determine how many stablecoins can be given for a certain amount of ETH and whether any deposits need to be liquidated due to under-collateralization.","---
title: Oracles
lang: en-US
---  
[Oracles](https://ethereum.org/en/developers/docs/oracles/) provide offchain data onchain.
This allows code running on a blockchain to access a wide variety of information.
For example, a [stablecoin](https://ethereum.org/en/stablecoins/) that accepts ETH as collateral needs to know the ETH/USD exchange rate:  
- How many stablecoins can we give a user for a given amount of ETH?
- Do we need to liquidate any deposits because they are under collateralized?  
Different oracles have different security assumptions and different levels of decentralization.
Usually they are either run by the organization that produces the information, or have a mechanism to reward entities that provide accurate information and penalize those that provide incorrect information."
725,How do different oracles ensure the accuracy of the information they provide?,"Different oracles have different security assumptions and levels of decentralization. Some are run by the organization that produces the information, while others have mechanisms to reward entities that provide accurate information and penalize those that provide incorrect information.","---
title: Oracles
lang: en-US
---  
[Oracles](https://ethereum.org/en/developers/docs/oracles/) provide offchain data onchain.
This allows code running on a blockchain to access a wide variety of information.
For example, a [stablecoin](https://ethereum.org/en/stablecoins/) that accepts ETH as collateral needs to know the ETH/USD exchange rate:  
- How many stablecoins can we give a user for a given amount of ETH?
- Do we need to liquidate any deposits because they are under collateralized?  
Different oracles have different security assumptions and different levels of decentralization.
Usually they are either run by the organization that produces the information, or have a mechanism to reward entities that provide accurate information and penalize those that provide incorrect information."
726,What's the difference between push oracles and pull oracles?,"Push oracles are continuously updated and always have up-to-date information available onchain. Pull oracles, on the other hand, are only updated when information is specifically requested by a contract.","There are two types of oracles:  
1. **Push oracles** are updated continuously and always have up to date information available onchain.  
1. **Pull oracles** are only updated when information is requested by a contract.
Pull oracles are themselves divided into two types:
1. Double-transaction oracles, which require two transactions.
The first transaction is the request for information, which usually causes the oracle to emit an event that triggers some offchain mechanism to provide the answer (through its own transaction).
The second transaction actually reads onchain the result from the oracle and uses it.
1. Single-transaction oracles, which only require one transaction, such as [Chainlink's random number generator](https://docs.chain.link/docs/get-a-random-number/#request-random-values).
The way this works is that the transaction that requests the information includes a callback (address and the call data to provide it).
When the oracle is updated (which also happens through a transaction, but one that is not sent by the user), the oracle uses the callback to inform a contract of the result."
726,What are the types of pull oracles?,"Pull oracles are divided into two types: double-transaction oracles and single-transaction oracles. Double-transaction oracles require two transactions‚Äîone to request the information and another to read the result. Single-transaction oracles only require one transaction, where the request includes a callback for the oracle to inform a contract of the result.","There are two types of oracles:  
1. **Push oracles** are updated continuously and always have up to date information available onchain.  
1. **Pull oracles** are only updated when information is requested by a contract.
Pull oracles are themselves divided into two types:
1. Double-transaction oracles, which require two transactions.
The first transaction is the request for information, which usually causes the oracle to emit an event that triggers some offchain mechanism to provide the answer (through its own transaction).
The second transaction actually reads onchain the result from the oracle and uses it.
1. Single-transaction oracles, which only require one transaction, such as [Chainlink's random number generator](https://docs.chain.link/docs/get-a-random-number/#request-random-values).
The way this works is that the transaction that requests the information includes a callback (address and the call data to provide it).
When the oracle is updated (which also happens through a transaction, but one that is not sent by the user), the oracle uses the callback to inform a contract of the result."
726,Can you give an example of a single-transaction oracle?,"An example of a single-transaction oracle is Chainlink's random number generator. The transaction that requests the random number includes a callback, and when the oracle is updated, it uses the callback to inform a contract of the result.","There are two types of oracles:  
1. **Push oracles** are updated continuously and always have up to date information available onchain.  
1. **Pull oracles** are only updated when information is requested by a contract.
Pull oracles are themselves divided into two types:
1. Double-transaction oracles, which require two transactions.
The first transaction is the request for information, which usually causes the oracle to emit an event that triggers some offchain mechanism to provide the answer (through its own transaction).
The second transaction actually reads onchain the result from the oracle and uses it.
1. Single-transaction oracles, which only require one transaction, such as [Chainlink's random number generator](https://docs.chain.link/docs/get-a-random-number/#request-random-values).
The way this works is that the transaction that requests the information includes a callback (address and the call data to provide it).
When the oracle is updated (which also happens through a transaction, but one that is not sent by the user), the oracle uses the callback to inform a contract of the result."
727,How can I find out the gas prices on OP Mainnet?,"You can find out the gas prices on OP Mainnet by using the Gas Price Oracle, which is a predeployed contract at the address `0x420000000000000000000000000000000000000F`. You can also visit the OP Mainnet explorer to read the contract.","OP Mainnet provides a [Gas Price Oracle](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/packages/contracts/contracts/L2/predeploys/OVM_GasPriceOracle.sol) that provides information about [gas prices and related parameters](../developers/build/transaction-fees.md).
It can also calculate the total cost of a transaction for you before you send it.  
This contract is a predeploy at address `0x420000000000000000000000000000000000000F`:  
- [On OP Mainnet](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#readContract)
- [On OP Goerli](https://goerli-explorer.optimism.io/address/0x420000000000000000000000000000000000000F)  
This is a push Oracle.
OP Mainnet (and the testnets) updates the gas price parameters onchain whenever those parameters change.
The L1 gas price, which can be volatile, is only pushed once every 5 minutes, and each time can change only by up to 20%."
727,Can the Gas Price Oracle calculate the total cost of a transaction before sending it?,"Yes, the Gas Price Oracle can calculate the total cost of a transaction for you before you send it.","OP Mainnet provides a [Gas Price Oracle](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/packages/contracts/contracts/L2/predeploys/OVM_GasPriceOracle.sol) that provides information about [gas prices and related parameters](../developers/build/transaction-fees.md).
It can also calculate the total cost of a transaction for you before you send it.  
This contract is a predeploy at address `0x420000000000000000000000000000000000000F`:  
- [On OP Mainnet](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#readContract)
- [On OP Goerli](https://goerli-explorer.optimism.io/address/0x420000000000000000000000000000000000000F)  
This is a push Oracle.
OP Mainnet (and the testnets) updates the gas price parameters onchain whenever those parameters change.
The L1 gas price, which can be volatile, is only pushed once every 5 minutes, and each time can change only by up to 20%."
727,How often are the gas price parameters updated on OP Mainnet?,"The gas price parameters on OP Mainnet are updated onchain whenever those parameters change. The L1 gas price, which can be volatile, is updated every 5 minutes and can change by up to 20% each time.","OP Mainnet provides a [Gas Price Oracle](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/packages/contracts/contracts/L2/predeploys/OVM_GasPriceOracle.sol) that provides information about [gas prices and related parameters](../developers/build/transaction-fees.md).
It can also calculate the total cost of a transaction for you before you send it.  
This contract is a predeploy at address `0x420000000000000000000000000000000000000F`:  
- [On OP Mainnet](https://explorer.optimism.io/address/0x420000000000000000000000000000000000000F#readContract)
- [On OP Goerli](https://goerli-explorer.optimism.io/address/0x420000000000000000000000000000000000000F)  
This is a push Oracle.
OP Mainnet (and the testnets) updates the gas price parameters onchain whenever those parameters change.
The L1 gas price, which can be volatile, is only pushed once every 5 minutes, and each time can change only by up to 20%."
728,How can I get up-to-date price information on OP Mainnet?,You can get up-to-date price information on OP Mainnet using Chainlink's price feeds. These feeds are available on the production network and provide real-time data. You can check the latest information by visiting the Optimism explorer and looking at the 'latestAnswer' section for the specific contract.,"On OP Mainnet [Chainlink](https://chain.link/) provides a number of [price feeds](https://docs.chain.link/docs/optimism-price-feeds/).
Those feeds are available on the production network.  
This is a push Oracle.
You can always get up to date information (see, for example, [here (scroll down to **latestAnswer**)](https://explorer.optimism.io/address/0x13e3Ee699D1909E989722E753853AE30b17e08c5#readContract)).  
[See this guide to learn how to use the Chainlink feeds](https://docs.chain.link/docs/get-the-latest-price/)."
728,What is a push Oracle in the context of OP Mainnet?,"A push Oracle, like the one provided by Chainlink on OP Mainnet, automatically sends updated data to the blockchain without requiring a specific request from a user. This ensures that the information is always current and readily available.","On OP Mainnet [Chainlink](https://chain.link/) provides a number of [price feeds](https://docs.chain.link/docs/optimism-price-feeds/).
Those feeds are available on the production network.  
This is a push Oracle.
You can always get up to date information (see, for example, [here (scroll down to **latestAnswer**)](https://explorer.optimism.io/address/0x13e3Ee699D1909E989722E753853AE30b17e08c5#readContract)).  
[See this guide to learn how to use the Chainlink feeds](https://docs.chain.link/docs/get-the-latest-price/)."
728,Where can I find a guide on how to use Chainlink price feeds on OP Mainnet?,You can find a guide on how to use Chainlink price feeds on OP Mainnet by visiting the Chainlink documentation. The guide provides detailed instructions on how to get the latest price information and integrate it into your applications.,"On OP Mainnet [Chainlink](https://chain.link/) provides a number of [price feeds](https://docs.chain.link/docs/optimism-price-feeds/).
Those feeds are available on the production network.  
This is a push Oracle.
You can always get up to date information (see, for example, [here (scroll down to **latestAnswer**)](https://explorer.optimism.io/address/0x13e3Ee699D1909E989722E753853AE30b17e08c5#readContract)).  
[See this guide to learn how to use the Chainlink feeds](https://docs.chain.link/docs/get-the-latest-price/)."
729,How does Tellor ensure the accuracy of the data it provides?,Tellor has a mechanism to reward entities that provide accurate information and penalize those that provide incorrect information. This system encourages the submission of reliable data.,"[Tellor](https://tellor.io/) is a permissionless, censorship-resistant, and customizable oracle.  
The Tellor protocol can secure putting any verifiable data onchain, from spot price feeds, TWAPs, random numbers, to EVM calldata - you can even [specify your own ""query type""](https://github.com/tellor-io/dataSpecs/issues/new?assignees=&labels=&template=new_query_type.yaml&title=%5BNew+Data+Request+Form%5D%3A+) to build a feed to fit your specific needs.  
As described in the oracles overview section of this page, we are an oracle protocol that has ""a mechanism to reward entities that provide accurate information and penalize those that provide incorrect information."" Therefore it is necessary to allow some reasonable [amount of time](https://docs.tellor.io/tellor/getting-data/solidity-integration#reading-data) between an oracle update and using that data, to allow for a potential dispute (probabilistic finality).  
Tellor is a pull oracle where users fund (tip) a specific feed to get updated data reports and then read the data from our oracle contract, however under certain circumstances it can act similar to a push oracle; if your reading from a feed that is already being updated by others, or if you are [running your own data reporter.](https://docs.tellor.io/tellor/reporting-data/introduction)  
To learn more about using tellor please [read our docs](https://docs.tellor.io) or [get in touch](https://discord.gg/tellor).  
[Tellor contract addresses on OP Mainnet and the testnets can be found here.](https://docs.tellor.io/tellor/the-basics/contracts-reference#optimism)"
729,Can I customize the type of data I want to retrieve using Tellor?,"Yes, you can specify your own 'query type' to build a feed that fits your specific needs. This allows you to secure any verifiable data onchain, such as spot price feeds, TWAPs, random numbers, or EVM calldata.","[Tellor](https://tellor.io/) is a permissionless, censorship-resistant, and customizable oracle.  
The Tellor protocol can secure putting any verifiable data onchain, from spot price feeds, TWAPs, random numbers, to EVM calldata - you can even [specify your own ""query type""](https://github.com/tellor-io/dataSpecs/issues/new?assignees=&labels=&template=new_query_type.yaml&title=%5BNew+Data+Request+Form%5D%3A+) to build a feed to fit your specific needs.  
As described in the oracles overview section of this page, we are an oracle protocol that has ""a mechanism to reward entities that provide accurate information and penalize those that provide incorrect information."" Therefore it is necessary to allow some reasonable [amount of time](https://docs.tellor.io/tellor/getting-data/solidity-integration#reading-data) between an oracle update and using that data, to allow for a potential dispute (probabilistic finality).  
Tellor is a pull oracle where users fund (tip) a specific feed to get updated data reports and then read the data from our oracle contract, however under certain circumstances it can act similar to a push oracle; if your reading from a feed that is already being updated by others, or if you are [running your own data reporter.](https://docs.tellor.io/tellor/reporting-data/introduction)  
To learn more about using tellor please [read our docs](https://docs.tellor.io) or [get in touch](https://discord.gg/tellor).  
[Tellor contract addresses on OP Mainnet and the testnets can be found here.](https://docs.tellor.io/tellor/the-basics/contracts-reference#optimism)"
729,How does Tellor handle data updates and disputes?,"Tellor allows a reasonable amount of time between an oracle update and using that data to allow for potential disputes. This is known as probabilistic finality, ensuring that any incorrect data can be challenged and corrected.","[Tellor](https://tellor.io/) is a permissionless, censorship-resistant, and customizable oracle.  
The Tellor protocol can secure putting any verifiable data onchain, from spot price feeds, TWAPs, random numbers, to EVM calldata - you can even [specify your own ""query type""](https://github.com/tellor-io/dataSpecs/issues/new?assignees=&labels=&template=new_query_type.yaml&title=%5BNew+Data+Request+Form%5D%3A+) to build a feed to fit your specific needs.  
As described in the oracles overview section of this page, we are an oracle protocol that has ""a mechanism to reward entities that provide accurate information and penalize those that provide incorrect information."" Therefore it is necessary to allow some reasonable [amount of time](https://docs.tellor.io/tellor/getting-data/solidity-integration#reading-data) between an oracle update and using that data, to allow for a potential dispute (probabilistic finality).  
Tellor is a pull oracle where users fund (tip) a specific feed to get updated data reports and then read the data from our oracle contract, however under certain circumstances it can act similar to a push oracle; if your reading from a feed that is already being updated by others, or if you are [running your own data reporter.](https://docs.tellor.io/tellor/reporting-data/introduction)  
To learn more about using tellor please [read our docs](https://docs.tellor.io) or [get in touch](https://discord.gg/tellor).  
[Tellor contract addresses on OP Mainnet and the testnets can be found here.](https://docs.tellor.io/tellor/the-basics/contracts-reference#optimism)"
730,Where can I find a source of onchain randomness for Optimism?,Band provides a source of onchain randomness. You can learn more about it on their website.,"[Band](https://bandprotocol.com/vrf) provides a source of [onchain randomness](https://bandprotocol.com/vrf).
[You can learn how to use it here](https://docs.bandchain.org/vrf/getting-started.html).
It is a single-transaction pull oracle."
730,How can I learn to use Band's onchain randomness?,You can learn how to use Band's onchain randomness by visiting their documentation at https://docs.bandchain.org/vrf/getting-started.html.,"[Band](https://bandprotocol.com/vrf) provides a source of [onchain randomness](https://bandprotocol.com/vrf).
[You can learn how to use it here](https://docs.bandchain.org/vrf/getting-started.html).
It is a single-transaction pull oracle."
730,What type of oracle is Band's onchain randomness?,Band's onchain randomness is a single-transaction pull oracle.,"[Band](https://bandprotocol.com/vrf) provides a source of [onchain randomness](https://bandprotocol.com/vrf).
[You can learn how to use it here](https://docs.bandchain.org/vrf/getting-started.html).
It is a single-transaction pull oracle."
731,How does UMA work as an oracle?,"UMA is a generic oracle that allows any contract to request information. Staked entities can provide answers to these requests, and other external entities can dispute the answers by providing their own and putting up their stake. If there's a dispute, the question goes to a vote of token holders. Those who vote with the majority are rewarded, while those who proposed the wrong answer lose their stake.","[UMA](https://umaproject.org/) is a generic oracle.
It lets any contract request information (ask a question), and any staked entity can provide an answer.
Other external entities can dispute the proposed answer by providing their own answer and putting up their own stake.
In the case of dispute the question goes to a vote of token holders.
The token holders that vote with the majority are assumed to be truthful and get rewarded.
The external entities that proposed the correct answer are rewarded.
Those that proposed the wrong answer lose their stake.  
[See here for the UMA addresses on OP Mainnet](https://github.com/UMAprotocol/protocol/blob/master/packages/core/networks/10.json).  
[See here for instructions how to use UMA](https://docs.umaproject.org/build-walkthrough/build-process).  
UMA is a pull Oracle, it does not get information until it is requested by a contract.
This means that a decentralized application needs to issue two transactions.
First, a transaction that causes a contract on the blockchain to ask for the information.
Later (in the case of UMA 48 hours later if there is no dispute, longer if there is), a second transaction need to be triggered to cause the contract to read from the Oracle and see the response to the request."
731,What happens if there is a dispute over an answer in UMA?,"If there is a dispute over an answer in UMA, the question goes to a vote of token holders. The token holders who vote with the majority are assumed to be truthful and get rewarded. The entities that proposed the correct answer are also rewarded, while those that proposed the wrong answer lose their stake.","[UMA](https://umaproject.org/) is a generic oracle.
It lets any contract request information (ask a question), and any staked entity can provide an answer.
Other external entities can dispute the proposed answer by providing their own answer and putting up their own stake.
In the case of dispute the question goes to a vote of token holders.
The token holders that vote with the majority are assumed to be truthful and get rewarded.
The external entities that proposed the correct answer are rewarded.
Those that proposed the wrong answer lose their stake.  
[See here for the UMA addresses on OP Mainnet](https://github.com/UMAprotocol/protocol/blob/master/packages/core/networks/10.json).  
[See here for instructions how to use UMA](https://docs.umaproject.org/build-walkthrough/build-process).  
UMA is a pull Oracle, it does not get information until it is requested by a contract.
This means that a decentralized application needs to issue two transactions.
First, a transaction that causes a contract on the blockchain to ask for the information.
Later (in the case of UMA 48 hours later if there is no dispute, longer if there is), a second transaction need to be triggered to cause the contract to read from the Oracle and see the response to the request."
731,How does a decentralized application use UMA to get information?,"A decentralized application needs to issue two transactions to use UMA. First, it sends a transaction to cause a contract on the blockchain to ask for the information. After 48 hours (if there is no dispute) or longer (if there is a dispute), a second transaction is needed to trigger the contract to read from the Oracle and see the response to the request.","[UMA](https://umaproject.org/) is a generic oracle.
It lets any contract request information (ask a question), and any staked entity can provide an answer.
Other external entities can dispute the proposed answer by providing their own answer and putting up their own stake.
In the case of dispute the question goes to a vote of token holders.
The token holders that vote with the majority are assumed to be truthful and get rewarded.
The external entities that proposed the correct answer are rewarded.
Those that proposed the wrong answer lose their stake.  
[See here for the UMA addresses on OP Mainnet](https://github.com/UMAprotocol/protocol/blob/master/packages/core/networks/10.json).  
[See here for instructions how to use UMA](https://docs.umaproject.org/build-walkthrough/build-process).  
UMA is a pull Oracle, it does not get information until it is requested by a contract.
This means that a decentralized application needs to issue two transactions.
First, a transaction that causes a contract on the blockchain to ask for the information.
Later (in the case of UMA 48 hours later if there is no dispute, longer if there is), a second transaction need to be triggered to cause the contract to read from the Oracle and see the response to the request."
732,Can Uniswap be used as an oracle?,"Technically, Uniswap is not an oracle because the information comes from onchain sources. However, Uniswap pools do provide quotes that give the relative costs of assets.","Technically speaking [Uniswap](https://uniswap.io/) is not an oracle, because the information comes from onchain sources.
However, Uniswap pools do provide [quotes that give the relative costs of assets](https://docs.uniswap.org/concepts/protocol/oracle).  
::: warning  
Using onchain asset prices, especially those in low liquidity pools, makes you vulnerable to price manipulation.  
:::  
To use Uniswap as an Oracle:  
1. See [the list of pools on OP Mainnet](https://info.uniswap.org/#/optimism/).
1. To find the pool address, [look at the Uniswap factory](https://explorer.optimism.io/address/0x1f98431c8ad98523631ae4a59f267346ea31f984#readContract).
Use **getPool** with these parameters:  
| Parameter           | Meaning                             |
| ------------------- | ----------------------------------- |
| One token address   | [Address of the ERC-20 contract for that token on OP Mainnet (chainId 10)](https://static.optimism.io/optimism.tokenlist.json) |
| Other token address | [Address of the ERC-20 contract for that token on OP Mainnet (chainId 10)](https://static.optimism.io/optimism.tokenlist.json) |
| Pool fee            | The pool fee percentage times ten thousand. For example, for 0.3% enter `3000` |  
1. In your contract, use [IUniswapV3PoolState](https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol) and [IUniswapV3PoolDerivedState](https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol) to get the pool state."
732,Is there any risk in using onchain asset prices from Uniswap?,"Yes, using onchain asset prices, especially those in low liquidity pools, makes you vulnerable to price manipulation.","Technically speaking [Uniswap](https://uniswap.io/) is not an oracle, because the information comes from onchain sources.
However, Uniswap pools do provide [quotes that give the relative costs of assets](https://docs.uniswap.org/concepts/protocol/oracle).  
::: warning  
Using onchain asset prices, especially those in low liquidity pools, makes you vulnerable to price manipulation.  
:::  
To use Uniswap as an Oracle:  
1. See [the list of pools on OP Mainnet](https://info.uniswap.org/#/optimism/).
1. To find the pool address, [look at the Uniswap factory](https://explorer.optimism.io/address/0x1f98431c8ad98523631ae4a59f267346ea31f984#readContract).
Use **getPool** with these parameters:  
| Parameter           | Meaning                             |
| ------------------- | ----------------------------------- |
| One token address   | [Address of the ERC-20 contract for that token on OP Mainnet (chainId 10)](https://static.optimism.io/optimism.tokenlist.json) |
| Other token address | [Address of the ERC-20 contract for that token on OP Mainnet (chainId 10)](https://static.optimism.io/optimism.tokenlist.json) |
| Pool fee            | The pool fee percentage times ten thousand. For example, for 0.3% enter `3000` |  
1. In your contract, use [IUniswapV3PoolState](https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol) and [IUniswapV3PoolDerivedState](https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol) to get the pool state."
732,How can I find the address of a Uniswap pool on the Optimism Mainnet?,You can find the pool address by looking at the Uniswap factory on the Optimism explorer. Use the 'getPool' function with the parameters: the addresses of the two ERC-20 tokens on OP Mainnet and the pool fee percentage times ten thousand.,"Technically speaking [Uniswap](https://uniswap.io/) is not an oracle, because the information comes from onchain sources.
However, Uniswap pools do provide [quotes that give the relative costs of assets](https://docs.uniswap.org/concepts/protocol/oracle).  
::: warning  
Using onchain asset prices, especially those in low liquidity pools, makes you vulnerable to price manipulation.  
:::  
To use Uniswap as an Oracle:  
1. See [the list of pools on OP Mainnet](https://info.uniswap.org/#/optimism/).
1. To find the pool address, [look at the Uniswap factory](https://explorer.optimism.io/address/0x1f98431c8ad98523631ae4a59f267346ea31f984#readContract).
Use **getPool** with these parameters:  
| Parameter           | Meaning                             |
| ------------------- | ----------------------------------- |
| One token address   | [Address of the ERC-20 contract for that token on OP Mainnet (chainId 10)](https://static.optimism.io/optimism.tokenlist.json) |
| Other token address | [Address of the ERC-20 contract for that token on OP Mainnet (chainId 10)](https://static.optimism.io/optimism.tokenlist.json) |
| Pool fee            | The pool fee percentage times ten thousand. For example, for 0.3% enter `3000` |  
1. In your contract, use [IUniswapV3PoolState](https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol) and [IUniswapV3PoolDerivedState](https://github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol) to get the pool state."
733,Are all API calls supported in Optimism's shared environment?,"No, some API calls, especially those in the personal namespace, are either unsupported or will return nonsensical values in a shared environment.","---
title: Node & API Providers
lang: en-US
---  
::: warning
Some API calls, such as those in the [personal namespace](https://geth.ethereum.org/docs/rpc/ns-personal) make no sense in a shared environment.
Such RPCs are either totally unsupported, or will return nonsensical values.
:::"
733,What happens if I try to use an unsupported API call in Optimism?,"If you try to use an unsupported API call, it will either not work at all or return nonsensical values.","---
title: Node & API Providers
lang: en-US
---  
::: warning
Some API calls, such as those in the [personal namespace](https://geth.ethereum.org/docs/rpc/ns-personal) make no sense in a shared environment.
Such RPCs are either totally unsupported, or will return nonsensical values.
:::"
734,How does Ankr support Optimism RPC?,"Ankr provides a geo-distributed and decentralized public and premium Optimism RPC service, which includes many independent blockchain nodes running worldwide. This setup ensures low-latency and highly reliable connections.","[Ankr](https://www.ankr.com/) provides a geo-distributed and decentralized (free) public and premium (Pay-as-you-go) [Optimism RPC](https://www.ankr.com/rpc/optimism/) comprised of many independent blockchain nodes running worldwide for low-latency and incredibly reliable connections.  
Moreover, Ankr offers access to developer tooling on OP Mainnet (and testnets) like SDKs and [Advanced APIs](https://www.ankr.com/advanced-api/) such as NFT, Token and Query API."
734,What additional tools does Ankr offer for developers on Optimism?,"Ankr offers access to developer tooling on the OP Mainnet and testnets, including SDKs and Advanced APIs such as NFT, Token, and Query API.","[Ankr](https://www.ankr.com/) provides a geo-distributed and decentralized (free) public and premium (Pay-as-you-go) [Optimism RPC](https://www.ankr.com/rpc/optimism/) comprised of many independent blockchain nodes running worldwide for low-latency and incredibly reliable connections.  
Moreover, Ankr offers access to developer tooling on OP Mainnet (and testnets) like SDKs and [Advanced APIs](https://www.ankr.com/advanced-api/) such as NFT, Token and Query API."
735,Which networks does Optimism support?,Optimism supports two networks: OP Mainnet and OP Goerli.,"- OP Mainnet
- OP Goerli"
736,Can I use Alchemy to access Optimism's mainnet and testnet nodes?,"Yes, Alchemy provides access to hosted OP Mainnet and testnet nodes through its platform.","[Alchemy](https://docs.alchemy.com/reference/optimism-api-quickstart/?a=818c11a8da) is a popular API provider and developer platform. Its robust, free tier offers access to enhanced features like SDKs and enhanced APIs and hosted OP Mainnet and testnet nodes."
736,Does Alchemy offer any free services for developers working with Optimism?,"Yes, Alchemy has a robust free tier that offers access to enhanced features like SDKs and enhanced APIs.","[Alchemy](https://docs.alchemy.com/reference/optimism-api-quickstart/?a=818c11a8da) is a popular API provider and developer platform. Its robust, free tier offers access to enhanced features like SDKs and enhanced APIs and hosted OP Mainnet and testnet nodes."
737,Which networks does Optimism support?,Optimism supports two networks: OP Mainnet and OP Goerli.,"- OP Mainnet
- OP Goerli"
738,How many free API calls per month does Blast offer for OP Mainnet and testnet nodes?,Blast offers free data access up to 12 million API calls per month for OP Mainnet and testnet nodes.,"[Blast](https://blastapi.io/) offers access to dedicated OP Mainnet (and testnet) nodes with free data access up to 12M API calls per month and 25 req/s. Paid subscription tiers are available for all development needs.
On the platform, there are also [Public APIs](https://blastapi.io/public-api/optimism) available that can be added easily in Metamask."
738,Can I use Blast's Public APIs with Metamask?,"Yes, Blast's Public APIs can be easily added in Metamask.","[Blast](https://blastapi.io/) offers access to dedicated OP Mainnet (and testnet) nodes with free data access up to 12M API calls per month and 25 req/s. Paid subscription tiers are available for all development needs.
On the platform, there are also [Public APIs](https://blastapi.io/public-api/optimism) available that can be added easily in Metamask."
738,What is the maximum request rate for the free tier on Blast?,The free tier on Blast allows up to 25 requests per second.,"[Blast](https://blastapi.io/) offers access to dedicated OP Mainnet (and testnet) nodes with free data access up to 12M API calls per month and 25 req/s. Paid subscription tiers are available for all development needs.
On the platform, there are also [Public APIs](https://blastapi.io/public-api/optimism) available that can be added easily in Metamask."
739,Which networks does Optimism support?,Optimism supports two networks: OP Mainnet and OP Goerli.,"- OP Mainnet
- OP Goerli"
740,How can I start using BlockPI Network for my development needs?,"You can start using BlockPI Network by registering at their dashboard, which is available at https://dashboard.blockpi.io/. Once registered, you will receive 100 million Resource Units (RU) for free every month.","[BlockPI](https://blockpi.io/) Network ships scalable, high performance and globally distributed infrastructure with the most flexible and developer-first pricing in the industry. Build from scratch all the way to enterprise without monthly subscription. Register at [dashboard](https://dashboard.blockpi.io/) and get Free 100M RU every month!"
740,What kind of pricing model does BlockPI Network offer?,BlockPI Network offers a flexible and developer-first pricing model. You can build from scratch all the way to enterprise without needing a monthly subscription.,"[BlockPI](https://blockpi.io/) Network ships scalable, high performance and globally distributed infrastructure with the most flexible and developer-first pricing in the industry. Build from scratch all the way to enterprise without monthly subscription. Register at [dashboard](https://dashboard.blockpi.io/) and get Free 100M RU every month!"
740,What are some key features of BlockPI Network?,"BlockPI Network provides scalable, high-performance, and globally distributed infrastructure. It is designed to be flexible and developer-friendly, making it suitable for a wide range of development needs.","[BlockPI](https://blockpi.io/) Network ships scalable, high performance and globally distributed infrastructure with the most flexible and developer-first pricing in the industry. Build from scratch all the way to enterprise without monthly subscription. Register at [dashboard](https://dashboard.blockpi.io/) and get Free 100M RU every month!"
741,Which networks does Optimism support?,Optimism supports two networks: OP Mainnet and OP Goerli.,"- OP Mainnet
- OP Goerli"
742,How can I start using BlockSpaces for Web3 infrastructure?,"To start using BlockSpaces for Web3 infrastructure, you can visit their website and leave your email address to get started.","[BlockSpaces](https://www.blockspaces.com/) is a multiweb integration platform that is currently offering Web3 infrastructure for free, up to 10 million transactions supported DAILY. To get started, click [here](https://www.blockspaces.com/) and leave an email address. If being able to integrate your OP Mainnet dApp to other web2 business platforms (like Quickbooks) interestes you, make sure to sign up for our Multiweb integration waitlist."
742,Is there a cost associated with using BlockSpaces for Web3 infrastructure?,"Currently, BlockSpaces is offering Web3 infrastructure for free, supporting up to 10 million transactions daily.","[BlockSpaces](https://www.blockspaces.com/) is a multiweb integration platform that is currently offering Web3 infrastructure for free, up to 10 million transactions supported DAILY. To get started, click [here](https://www.blockspaces.com/) and leave an email address. If being able to integrate your OP Mainnet dApp to other web2 business platforms (like Quickbooks) interestes you, make sure to sign up for our Multiweb integration waitlist."
742,Can I integrate my OP Mainnet dApp with other web2 business platforms using BlockSpaces?,"Yes, you can integrate your OP Mainnet dApp with other web2 business platforms like Quickbooks by signing up for BlockSpaces' Multiweb integration waitlist.","[BlockSpaces](https://www.blockspaces.com/) is a multiweb integration platform that is currently offering Web3 infrastructure for free, up to 10 million transactions supported DAILY. To get started, click [here](https://www.blockspaces.com/) and leave an email address. If being able to integrate your OP Mainnet dApp to other web2 business platforms (like Quickbooks) interestes you, make sure to sign up for our Multiweb integration waitlist."
743,Is there an OP Mainnet for Optimism?,"Yes, Optimism has an OP Mainnet, which is the main network where transactions are processed and recorded.",- OP Mainnet
744,What's BlockVision?,BlockVision is a one-stop development platform and onchain data retrieval portal for developers that offers impressively low latencies and high availability.,[BlockVision](https://blockvision.org/) is a one-stop development platform and onchain data retrieval portal for developers that boasts impressively low-latencies and high availability.
745,Is there an OP Mainnet?,"Yes, there is an OP Mainnet.",- OP Mainnet
746,Where can I find low-latency archival nodes for OP Mainnet?,You can find low-latency archival nodes for OP Mainnet at [Chainnodes](https://www.chainnodes.org/). They offer a free tier and transparent pricing for all needs.,[Chainnodes](https://www.chainnodes.org/) offers low-latency archival nodes for OP Mainnet (and testnets) with a free tier and transparent pricing for all needs. Websocket support is included for all networks. Debug and trace APIs and archival requests are available and free.
746,Does Chainnodes support Websocket for all networks?,"Yes, Chainnodes includes Websocket support for all networks.",[Chainnodes](https://www.chainnodes.org/) offers low-latency archival nodes for OP Mainnet (and testnets) with a free tier and transparent pricing for all needs. Websocket support is included for all networks. Debug and trace APIs and archival requests are available and free.
746,Are debug and trace APIs available for free on Chainnodes?,"Yes, debug and trace APIs, as well as archival requests, are available for free on Chainnodes.",[Chainnodes](https://www.chainnodes.org/) offers low-latency archival nodes for OP Mainnet (and testnets) with a free tier and transparent pricing for all needs. Websocket support is included for all networks. Debug and trace APIs and archival requests are available and free.
747,Which networks does Optimism support?,Optimism supports two networks: OP Mainnet and OP Goerli.,"- OP Mainnet
- OP Goerli"
748,How can I access multiple blockchains easily and reliably?,"You can use GetBlock developer tools, which provide valuable insights and guarantee simple and reliable API access to multiple blockchains.",[GetBlock developer](https://getblock.io/en/nodes/optimism/) tools and valuable insights guarantee a simple and reliable API access to multiple blockchains.
749,Which networks does Optimism support?,Optimism supports two networks: OP Mainnet and OP Goerli.,"- OP Mainnet
- OP Goerli"
750,How can I access Optimism nodes for free?,You can access Optimism nodes for free by signing up for an Infura account. Infura offers free access to hosted OP Mainnet and testnet nodes.,"[Infura](https://infura.io) is a Web3 infrastructure provider that offers free access to hosted [OP Mainnet and testnet nodes](https://docs.infura.io/infura/networks/optimism), with the option to upgrade to [paid plans](https://www.infura.io/pricing) for more features. With Infura's highly performant Optimism node infrastructure, developers can eliminate the need for syncing or complex setups and get reliable and consistent access to the Optimism blockchain.  
[Sign up for a free Infura account here](https://app.infura.io/register)"
750,Do I need to set up my own node to use the Optimism blockchain?,"No, you don't need to set up your own node. Infura provides highly performant Optimism node infrastructure, eliminating the need for syncing or complex setups.","[Infura](https://infura.io) is a Web3 infrastructure provider that offers free access to hosted [OP Mainnet and testnet nodes](https://docs.infura.io/infura/networks/optimism), with the option to upgrade to [paid plans](https://www.infura.io/pricing) for more features. With Infura's highly performant Optimism node infrastructure, developers can eliminate the need for syncing or complex setups and get reliable and consistent access to the Optimism blockchain.  
[Sign up for a free Infura account here](https://app.infura.io/register)"
750,Is there an option to get more features for accessing Optimism nodes?,"Yes, Infura offers paid plans that provide more features for accessing Optimism nodes. You can check their pricing options on the Infura website.","[Infura](https://infura.io) is a Web3 infrastructure provider that offers free access to hosted [OP Mainnet and testnet nodes](https://docs.infura.io/infura/networks/optimism), with the option to upgrade to [paid plans](https://www.infura.io/pricing) for more features. With Infura's highly performant Optimism node infrastructure, developers can eliminate the need for syncing or complex setups and get reliable and consistent access to the Optimism blockchain.  
[Sign up for a free Infura account here](https://app.infura.io/register)"
751,Which networks does Optimism support?,Optimism supports two networks: OP Mainnet and OP Goerli.,"- OP Mainnet
- OP Goerli"
752,How can I connect to the OP Mainnet MegaNode for free?,You can connect to the OP Mainnet MegaNode for free every month by signing up for a free account on NodeReal's website. You can find more details on their pricing page.,"[NodeReal](https://nodereal.io/) is a one-stop blockchain infrastructure and services provider, we provide scalable, reliable, and efficient blockchain solutions for everyone, aiming to support the massive adoption, growth, and long-term success of the Web3 ecosystem. You can connect to the OP Mainnet MegaNode for free every month. Details are [here](https://nodereal.io/pricing)  
[Sign up for your free account here](https://nodereal.io/meganode)."
752,What is NodeReal?,"NodeReal is a one-stop blockchain infrastructure and services provider that offers scalable, reliable, and efficient blockchain solutions. They aim to support the massive adoption, growth, and long-term success of the Web3 ecosystem.","[NodeReal](https://nodereal.io/) is a one-stop blockchain infrastructure and services provider, we provide scalable, reliable, and efficient blockchain solutions for everyone, aiming to support the massive adoption, growth, and long-term success of the Web3 ecosystem. You can connect to the OP Mainnet MegaNode for free every month. Details are [here](https://nodereal.io/pricing)  
[Sign up for your free account here](https://nodereal.io/meganode)."
753,Is there an OP Mainnet for Optimism?,"Yes, Optimism has an OP Mainnet, which is the primary network where transactions and operations take place.",- OP Mainnet
754,How can I access an OP Mainnet node through NOWNodes?,You can access an OP Mainnet node through NOWNodes by using their shared or dedicated nodes. The URL format for connecting is `https://optimism.nownodes.io/?API_key=<API key from NOWNodes>`.,"[NOWNodes](https://nownodes.io/nodes/optimism) provide access to an OP Mainnet node. Shared and Dedicated nodes are Available. You can connect to the shared OP Mainnet node for free for one month with 5,000 requests/per day or for ‚Ç¨20 with 1,000,000 requests/per month.  
The URL format is `https://optimism.nownodes.io/?API_key=<API key from NOWNodes`."
754,Is there a free option to use NOWNodes for accessing the OP Mainnet node?,"Yes, you can connect to the shared OP Mainnet node for free for one month with a limit of 5,000 requests per day.","[NOWNodes](https://nownodes.io/nodes/optimism) provide access to an OP Mainnet node. Shared and Dedicated nodes are Available. You can connect to the shared OP Mainnet node for free for one month with 5,000 requests/per day or for ‚Ç¨20 with 1,000,000 requests/per month.  
The URL format is `https://optimism.nownodes.io/?API_key=<API key from NOWNodes`."
754,What are the pricing options for using NOWNodes to access the OP Mainnet node?,"You can use the shared OP Mainnet node for free for one month with 5,000 requests per day, or you can pay ‚Ç¨20 for 1,000,000 requests per month.","[NOWNodes](https://nownodes.io/nodes/optimism) provide access to an OP Mainnet node. Shared and Dedicated nodes are Available. You can connect to the shared OP Mainnet node for free for one month with 5,000 requests/per day or for ‚Ç¨20 with 1,000,000 requests/per month.  
The URL format is `https://optimism.nownodes.io/?API_key=<API key from NOWNodes`."
755,Is there an OP Mainnet?,"Yes, there is an OP Mainnet.",- OP Mainnet
756,How does OnFinality help Web3 developers?,"OnFinality is a blockchain infrastructure platform that saves Web3 builders time and makes their lives easier by delivering scalable API endpoints for the biggest blockchain networks. It also empowers developers to automatically test, deploy, scale, and monitor their own blockchain nodes in minutes.","[OnFinality](https://onfinality.io/) is a blockchain infrastructure platform that saves Web3 builders time and makes their lives easier. OnFinality delivers scalable API endpoints for the biggest blockchain networks and empowers developers to automatically test, deploy, scale and monitor their own blockchain nodes in minutes. OnFinality offers free and premium (Pay-as-you-go or subsription-based) API [services for OP Mainnet](https://onfinality.io/networks/optimism)."
756,Are there any costs associated with using OnFinality's services for OP Mainnet?,"Yes, OnFinality offers both free and premium API services for OP Mainnet. The premium services can be accessed on a Pay-as-you-go or subscription-based model.","[OnFinality](https://onfinality.io/) is a blockchain infrastructure platform that saves Web3 builders time and makes their lives easier. OnFinality delivers scalable API endpoints for the biggest blockchain networks and empowers developers to automatically test, deploy, scale and monitor their own blockchain nodes in minutes. OnFinality offers free and premium (Pay-as-you-go or subsription-based) API [services for OP Mainnet](https://onfinality.io/networks/optimism)."
756,What specific services does OnFinality provide for blockchain networks?,"OnFinality provides scalable API endpoints and tools that allow developers to automatically test, deploy, scale, and monitor their own blockchain nodes efficiently.","[OnFinality](https://onfinality.io/) is a blockchain infrastructure platform that saves Web3 builders time and makes their lives easier. OnFinality delivers scalable API endpoints for the biggest blockchain networks and empowers developers to automatically test, deploy, scale and monitor their own blockchain nodes in minutes. OnFinality offers free and premium (Pay-as-you-go or subsription-based) API [services for OP Mainnet](https://onfinality.io/networks/optimism)."
757,Is there an OP Mainnet?,"Yes, there is an OP Mainnet mentioned in the Optimism Governance Documentation.",- OP Mainnet
758,How can developers access OP Mainnet nodes through Pocket?,"Developers can access OP Mainnet nodes through the Pocket Portal, which offers a highly-available dedicated pool of nodes coordinated by the Pocket Network protocol.","[Pocket](https://www.portal.pokt.network/) offers access to a highly-available dedicated pool of OP Mainnet nodes coordinated autonomously by the Pocket Network protocol. Through the Pocket Portal, developers may mint OP Mainnet RPC endpoints with a generous free tier of 1M requests per day (per endpoint, max 2 per account)."
758,Is there a free tier available for using OP Mainnet RPC endpoints on Pocket?,"Yes, there is a generous free tier available that allows for 1 million requests per day per endpoint, with a maximum of 2 endpoints per account.","[Pocket](https://www.portal.pokt.network/) offers access to a highly-available dedicated pool of OP Mainnet nodes coordinated autonomously by the Pocket Network protocol. Through the Pocket Portal, developers may mint OP Mainnet RPC endpoints with a generous free tier of 1M requests per day (per endpoint, max 2 per account)."
759,Is there an OP Mainnet for Optimism?,"Yes, Optimism has an OP Mainnet, which is the primary network where transactions and operations take place.",- OP Mainnet
760,Can I access OP Mainnet nodes for free?,"Yes, QuickNode offers access to hosted OP Mainnet (and testnet) nodes for free.","[QuickNode](https://www.quicknode.com/) offers access to hosted OP Mainnet (and testnet) nodes for free. With the option to upgrade to a premium plan for additional features, we allow you to focus solely on optimizing your application while we manage the complex infrastructure."
760,Are there any premium options available for OP Mainnet nodes?,"Yes, QuickNode provides an option to upgrade to a premium plan for additional features.","[QuickNode](https://www.quicknode.com/) offers access to hosted OP Mainnet (and testnet) nodes for free. With the option to upgrade to a premium plan for additional features, we allow you to focus solely on optimizing your application while we manage the complex infrastructure."
760,Do I need to manage the infrastructure if I use QuickNode for OP Mainnet?,"No, QuickNode manages the complex infrastructure, allowing you to focus solely on optimizing your application.","[QuickNode](https://www.quicknode.com/) offers access to hosted OP Mainnet (and testnet) nodes for free. With the option to upgrade to a premium plan for additional features, we allow you to focus solely on optimizing your application while we manage the complex infrastructure."
761,Which networks does Optimism support?,"Optimism supports the following networks: OP Mainnet, OP Goerli, and OP Sepolia.","- OP Mainnet
- OP Goerli
- OP Sepolia"
762,Who provides ERC-4337 account abstraction infrastructure on EVM-compatible blockchains?,"Stackup provides ERC-4337 account abstraction infrastructure, including nodes, on EVM-compatible blockchains.","[Stackup](https://www.stackup.sh/) provides ERC-4337 account abstraction infrastructure, including nodes, on EVM-compatible blockchains."
763,Which networks does Optimism support?,Optimism supports two networks: OP Mainnet and OP Goerli.,"- OP Mainnet
- OP Goerli"
